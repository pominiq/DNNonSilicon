// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_10u_config9_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_stream_V_data_0_V_dout,
        data_stream_V_data_0_V_empty_n,
        data_stream_V_data_0_V_read,
        data_stream_V_data_1_V_dout,
        data_stream_V_data_1_V_empty_n,
        data_stream_V_data_1_V_read,
        data_stream_V_data_2_V_dout,
        data_stream_V_data_2_V_empty_n,
        data_stream_V_data_2_V_read,
        data_stream_V_data_3_V_dout,
        data_stream_V_data_3_V_empty_n,
        data_stream_V_data_3_V_read,
        data_stream_V_data_4_V_dout,
        data_stream_V_data_4_V_empty_n,
        data_stream_V_data_4_V_read,
        data_stream_V_data_5_V_dout,
        data_stream_V_data_5_V_empty_n,
        data_stream_V_data_5_V_read,
        data_stream_V_data_6_V_dout,
        data_stream_V_data_6_V_empty_n,
        data_stream_V_data_6_V_read,
        data_stream_V_data_7_V_dout,
        data_stream_V_data_7_V_empty_n,
        data_stream_V_data_7_V_read,
        res_stream_V_data_0_V_TDATA,
        res_stream_V_data_0_V_TVALID,
        res_stream_V_data_0_V_TREADY,
        res_stream_V_data_1_V_TDATA,
        res_stream_V_data_1_V_TVALID,
        res_stream_V_data_1_V_TREADY,
        res_stream_V_data_2_V_TDATA,
        res_stream_V_data_2_V_TVALID,
        res_stream_V_data_2_V_TREADY,
        res_stream_V_data_3_V_TDATA,
        res_stream_V_data_3_V_TVALID,
        res_stream_V_data_3_V_TREADY,
        res_stream_V_data_4_V_TDATA,
        res_stream_V_data_4_V_TVALID,
        res_stream_V_data_4_V_TREADY,
        res_stream_V_data_5_V_TDATA,
        res_stream_V_data_5_V_TVALID,
        res_stream_V_data_5_V_TREADY,
        res_stream_V_data_6_V_TDATA,
        res_stream_V_data_6_V_TVALID,
        res_stream_V_data_6_V_TREADY,
        res_stream_V_data_7_V_TDATA,
        res_stream_V_data_7_V_TVALID,
        res_stream_V_data_7_V_TREADY,
        res_stream_V_data_8_V_TDATA,
        res_stream_V_data_8_V_TVALID,
        res_stream_V_data_8_V_TREADY,
        res_stream_V_data_9_V_TDATA,
        res_stream_V_data_9_V_TVALID,
        res_stream_V_data_9_V_TREADY
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state4 = 5'd4;
parameter    ap_ST_fsm_state5 = 5'd8;
parameter    ap_ST_fsm_state6 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_stream_V_data_0_V_dout;
input   data_stream_V_data_0_V_empty_n;
output   data_stream_V_data_0_V_read;
input  [15:0] data_stream_V_data_1_V_dout;
input   data_stream_V_data_1_V_empty_n;
output   data_stream_V_data_1_V_read;
input  [15:0] data_stream_V_data_2_V_dout;
input   data_stream_V_data_2_V_empty_n;
output   data_stream_V_data_2_V_read;
input  [15:0] data_stream_V_data_3_V_dout;
input   data_stream_V_data_3_V_empty_n;
output   data_stream_V_data_3_V_read;
input  [15:0] data_stream_V_data_4_V_dout;
input   data_stream_V_data_4_V_empty_n;
output   data_stream_V_data_4_V_read;
input  [15:0] data_stream_V_data_5_V_dout;
input   data_stream_V_data_5_V_empty_n;
output   data_stream_V_data_5_V_read;
input  [15:0] data_stream_V_data_6_V_dout;
input   data_stream_V_data_6_V_empty_n;
output   data_stream_V_data_6_V_read;
input  [15:0] data_stream_V_data_7_V_dout;
input   data_stream_V_data_7_V_empty_n;
output   data_stream_V_data_7_V_read;
output  [15:0] res_stream_V_data_0_V_TDATA;
output   res_stream_V_data_0_V_TVALID;
input   res_stream_V_data_0_V_TREADY;
output  [15:0] res_stream_V_data_1_V_TDATA;
output   res_stream_V_data_1_V_TVALID;
input   res_stream_V_data_1_V_TREADY;
output  [15:0] res_stream_V_data_2_V_TDATA;
output   res_stream_V_data_2_V_TVALID;
input   res_stream_V_data_2_V_TREADY;
output  [15:0] res_stream_V_data_3_V_TDATA;
output   res_stream_V_data_3_V_TVALID;
input   res_stream_V_data_3_V_TREADY;
output  [15:0] res_stream_V_data_4_V_TDATA;
output   res_stream_V_data_4_V_TVALID;
input   res_stream_V_data_4_V_TREADY;
output  [15:0] res_stream_V_data_5_V_TDATA;
output   res_stream_V_data_5_V_TVALID;
input   res_stream_V_data_5_V_TREADY;
output  [15:0] res_stream_V_data_6_V_TDATA;
output   res_stream_V_data_6_V_TVALID;
input   res_stream_V_data_6_V_TREADY;
output  [15:0] res_stream_V_data_7_V_TDATA;
output   res_stream_V_data_7_V_TVALID;
input   res_stream_V_data_7_V_TREADY;
output  [15:0] res_stream_V_data_8_V_TDATA;
output   res_stream_V_data_8_V_TVALID;
input   res_stream_V_data_8_V_TREADY;
output  [15:0] res_stream_V_data_9_V_TDATA;
output   res_stream_V_data_9_V_TVALID;
input   res_stream_V_data_9_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_stream_V_data_0_V_read;
reg data_stream_V_data_1_V_read;
reg data_stream_V_data_2_V_read;
reg data_stream_V_data_3_V_read;
reg data_stream_V_data_4_V_read;
reg data_stream_V_data_5_V_read;
reg data_stream_V_data_6_V_read;
reg data_stream_V_data_7_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    data_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    data_stream_V_data_1_V_blk_n;
reg    data_stream_V_data_2_V_blk_n;
reg    data_stream_V_data_3_V_blk_n;
reg    data_stream_V_data_4_V_blk_n;
reg    data_stream_V_data_5_V_blk_n;
reg    data_stream_V_data_6_V_blk_n;
reg    data_stream_V_data_7_V_blk_n;
reg    res_stream_V_data_0_V_TDATA_blk_n;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    res_stream_V_data_1_V_TDATA_blk_n;
reg    res_stream_V_data_2_V_TDATA_blk_n;
reg    res_stream_V_data_3_V_TDATA_blk_n;
reg    res_stream_V_data_4_V_TDATA_blk_n;
reg    res_stream_V_data_5_V_TDATA_blk_n;
reg    res_stream_V_data_6_V_TDATA_blk_n;
reg    res_stream_V_data_7_V_TDATA_blk_n;
reg    res_stream_V_data_8_V_TDATA_blk_n;
reg    res_stream_V_data_9_V_TDATA_blk_n;
reg   [2:0] i_in_0_reg_374;
wire   [0:0] icmp_ln36_fu_425_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op77;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] i_in_fu_431_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln203_fu_437_p1;
reg   [1:0] trunc_ln203_reg_1012;
wire    ap_CS_fsm_state4;
wire    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready;
wire    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start;
wire    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_idle;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9;
reg    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg;
reg   [15:0] data_24_V_fu_192;
reg   [15:0] data_25_V_fu_196;
reg   [15:0] data_26_V_fu_200;
reg   [15:0] data_27_V_fu_204;
reg   [15:0] data_28_V_fu_208;
reg   [15:0] data_29_V_fu_212;
reg   [15:0] data_30_V_fu_216;
reg   [15:0] data_31_V_fu_220;
reg   [15:0] data_24_V_1_fu_224;
reg   [15:0] data_25_V_1_fu_228;
reg   [15:0] data_26_V_1_fu_232;
reg   [15:0] data_27_V_1_fu_236;
reg   [15:0] data_28_V_1_fu_240;
reg   [15:0] data_29_V_1_fu_244;
reg   [15:0] data_30_V_1_fu_248;
reg   [15:0] data_31_V_1_fu_252;
reg   [15:0] data_24_V_2_fu_256;
reg   [15:0] data_25_V_2_fu_260;
reg   [15:0] data_26_V_2_fu_264;
reg   [15:0] data_27_V_2_fu_268;
reg   [15:0] data_28_V_2_fu_272;
reg   [15:0] data_29_V_2_fu_276;
reg   [15:0] data_30_V_2_fu_280;
reg   [15:0] data_31_V_2_fu_284;
reg   [15:0] data_24_V_3_fu_288;
reg   [15:0] data_25_V_3_fu_292;
reg   [15:0] data_26_V_3_fu_296;
reg   [15:0] data_27_V_3_fu_300;
reg   [15:0] data_28_V_3_fu_304;
reg   [15:0] data_29_V_3_fu_308;
reg   [15:0] data_30_V_3_fu_312;
reg   [15:0] data_31_V_3_fu_316;
wire    regslice_both_res_stream_V_data_0_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_1_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_2_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_3_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_4_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_5_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_6_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_7_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_8_V_U_apdone_blk;
wire    regslice_both_res_stream_V_data_9_V_U_apdone_blk;
reg    ap_block_state6;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    res_stream_V_data_0_V_TVALID_int;
wire    res_stream_V_data_0_V_TREADY_int;
wire    regslice_both_res_stream_V_data_0_V_U_vld_out;
reg    res_stream_V_data_1_V_TVALID_int;
wire    res_stream_V_data_1_V_TREADY_int;
wire    regslice_both_res_stream_V_data_1_V_U_vld_out;
reg    res_stream_V_data_2_V_TVALID_int;
wire    res_stream_V_data_2_V_TREADY_int;
wire    regslice_both_res_stream_V_data_2_V_U_vld_out;
reg    res_stream_V_data_3_V_TVALID_int;
wire    res_stream_V_data_3_V_TREADY_int;
wire    regslice_both_res_stream_V_data_3_V_U_vld_out;
reg    res_stream_V_data_4_V_TVALID_int;
wire    res_stream_V_data_4_V_TREADY_int;
wire    regslice_both_res_stream_V_data_4_V_U_vld_out;
reg    res_stream_V_data_5_V_TVALID_int;
wire    res_stream_V_data_5_V_TREADY_int;
wire    regslice_both_res_stream_V_data_5_V_U_vld_out;
reg    res_stream_V_data_6_V_TVALID_int;
wire    res_stream_V_data_6_V_TREADY_int;
wire    regslice_both_res_stream_V_data_6_V_U_vld_out;
reg    res_stream_V_data_7_V_TVALID_int;
wire    res_stream_V_data_7_V_TREADY_int;
wire    regslice_both_res_stream_V_data_7_V_U_vld_out;
reg    res_stream_V_data_8_V_TVALID_int;
wire    res_stream_V_data_8_V_TREADY_int;
wire    regslice_both_res_stream_V_data_8_V_U_vld_out;
reg    res_stream_V_data_9_V_TVALID_int;
wire    res_stream_V_data_9_V_TREADY_int;
wire    regslice_both_res_stream_V_data_9_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg = 1'b0;
end

dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start),
    .ap_done(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done),
    .ap_idle(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_idle),
    .ap_ready(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready),
    .data_0_V_read(data_24_V_fu_192),
    .data_1_V_read(data_25_V_fu_196),
    .data_2_V_read(data_26_V_fu_200),
    .data_3_V_read(data_27_V_fu_204),
    .data_4_V_read(data_28_V_fu_208),
    .data_5_V_read(data_29_V_fu_212),
    .data_6_V_read(data_30_V_fu_216),
    .data_7_V_read(data_31_V_fu_220),
    .data_8_V_read(data_24_V_1_fu_224),
    .data_9_V_read(data_25_V_1_fu_228),
    .data_10_V_read(data_26_V_1_fu_232),
    .data_11_V_read(data_27_V_1_fu_236),
    .data_12_V_read(data_28_V_1_fu_240),
    .data_13_V_read(data_29_V_1_fu_244),
    .data_14_V_read(data_30_V_1_fu_248),
    .data_15_V_read(data_31_V_1_fu_252),
    .data_16_V_read(data_24_V_2_fu_256),
    .data_17_V_read(data_25_V_2_fu_260),
    .data_18_V_read(data_26_V_2_fu_264),
    .data_19_V_read(data_27_V_2_fu_268),
    .data_20_V_read(data_28_V_2_fu_272),
    .data_21_V_read(data_29_V_2_fu_276),
    .data_22_V_read(data_30_V_2_fu_280),
    .data_23_V_read(data_31_V_2_fu_284),
    .data_24_V_read(data_24_V_3_fu_288),
    .data_25_V_read(data_25_V_3_fu_292),
    .data_26_V_read(data_26_V_3_fu_296),
    .data_27_V_read(data_27_V_3_fu_300),
    .data_28_V_read(data_28_V_3_fu_304),
    .data_29_V_read(data_29_V_3_fu_308),
    .data_30_V_read(data_30_V_3_fu_312),
    .data_31_V_read(data_31_V_3_fu_316),
    .ap_return_0(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0),
    .ap_return_1(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1),
    .ap_return_2(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2),
    .ap_return_3(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3),
    .ap_return_4(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4),
    .ap_return_5(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5),
    .ap_return_6(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6),
    .ap_return_7(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7),
    .ap_return_8(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8),
    .ap_return_9(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0),
    .vld_in(res_stream_V_data_0_V_TVALID_int),
    .ack_in(res_stream_V_data_0_V_TREADY_int),
    .data_out(res_stream_V_data_0_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_0_V_U_vld_out),
    .ack_out(res_stream_V_data_0_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_0_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1),
    .vld_in(res_stream_V_data_1_V_TVALID_int),
    .ack_in(res_stream_V_data_1_V_TREADY_int),
    .data_out(res_stream_V_data_1_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_1_V_U_vld_out),
    .ack_out(res_stream_V_data_1_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_1_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2),
    .vld_in(res_stream_V_data_2_V_TVALID_int),
    .ack_in(res_stream_V_data_2_V_TREADY_int),
    .data_out(res_stream_V_data_2_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_2_V_U_vld_out),
    .ack_out(res_stream_V_data_2_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_2_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_3_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3),
    .vld_in(res_stream_V_data_3_V_TVALID_int),
    .ack_in(res_stream_V_data_3_V_TREADY_int),
    .data_out(res_stream_V_data_3_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_3_V_U_vld_out),
    .ack_out(res_stream_V_data_3_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_3_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_4_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4),
    .vld_in(res_stream_V_data_4_V_TVALID_int),
    .ack_in(res_stream_V_data_4_V_TREADY_int),
    .data_out(res_stream_V_data_4_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_4_V_U_vld_out),
    .ack_out(res_stream_V_data_4_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_4_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_5_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5),
    .vld_in(res_stream_V_data_5_V_TVALID_int),
    .ack_in(res_stream_V_data_5_V_TREADY_int),
    .data_out(res_stream_V_data_5_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_5_V_U_vld_out),
    .ack_out(res_stream_V_data_5_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_5_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_6_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6),
    .vld_in(res_stream_V_data_6_V_TVALID_int),
    .ack_in(res_stream_V_data_6_V_TREADY_int),
    .data_out(res_stream_V_data_6_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_6_V_U_vld_out),
    .ack_out(res_stream_V_data_6_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_6_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_7_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7),
    .vld_in(res_stream_V_data_7_V_TVALID_int),
    .ack_in(res_stream_V_data_7_V_TREADY_int),
    .data_out(res_stream_V_data_7_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_7_V_U_vld_out),
    .ack_out(res_stream_V_data_7_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_7_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_8_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8),
    .vld_in(res_stream_V_data_8_V_TVALID_int),
    .ack_in(res_stream_V_data_8_V_TREADY_int),
    .data_out(res_stream_V_data_8_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_8_V_U_vld_out),
    .ack_out(res_stream_V_data_8_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_8_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_stream_V_data_9_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9),
    .vld_in(res_stream_V_data_9_V_TVALID_int),
    .ack_in(res_stream_V_data_9_V_TREADY_int),
    .data_out(res_stream_V_data_9_V_TDATA),
    .vld_out(regslice_both_res_stream_V_data_9_V_U_vld_out),
    .ack_out(res_stream_V_data_9_V_TREADY),
    .apdone_blk(regslice_both_res_stream_V_data_9_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (regslice_both_res_stream_V_data_9_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_8_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_7_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_6_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_5_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_4_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_3_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= 1'b1;
        end else if ((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready == 1'b1)) begin
            grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln36_fu_425_p2 == 1'd0))) begin
        i_in_0_reg_374 <= i_in_fu_431_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_in_0_reg_374 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1012 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_24_V_1_fu_224 <= data_stream_V_data_0_V_dout;
        data_25_V_1_fu_228 <= data_stream_V_data_1_V_dout;
        data_26_V_1_fu_232 <= data_stream_V_data_2_V_dout;
        data_27_V_1_fu_236 <= data_stream_V_data_3_V_dout;
        data_28_V_1_fu_240 <= data_stream_V_data_4_V_dout;
        data_29_V_1_fu_244 <= data_stream_V_data_5_V_dout;
        data_30_V_1_fu_248 <= data_stream_V_data_6_V_dout;
        data_31_V_1_fu_252 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1012 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_24_V_2_fu_256 <= data_stream_V_data_0_V_dout;
        data_25_V_2_fu_260 <= data_stream_V_data_1_V_dout;
        data_26_V_2_fu_264 <= data_stream_V_data_2_V_dout;
        data_27_V_2_fu_268 <= data_stream_V_data_3_V_dout;
        data_28_V_2_fu_272 <= data_stream_V_data_4_V_dout;
        data_29_V_2_fu_276 <= data_stream_V_data_5_V_dout;
        data_30_V_2_fu_280 <= data_stream_V_data_6_V_dout;
        data_31_V_2_fu_284 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1012 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_24_V_3_fu_288 <= data_stream_V_data_0_V_dout;
        data_25_V_3_fu_292 <= data_stream_V_data_1_V_dout;
        data_26_V_3_fu_296 <= data_stream_V_data_2_V_dout;
        data_27_V_3_fu_300 <= data_stream_V_data_3_V_dout;
        data_28_V_3_fu_304 <= data_stream_V_data_4_V_dout;
        data_29_V_3_fu_308 <= data_stream_V_data_5_V_dout;
        data_30_V_3_fu_312 <= data_stream_V_data_6_V_dout;
        data_31_V_3_fu_316 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1012 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_24_V_fu_192 <= data_stream_V_data_0_V_dout;
        data_25_V_fu_196 <= data_stream_V_data_1_V_dout;
        data_26_V_fu_200 <= data_stream_V_data_2_V_dout;
        data_27_V_fu_204 <= data_stream_V_data_3_V_dout;
        data_28_V_fu_208 <= data_stream_V_data_4_V_dout;
        data_29_V_fu_212 <= data_stream_V_data_5_V_dout;
        data_30_V_fu_216 <= data_stream_V_data_6_V_dout;
        data_31_V_fu_220 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln36_fu_425_p2 == 1'd0))) begin
        trunc_ln203_reg_1012 <= trunc_ln203_fu_437_p1;
    end
end

always @ (*) begin
    if ((icmp_ln36_fu_425_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (regslice_both_res_stream_V_data_9_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_8_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_7_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_6_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_5_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_4_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_3_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (regslice_both_res_stream_V_data_9_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_8_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_7_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_6_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_5_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_4_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_3_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_0_V_blk_n = data_stream_V_data_0_V_empty_n;
    end else begin
        data_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_0_V_read = 1'b1;
    end else begin
        data_stream_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_1_V_blk_n = data_stream_V_data_1_V_empty_n;
    end else begin
        data_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_1_V_read = 1'b1;
    end else begin
        data_stream_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_2_V_blk_n = data_stream_V_data_2_V_empty_n;
    end else begin
        data_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_2_V_read = 1'b1;
    end else begin
        data_stream_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_3_V_blk_n = data_stream_V_data_3_V_empty_n;
    end else begin
        data_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_3_V_read = 1'b1;
    end else begin
        data_stream_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_4_V_blk_n = data_stream_V_data_4_V_empty_n;
    end else begin
        data_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_4_V_read = 1'b1;
    end else begin
        data_stream_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_5_V_blk_n = data_stream_V_data_5_V_empty_n;
    end else begin
        data_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_5_V_read = 1'b1;
    end else begin
        data_stream_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_6_V_blk_n = data_stream_V_data_6_V_empty_n;
    end else begin
        data_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_6_V_read = 1'b1;
    end else begin
        data_stream_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_7_V_blk_n = data_stream_V_data_7_V_empty_n;
    end else begin
        data_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_stream_V_data_7_V_read = 1'b1;
    end else begin
        data_stream_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_0_V_TDATA_blk_n = res_stream_V_data_0_V_TREADY_int;
    end else begin
        res_stream_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_0_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_0_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_1_V_TDATA_blk_n = res_stream_V_data_1_V_TREADY_int;
    end else begin
        res_stream_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_1_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_1_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_2_V_TDATA_blk_n = res_stream_V_data_2_V_TREADY_int;
    end else begin
        res_stream_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_2_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_2_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_3_V_TDATA_blk_n = res_stream_V_data_3_V_TREADY_int;
    end else begin
        res_stream_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_3_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_3_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_4_V_TDATA_blk_n = res_stream_V_data_4_V_TREADY_int;
    end else begin
        res_stream_V_data_4_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_4_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_4_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_5_V_TDATA_blk_n = res_stream_V_data_5_V_TREADY_int;
    end else begin
        res_stream_V_data_5_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_5_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_5_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_6_V_TDATA_blk_n = res_stream_V_data_6_V_TREADY_int;
    end else begin
        res_stream_V_data_6_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_6_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_6_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_7_V_TDATA_blk_n = res_stream_V_data_7_V_TREADY_int;
    end else begin
        res_stream_V_data_7_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_7_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_7_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_8_V_TDATA_blk_n = res_stream_V_data_8_V_TREADY_int;
    end else begin
        res_stream_V_data_8_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_8_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_8_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_9_V_TDATA_blk_n = res_stream_V_data_9_V_TREADY_int;
    end else begin
        res_stream_V_data_9_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_9_V_TVALID_int = 1'b1;
    end else begin
        res_stream_V_data_9_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln36_fu_425_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln36_fu_425_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((res_stream_V_data_0_V_TREADY_int == 1'b0) | (regslice_both_res_stream_V_data_9_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_8_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_7_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_6_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_5_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_4_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_3_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op77 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op77 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (io_acc_block_signal_op77 == 1'b0);
end

always @ (*) begin
    ap_block_state6 = ((regslice_both_res_stream_V_data_9_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_8_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_7_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_6_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_5_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_4_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_3_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_stream_V_data_0_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start = grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg;

assign i_in_fu_431_p2 = (i_in_0_reg_374 + 3'd1);

assign icmp_ln36_fu_425_p2 = ((i_in_0_reg_374 == 3'd4) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op77 = (data_stream_V_data_7_V_empty_n & data_stream_V_data_6_V_empty_n & data_stream_V_data_5_V_empty_n & data_stream_V_data_4_V_empty_n & data_stream_V_data_3_V_empty_n & data_stream_V_data_2_V_empty_n & data_stream_V_data_1_V_empty_n & data_stream_V_data_0_V_empty_n);

assign res_stream_V_data_0_V_TVALID = regslice_both_res_stream_V_data_0_V_U_vld_out;

assign res_stream_V_data_1_V_TVALID = regslice_both_res_stream_V_data_1_V_U_vld_out;

assign res_stream_V_data_2_V_TVALID = regslice_both_res_stream_V_data_2_V_U_vld_out;

assign res_stream_V_data_3_V_TVALID = regslice_both_res_stream_V_data_3_V_U_vld_out;

assign res_stream_V_data_4_V_TVALID = regslice_both_res_stream_V_data_4_V_U_vld_out;

assign res_stream_V_data_5_V_TVALID = regslice_both_res_stream_V_data_5_V_U_vld_out;

assign res_stream_V_data_6_V_TVALID = regslice_both_res_stream_V_data_6_V_U_vld_out;

assign res_stream_V_data_7_V_TVALID = regslice_both_res_stream_V_data_7_V_U_vld_out;

assign res_stream_V_data_8_V_TVALID = regslice_both_res_stream_V_data_8_V_U_vld_out;

assign res_stream_V_data_9_V_TVALID = regslice_both_res_stream_V_data_9_V_U_vld_out;

assign trunc_ln203_fu_437_p1 = i_in_0_reg_374[1:0];

endmodule //dense_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_10u_config9_s
