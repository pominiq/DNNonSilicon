-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_10u_config9_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_stream_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_0_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_0_V_read : OUT STD_LOGIC;
    data_stream_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_1_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_1_V_read : OUT STD_LOGIC;
    data_stream_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_2_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_2_V_read : OUT STD_LOGIC;
    data_stream_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_3_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_3_V_read : OUT STD_LOGIC;
    data_stream_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_4_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_4_V_read : OUT STD_LOGIC;
    data_stream_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_5_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_5_V_read : OUT STD_LOGIC;
    data_stream_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_6_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_6_V_read : OUT STD_LOGIC;
    data_stream_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_stream_V_data_7_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_7_V_read : OUT STD_LOGIC;
    res_stream_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_0_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_1_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_2_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_3_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_4_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_5_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_6_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_7_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_8_V_TREADY : IN STD_LOGIC;
    res_stream_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_stream_V_data_9_V_TREADY : IN STD_LOGIC );
end;


architecture behav of dense_array_ap_fixed_8u_array_ap_fixed_16_6_5_3_0_10u_config9_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal data_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal res_stream_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_4_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_5_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_6_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_7_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_8_V_TDATA_blk_n : STD_LOGIC;
    signal res_stream_V_data_9_V_TDATA_blk_n : STD_LOGIC;
    signal i_in_0_reg_374 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln36_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op77 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_in_fu_431_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal trunc_ln203_fu_437_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln203_reg_1012 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_idle : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg : STD_LOGIC := '0';
    signal data_24_V_fu_192 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_25_V_fu_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_26_V_fu_200 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_27_V_fu_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_28_V_fu_208 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_29_V_fu_212 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_30_V_fu_216 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_31_V_fu_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_24_V_1_fu_224 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_25_V_1_fu_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_26_V_1_fu_232 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_27_V_1_fu_236 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_28_V_1_fu_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_29_V_1_fu_244 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_30_V_1_fu_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_31_V_1_fu_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_24_V_2_fu_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_25_V_2_fu_260 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_26_V_2_fu_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_27_V_2_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_28_V_2_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_29_V_2_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_30_V_2_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_31_V_2_fu_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_24_V_3_fu_288 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_25_V_3_fu_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_26_V_3_fu_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_27_V_3_fu_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_28_V_3_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_29_V_3_fu_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_30_V_3_fu_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_31_V_3_fu_316 : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_res_stream_V_data_0_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_1_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_2_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_3_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_4_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_5_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_6_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_7_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_8_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_stream_V_data_9_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state6 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal res_stream_V_data_0_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_0_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_0_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_1_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_1_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_1_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_2_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_2_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_2_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_3_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_3_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_3_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_4_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_4_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_4_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_5_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_5_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_5_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_6_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_6_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_6_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_7_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_7_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_7_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_8_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_8_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_8_V_U_vld_out : STD_LOGIC;
    signal res_stream_V_data_9_V_TVALID_int : STD_LOGIC;
    signal res_stream_V_data_9_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_stream_V_data_9_V_U_vld_out : STD_LOGIC;

    component dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385 : component dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start,
        ap_done => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done,
        ap_idle => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_idle,
        ap_ready => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready,
        data_0_V_read => data_24_V_fu_192,
        data_1_V_read => data_25_V_fu_196,
        data_2_V_read => data_26_V_fu_200,
        data_3_V_read => data_27_V_fu_204,
        data_4_V_read => data_28_V_fu_208,
        data_5_V_read => data_29_V_fu_212,
        data_6_V_read => data_30_V_fu_216,
        data_7_V_read => data_31_V_fu_220,
        data_8_V_read => data_24_V_1_fu_224,
        data_9_V_read => data_25_V_1_fu_228,
        data_10_V_read => data_26_V_1_fu_232,
        data_11_V_read => data_27_V_1_fu_236,
        data_12_V_read => data_28_V_1_fu_240,
        data_13_V_read => data_29_V_1_fu_244,
        data_14_V_read => data_30_V_1_fu_248,
        data_15_V_read => data_31_V_1_fu_252,
        data_16_V_read => data_24_V_2_fu_256,
        data_17_V_read => data_25_V_2_fu_260,
        data_18_V_read => data_26_V_2_fu_264,
        data_19_V_read => data_27_V_2_fu_268,
        data_20_V_read => data_28_V_2_fu_272,
        data_21_V_read => data_29_V_2_fu_276,
        data_22_V_read => data_30_V_2_fu_280,
        data_23_V_read => data_31_V_2_fu_284,
        data_24_V_read => data_24_V_3_fu_288,
        data_25_V_read => data_25_V_3_fu_292,
        data_26_V_read => data_26_V_3_fu_296,
        data_27_V_read => data_27_V_3_fu_300,
        data_28_V_read => data_28_V_3_fu_304,
        data_29_V_read => data_29_V_3_fu_308,
        data_30_V_read => data_30_V_3_fu_312,
        data_31_V_read => data_31_V_3_fu_316,
        ap_return_0 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0,
        ap_return_1 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1,
        ap_return_2 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2,
        ap_return_3 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3,
        ap_return_4 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4,
        ap_return_5 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5,
        ap_return_6 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6,
        ap_return_7 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7,
        ap_return_8 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8,
        ap_return_9 => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9);

    regslice_both_res_stream_V_data_0_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_0,
        vld_in => res_stream_V_data_0_V_TVALID_int,
        ack_in => res_stream_V_data_0_V_TREADY_int,
        data_out => res_stream_V_data_0_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_0_V_U_vld_out,
        ack_out => res_stream_V_data_0_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_0_V_U_apdone_blk);

    regslice_both_res_stream_V_data_1_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_1,
        vld_in => res_stream_V_data_1_V_TVALID_int,
        ack_in => res_stream_V_data_1_V_TREADY_int,
        data_out => res_stream_V_data_1_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_1_V_U_vld_out,
        ack_out => res_stream_V_data_1_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_1_V_U_apdone_blk);

    regslice_both_res_stream_V_data_2_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_2,
        vld_in => res_stream_V_data_2_V_TVALID_int,
        ack_in => res_stream_V_data_2_V_TREADY_int,
        data_out => res_stream_V_data_2_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_2_V_U_vld_out,
        ack_out => res_stream_V_data_2_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_2_V_U_apdone_blk);

    regslice_both_res_stream_V_data_3_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_3,
        vld_in => res_stream_V_data_3_V_TVALID_int,
        ack_in => res_stream_V_data_3_V_TREADY_int,
        data_out => res_stream_V_data_3_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_3_V_U_vld_out,
        ack_out => res_stream_V_data_3_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_3_V_U_apdone_blk);

    regslice_both_res_stream_V_data_4_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_4,
        vld_in => res_stream_V_data_4_V_TVALID_int,
        ack_in => res_stream_V_data_4_V_TREADY_int,
        data_out => res_stream_V_data_4_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_4_V_U_vld_out,
        ack_out => res_stream_V_data_4_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_4_V_U_apdone_blk);

    regslice_both_res_stream_V_data_5_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_5,
        vld_in => res_stream_V_data_5_V_TVALID_int,
        ack_in => res_stream_V_data_5_V_TREADY_int,
        data_out => res_stream_V_data_5_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_5_V_U_vld_out,
        ack_out => res_stream_V_data_5_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_5_V_U_apdone_blk);

    regslice_both_res_stream_V_data_6_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_6,
        vld_in => res_stream_V_data_6_V_TVALID_int,
        ack_in => res_stream_V_data_6_V_TREADY_int,
        data_out => res_stream_V_data_6_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_6_V_U_vld_out,
        ack_out => res_stream_V_data_6_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_6_V_U_apdone_blk);

    regslice_both_res_stream_V_data_7_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_7,
        vld_in => res_stream_V_data_7_V_TVALID_int,
        ack_in => res_stream_V_data_7_V_TREADY_int,
        data_out => res_stream_V_data_7_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_7_V_U_vld_out,
        ack_out => res_stream_V_data_7_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_7_V_U_apdone_blk);

    regslice_both_res_stream_V_data_8_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_8,
        vld_in => res_stream_V_data_8_V_TVALID_int,
        ack_in => res_stream_V_data_8_V_TREADY_int,
        data_out => res_stream_V_data_8_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_8_V_U_vld_out,
        ack_out => res_stream_V_data_8_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_8_V_U_apdone_blk);

    regslice_both_res_stream_V_data_9_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_return_9,
        vld_in => res_stream_V_data_9_V_TVALID_int,
        ack_in => res_stream_V_data_9_V_TREADY_int,
        data_out => res_stream_V_data_9_V_TDATA,
        vld_out => regslice_both_res_stream_V_data_9_V_U_vld_out,
        ack_out => res_stream_V_data_9_V_TREADY,
        apdone_blk => regslice_both_res_stream_V_data_9_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_stream_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_0_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_ready = ap_const_logic_1)) then 
                    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_in_0_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln36_fu_425_p2 = ap_const_lv1_0))) then 
                i_in_0_reg_374 <= i_in_fu_431_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_in_0_reg_374 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1012 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_24_V_1_fu_224 <= data_stream_V_data_0_V_dout;
                data_25_V_1_fu_228 <= data_stream_V_data_1_V_dout;
                data_26_V_1_fu_232 <= data_stream_V_data_2_V_dout;
                data_27_V_1_fu_236 <= data_stream_V_data_3_V_dout;
                data_28_V_1_fu_240 <= data_stream_V_data_4_V_dout;
                data_29_V_1_fu_244 <= data_stream_V_data_5_V_dout;
                data_30_V_1_fu_248 <= data_stream_V_data_6_V_dout;
                data_31_V_1_fu_252 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1012 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_24_V_2_fu_256 <= data_stream_V_data_0_V_dout;
                data_25_V_2_fu_260 <= data_stream_V_data_1_V_dout;
                data_26_V_2_fu_264 <= data_stream_V_data_2_V_dout;
                data_27_V_2_fu_268 <= data_stream_V_data_3_V_dout;
                data_28_V_2_fu_272 <= data_stream_V_data_4_V_dout;
                data_29_V_2_fu_276 <= data_stream_V_data_5_V_dout;
                data_30_V_2_fu_280 <= data_stream_V_data_6_V_dout;
                data_31_V_2_fu_284 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1012 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_24_V_3_fu_288 <= data_stream_V_data_0_V_dout;
                data_25_V_3_fu_292 <= data_stream_V_data_1_V_dout;
                data_26_V_3_fu_296 <= data_stream_V_data_2_V_dout;
                data_27_V_3_fu_300 <= data_stream_V_data_3_V_dout;
                data_28_V_3_fu_304 <= data_stream_V_data_4_V_dout;
                data_29_V_3_fu_308 <= data_stream_V_data_5_V_dout;
                data_30_V_3_fu_312 <= data_stream_V_data_6_V_dout;
                data_31_V_3_fu_316 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln203_reg_1012 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_24_V_fu_192 <= data_stream_V_data_0_V_dout;
                data_25_V_fu_196 <= data_stream_V_data_1_V_dout;
                data_26_V_fu_200 <= data_stream_V_data_2_V_dout;
                data_27_V_fu_204 <= data_stream_V_data_3_V_dout;
                data_28_V_fu_208 <= data_stream_V_data_4_V_dout;
                data_29_V_fu_212 <= data_stream_V_data_5_V_dout;
                data_30_V_fu_216 <= data_stream_V_data_6_V_dout;
                data_31_V_fu_220 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln36_fu_425_p2 = ap_const_lv1_0))) then
                trunc_ln203_reg_1012 <= trunc_ln203_fu_437_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln36_fu_425_p2, ap_enable_reg_pp0_iter0, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, ap_block_pp0_stage0_subdone, regslice_both_res_stream_V_data_0_V_U_apdone_blk, regslice_both_res_stream_V_data_1_V_U_apdone_blk, regslice_both_res_stream_V_data_2_V_U_apdone_blk, regslice_both_res_stream_V_data_3_V_U_apdone_blk, regslice_both_res_stream_V_data_4_V_U_apdone_blk, regslice_both_res_stream_V_data_5_V_U_apdone_blk, regslice_both_res_stream_V_data_6_V_U_apdone_blk, regslice_both_res_stream_V_data_7_V_U_apdone_blk, regslice_both_res_stream_V_data_8_V_U_apdone_blk, regslice_both_res_stream_V_data_9_V_U_apdone_blk, res_stream_V_data_0_V_TREADY_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln36_fu_425_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln36_fu_425_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_stream_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_0_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op77)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op77 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op77)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op77 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op77)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (io_acc_block_signal_op77 = ap_const_logic_0);
    end process;


    ap_block_state6_assign_proc : process(regslice_both_res_stream_V_data_0_V_U_apdone_blk, regslice_both_res_stream_V_data_1_V_U_apdone_blk, regslice_both_res_stream_V_data_2_V_U_apdone_blk, regslice_both_res_stream_V_data_3_V_U_apdone_blk, regslice_both_res_stream_V_data_4_V_U_apdone_blk, regslice_both_res_stream_V_data_5_V_U_apdone_blk, regslice_both_res_stream_V_data_6_V_U_apdone_blk, regslice_both_res_stream_V_data_7_V_U_apdone_blk, regslice_both_res_stream_V_data_8_V_U_apdone_blk, regslice_both_res_stream_V_data_9_V_U_apdone_blk)
    begin
                ap_block_state6 <= ((regslice_both_res_stream_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_0_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln36_fu_425_p2)
    begin
        if ((icmp_ln36_fu_425_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, regslice_both_res_stream_V_data_0_V_U_apdone_blk, regslice_both_res_stream_V_data_1_V_U_apdone_blk, regslice_both_res_stream_V_data_2_V_U_apdone_blk, regslice_both_res_stream_V_data_3_V_U_apdone_blk, regslice_both_res_stream_V_data_4_V_U_apdone_blk, regslice_both_res_stream_V_data_5_V_U_apdone_blk, regslice_both_res_stream_V_data_6_V_U_apdone_blk, regslice_both_res_stream_V_data_7_V_U_apdone_blk, regslice_both_res_stream_V_data_8_V_U_apdone_blk, regslice_both_res_stream_V_data_9_V_U_apdone_blk, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_stream_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_0_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, regslice_both_res_stream_V_data_0_V_U_apdone_blk, regslice_both_res_stream_V_data_1_V_U_apdone_blk, regslice_both_res_stream_V_data_2_V_U_apdone_blk, regslice_both_res_stream_V_data_3_V_U_apdone_blk, regslice_both_res_stream_V_data_4_V_U_apdone_blk, regslice_both_res_stream_V_data_5_V_U_apdone_blk, regslice_both_res_stream_V_data_6_V_U_apdone_blk, regslice_both_res_stream_V_data_7_V_U_apdone_blk, regslice_both_res_stream_V_data_8_V_U_apdone_blk, regslice_both_res_stream_V_data_9_V_U_apdone_blk, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_stream_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_stream_V_data_0_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_0_V_blk_n_assign_proc : process(data_stream_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_0_V_blk_n <= data_stream_V_data_0_V_empty_n;
        else 
            data_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_1_V_blk_n_assign_proc : process(data_stream_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_1_V_blk_n <= data_stream_V_data_1_V_empty_n;
        else 
            data_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_2_V_blk_n_assign_proc : process(data_stream_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_2_V_blk_n <= data_stream_V_data_2_V_empty_n;
        else 
            data_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_3_V_blk_n_assign_proc : process(data_stream_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_3_V_blk_n <= data_stream_V_data_3_V_empty_n;
        else 
            data_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_4_V_blk_n_assign_proc : process(data_stream_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_4_V_blk_n <= data_stream_V_data_4_V_empty_n;
        else 
            data_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_5_V_blk_n_assign_proc : process(data_stream_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_5_V_blk_n <= data_stream_V_data_5_V_empty_n;
        else 
            data_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_6_V_blk_n_assign_proc : process(data_stream_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_6_V_blk_n <= data_stream_V_data_6_V_empty_n;
        else 
            data_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_7_V_blk_n_assign_proc : process(data_stream_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_7_V_blk_n <= data_stream_V_data_7_V_empty_n;
        else 
            data_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_stream_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start <= grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_start_reg;
    i_in_fu_431_p2 <= std_logic_vector(unsigned(i_in_0_reg_374) + unsigned(ap_const_lv3_1));
    icmp_ln36_fu_425_p2 <= "1" when (i_in_0_reg_374 = ap_const_lv3_4) else "0";
    io_acc_block_signal_op77 <= (data_stream_V_data_7_V_empty_n and data_stream_V_data_6_V_empty_n and data_stream_V_data_5_V_empty_n and data_stream_V_data_4_V_empty_n and data_stream_V_data_3_V_empty_n and data_stream_V_data_2_V_empty_n and data_stream_V_data_1_V_empty_n and data_stream_V_data_0_V_empty_n);

    res_stream_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_0_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_0_V_TDATA_blk_n <= res_stream_V_data_0_V_TREADY_int;
        else 
            res_stream_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_TVALID <= regslice_both_res_stream_V_data_0_V_U_vld_out;

    res_stream_V_data_0_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_0_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_1_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_1_V_TDATA_blk_n <= res_stream_V_data_1_V_TREADY_int;
        else 
            res_stream_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_TVALID <= regslice_both_res_stream_V_data_1_V_U_vld_out;

    res_stream_V_data_1_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_1_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_2_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_2_V_TDATA_blk_n <= res_stream_V_data_2_V_TREADY_int;
        else 
            res_stream_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_TVALID <= regslice_both_res_stream_V_data_2_V_U_vld_out;

    res_stream_V_data_2_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_2_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_3_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_3_V_TDATA_blk_n <= res_stream_V_data_3_V_TREADY_int;
        else 
            res_stream_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_TVALID <= regslice_both_res_stream_V_data_3_V_U_vld_out;

    res_stream_V_data_3_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_3_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_4_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_4_V_TDATA_blk_n <= res_stream_V_data_4_V_TREADY_int;
        else 
            res_stream_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_TVALID <= regslice_both_res_stream_V_data_4_V_U_vld_out;

    res_stream_V_data_4_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_4_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_5_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_5_V_TDATA_blk_n <= res_stream_V_data_5_V_TREADY_int;
        else 
            res_stream_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_TVALID <= regslice_both_res_stream_V_data_5_V_U_vld_out;

    res_stream_V_data_5_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_5_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_6_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_6_V_TDATA_blk_n <= res_stream_V_data_6_V_TREADY_int;
        else 
            res_stream_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_TVALID <= regslice_both_res_stream_V_data_6_V_U_vld_out;

    res_stream_V_data_6_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_6_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_7_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_7_V_TDATA_blk_n <= res_stream_V_data_7_V_TREADY_int;
        else 
            res_stream_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_TVALID <= regslice_both_res_stream_V_data_7_V_U_vld_out;

    res_stream_V_data_7_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_7_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_8_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_8_V_TDATA_blk_n <= res_stream_V_data_8_V_TREADY_int;
        else 
            res_stream_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_8_V_TVALID <= regslice_both_res_stream_V_data_8_V_U_vld_out;

    res_stream_V_data_8_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_8_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_8_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, res_stream_V_data_9_V_TREADY_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_9_V_TDATA_blk_n <= res_stream_V_data_9_V_TREADY_int;
        else 
            res_stream_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_9_V_TVALID <= regslice_both_res_stream_V_data_9_V_U_vld_out;

    res_stream_V_data_9_V_TVALID_int_assign_proc : process(ap_CS_fsm_state5, grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done, res_stream_V_data_0_V_TREADY_int)
    begin
        if ((not(((res_stream_V_data_0_V_TREADY_int = ap_const_logic_0) or (grp_dense_wrapper_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config9_s_fu_385_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_9_V_TVALID_int <= ap_const_logic_1;
        else 
            res_stream_V_data_9_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln203_fu_437_p1 <= i_in_0_reg_374(2 - 1 downto 0);
end behav;
