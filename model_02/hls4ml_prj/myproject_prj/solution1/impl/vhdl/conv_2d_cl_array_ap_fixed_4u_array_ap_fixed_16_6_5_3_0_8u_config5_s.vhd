-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_FF29 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100101001";
    constant ap_const_lv16_FE0C : STD_LOGIC_VECTOR (15 downto 0) := "1111111000001100";
    constant ap_const_lv16_FE39 : STD_LOGIC_VECTOR (15 downto 0) := "1111111000111001";
    constant ap_const_lv16_138 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100111000";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv16_FF7D : STD_LOGIC_VECTOR (15 downto 0) := "1111111101111101";
    constant ap_const_lv16_1C9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111001001";
    constant ap_const_lv16_128 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal outidx1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outidx1_ce0 : STD_LOGIC;
    signal outidx1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_data_V_1_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w5_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal w5_V_ce0 : STD_LOGIC;
    signal w5_V_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal line_buffer_Array_V_1_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal and_ln289_2_reg_2377 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal w_index144_reg_679 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_index_0_i_i_i_i145_reg_690 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_6143_reg_778 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_6141_reg_789 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_6139_reg_800 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_6137_reg_811 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_4135_reg_822 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_4133_reg_833 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_4131_reg_844 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_4129_reg_855 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_2155 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op42 : STD_LOGIC;
    signal tmp_data_1_V_reg_2161 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2167 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_2173 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln79_fu_988_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln79_reg_2179 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln241_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_ic_fu_1000_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic_reg_2188 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln246_fu_1006_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln246_reg_2193 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_data_V_1_8_load_reg_2217 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_9_load_reg_2222 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_10_load_reg_2227 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_11_load_reg_2232 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_20_load_reg_2237 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_21_load_reg_2242 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_22_load_reg_2247 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_23_load_reg_2252 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_32_load_reg_2257 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_33_load_reg_2262 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_34_load_reg_2267 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_35_load_reg_2272 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_iw_fu_1146_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln213_fu_1440_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln213_1_fu_1506_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln213_2_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln213_2_fu_1572_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sX_2_load_reg_2345 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_2350 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_2355 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_2360 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_2365 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_2371 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_2_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state11_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal w_index_fu_1708_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal w_index_reg_2386 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln129_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_2396 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_2396_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_2396_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_reg_2400 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_reg_2400_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln139_fu_1720_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal trunc_ln139_2_fu_1772_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln139_2_reg_2600 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_2605 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_2610 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_2615 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln148_fu_1818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln148_reg_2620 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_fu_2083_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_reg_2625 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_5_fu_2089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_5_reg_2630 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_6_fu_2095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_6_reg_2635 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_7_fu_2101_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1118_7_reg_2640 : STD_LOGIC_VECTOR (27 downto 0);
    signal acc_1_V_fu_1868_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_2645 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal acc_1_V_5_fu_1875_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_5_reg_2651 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_1904_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_reg_2657 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_5_fu_1911_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_5_reg_2663 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_fu_1940_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_5_fu_1947_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_5_reg_2675 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_fu_1976_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_reg_2681 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_5_fu_1983_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_5_reg_2687 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal indvar_flatten146_reg_586 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op437 : STD_LOGIC;
    signal ap_block_state15 : BOOLEAN;
    signal icmp_ln79_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic4_0_i_i_i_reg_598 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal shift_buffer_1_0_V_reg_609 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_0_V_reg_622 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_iw_0_i_i_i_i_reg_635 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln194_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_0_reg_646 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln213_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_1_reg_657 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln213_1_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic2_0_i_i_i_i_2_reg_668 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_w_index144_phi_fu_683_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_UnifiedRetVal_i_i_reg_701 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_UnifiedRetVal_i_i_reg_701 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln323_fu_2057_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_869_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_1990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln133_fu_1702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1462_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1528_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1582_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln203_2_fu_1592_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln203_fu_1170_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_1_fu_1189_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_1_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_2_fu_1220_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_2_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_3_fu_1251_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_3_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_4_fu_1282_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_5_fu_1301_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_6_fu_1320_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_7_fu_1339_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_8_fu_1358_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_9_fu_1377_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_10_fu_1396_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_11_fu_1415_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln328_fu_2011_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_2041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_1995_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buffer_1_3_V_fu_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_1_fu_492 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_2_fu_496 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_3_fu_500 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_fu_504 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_1_fu_508 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_2_fu_512 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_3_fu_516 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_1010_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_1010_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln201_fu_1152_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1156_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_fu_1196_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_1_fu_1227_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_3_fu_1258_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_1462_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_1528_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_1582_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_1648_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_fu_1668_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_2_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_1690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_index_fu_1806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln148_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1265_fu_1855_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln4_fu_1846_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_fu_1862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1265_5_fu_1891_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_fu_1882_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_1898_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1265_6_fu_1927_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_fu_1918_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_1934_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1265_7_fu_1963_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_7_fu_1954_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_fu_1970_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_2006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_2052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_fu_2083_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_fu_1826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_5_fu_2089_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_6_fu_2095_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_699 : BOOLEAN;
    signal ap_condition_449 : BOOLEAN;
    signal ap_condition_761 : BOOLEAN;
    signal ap_condition_1052 : BOOLEAN;

    component myproject_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mul_mul_12s_16s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_outidx1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    outidx1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_outidx1
    generic map (
        DataWidth => 1,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outidx1_address0,
        ce0 => outidx1_ce0,
        q0 => outidx1_q0);

    w5_V_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V
    generic map (
        DataWidth => 60,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w5_V_address0,
        ce0 => w5_V_ce0,
        q0 => w5_V_q0);

    line_buffer_Array_V_1_0_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_0_ce0,
        we0 => line_buffer_Array_V_1_0_0_we0,
        d0 => DataIn_V_assign_fu_1010_p6,
        q0 => line_buffer_Array_V_1_0_0_q0);

    line_buffer_Array_V_1_0_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_1_ce0,
        we0 => line_buffer_Array_V_1_0_1_we0,
        d0 => DataIn_V_assign_fu_1010_p6,
        q0 => line_buffer_Array_V_1_0_1_q0);

    line_buffer_Array_V_1_0_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_2_ce0,
        we0 => line_buffer_Array_V_1_0_2_we0,
        d0 => DataIn_V_assign_fu_1010_p6,
        q0 => line_buffer_Array_V_1_0_2_q0);

    line_buffer_Array_V_1_0_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_3_ce0,
        we0 => line_buffer_Array_V_1_0_3_we0,
        d0 => DataIn_V_assign_fu_1010_p6,
        q0 => line_buffer_Array_V_1_0_3_q0);

    line_buffer_Array_V_1_1_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_0_ce0,
        we0 => line_buffer_Array_V_1_1_0_we0,
        d0 => shift_buffer_1_0_V_reg_609,
        q0 => line_buffer_Array_V_1_1_0_q0);

    line_buffer_Array_V_1_1_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_1_ce0,
        we0 => line_buffer_Array_V_1_1_1_we0,
        d0 => shift_buffer_1_0_V_reg_609,
        q0 => line_buffer_Array_V_1_1_1_q0);

    line_buffer_Array_V_1_1_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_2_ce0,
        we0 => line_buffer_Array_V_1_1_2_we0,
        d0 => shift_buffer_1_0_V_reg_609,
        q0 => line_buffer_Array_V_1_1_2_q0);

    line_buffer_Array_V_1_1_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_3_ce0,
        we0 => line_buffer_Array_V_1_1_3_we0,
        d0 => shift_buffer_1_0_V_reg_609,
        q0 => line_buffer_Array_V_1_1_3_q0);

    myproject_mux_42_16_1_1_U61 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_2155,
        din1 => tmp_data_1_V_reg_2161,
        din2 => tmp_data_2_V_reg_2167,
        din3 => tmp_data_3_V_reg_2173,
        din4 => DataIn_V_assign_fu_1010_p5,
        dout => DataIn_V_assign_fu_1010_p6);

    myproject_mux_42_16_1_1_U62 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_0_3_V_3_fu_516,
        din1 => shift_buffer_0_3_V_2_fu_512,
        din2 => shift_buffer_0_3_V_1_fu_508,
        din3 => shift_buffer_0_3_V_fu_504,
        din4 => tmp_1_fu_1462_p5,
        dout => tmp_1_fu_1462_p6);

    myproject_mux_42_16_1_1_U63 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_1_3_V_3_fu_500,
        din1 => shift_buffer_1_3_V_2_fu_496,
        din2 => shift_buffer_1_3_V_1_fu_492,
        din3 => shift_buffer_1_3_V_fu_488,
        din4 => tmp_2_fu_1528_p5,
        dout => tmp_2_fu_1528_p6);

    myproject_mux_42_16_1_1_U64 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_2155,
        din1 => tmp_data_1_V_reg_2161,
        din2 => tmp_data_2_V_reg_2167,
        din3 => tmp_data_3_V_reg_2173,
        din4 => tmp_3_fu_1582_p5,
        dout => tmp_3_fu_1582_p6);

    myproject_mul_mul_16s_16s_32_1_1_U65 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln139_2_reg_2600,
        din1 => mul_ln1118_fu_2083_p1,
        dout => mul_ln1118_fu_2083_p2);

    myproject_mul_mul_16s_16s_32_1_1_U66 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_11_reg_2605,
        din1 => mul_ln1118_5_fu_2089_p1,
        dout => mul_ln1118_5_fu_2089_p2);

    myproject_mul_mul_16s_16s_32_1_1_U67 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_12_reg_2610,
        din1 => mul_ln1118_6_fu_2095_p1,
        dout => mul_ln1118_6_fu_2095_p2);

    myproject_mul_mul_12s_16s_28_1_1_U68 : component myproject_mul_mul_12s_16s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => tmp_13_reg_2615,
        din1 => ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701,
        dout => mul_ln1118_7_fu_2101_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln129_fu_1714_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_449)) then
                if ((ap_const_boolean_1 = ap_condition_699)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_35;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_34;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_33;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_32;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1F)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_31;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1E)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_30;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1D)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_29;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1C)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_28;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1B)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_27;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1A)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_26;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_19)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_25;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_18)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_24;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_17)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_23;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_16)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_22;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_15)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_21;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_14)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_20;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_13)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_19;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_12)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_18;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_11)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_17;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_10)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_16;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_F)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_15;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_E)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_14;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_D)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_13;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_C)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_12;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_B)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_11;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_A)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_10;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_9)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_9;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_8)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_8;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_7)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_7;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_6)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_6;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_5)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_5;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_4)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_4;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_3;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_2;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_1)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_1;
                elsif ((trunc_ln139_fu_1720_p1 = ap_const_lv6_0)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701 <= ap_phi_reg_pp1_iter1_UnifiedRetVal_i_i_reg_701;
                end if;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_0_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_0_reg_646 <= add_ln213_fu_1440_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_ic2_0_i_i_i_i_0_reg_646 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_1_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_1500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_1_reg_657 <= add_ln213_1_fu_1506_p2;
            elsif (((icmp_ln213_fu_1434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_1_reg_657 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_2_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_1566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_ic2_0_i_i_i_i_2_reg_668 <= add_ln213_2_fu_1572_p2;
            elsif (((icmp_ln213_1_fu_1500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_2_reg_668 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic4_0_i_i_i_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_ic4_0_i_i_i_reg_598 <= i_ic_reg_2188;
            elsif (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_ic4_0_i_i_i_reg_598 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_iw_0_i_i_i_i_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_994_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_iw_0_i_i_i_i_reg_635 <= ap_const_lv2_0;
            elsif (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_iw_0_i_i_i_i_reg_635 <= i_iw_fu_1146_p2;
            end if; 
        end if;
    end process;

    in_index_0_i_i_i_i145_reg_690_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                in_index_0_i_i_i_i145_reg_690 <= select_ln148_reg_2620;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                in_index_0_i_i_i_i145_reg_690 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten146_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                indvar_flatten146_reg_586 <= add_ln79_reg_2179;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten146_reg_586 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_761)) then
                if ((icmp_ln313_fu_1990_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_1990_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_1995_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1052)) then
                if ((icmp_ln317_fu_2036_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_2036_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_2041_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_761)) then
                if ((icmp_ln313_fu_1990_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_1990_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_2011_p3;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_0_0_V_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((trunc_ln246_reg_2193 = ap_const_lv2_0)) then 
                    shift_buffer_0_0_V_reg_622 <= line_buffer_Array_V_1_1_0_q0;
                elsif ((trunc_ln246_reg_2193 = ap_const_lv2_1)) then 
                    shift_buffer_0_0_V_reg_622 <= line_buffer_Array_V_1_1_1_q0;
                elsif ((trunc_ln246_reg_2193 = ap_const_lv2_2)) then 
                    shift_buffer_0_0_V_reg_622 <= line_buffer_Array_V_1_1_2_q0;
                elsif ((trunc_ln246_reg_2193 = ap_const_lv2_3)) then 
                    shift_buffer_0_0_V_reg_622 <= line_buffer_Array_V_1_1_3_q0;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_1_0_V_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((trunc_ln246_fu_1006_p1 = ap_const_lv2_0)) then 
                    shift_buffer_1_0_V_reg_609 <= line_buffer_Array_V_1_0_0_q0;
                elsif ((trunc_ln246_fu_1006_p1 = ap_const_lv2_1)) then 
                    shift_buffer_1_0_V_reg_609 <= line_buffer_Array_V_1_0_1_q0;
                elsif ((trunc_ln246_fu_1006_p1 = ap_const_lv2_2)) then 
                    shift_buffer_1_0_V_reg_609 <= line_buffer_Array_V_1_0_2_q0;
                elsif ((trunc_ln246_fu_1006_p1 = ap_const_lv2_3)) then 
                    shift_buffer_1_0_V_reg_609 <= line_buffer_Array_V_1_0_3_q0;
                end if;
            end if; 
        end if;
    end process;

    tmp_data_0_V_6143_reg_778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_0_V_6143_reg_778 <= acc_1_V_5_fu_1875_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_0_V_6143_reg_778 <= ap_const_lv16_FF29;
            end if; 
        end if;
    end process;

    tmp_data_1_V_6141_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_1_V_6141_reg_789 <= acc_1_V_fu_1868_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_1_V_6141_reg_789 <= ap_const_lv16_FE0C;
            end if; 
        end if;
    end process;

    tmp_data_2_V_6139_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_2_V_6139_reg_800 <= acc_3_V_5_fu_1911_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_2_V_6139_reg_800 <= ap_const_lv16_FE39;
            end if; 
        end if;
    end process;

    tmp_data_3_V_6137_reg_811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_3_V_6137_reg_811 <= acc_3_V_fu_1904_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_3_V_6137_reg_811 <= ap_const_lv16_138;
            end if; 
        end if;
    end process;

    tmp_data_4_V_4135_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_4_V_4135_reg_822 <= acc_5_V_5_fu_1947_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_4_V_4135_reg_822 <= ap_const_lv16_80;
            end if; 
        end if;
    end process;

    tmp_data_5_V_4133_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_5_V_4133_reg_833 <= acc_5_V_fu_1940_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_5_V_4133_reg_833 <= ap_const_lv16_FF7D;
            end if; 
        end if;
    end process;

    tmp_data_6_V_4131_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_6_V_4131_reg_844 <= acc_7_V_5_fu_1983_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_6_V_4131_reg_844 <= ap_const_lv16_1C9;
            end if; 
        end if;
    end process;

    tmp_data_7_V_4129_reg_855_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                tmp_data_7_V_4129_reg_855 <= acc_7_V_fu_1976_p3;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_7_V_4129_reg_855 <= ap_const_lv16_128;
            end if; 
        end if;
    end process;

    w_index144_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln129_reg_2396 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                w_index144_reg_679 <= w_index_reg_2386;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                w_index144_reg_679 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                acc_1_V_5_reg_2651 <= acc_1_V_5_fu_1875_p3;
                acc_1_V_reg_2645 <= acc_1_V_fu_1868_p3;
                acc_3_V_5_reg_2663 <= acc_3_V_5_fu_1911_p3;
                acc_3_V_reg_2657 <= acc_3_V_fu_1904_p3;
                acc_5_V_5_reg_2675 <= acc_5_V_5_fu_1947_p3;
                acc_5_V_reg_2669 <= acc_5_V_fu_1940_p3;
                acc_7_V_5_reg_2687 <= acc_7_V_5_fu_1983_p3;
                acc_7_V_reg_2681 <= acc_7_V_fu_1976_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln79_reg_2179 <= add_ln79_fu_988_p2;
                tmp_data_0_V_reg_2155 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_2161 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_2167 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_2173 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                and_ln289_2_reg_2377 <= and_ln289_2_fu_1696_p2;
                icmp_ln289_1_reg_2360 <= icmp_ln289_1_fu_1638_p2;
                icmp_ln289_reg_2350 <= icmp_ln289_fu_1628_p2;
                pX_2_load_reg_2371 <= pX_2;
                pY_2_load_reg_2365 <= pY_2;
                sX_2_load_reg_2345 <= sX_2;
                sY_2_load_reg_2355 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter1_UnifiedRetVal_i_i_reg_701 <= ap_phi_reg_pp1_iter0_UnifiedRetVal_i_i_reg_701;
                w_index_reg_2386 <= w_index_fu_1708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_ic_reg_2188 <= i_ic_fu_1000_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln129_reg_2396 <= icmp_ln129_fu_1714_p2;
                icmp_ln129_reg_2396_pp1_iter1_reg <= icmp_ln129_reg_2396;
                out_index_reg_2400 <= outidx1_q0;
                tmp_11_reg_2605 <= w5_V_q0(31 downto 16);
                tmp_12_reg_2610 <= w5_V_q0(47 downto 32);
                tmp_13_reg_2615 <= w5_V_q0(59 downto 48);
                trunc_ln139_2_reg_2600 <= trunc_ln139_2_fu_1772_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln129_reg_2396_pp1_iter2_reg <= icmp_ln129_reg_2396_pp1_iter1_reg;
                mul_ln1118_5_reg_2630 <= mul_ln1118_5_fu_2089_p2;
                mul_ln1118_6_reg_2635 <= mul_ln1118_6_fu_2095_p2;
                mul_ln1118_7_reg_2640 <= mul_ln1118_7_fu_2101_p2;
                mul_ln1118_reg_2625 <= mul_ln1118_fu_2083_p2;
                out_index_reg_2400_pp1_iter2_reg <= out_index_reg_2400;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (icmp_ln203_fu_1164_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_0 <= select_ln203_fu_1170_p3;
                kernel_data_V_1_12 <= select_ln203_4_fu_1282_p3;
                kernel_data_V_1_13 <= select_ln203_5_fu_1301_p3;
                kernel_data_V_1_14 <= select_ln203_6_fu_1320_p3;
                kernel_data_V_1_15 <= select_ln203_7_fu_1339_p3;
                kernel_data_V_1_24 <= select_ln203_8_fu_1358_p3;
                kernel_data_V_1_25 <= select_ln203_9_fu_1377_p3;
                kernel_data_V_1_26 <= select_ln203_10_fu_1396_p3;
                kernel_data_V_1_27 <= select_ln203_11_fu_1415_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (icmp_ln203_1_fu_1202_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_1 <= select_ln203_1_fu_1189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_2) and (icmp_ln213_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_10 <= tmp_1_fu_1462_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_994_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                kernel_data_V_1_10_load_reg_2227 <= kernel_data_V_1_10;
                kernel_data_V_1_11_load_reg_2232 <= kernel_data_V_1_11;
                kernel_data_V_1_20_load_reg_2237 <= kernel_data_V_1_20;
                kernel_data_V_1_21_load_reg_2242 <= kernel_data_V_1_21;
                kernel_data_V_1_22_load_reg_2247 <= kernel_data_V_1_22;
                kernel_data_V_1_23_load_reg_2252 <= kernel_data_V_1_23;
                kernel_data_V_1_32_load_reg_2257 <= kernel_data_V_1_32;
                kernel_data_V_1_33_load_reg_2262 <= kernel_data_V_1_33;
                kernel_data_V_1_34_load_reg_2267 <= kernel_data_V_1_34;
                kernel_data_V_1_35_load_reg_2272 <= kernel_data_V_1_35;
                kernel_data_V_1_8_load_reg_2217 <= kernel_data_V_1_8;
                kernel_data_V_1_9_load_reg_2222 <= kernel_data_V_1_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_0)) and (icmp_ln213_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_11 <= tmp_1_fu_1462_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_fu_1164_p2 = ap_const_lv1_0) and (icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_16 <= select_ln203_4_fu_1282_p3;
                kernel_data_V_1_17 <= select_ln203_5_fu_1301_p3;
                kernel_data_V_1_18 <= select_ln203_6_fu_1320_p3;
                kernel_data_V_1_19 <= select_ln203_7_fu_1339_p3;
                kernel_data_V_1_28 <= select_ln203_8_fu_1358_p3;
                kernel_data_V_1_29 <= select_ln203_9_fu_1377_p3;
                kernel_data_V_1_30 <= select_ln203_10_fu_1396_p3;
                kernel_data_V_1_31 <= select_ln203_11_fu_1415_p3;
                kernel_data_V_1_4 <= select_ln203_fu_1170_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (icmp_ln203_2_fu_1233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_2 <= select_ln203_2_fu_1220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_0) and (icmp_ln213_1_fu_1500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_20 <= tmp_2_fu_1528_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_1) and (icmp_ln213_1_fu_1500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_21 <= tmp_2_fu_1528_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_2) and (icmp_ln213_1_fu_1500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_22 <= tmp_2_fu_1528_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 = ap_const_lv3_0)) and (icmp_ln213_1_fu_1500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_23 <= tmp_2_fu_1528_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (icmp_ln203_3_fu_1264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_3 <= select_ln203_3_fu_1251_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_1592_p3 = ap_const_lv6_20) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_32 <= tmp_3_fu_1582_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_1592_p3 = ap_const_lv6_21) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_33 <= tmp_3_fu_1582_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_1592_p3 = ap_const_lv6_22) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_34 <= tmp_3_fu_1582_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((or_ln203_2_fu_1592_p3 = ap_const_lv6_22)) and not((or_ln203_2_fu_1592_p3 = ap_const_lv6_21)) and not((or_ln203_2_fu_1592_p3 = ap_const_lv6_20)) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_35 <= tmp_3_fu_1582_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_1_fu_1202_p2 = ap_const_lv1_0) and (icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_5 <= select_ln203_1_fu_1189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_2_fu_1233_p2 = ap_const_lv1_0) and (icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_6 <= select_ln203_2_fu_1220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (icmp_ln203_3_fu_1264_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_7 <= select_ln203_3_fu_1251_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_0) and (icmp_ln213_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_8 <= tmp_1_fu_1462_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 = ap_const_lv3_1) and (icmp_ln213_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_9 <= tmp_1_fu_1462_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln313_fu_1990_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_869_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                select_ln148_reg_2620 <= select_ln148_fu_1818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_1_fu_508 <= shift_buffer_0_0_V_reg_622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_2_fu_512 <= shift_buffer_0_0_V_reg_622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_3_fu_516 <= shift_buffer_0_0_V_reg_622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_fu_504 <= shift_buffer_0_0_V_reg_622;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_1_fu_492 <= shift_buffer_1_0_V_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_2_fu_496 <= shift_buffer_1_0_V_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_3_fu_500 <= shift_buffer_1_0_V_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_2193 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_fu_488 <= shift_buffer_1_0_V_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln246_reg_2193 <= trunc_ln246_fu_1006_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op42, icmp_ln241_fu_994_p2, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln213_2_fu_1566_p2, ap_CS_fsm_state10, and_ln289_2_fu_1696_p2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, io_acc_block_signal_op437, icmp_ln79_fu_2077_p2, icmp_ln194_fu_1140_p2, icmp_ln213_fu_1434_p2, icmp_ln213_1_fu_1500_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln241_fu_994_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln194_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln213_fu_1434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln213_1_fu_1500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_lv1_1 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_lv1_0 = and_ln289_2_fu_1696_p2) and (icmp_ln213_2_fu_1566_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    DataIn_V_assign_fu_1010_p5 <= i_ic4_0_i_i_i_reg_598(2 - 1 downto 0);
    acc_0_V_fu_1862_p2 <= std_logic_vector(unsigned(select_ln1265_fu_1855_p3) + unsigned(trunc_ln4_fu_1846_p4));
    acc_1_V_5_fu_1875_p3 <= 
        tmp_data_0_V_6143_reg_778 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        acc_0_V_fu_1862_p2;
    acc_1_V_fu_1868_p3 <= 
        acc_0_V_fu_1862_p2 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_1_V_6141_reg_789;
    acc_2_V_fu_1898_p2 <= std_logic_vector(unsigned(select_ln1265_5_fu_1891_p3) + unsigned(trunc_ln708_5_fu_1882_p4));
    acc_3_V_5_fu_1911_p3 <= 
        tmp_data_2_V_6139_reg_800 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        acc_2_V_fu_1898_p2;
    acc_3_V_fu_1904_p3 <= 
        acc_2_V_fu_1898_p2 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_3_V_6137_reg_811;
    acc_4_V_fu_1934_p2 <= std_logic_vector(unsigned(select_ln1265_6_fu_1927_p3) + unsigned(trunc_ln708_6_fu_1918_p4));
    acc_5_V_5_fu_1947_p3 <= 
        tmp_data_4_V_4135_reg_822 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        acc_4_V_fu_1934_p2;
    acc_5_V_fu_1940_p3 <= 
        acc_4_V_fu_1934_p2 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_5_V_4133_reg_833;
    acc_6_V_fu_1970_p2 <= std_logic_vector(unsigned(select_ln1265_7_fu_1963_p3) + unsigned(trunc_ln708_7_fu_1954_p4));
    acc_7_V_5_fu_1983_p3 <= 
        tmp_data_6_V_4131_reg_844 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        acc_6_V_fu_1970_p2;
    acc_7_V_fu_1976_p3 <= 
        acc_6_V_fu_1970_p2 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_7_V_4129_reg_855;
    add_ln213_1_fu_1506_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_1_reg_657) + unsigned(ap_const_lv3_1));
    add_ln213_2_fu_1572_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_2_reg_668) + unsigned(ap_const_lv3_1));
    add_ln213_fu_1440_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_0_reg_646) + unsigned(ap_const_lv3_1));
    add_ln321_fu_2041_p2 <= std_logic_vector(unsigned(pY_2_load_reg_2365) + unsigned(ap_const_lv32_1));
    add_ln323_fu_2052_p2 <= std_logic_vector(unsigned(sY_2_load_reg_2355) + unsigned(ap_const_lv32_1));
    add_ln326_fu_1995_p2 <= std_logic_vector(unsigned(pX_2_load_reg_2371) + unsigned(ap_const_lv32_1));
    add_ln328_fu_2006_p2 <= std_logic_vector(unsigned(sX_2_load_reg_2345) + unsigned(ap_const_lv32_1));
    add_ln79_fu_988_p2 <= std_logic_vector(unsigned(indvar_flatten146_reg_586) + unsigned(ap_const_lv6_1));
    and_ln289_1_fu_1690_p2 <= (icmp_ln289_3_fu_1678_p2 and icmp_ln289_2_fu_1658_p2);
    and_ln289_2_fu_1696_p2 <= (and_ln289_fu_1684_p2 and and_ln289_1_fu_1690_p2);
    and_ln289_fu_1684_p2 <= (icmp_ln289_fu_1628_p2 and icmp_ln289_1_fu_1638_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state15 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state11_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_assign_proc : process(and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
                ap_block_state15 <= ((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377));
    end process;


    ap_condition_1052_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437, icmp_ln313_fu_1990_p2)
    begin
                ap_condition_1052 <= (not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln313_fu_1990_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15));
    end process;


    ap_condition_449_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_449 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_699_assign_proc : process(trunc_ln139_fu_1720_p1)
    begin
                ap_condition_699 <= ((trunc_ln139_fu_1720_p1 = ap_const_lv6_23) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_24) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_25) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_26) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_27) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_28) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_29) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2A) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2B) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2C) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2D) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2E) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_2F) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_30) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_31) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_32) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_33) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_34) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_35) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_36) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_37) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_38) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_39) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3A) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3B) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3C) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3D) or ((trunc_ln139_fu_1720_p1 = ap_const_lv6_3E) or (trunc_ln139_fu_1720_p1 = ap_const_lv6_3F)))))))))))))))))))))))))))));
    end process;


    ap_condition_761_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
                ap_condition_761 <= (not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_logic_1 = ap_CS_fsm_state15));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437, icmp_ln79_fu_2077_p2)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_650_p4 <= i_ic2_0_i_i_i_i_0_reg_646;
    ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_661_p4 <= i_ic2_0_i_i_i_i_1_reg_657;

    ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4_assign_proc : process(in_index_0_i_i_i_i145_reg_690, icmp_ln129_reg_2396_pp1_iter1_reg, select_ln148_reg_2620, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln129_reg_2396_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4 <= select_ln148_reg_2620;
        else 
            ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4 <= in_index_0_i_i_i_i145_reg_690;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_869_p4_assign_proc : process(ap_CS_fsm_state15, select_ln323_fu_2057_p3, icmp_ln313_fu_1990_p2, icmp_ln317_fu_2036_p2)
    begin
        if (((icmp_ln313_fu_1990_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
            if ((icmp_ln317_fu_2036_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_869_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_2036_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_869_p4 <= select_ln323_fu_2057_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_869_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_869_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_w_index144_phi_fu_683_p4_assign_proc : process(w_index144_reg_679, ap_CS_fsm_pp1_stage0, w_index_reg_2386, icmp_ln129_reg_2396, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln129_reg_2396 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_w_index144_phi_fu_683_p4 <= w_index_reg_2386;
        else 
            ap_phi_mux_w_index144_phi_fu_683_p4 <= w_index144_reg_679;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_UnifiedRetVal_i_i_reg_701 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op42)
    begin
        if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op42)
    begin
        if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op42)
    begin
        if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op42)
    begin
        if (((io_acc_block_signal_op42 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_ic_fu_1000_p2 <= std_logic_vector(unsigned(i_ic4_0_i_i_i_reg_598) + unsigned(ap_const_lv3_1));
    i_iw_fu_1146_p2 <= std_logic_vector(unsigned(i_iw_0_i_i_i_i_reg_635) + unsigned(ap_const_lv2_1));
    icmp_ln129_fu_1714_p2 <= "1" when (ap_phi_mux_w_index144_phi_fu_683_p4 = ap_const_lv7_47) else "0";
    icmp_ln148_fu_1812_p2 <= "1" when (signed(in_index_fu_1806_p2) > signed(ap_const_lv32_23)) else "0";
    icmp_ln194_fu_1140_p2 <= "1" when (i_iw_0_i_i_i_i_reg_635 = ap_const_lv2_2) else "0";
    icmp_ln203_1_fu_1202_p2 <= "1" when (or_ln203_fu_1196_p2 = ap_const_lv3_1) else "0";
    icmp_ln203_2_fu_1233_p2 <= "1" when (or_ln203_1_fu_1227_p2 = ap_const_lv3_2) else "0";
    icmp_ln203_3_fu_1264_p2 <= "1" when (or_ln203_3_fu_1258_p2 = ap_const_lv3_3) else "0";
    icmp_ln203_fu_1164_p2 <= "1" when (shl_ln_fu_1156_p3 = ap_const_lv3_0) else "0";
    icmp_ln213_1_fu_1500_p2 <= "1" when (i_ic2_0_i_i_i_i_1_reg_657 = ap_const_lv3_4) else "0";
    icmp_ln213_2_fu_1566_p2 <= "1" when (i_ic2_0_i_i_i_i_2_reg_668 = ap_const_lv3_4) else "0";
    icmp_ln213_fu_1434_p2 <= "1" when (i_ic2_0_i_i_i_i_0_reg_646 = ap_const_lv3_4) else "0";
    icmp_ln241_fu_994_p2 <= "1" when (i_ic4_0_i_i_i_reg_598 = ap_const_lv3_4) else "0";
    icmp_ln289_1_fu_1638_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_1658_p2 <= "1" when (signed(tmp_fu_1648_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_1678_p2 <= "1" when (signed(tmp_10_fu_1668_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_1628_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_1990_p2 <= "1" when (pX_2_load_reg_2371 = ap_const_lv32_5) else "0";
    icmp_ln317_fu_2036_p2 <= "1" when (pY_2_load_reg_2365 = ap_const_lv32_5) else "0";
    icmp_ln79_fu_2077_p2 <= "1" when (indvar_flatten146_reg_586 = ap_const_lv6_23) else "0";
    in_index_fu_1806_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437, icmp_ln79_fu_2077_p2)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (icmp_ln79_fu_2077_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op42 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    io_acc_block_signal_op437 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_1_0_0_ce0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_0) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_0_we0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_0) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_ce0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_1) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_we0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_1) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_ce0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_2) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_we0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_2) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_ce0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_3) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_we0_assign_proc : process(icmp_ln241_fu_994_p2, ap_CS_fsm_state3, trunc_ln246_fu_1006_p1)
    begin
        if (((trunc_ln246_fu_1006_p1 = ap_const_lv2_3) and (icmp_ln241_fu_994_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_ce0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_we0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_ce0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_we0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_ce0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_we0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_ce0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_we0_assign_proc : process(trunc_ln246_reg_2193, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_2193 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_5_fu_2089_p1 <= sext_ln1116_fu_1826_p1(16 - 1 downto 0);
    mul_ln1118_6_fu_2095_p1 <= sext_ln1116_fu_1826_p1(16 - 1 downto 0);
    mul_ln1118_fu_2083_p1 <= sext_ln1116_fu_1826_p1(16 - 1 downto 0);
    or_ln203_1_fu_1227_p2 <= (shl_ln_fu_1156_p3 or ap_const_lv3_2);
    or_ln203_2_fu_1592_p3 <= (ap_const_lv3_4 & i_ic2_0_i_i_i_i_2_reg_668);
    or_ln203_3_fu_1258_p2 <= (shl_ln_fu_1156_p3 or ap_const_lv3_3);
    or_ln203_fu_1196_p2 <= (shl_ln_fu_1156_p3 or ap_const_lv3_1);
    outidx1_address0 <= zext_ln133_fu_1702_p1(7 - 1 downto 0);

    outidx1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            outidx1_ce0 <= ap_const_logic_1;
        else 
            outidx1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= acc_1_V_5_reg_2651;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= acc_1_V_reg_2645;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= acc_3_V_5_reg_2663;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= acc_3_V_reg_2657;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= acc_5_V_5_reg_2675;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= acc_5_V_reg_2669;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= acc_7_V_5_reg_2687;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_2377)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= acc_7_V_reg_2681;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_2377, io_acc_block_signal_op437)
    begin
        if ((not(((io_acc_block_signal_op437 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_2377))) and (ap_const_lv1_1 = and_ln289_2_reg_2377) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1265_5_fu_1891_p3 <= 
        tmp_data_3_V_6137_reg_811 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_2_V_6139_reg_800;
    select_ln1265_6_fu_1927_p3 <= 
        tmp_data_5_V_4133_reg_833 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_4_V_4135_reg_822;
    select_ln1265_7_fu_1963_p3 <= 
        tmp_data_7_V_4129_reg_855 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_6_V_4131_reg_844;
    select_ln1265_fu_1855_p3 <= 
        tmp_data_1_V_6141_reg_789 when (out_index_reg_2400_pp1_iter2_reg(0) = '1') else 
        tmp_data_0_V_6143_reg_778;
    select_ln148_fu_1818_p3 <= 
        ap_const_lv32_0 when (icmp_ln148_fu_1812_p2(0) = '1') else 
        in_index_fu_1806_p2;
    select_ln203_10_fu_1396_p3 <= 
        kernel_data_V_1_30 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_34_load_reg_2267;
    select_ln203_11_fu_1415_p3 <= 
        kernel_data_V_1_31 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_35_load_reg_2272;
    select_ln203_1_fu_1189_p3 <= 
        kernel_data_V_1_5 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_9_load_reg_2222;
    select_ln203_2_fu_1220_p3 <= 
        kernel_data_V_1_6 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_10_load_reg_2227;
    select_ln203_3_fu_1251_p3 <= 
        kernel_data_V_1_7 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_11_load_reg_2232;
    select_ln203_4_fu_1282_p3 <= 
        kernel_data_V_1_16 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_20_load_reg_2237;
    select_ln203_5_fu_1301_p3 <= 
        kernel_data_V_1_17 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_21_load_reg_2242;
    select_ln203_6_fu_1320_p3 <= 
        kernel_data_V_1_18 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_22_load_reg_2247;
    select_ln203_7_fu_1339_p3 <= 
        kernel_data_V_1_19 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_23_load_reg_2252;
    select_ln203_8_fu_1358_p3 <= 
        kernel_data_V_1_28 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_32_load_reg_2257;
    select_ln203_9_fu_1377_p3 <= 
        kernel_data_V_1_29 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_33_load_reg_2262;
    select_ln203_fu_1170_p3 <= 
        kernel_data_V_1_4 when (icmp_ln203_fu_1164_p2(0) = '1') else 
        kernel_data_V_1_8_load_reg_2217;
    select_ln323_fu_2057_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_reg_2360(0) = '1') else 
        add_ln323_fu_2052_p2;
    select_ln328_fu_2011_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_reg_2350(0) = '1') else 
        add_ln328_fu_2006_p2;
        sext_ln1116_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp1_iter2_UnifiedRetVal_i_i_reg_701),32));

    shl_ln_fu_1156_p3 <= (trunc_ln201_fu_1152_p1 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_1668_p4 <= pX_2(31 downto 1);
    tmp_1_fu_1462_p5 <= i_ic2_0_i_i_i_i_0_reg_646(2 - 1 downto 0);
    tmp_2_fu_1528_p5 <= i_ic2_0_i_i_i_i_1_reg_657(2 - 1 downto 0);
    tmp_3_fu_1582_p5 <= i_ic2_0_i_i_i_i_2_reg_668(2 - 1 downto 0);
    tmp_fu_1648_p4 <= pY_2(31 downto 1);
    trunc_ln139_2_fu_1772_p1 <= w5_V_q0(16 - 1 downto 0);
    trunc_ln139_fu_1720_p1 <= ap_phi_mux_in_index_0_i_i_i_i145_phi_fu_694_p4(6 - 1 downto 0);
    trunc_ln201_fu_1152_p1 <= i_iw_0_i_i_i_i_reg_635(1 - 1 downto 0);
    trunc_ln246_fu_1006_p1 <= i_ic4_0_i_i_i_reg_598(2 - 1 downto 0);
    trunc_ln4_fu_1846_p4 <= mul_ln1118_reg_2625(25 downto 10);
    trunc_ln708_5_fu_1882_p4 <= mul_ln1118_5_reg_2630(25 downto 10);
    trunc_ln708_6_fu_1918_p4 <= mul_ln1118_6_reg_2635(25 downto 10);
    trunc_ln708_7_fu_1954_p4 <= mul_ln1118_7_reg_2640(25 downto 10);
    w5_V_address0 <= zext_ln133_fu_1702_p1(7 - 1 downto 0);

    w5_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            w5_V_ce0 <= ap_const_logic_1;
        else 
            w5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_1708_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(ap_phi_mux_w_index144_phi_fu_683_p4));
    zext_ln133_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index144_phi_fu_683_p4),64));
end behav;
