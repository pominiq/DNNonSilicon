// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__
#define __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 60;
  static const unsigned AddressRange = 72;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram) {
        ram[0] = "0b000111100101111111101010010100000000101111011111111111010100";
        ram[1] = "0b111011111011111111110100000100000001010100101111111110110001";
        ram[2] = "0b110111000111111111111110001000000000100001011111111011000101";
        ram[3] = "0b101101000000000000000001001100000000011001101111111011101100";
        ram[4] = "0b000100010010000000100011001100000000111110010000000010001000";
        ram[5] = "0b000010011100000000010000110100000001101111000000000010100010";
        ram[6] = "0b000000011000000000000010000000000001000011111111111111001100";
        ram[7] = "0b111111100101111111010110100111111111111110111111111011101101";
        ram[8] = "0b111101010010000000000100000100000000011000001111111011010100";
        ram[9] = "0b111110010111000000011000101000000001110011110000000001110110";
        ram[10] = "0b000101000100111111110011001000000000100110010000000001011010";
        ram[11] = "0b110101110111111111101011010111111110001000101111111011110010";
        ram[12] = "0b001011100000000000001000100011111110000111110000000010100111";
        ram[13] = "0b000010000000111111011011010111111100101101110000000010110111";
        ram[14] = "0b000010011001111111101010010000000000111010100000000010011111";
        ram[15] = "0b111110000100111111100111000100000001100110001111111001111111";
        ram[16] = "0b110101111110000000010101111011111111111101001111111100100010";
        ram[17] = "0b000000001000000000010000000100000001000011010000000101110110";
        ram[18] = "0b111110000001111111110110110000000000110001101111111111101010";
        ram[19] = "0b010001101010111110100000111011111111111110010000000011011100";
        ram[20] = "0b110111000000111111011111001000000000001011011111111111000011";
        ram[21] = "0b111101010110111111110111010100000011011000010000000000101010";
        ram[22] = "0b111100000000111111101101011000000000110111010000000111110100";
        ram[23] = "0b000101110011000000000010001111111111001111110000001000100010";
        ram[24] = "0b000100011011000000010111111011111111010000100000000110010100";
        ram[25] = "0b000101110110000000001111100000000000110100010000000010000011";
        ram[26] = "0b000011010111111111111000011111111110011001011111111100111111";
        ram[27] = "0b000011000111111111000011111111111111111011111111111010110011";
        ram[28] = "0b000000010011111111111010111100000000010001110000000010000001";
        ram[29] = "0b000010001001000000110101100100000000010000010000000000000000";
        ram[30] = "0b111110001101111111111100100011111111111001100000001000100100";
        ram[31] = "0b001000101100000000000010000011111110100110110000010000001000";
        ram[32] = "0b111011100100000000011010101100000000000101100000000010100100";
        ram[33] = "0b000001111001111111110111011000000000011001110000000100000001";
        ram[34] = "0b111010100010000000001101111000000000101110110000001001011111";
        ram[35] = "0b000110001110000000000101011111111111101011000000001010010111";
        ram[36] = "0b000011011010111111111100011011111111011101011111111111011010";
        ram[37] = "0b000011111110000000010101001111111110110001001111111011010010";
        ram[38] = "0b000000010111000000000000110011111111101111111111111111000011";
        ram[39] = "0b111010100011111111111111010000000010011111010000000011000111";
        ram[40] = "0b111011101000111111111010101111111111001111000000000011010111";
        ram[41] = "0b111011111111000000010101100011111101100010010000000010100011";
        ram[42] = "0b111000100001111111110001011100000000001100000000001000111001";
        ram[43] = "0b001000001110111111010110111000000000110011110000001001010100";
        ram[44] = "0b111010100101111111111111101111111111000010000000000001101011";
        ram[45] = "0b111101000111111111111000010111111111100010001111111110001000";
        ram[46] = "0b111101010101000000000100100011111110111010100000001000011010";
        ram[47] = "0b111101010101000000001000001111111111010010000000001011001011";
        ram[48] = "0b111111001110000000001011001011111111011111011111111010101011";
        ram[49] = "0b111110100100000000001100001011111111011101010000000011100010";
        ram[50] = "0b000010100111000000000111011000000000011001010000000001011101";
        ram[51] = "0b001000011101111111110110100011111110110010110000001001100001";
        ram[52] = "0b000001011000000000000000000000000000010100001111111010001000";
        ram[53] = "0b001000001110000000000010000011111111000001111111111010001100";
        ram[54] = "0b000101100110000001000000010011111111111100111111111110011000";
        ram[55] = "0b001101110110000001000011001111111101100000110000001110001110";
        ram[56] = "0b111010010000000000000110110000000000001011001111111110001101";
        ram[57] = "0b000001111010111111100000011011111111101101111111111111001110";
        ram[58] = "0b110100110101000001001111000100000001001010101111111111110011";
        ram[59] = "0b110011111010000000101010011100000010000010000000000001001011";
        ram[60] = "0b111111000101111111110100100100000001000000000000000001100110";
        ram[61] = "0b111101011011111111110111011100000000000010110000000000101110";
        ram[62] = "0b111110111101111111110010000100000000000000010000001000000001";
        ram[63] = "0b001001001101111111101111100011111110111010010000000111101000";
        ram[64] = "0b001011000101111111110110011100000001111010000000001000001000";
        ram[65] = "0b111110110001111111111000000100000001111111011111111011111101";
        ram[66] = "0b000110110101111111101110110100000000011011110000000111111000";
        ram[67] = "0b000010111110000000100010100011111111111000010000000010100110";
        ram[68] = "0b111111001000111111111111110100000000001010001111111110111100";
        ram[69] = "0b000011101011000000000000110100000001001011001111111100110100";
        ram[70] = "0b111011011000111111011000110000000000011101011111111111100000";
        ram[71] = "0b001001100111000000010100100000000001001101011111110110010010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {


static const unsigned DataWidth = 60;
static const unsigned AddressRange = 72;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram* meminst;


SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {
meminst = new conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram("conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V() {
    delete meminst;
}


};//endmodule
#endif
