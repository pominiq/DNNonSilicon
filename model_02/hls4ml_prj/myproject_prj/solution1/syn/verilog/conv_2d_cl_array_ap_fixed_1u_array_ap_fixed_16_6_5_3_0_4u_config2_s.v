// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_TDATA,
        data_V_data_V_TVALID,
        data_V_data_V_TREADY,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_TDATA;
input   data_V_data_V_TVALID;
output   data_V_data_V_TREADY;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_TREADY;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] kernel_data_V_1143;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_2144;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_8;
reg   [31:0] sX_3;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
wire   [5:0] outidx2_address0;
reg    outidx2_ce0;
wire   [1:0] outidx2_q0;
reg   [15:0] kernel_data_V_0;
reg   [15:0] kernel_data_V_3145;
reg   [15:0] kernel_data_V_6;
wire   [5:0] w2_V_address0;
reg    w2_V_ce0;
wire   [11:0] w2_V_q0;
reg    line_buffer_Array_V_0_0_ce0;
reg    line_buffer_Array_V_0_0_we0;
wire   [15:0] line_buffer_Array_V_0_0_q0;
reg    line_buffer_Array_V_1142_0_ce0;
reg    line_buffer_Array_V_1142_0_we0;
wire   [15:0] line_buffer_Array_V_1142_0_q0;
reg    data_V_data_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state9;
reg   [0:0] and_ln289_4_reg_1074;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [5:0] w_index52_reg_283;
reg   [31:0] in_index_0_i_i_i_i53_reg_294;
reg   [15:0] tmp_data_0_V_751_reg_305;
reg   [15:0] tmp_data_1_V_749_reg_316;
reg   [15:0] tmp_data_2_V_747_reg_327;
reg   [15:0] tmp_data_3_V_745_reg_338;
reg   [15:0] tmp_data_3_V_reg_349;
reg   [15:0] tmp_data_2_V_reg_368;
reg   [15:0] tmp_data_1_V_reg_387;
reg   [15:0] tmp_data_0_V_2_reg_406;
reg   [15:0] tmp_data_0_V_reg_996;
reg   [15:0] DataOut_V_8_reg_1001;
reg   [15:0] DataOut_V_reg_1006;
reg   [15:0] kernel_data_V_2144_load_reg_1011;
reg   [15:0] kernel_data_V_5_load_reg_1016;
reg   [15:0] kernel_data_V_8_load_reg_1021;
wire   [9:0] add_ln79_fu_479_p2;
reg   [9:0] add_ln79_reg_1026;
wire   [1:0] i_iw_fu_491_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] sX_3_load_reg_1042;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln289_fu_577_p2;
reg   [0:0] icmp_ln289_reg_1047;
reg   [31:0] sY_3_load_reg_1052;
wire   [0:0] icmp_ln289_4_fu_587_p2;
reg   [0:0] icmp_ln289_4_reg_1057;
reg   [31:0] pY_3_load_reg_1062;
reg   [31:0] pX_3_load_reg_1068;
wire   [0:0] and_ln289_4_fu_645_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
wire    ap_block_state8_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
wire   [5:0] w_index_fu_657_p2;
reg   [5:0] w_index_reg_1088;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln129_fu_663_p2;
reg   [0:0] icmp_ln129_reg_1093;
reg   [0:0] icmp_ln129_reg_1093_pp1_iter1_reg;
reg   [0:0] icmp_ln129_reg_1093_pp1_iter2_reg;
reg   [1:0] out_index_reg_1097;
reg   [1:0] out_index_reg_1097_pp1_iter2_reg;
wire   [15:0] select_ln19_7_fu_831_p3;
reg  signed [15:0] select_ln19_7_reg_1102;
reg  signed [11:0] w2_V_load_reg_1107;
wire   [31:0] select_ln148_fu_851_p3;
reg   [31:0] select_ln148_reg_1112;
reg    ap_enable_reg_pp1_iter1;
reg   [15:0] trunc_ln6_reg_1117;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [9:0] indvar_flatten54_reg_260;
reg    ap_block_state1;
wire    io_acc_block_signal_op152;
reg    ap_block_state9;
wire   [0:0] icmp_ln79_fu_983_p2;
reg   [1:0] i_iw_0_i_i_i_i_reg_272;
wire   [0:0] icmp_ln194_fu_485_p2;
reg   [5:0] ap_phi_mux_w_index52_phi_fu_287_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_in_index_0_i_i_i_i53_phi_fu_298_p4;
reg   [15:0] ap_phi_mux_tmp_data_0_V_2_phi_fu_411_p8;
reg   [15:0] ap_phi_mux_tmp_data_1_V_phi_fu_392_p8;
reg   [15:0] ap_phi_mux_tmp_data_2_V_phi_fu_373_p8;
reg   [15:0] ap_phi_mux_tmp_data_3_V_phi_fu_354_p8;
wire   [15:0] acc_0_V_fu_887_p2;
wire   [15:0] ap_phi_reg_pp1_iter3_tmp_data_3_V_reg_349;
wire   [15:0] ap_phi_reg_pp1_iter3_tmp_data_2_V_reg_368;
wire   [15:0] ap_phi_reg_pp1_iter3_tmp_data_1_V_reg_387;
wire   [15:0] ap_phi_reg_pp1_iter3_tmp_data_0_V_2_reg_406;
wire   [31:0] select_ln323_fu_963_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_428_p4;
wire   [0:0] icmp_ln313_fu_896_p2;
wire   [0:0] icmp_ln317_fu_942_p2;
wire   [63:0] zext_ln133_fu_651_p1;
wire   [15:0] select_ln203_fu_501_p3;
wire   [0:0] trunc_ln201_fu_497_p1;
wire   [15:0] select_ln203_12_fu_520_p3;
wire   [15:0] select_ln203_13_fu_539_p3;
wire   [31:0] select_ln328_fu_917_p3;
wire   [31:0] add_ln321_fu_947_p2;
wire   [31:0] add_ln326_fu_901_p2;
wire   [30:0] tmp_fu_597_p4;
wire   [30:0] tmp_11_fu_617_p4;
wire   [0:0] icmp_ln289_5_fu_607_p2;
wire   [0:0] icmp_ln289_6_fu_627_p2;
wire   [0:0] and_ln289_3_fu_639_p2;
wire   [0:0] and_ln289_fu_633_p2;
wire   [3:0] trunc_ln139_fu_669_p1;
wire   [0:0] icmp_ln19_7_fu_727_p2;
wire   [0:0] icmp_ln19_6_fu_721_p2;
wire   [0:0] icmp_ln19_5_fu_715_p2;
wire   [0:0] icmp_ln19_4_fu_709_p2;
wire   [0:0] icmp_ln19_3_fu_703_p2;
wire   [0:0] icmp_ln19_2_fu_697_p2;
wire   [0:0] icmp_ln19_1_fu_691_p2;
wire   [0:0] icmp_ln19_fu_685_p2;
wire   [0:0] or_ln19_fu_741_p2;
wire   [15:0] select_ln19_fu_733_p3;
wire   [15:0] select_ln19_1_fu_747_p3;
wire   [0:0] or_ln19_1_fu_755_p2;
wire   [0:0] or_ln19_2_fu_769_p2;
wire   [15:0] select_ln19_2_fu_761_p3;
wire   [15:0] select_ln19_3_fu_775_p3;
wire   [0:0] or_ln19_3_fu_783_p2;
wire   [0:0] or_ln19_4_fu_797_p2;
wire   [15:0] select_ln19_4_fu_789_p3;
wire   [15:0] select_ln19_5_fu_803_p3;
wire   [0:0] or_ln19_5_fu_811_p2;
wire   [0:0] or_ln19_6_fu_825_p2;
wire   [15:0] select_ln19_6_fu_817_p3;
wire   [31:0] in_index_fu_839_p2;
wire   [0:0] icmp_ln148_fu_845_p2;
wire  signed [25:0] r_V_fu_989_p2;
wire   [15:0] tmp_16_fu_874_p6;
wire   [31:0] add_ln328_fu_912_p2;
wire   [31:0] add_ln323_fu_958_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_data_V_data_V_U_apdone_blk;
wire   [15:0] data_V_data_V_TDATA_int;
wire    data_V_data_V_TVALID_int;
reg    data_V_data_V_TREADY_int;
wire    regslice_both_data_V_data_V_U_ack_in;
reg    ap_condition_254;
reg    ap_condition_370;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_1143 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_2144 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 sX_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 kernel_data_V_0 = 16'd0;
#0 kernel_data_V_3145 = 16'd0;
#0 kernel_data_V_6 = 16'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_outidx2 #(
    .DataWidth( 2 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
outidx2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx2_address0),
    .ce0(outidx2_ce0),
    .q0(outidx2_q0)
);

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_w2_V #(
    .DataWidth( 12 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb #(
    .DataWidth( 16 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd27),
    .ce0(line_buffer_Array_V_0_0_ce0),
    .we0(line_buffer_Array_V_0_0_we0),
    .d0(data_V_data_V_TDATA_int),
    .q0(line_buffer_Array_V_0_0_q0)
);

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb #(
    .DataWidth( 16 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1142_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd27),
    .ce0(line_buffer_Array_V_1142_0_ce0),
    .we0(line_buffer_Array_V_1142_0_we0),
    .d0(line_buffer_Array_V_0_0_q0),
    .q0(line_buffer_Array_V_1142_0_q0)
);

myproject_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
myproject_mux_42_16_1_1_U1(
    .din0(tmp_data_0_V_751_reg_305),
    .din1(tmp_data_1_V_749_reg_316),
    .din2(tmp_data_2_V_747_reg_327),
    .din3(tmp_data_3_V_745_reg_338),
    .din4(out_index_reg_1097_pp1_iter2_reg),
    .dout(tmp_16_fu_874_p6)
);

myproject_mul_mul_12s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_12s_16s_26_1_1_U2(
    .din0(w2_V_load_reg_1107),
    .din1(select_ln19_7_reg_1102),
    .dout(r_V_fu_989_p2)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_V_TDATA),
    .vld_in(data_V_data_V_TVALID),
    .ack_in(regslice_both_data_V_data_V_U_ack_in),
    .data_out(data_V_data_V_TDATA_int),
    .vld_out(data_V_data_V_TVALID_int),
    .ack_out(data_V_data_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_983_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln129_fu_663_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln194_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_iw_0_i_i_i_i_reg_272 <= i_iw_fu_491_p2;
    end else if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_iw_0_i_i_i_i_reg_272 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        in_index_0_i_i_i_i53_reg_294 <= select_ln148_reg_1112;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        in_index_0_i_i_i_i53_reg_294 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (icmp_ln79_fu_983_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        indvar_flatten54_reg_260 <= add_ln79_reg_1026;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten54_reg_260 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_254)) begin
        if ((icmp_ln313_fu_896_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_896_p2 == 1'd0)) begin
            pX_3 <= add_ln326_fu_901_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_370)) begin
        if ((icmp_ln317_fu_942_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln317_fu_942_p2 == 1'd0)) begin
            pY_3 <= add_ln321_fu_947_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_254)) begin
        if ((icmp_ln313_fu_896_p2 == 1'd1)) begin
            sX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_896_p2 == 1'd0)) begin
            sX_3 <= select_ln328_fu_917_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((out_index_reg_1097_pp1_iter2_reg == 2'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_2_reg_406 <= acc_0_V_fu_887_p2;
    end else if ((((out_index_reg_1097_pp1_iter2_reg == 2'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        tmp_data_0_V_2_reg_406 <= tmp_data_0_V_751_reg_305;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_2_reg_406 <= ap_phi_reg_pp1_iter3_tmp_data_0_V_2_reg_406;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_751_reg_305 <= ap_phi_mux_tmp_data_0_V_2_phi_fu_411_p8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        tmp_data_0_V_751_reg_305 <= 16'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_1_V_749_reg_316 <= ap_phi_mux_tmp_data_1_V_phi_fu_392_p8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        tmp_data_1_V_749_reg_316 <= 16'd65106;
    end
end

always @ (posedge ap_clk) begin
    if (((out_index_reg_1097_pp1_iter2_reg == 2'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_1_V_reg_387 <= acc_0_V_fu_887_p2;
    end else if ((((out_index_reg_1097_pp1_iter2_reg == 2'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        tmp_data_1_V_reg_387 <= tmp_data_1_V_749_reg_316;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_1_V_reg_387 <= ap_phi_reg_pp1_iter3_tmp_data_1_V_reg_387;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_2_V_747_reg_327 <= ap_phi_mux_tmp_data_2_V_phi_fu_373_p8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        tmp_data_2_V_747_reg_327 <= 16'd65521;
    end
end

always @ (posedge ap_clk) begin
    if (((out_index_reg_1097_pp1_iter2_reg == 2'd2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_2_V_reg_368 <= acc_0_V_fu_887_p2;
    end else if ((((out_index_reg_1097_pp1_iter2_reg == 2'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        tmp_data_2_V_reg_368 <= tmp_data_2_V_747_reg_327;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_2_V_reg_368 <= ap_phi_reg_pp1_iter3_tmp_data_2_V_reg_368;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_3_V_745_reg_338 <= ap_phi_mux_tmp_data_3_V_phi_fu_354_p8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        tmp_data_3_V_745_reg_338 <= 16'd65383;
    end
end

always @ (posedge ap_clk) begin
    if ((((out_index_reg_1097_pp1_iter2_reg == 2'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((out_index_reg_1097_pp1_iter2_reg == 2'd2) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        tmp_data_3_V_reg_349 <= tmp_data_3_V_745_reg_338;
    end else if (((out_index_reg_1097_pp1_iter2_reg == 2'd3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_3_V_reg_349 <= acc_0_V_fu_887_p2;
    end else if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_3_V_reg_349 <= ap_phi_reg_pp1_iter3_tmp_data_3_V_reg_349;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_reg_1093 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w_index52_reg_283 <= w_index_reg_1088;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
        w_index52_reg_283 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        DataOut_V_8_reg_1001 <= line_buffer_Array_V_0_0_q0;
        DataOut_V_reg_1006 <= line_buffer_Array_V_1142_0_q0;
        add_ln79_reg_1026 <= add_ln79_fu_479_p2;
        kernel_data_V_2144_load_reg_1011 <= kernel_data_V_2144;
        kernel_data_V_5_load_reg_1016 <= kernel_data_V_5;
        kernel_data_V_8_load_reg_1021 <= kernel_data_V_8;
        tmp_data_0_V_reg_996 <= data_V_data_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln289_4_reg_1074 <= and_ln289_4_fu_645_p2;
        icmp_ln289_4_reg_1057 <= icmp_ln289_4_fu_587_p2;
        icmp_ln289_reg_1047 <= icmp_ln289_fu_577_p2;
        kernel_data_V_2144 <= DataOut_V_reg_1006;
        kernel_data_V_5 <= DataOut_V_8_reg_1001;
        kernel_data_V_8 <= tmp_data_0_V_reg_996;
        pX_3_load_reg_1068 <= pX_3;
        pY_3_load_reg_1062 <= pY_3;
        sX_3_load_reg_1042 <= sX_3;
        sY_3_load_reg_1052 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln129_reg_1093 <= icmp_ln129_fu_663_p2;
        icmp_ln129_reg_1093_pp1_iter1_reg <= icmp_ln129_reg_1093;
        out_index_reg_1097 <= outidx2_q0;
        select_ln19_7_reg_1102 <= select_ln19_7_fu_831_p3;
        w2_V_load_reg_1107 <= w2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln129_reg_1093_pp1_iter2_reg <= icmp_ln129_reg_1093_pp1_iter1_reg;
        out_index_reg_1097_pp1_iter2_reg <= out_index_reg_1097;
        trunc_ln6_reg_1117 <= {{r_V_fu_989_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln201_fu_497_p1 == 1'd0) & (icmp_ln194_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_0 <= select_ln203_fu_501_p3;
        kernel_data_V_3145 <= select_ln203_12_fu_520_p3;
        kernel_data_V_6 <= select_ln203_13_fu_539_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln194_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln201_fu_497_p1 == 1'd1))) begin
        kernel_data_V_1143 <= select_ln203_fu_501_p3;
        kernel_data_V_4 <= select_ln203_12_fu_520_p3;
        kernel_data_V_7 <= select_ln203_13_fu_539_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_896_p2 == 1'd1))) begin
        sY_3 <= ap_phi_mux_storemerge_i_i_phi_fu_428_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln148_reg_1112 <= select_ln148_fu_851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w_index_reg_1088 <= w_index_fu_657_p2;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_983_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln129_reg_1093_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_in_index_0_i_i_i_i53_phi_fu_298_p4 = select_ln148_reg_1112;
    end else begin
        ap_phi_mux_in_index_0_i_i_i_i53_phi_fu_298_p4 = in_index_0_i_i_i_i53_reg_294;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_896_p2 == 1'd1))) begin
        if ((icmp_ln317_fu_942_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_428_p4 = 32'd0;
        end else if ((icmp_ln317_fu_942_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_428_p4 = select_ln323_fu_963_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_428_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_428_p4 = 'bx;
    end
end

always @ (*) begin
    if ((out_index_reg_1097_pp1_iter2_reg == 2'd0)) begin
        ap_phi_mux_tmp_data_0_V_2_phi_fu_411_p8 = acc_0_V_fu_887_p2;
    end else if (((out_index_reg_1097_pp1_iter2_reg == 2'd1) | (out_index_reg_1097_pp1_iter2_reg == 2'd2) | (out_index_reg_1097_pp1_iter2_reg == 2'd3))) begin
        ap_phi_mux_tmp_data_0_V_2_phi_fu_411_p8 = tmp_data_0_V_751_reg_305;
    end else begin
        ap_phi_mux_tmp_data_0_V_2_phi_fu_411_p8 = ap_phi_reg_pp1_iter3_tmp_data_0_V_2_reg_406;
    end
end

always @ (*) begin
    if ((out_index_reg_1097_pp1_iter2_reg == 2'd1)) begin
        ap_phi_mux_tmp_data_1_V_phi_fu_392_p8 = acc_0_V_fu_887_p2;
    end else if (((out_index_reg_1097_pp1_iter2_reg == 2'd2) | (out_index_reg_1097_pp1_iter2_reg == 2'd3) | (out_index_reg_1097_pp1_iter2_reg == 2'd0))) begin
        ap_phi_mux_tmp_data_1_V_phi_fu_392_p8 = tmp_data_1_V_749_reg_316;
    end else begin
        ap_phi_mux_tmp_data_1_V_phi_fu_392_p8 = ap_phi_reg_pp1_iter3_tmp_data_1_V_reg_387;
    end
end

always @ (*) begin
    if ((out_index_reg_1097_pp1_iter2_reg == 2'd2)) begin
        ap_phi_mux_tmp_data_2_V_phi_fu_373_p8 = acc_0_V_fu_887_p2;
    end else if (((out_index_reg_1097_pp1_iter2_reg == 2'd1) | (out_index_reg_1097_pp1_iter2_reg == 2'd3) | (out_index_reg_1097_pp1_iter2_reg == 2'd0))) begin
        ap_phi_mux_tmp_data_2_V_phi_fu_373_p8 = tmp_data_2_V_747_reg_327;
    end else begin
        ap_phi_mux_tmp_data_2_V_phi_fu_373_p8 = ap_phi_reg_pp1_iter3_tmp_data_2_V_reg_368;
    end
end

always @ (*) begin
    if (((out_index_reg_1097_pp1_iter2_reg == 2'd1) | (out_index_reg_1097_pp1_iter2_reg == 2'd2) | (out_index_reg_1097_pp1_iter2_reg == 2'd0))) begin
        ap_phi_mux_tmp_data_3_V_phi_fu_354_p8 = tmp_data_3_V_745_reg_338;
    end else if ((out_index_reg_1097_pp1_iter2_reg == 2'd3)) begin
        ap_phi_mux_tmp_data_3_V_phi_fu_354_p8 = acc_0_V_fu_887_p2;
    end else begin
        ap_phi_mux_tmp_data_3_V_phi_fu_354_p8 = ap_phi_reg_pp1_iter3_tmp_data_3_V_reg_349;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln129_reg_1093 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_w_index52_phi_fu_287_p4 = w_index_reg_1088;
    end else begin
        ap_phi_mux_w_index52_phi_fu_287_p4 = w_index52_reg_283;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_TDATA_blk_n = data_V_data_V_TVALID_int;
    end else begin
        data_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_V_data_V_U_ack_in == 1'b1) & (data_V_data_V_TVALID == 1'b1))) begin
        data_V_data_V_TREADY = 1'b1;
    end else begin
        data_V_data_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_983_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_1142_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1142_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_1142_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1142_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        outidx2_ce0 = 1'b1;
    end else begin
        outidx2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1074))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln194_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_645_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_983_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (icmp_ln79_fu_983_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_887_p2 = (tmp_16_fu_874_p6 + trunc_ln6_reg_1117);

assign add_ln321_fu_947_p2 = (pY_3_load_reg_1062 + 32'd1);

assign add_ln323_fu_958_p2 = (sY_3_load_reg_1052 + 32'd1);

assign add_ln326_fu_901_p2 = (pX_3_load_reg_1068 + 32'd1);

assign add_ln328_fu_912_p2 = (sX_3_load_reg_1042 + 32'd1);

assign add_ln79_fu_479_p2 = (indvar_flatten54_reg_260 + 10'd1);

assign and_ln289_3_fu_639_p2 = (icmp_ln289_6_fu_627_p2 & icmp_ln289_5_fu_607_p2);

assign and_ln289_4_fu_645_p2 = (and_ln289_fu_633_p2 & and_ln289_3_fu_639_p2);

assign and_ln289_fu_633_p2 = (icmp_ln289_fu_577_p2 & icmp_ln289_4_fu_587_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = ((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074));
end

always @ (*) begin
    ap_condition_254 = (~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9));
end

always @ (*) begin
    ap_condition_370 = (~((io_acc_block_signal_op152 == 1'b0) & (1'd1 == and_ln289_4_reg_1074)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_896_p2 == 1'd1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter3_tmp_data_0_V_2_reg_406 = 'bx;

assign ap_phi_reg_pp1_iter3_tmp_data_1_V_reg_387 = 'bx;

assign ap_phi_reg_pp1_iter3_tmp_data_2_V_reg_368 = 'bx;

assign ap_phi_reg_pp1_iter3_tmp_data_3_V_reg_349 = 'bx;

assign ap_ready = internal_ap_ready;

assign i_iw_fu_491_p2 = (i_iw_0_i_i_i_i_reg_272 + 2'd1);

assign icmp_ln129_fu_663_p2 = ((ap_phi_mux_w_index52_phi_fu_287_p4 == 6'd35) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_845_p2 = (($signed(in_index_fu_839_p2) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_485_p2 = ((i_iw_0_i_i_i_i_reg_272 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_691_p2 = ((trunc_ln139_fu_669_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_697_p2 = ((trunc_ln139_fu_669_p1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_703_p2 = ((trunc_ln139_fu_669_p1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln19_4_fu_709_p2 = ((trunc_ln139_fu_669_p1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln19_5_fu_715_p2 = ((trunc_ln139_fu_669_p1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln19_6_fu_721_p2 = ((trunc_ln139_fu_669_p1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln19_7_fu_727_p2 = ((trunc_ln139_fu_669_p1 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_685_p2 = ((trunc_ln139_fu_669_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_4_fu_587_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_5_fu_607_p2 = (($signed(tmp_fu_597_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_6_fu_627_p2 = (($signed(tmp_11_fu_617_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_577_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_896_p2 = ((pX_3_load_reg_1068 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_942_p2 = ((pY_3_load_reg_1062 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_983_p2 = ((indvar_flatten54_reg_260 == 10'd783) ? 1'b1 : 1'b0);

assign in_index_fu_839_p2 = (ap_phi_mux_in_index_0_i_i_i_i53_phi_fu_298_p4 + 32'd1);

assign io_acc_block_signal_op152 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign or_ln19_1_fu_755_p2 = (icmp_ln19_5_fu_715_p2 | icmp_ln19_4_fu_709_p2);

assign or_ln19_2_fu_769_p2 = (icmp_ln19_3_fu_703_p2 | icmp_ln19_2_fu_697_p2);

assign or_ln19_3_fu_783_p2 = (icmp_ln19_fu_685_p2 | icmp_ln19_1_fu_691_p2);

assign or_ln19_4_fu_797_p2 = (or_ln19_fu_741_p2 | or_ln19_1_fu_755_p2);

assign or_ln19_5_fu_811_p2 = (or_ln19_3_fu_783_p2 | or_ln19_2_fu_769_p2);

assign or_ln19_6_fu_825_p2 = (or_ln19_5_fu_811_p2 | or_ln19_4_fu_797_p2);

assign or_ln19_fu_741_p2 = (icmp_ln19_7_fu_727_p2 | icmp_ln19_6_fu_721_p2);

assign outidx2_address0 = zext_ln133_fu_651_p1;

assign res_V_data_0_V_din = tmp_data_0_V_2_reg_406;

assign res_V_data_1_V_din = tmp_data_1_V_reg_387;

assign res_V_data_2_V_din = tmp_data_2_V_reg_368;

assign res_V_data_3_V_din = tmp_data_3_V_reg_349;

assign select_ln148_fu_851_p3 = ((icmp_ln148_fu_845_p2[0:0] === 1'b1) ? 32'd0 : in_index_fu_839_p2);

assign select_ln19_1_fu_747_p3 = ((icmp_ln19_5_fu_715_p2[0:0] === 1'b1) ? kernel_data_V_5 : kernel_data_V_4);

assign select_ln19_2_fu_761_p3 = ((icmp_ln19_3_fu_703_p2[0:0] === 1'b1) ? kernel_data_V_3145 : kernel_data_V_2144);

assign select_ln19_3_fu_775_p3 = ((icmp_ln19_1_fu_691_p2[0:0] === 1'b1) ? kernel_data_V_1143 : kernel_data_V_0);

assign select_ln19_4_fu_789_p3 = ((or_ln19_fu_741_p2[0:0] === 1'b1) ? select_ln19_fu_733_p3 : select_ln19_1_fu_747_p3);

assign select_ln19_5_fu_803_p3 = ((or_ln19_2_fu_769_p2[0:0] === 1'b1) ? select_ln19_2_fu_761_p3 : select_ln19_3_fu_775_p3);

assign select_ln19_6_fu_817_p3 = ((or_ln19_4_fu_797_p2[0:0] === 1'b1) ? select_ln19_4_fu_789_p3 : select_ln19_5_fu_803_p3);

assign select_ln19_7_fu_831_p3 = ((or_ln19_6_fu_825_p2[0:0] === 1'b1) ? select_ln19_6_fu_817_p3 : kernel_data_V_8);

assign select_ln19_fu_733_p3 = ((icmp_ln19_7_fu_727_p2[0:0] === 1'b1) ? kernel_data_V_7 : kernel_data_V_6);

assign select_ln203_12_fu_520_p3 = ((trunc_ln201_fu_497_p1[0:0] === 1'b1) ? kernel_data_V_5_load_reg_1016 : kernel_data_V_4);

assign select_ln203_13_fu_539_p3 = ((trunc_ln201_fu_497_p1[0:0] === 1'b1) ? kernel_data_V_8_load_reg_1021 : kernel_data_V_7);

assign select_ln203_fu_501_p3 = ((trunc_ln201_fu_497_p1[0:0] === 1'b1) ? kernel_data_V_2144_load_reg_1011 : kernel_data_V_1143);

assign select_ln323_fu_963_p3 = ((icmp_ln289_4_reg_1057[0:0] === 1'b1) ? 32'd2 : add_ln323_fu_958_p2);

assign select_ln328_fu_917_p3 = ((icmp_ln289_reg_1047[0:0] === 1'b1) ? 32'd2 : add_ln328_fu_912_p2);

assign start_out = real_start;

assign tmp_11_fu_617_p4 = {{pX_3[31:1]}};

assign tmp_fu_597_p4 = {{pY_3[31:1]}};

assign trunc_ln139_fu_669_p1 = ap_phi_mux_in_index_0_i_i_i_i53_phi_fu_298_p4[3:0];

assign trunc_ln201_fu_497_p1 = i_iw_0_i_i_i_i_reg_272[0:0];

assign w2_V_address0 = zext_ln133_fu_651_p1;

assign w_index_fu_657_p2 = (6'd1 + ap_phi_mux_w_index52_phi_fu_287_p4);

assign zext_ln133_fu_651_p1 = ap_phi_mux_w_index52_phi_fu_287_p4;

endmodule //conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s
