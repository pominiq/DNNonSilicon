// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__
#define __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 60;
  static const unsigned AddressRange = 72;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram) {
        ram[0] = "0b001101011001111111110110100000000000100111011111110110010000";
        ram[1] = "0b111110010101000000010101111111111110110101111111111101100101";
        ram[2] = "0b111001000110000000010010001011111111101010001111111101101000";
        ram[3] = "0b000011011011111111111100011000000001001011010000000011110010";
        ram[4] = "0b000100001111111111111010000000000000100000000000000011100111";
        ram[5] = "0b111010011101000000010100110011111110111101010000000111000000";
        ram[6] = "0b110101100010000000000100111011111111010111010000000111111011";
        ram[7] = "0b000101001000111111110111011000000000111000100000000010001010";
        ram[8] = "0b000010001011111111111100111111111110110000100000000100000111";
        ram[9] = "0b000100001110000000000000101011111111110001110000000011100011";
        ram[10] = "0b111010010000111111000010011100000000101110001111111110011001";
        ram[11] = "0b000101110000111111110001101011111110001100110000000001110100";
        ram[12] = "0b001000010101111111100100100111111111000111011111111001111100";
        ram[13] = "0b000001101100000000010111100000000000010001111111111011111110";
        ram[14] = "0b111111000010111111101011101111111101111111010000000100110110";
        ram[15] = "0b111011001010000000010101001111111111001101001111111101000000";
        ram[16] = "0b000100101110000000010100110111111100001010111111110000110001";
        ram[17] = "0b110110101010000000010000011000000000011010000000000000110111";
        ram[18] = "0b000000100011111111010011110000000000111001100000010000100100";
        ram[19] = "0b000100000100000000101101101011111110001010011111111111001101";
        ram[20] = "0b001110100011000000010010101011111110100001111111111111001110";
        ram[21] = "0b111100011111111111111101000111111111101011111111111101000000";
        ram[22] = "0b111010100001000000010010001000000001101010010000000010111111";
        ram[23] = "0b000101001111111111110000101011111100110100110000000101011111";
        ram[24] = "0b000011010001111111110111100011111111100110001111110101111010";
        ram[25] = "0b111011000010000000000010001000000001000101000000001001110010";
        ram[26] = "0b111101100101000000100101001011111101000111001111111101011111";
        ram[27] = "0b111011100011111111101101001100000000101010001111111100111100";
        ram[28] = "0b111100100001000000010000100000000000010000011111111001110101";
        ram[29] = "0b111000111101111111110111001000000010010101010000001100101101";
        ram[30] = "0b111011011101000000100111011100000000110100001111111110110111";
        ram[31] = "0b000100010011111111110001001100000000100100010000000101110111";
        ram[32] = "0b111111000001111111100110110000000001000100000000001010010110";
        ram[33] = "0b000010100011000000011011000000000010111000101111111001001011";
        ram[34] = "0b001111100011000001001011101000000001100101001111111001110000";
        ram[35] = "0b111010000000111111101101110011111111110000010000000001001100";
        ram[36] = "0b000010000010000000001101110100000000010000100000000111100111";
        ram[37] = "0b001001110101111111110011111011111110110000001111111110110110";
        ram[38] = "0b000100110011111111101010100011111111011101101111111110011101";
        ram[39] = "0b000000101000111111110110001100000010100101101111111010110110";
        ram[40] = "0b000100110000000000001101101100000010110111010000000011011001";
        ram[41] = "0b001100001110000000001100001011111101110001111111111110100110";
        ram[42] = "0b001010000110111111011001011100000001100110001111111110000000";
        ram[43] = "0b111110110110000000010011001111111111100111001111111110110010";
        ram[44] = "0b111101001111000000001000101000000000110101001111111010111100";
        ram[45] = "0b001010110101000000010100110011111110000001010000001001101111";
        ram[46] = "0b000000011100000000001100010111111110011111000000001011101110";
        ram[47] = "0b000100001000000000110001100111111111110110100000000011001110";
        ram[48] = "0b001010111000111111101010101100000001001000111111111110000000";
        ram[49] = "0b000000100001111111101101110111111101100110010000000001010111";
        ram[50] = "0b000101001011111111111001010011111111010110100000010011100001";
        ram[51] = "0b111101000001111111111110001000000000100010011111111000110011";
        ram[52] = "0b000010011000111111100010010011111110010010010000000001011111";
        ram[53] = "0b000010100100000000000001110011111110011110000000000010011000";
        ram[54] = "0b000100111100000000100011110011111110011101100000010110011001";
        ram[55] = "0b000010101001111111110100000100000000100101111111111110100111";
        ram[56] = "0b111101011101111111110000000111111110101101001111111000000010";
        ram[57] = "0b000011100100111111101010101100000001001011001111111101110101";
        ram[58] = "0b010100001011000000100000000011111101100010100000001011111110";
        ram[59] = "0b111101101111111111011001011000000001011010001111111111001110";
        ram[60] = "0b000110001111000000010001011000000001010001101111111001011011";
        ram[61] = "0b111100111111000000001000111111111111111001101111111101111111";
        ram[62] = "0b111010101000111111101110011011111011000111010000000100001100";
        ram[63] = "0b000000100000000000011000100011111111111010111111111010100001";
        ram[64] = "0b000111100100000000001011011011111111101100011111111000111110";
        ram[65] = "0b111100101010000000010000011100000000001010100000000001101011";
        ram[66] = "0b111111100101000000001010101011111100010110001111110110000000";
        ram[67] = "0b111110010111111111110100111000000010001100001111111101010101";
        ram[68] = "0b111111001101111111111001000100000001101111101111111000110100";
        ram[69] = "0b000001111100000000011100000111111111011010101111111111000001";
        ram[70] = "0b000011011001111111101000111111111110000000001111110100000000";
        ram[71] = "0b000001110110111111000110000100000001010100001111111111100000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {


static const unsigned DataWidth = 60;
static const unsigned AddressRange = 72;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram* meminst;


SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {
meminst = new conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram("conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V() {
    delete meminst;
}


};//endmodule
#endif
