-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_TVALID : IN STD_LOGIC;
    data_V_data_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv24_C4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011000100";
    constant ap_const_lv24_63 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001100011";
    constant ap_const_lv24_FFFF54 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101010100";
    constant ap_const_lv24_F7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011110111";
    constant ap_const_lv24_5B : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001011011";
    constant ap_const_lv24_4B : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001001011";
    constant ap_const_lv24_FFFE8A : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111010001010";
    constant ap_const_lv24_FFFE81 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111010000001";
    constant ap_const_lv23_7FFFCD : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111001101";
    constant ap_const_lv24_FFFF0F : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100001111";
    constant ap_const_lv23_3B : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000111011";
    constant ap_const_lv24_51 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001010001";
    constant ap_const_lv24_67 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001100111";
    constant ap_const_lv24_DD : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011011101";
    constant ap_const_lv24_92 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010010010";
    constant ap_const_lv24_105 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000101";
    constant ap_const_lv23_2A : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000101010";
    constant ap_const_lv24_FFFF73 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101110011";
    constant ap_const_lv24_FFFF5C : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101011100";
    constant ap_const_lv23_31 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000110001";
    constant ap_const_lv24_66 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001100110";
    constant ap_const_lv24_FFFF1E : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100011110";
    constant ap_const_lv24_FFFF5E : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101011110";
    constant ap_const_lv24_FFFF21 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100100001";
    constant ap_const_lv24_FFFF8A : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110001010";
    constant ap_const_lv23_2E : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000101110";
    constant ap_const_lv24_FFFF47 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101000111";
    constant ap_const_lv24_F9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011111001";
    constant ap_const_lv22_3FFFE6 : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111100110";
    constant ap_const_lv24_94 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010010100";
    constant ap_const_lv24_69 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001101001";
    constant ap_const_lv24_FFFE79 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111001111001";
    constant ap_const_lv24_FFFE89 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111010001001";
    constant ap_const_lv24_FFFFAB : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110101011";
    constant ap_const_lv23_34 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000110100";
    constant ap_const_lv24_56 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001010110";
    constant ap_const_lv24_79 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001111001";
    constant ap_const_lv24_FFFEAE : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111010101110";
    constant ap_const_lv24_6E : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001101110";
    constant ap_const_lv24_87 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000111";
    constant ap_const_lv22_13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010011";
    constant ap_const_lv24_FFFFAA : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110101010";
    constant ap_const_lv24_FFFF22 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100100010";
    constant ap_const_lv24_BD : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010111101";
    constant ap_const_lv24_FFFF6F : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111101101111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv10_21 : STD_LOGIC_VECTOR (9 downto 0) := "0000100001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv10_374 : STD_LOGIC_VECTOR (9 downto 0) := "1101110100";
    constant ap_const_lv14_3FA9 : STD_LOGIC_VECTOR (13 downto 0) := "11111110101001";
    constant ap_const_lv15_1E : STD_LOGIC_VECTOR (14 downto 0) := "000000000011110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_1170 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1169_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1169_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1169_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln79_reg_2406 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal grp_fu_804_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_870 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_fu_814_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_874 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_824_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_878 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal reg_882 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_886 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln79_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln79_fu_896_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln79_reg_2410 : STD_LOGIC_VECTOR (9 downto 0);
    signal kernel_data_V_1170_load_reg_2415 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2_load_reg_2423 : STD_LOGIC_VECTOR (15 downto 0);
    signal sX_1_load_reg_2428 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_2433 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_1_load_reg_2438 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_2443 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_1_load_reg_2448 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_1_load_reg_2454 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_2_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_437_fu_980_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_437_reg_2464 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_fu_986_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_2469 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_844_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_447_reg_2474 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_436_reg_2479 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_438_fu_1016_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_438_reg_2484 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_437_reg_2490 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_834_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_438_reg_2495 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_load_reg_2500 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_6_load_reg_2508 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_449_reg_2517 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_463_fu_1056_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_463_reg_2522 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_9_load_reg_2527 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_7_load_reg_2532 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_463_fu_1086_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_463_reg_2539 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_434_reg_2545 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_450_fu_1091_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_450_reg_2550 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_456_reg_2555 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_462_reg_2560 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_464_fu_1164_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_464_reg_2565 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_465_reg_2571 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_466_reg_2576 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_465_fu_1207_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_465_reg_2581 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_11_load_reg_2586 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_471_reg_2594 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_482_fu_1242_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_482_reg_2599 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_478_reg_2604 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_480_reg_2609 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_467_fu_1260_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_467_reg_2614 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_2619 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataOut_V_1_reg_2626 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataOut_V_2_reg_2633 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_15_load_reg_2642 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_445_reg_2649 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_447_reg_2654 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_481_reg_2659 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_482_reg_2664 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_483_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_487_fu_1514_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_487_reg_2674 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_438_fu_1519_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_438_reg_2679 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_492_fu_1555_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_492_reg_2684 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_432_reg_2689 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_475_fu_1809_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_475_reg_2694 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_488_reg_2699 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_435_fu_1942_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_435_reg_2704 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_440_fu_1954_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_440_reg_2709 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_444_fu_1981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_444_reg_2714 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_454_fu_1987_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_454_reg_2719 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_459_fu_2003_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_459_reg_2724 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_469_fu_2020_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_469_reg_2729 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_470_fu_2025_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_470_reg_2734 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_476_fu_2052_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_476_reg_2739 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataOut_V_reg_2744 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_460_fu_2098_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_460_reg_2750 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_483_fu_2104_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_483_reg_2755 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_486_fu_2109_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_486_reg_2760 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_456_fu_2136_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_456_reg_2765 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_479_fu_2141_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_479_reg_2770 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_488_fu_2153_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_488_reg_2775 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_452_reg_2780 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_437_fu_2219_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_437_reg_2785 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_449_fu_2230_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_449_reg_2790 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_451_fu_2235_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_451_reg_2795 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_2256_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2800 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_148_fu_2265_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_148_reg_2805 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_data_1_V_fu_2283_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_2810 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_485_fu_2303_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_485_reg_2815 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_reg_350 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op380 : STD_LOGIC;
    signal ap_predicate_op380_write_state15 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal select_ln323_fu_2386_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_364_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_2319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_2365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln326_fu_2324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_fu_2340_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_2370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_371_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_1_fu_1036_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_454_fu_1080_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_468_fu_1227_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_478_fu_1252_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_479_fu_1445_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_486_fu_1862_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_490_fu_2083_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_439_fu_2118_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_457_fu_2200_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_371_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_372_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_fu_974_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_446_fu_1076_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_462_fu_1160_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_481_fu_1455_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_440_fu_2122_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_373_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_447_fu_1041_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_467_fu_1222_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_373_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_374_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_436_fu_1002_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_480_fu_1450_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_374_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_372_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_374_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_371_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_373_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_850_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_860_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln289_2_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_fu_974_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_437_fu_980_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_436_fu_1006_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_438_fu_1016_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_1_fu_1036_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_447_fu_1041_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_449_fu_1046_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_454_fu_1080_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_463_fu_1086_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_11_fu_1117_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_455_fu_1124_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_10_fu_1110_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1118_2_fu_1128_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_453_fu_1107_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_4_fu_1144_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_464_fu_1164_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_465_fu_1169_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_15_fu_1173_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_15_fu_1173_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_465_fu_1169_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_466_fu_1181_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1118_4_fu_1185_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_455_fu_1134_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_464_fu_1201_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_467_fu_1222_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_468_fu_1227_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_471_fu_1232_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_478_fu_1252_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_4_fu_1333_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_5_fu_1344_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_443_fu_1351_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_442_fu_1340_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1118_1_fu_1355_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_6_fu_1371_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_444_fu_1378_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_1_fu_1382_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln708_448_fu_1388_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_18_fu_1408_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_473_fu_1415_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_7_fu_1419_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_469_fu_1405_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_8_fu_1425_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln708_472_fu_1431_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_479_fu_1445_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_480_fu_1450_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_481_fu_1455_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_482_fu_1460_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_21_fu_1470_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_21_fu_1470_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_22_fu_1482_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_22_fu_1482_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_483_fu_1478_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_484_fu_1490_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_9_fu_1494_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln708_484_fu_1500_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_487_fu_1514_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_485_fu_1510_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_445_fu_1398_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_489_fu_1525_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_456_fu_1402_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_490_fu_1535_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_474_fu_1441_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_17_fu_1541_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_491_fu_1545_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_16_fu_1531_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_18_fu_1551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1561_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_1_fu_1572_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_433_fu_1579_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_432_fu_1568_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1118_fu_1583_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln708_431_fu_1589_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_2_fu_1603_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_3_fu_1614_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_434_fu_1610_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_435_fu_1621_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_fu_1625_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_7_fu_1650_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1118_8_fu_1661_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_448_fu_1657_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_449_fu_1668_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_2_fu_1672_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_450_fu_1678_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_12_fu_1692_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_13_fu_1703_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_458_fu_1699_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_460_fu_1714_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_5_fu_1718_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_457_fu_1724_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_14_fu_1738_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_459_fu_1710_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_461_fu_1745_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1118_3_fu_1749_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_16_fu_1768_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_17_fu_1779_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_470_fu_1775_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_471_fu_1786_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1118_6_fu_1790_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_19_fu_1814_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_20_fu_1825_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_477_fu_1832_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_476_fu_1821_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1118_5_fu_1836_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_475_fu_1842_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_23_fu_1866_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_24_fu_1877_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_489_fu_1884_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_488_fu_1873_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_10_fu_1888_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_25_fu_1904_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_26_fu_1915_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_492_fu_1922_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_491_fu_1911_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1118_6_fu_1926_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln708_6_fu_1647_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_489_fu_1932_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_439_fu_1948_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_9_fu_1765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_7_fu_1734_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_441_fu_1641_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_442_fu_1965_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln708_11_fu_1856_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_1971_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_441_fu_1959_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_443_fu_1975_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_470_fu_1796_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_450_fu_1688_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_458_fu_1993_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_482_fu_1859_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_13_fu_1999_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_459_fu_1755_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_466_fu_2009_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_468_fu_2015_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_1599_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_10_fu_1852_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_472_fu_1806_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_474_fu_2036_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_5_fu_1644_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_15_fu_2042_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_473_fu_2030_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_475_fu_2046_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_12_fu_2079_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_8_fu_2076_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_457_fu_2089_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_14_fu_2095_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_2_fu_2073_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_455_fu_2131_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_13_fu_2128_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_3_fu_2115_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_487_fu_2147_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_9_fu_2162_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_s_fu_2173_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_451_fu_2169_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_452_fu_2180_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1118_3_fu_2184_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_432_fu_2205_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_433_fu_2210_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_436_fu_2215_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_448_fu_2225_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_4_fu_2158_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_471_fu_2240_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_472_fu_2246_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_477_fu_2251_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_445_fu_2261_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_452_fu_2270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_453_fu_2274_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_461_fu_2279_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_480_fu_2289_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_481_fu_2294_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_484_fu_2299_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_493_fu_2309_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_2335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_2381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TVALID_int : STD_LOGIC;
    signal data_V_data_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_ack_in : STD_LOGIC;
    signal ap_condition_1445 : BOOLEAN;
    signal ap_condition_398 : BOOLEAN;
    signal ap_condition_418 : BOOLEAN;

    component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    line_buffer_Array_V_0_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_0_0_ce0,
        we0 => line_buffer_Array_V_0_0_we0,
        d0 => data_V_data_V_TDATA_int,
        q0 => line_buffer_Array_V_0_0_q0);

    line_buffer_Array_V_1169_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_1169_0_ce0,
        we0 => line_buffer_Array_V_1169_0_we0,
        d0 => line_buffer_Array_V_0_0_q0,
        q0 => line_buffer_Array_V_1169_0_q0);

    line_buffer_Array_V_2_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_8_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_2_0_ce0,
        we0 => line_buffer_Array_V_2_0_we0,
        d0 => DataOut_V_2_reg_2633,
        q0 => line_buffer_Array_V_2_0_q0);

    regslice_both_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_V_TDATA,
        vld_in => data_V_data_V_TVALID,
        ack_in => regslice_both_data_V_data_V_U_ack_in,
        data_out => data_V_data_V_TDATA_int,
        vld_out => data_V_data_V_TVALID_int,
        ack_out => data_V_data_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then 
                indvar_flatten_reg_350 <= add_ln79_reg_2410;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_350 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_398)) then
                if ((icmp_ln313_fu_2319_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_2319_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln326_fu_2324_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_418)) then
                if ((icmp_ln317_fu_2365_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_2365_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln321_fu_2370_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_398)) then
                if ((icmp_ln313_fu_2319_p2 = ap_const_lv1_1)) then 
                    sX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_2319_p2 = ap_const_lv1_0)) then 
                    sX_1 <= select_ln328_fu_2340_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then
                DataOut_V_1_reg_2626 <= line_buffer_Array_V_0_0_q0;
                DataOut_V_2_reg_2633 <= line_buffer_Array_V_1169_0_q0;
                kernel_data_V_11 <= line_buffer_Array_V_0_0_q0;
                kernel_data_V_13 <= kernel_data_V_14;
                kernel_data_V_14 <= kernel_data_V_15;
                kernel_data_V_15 <= data_V_data_V_TDATA_int;
                kernel_data_V_15_load_reg_2642 <= kernel_data_V_15;
                kernel_data_V_7 <= line_buffer_Array_V_1169_0_q0;
                tmp_data_0_V_reg_2619 <= data_V_data_V_TDATA_int;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                DataOut_V_reg_2744 <= line_buffer_Array_V_2_0_q0;
                kernel_data_V_3 <= line_buffer_Array_V_2_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_434_reg_2545 <= grp_fu_844_p2;
                add_ln703_450_reg_2550 <= add_ln703_450_fu_1091_p2;
                sext_ln1118_463_reg_2539 <= sext_ln1118_463_fu_1086_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_435_reg_2704 <= add_ln703_435_fu_1942_p2;
                add_ln703_440_reg_2709 <= add_ln703_440_fu_1954_p2;
                add_ln703_444_reg_2714 <= add_ln703_444_fu_1981_p2;
                add_ln703_454_reg_2719 <= add_ln703_454_fu_1987_p2;
                add_ln703_459_reg_2724 <= add_ln703_459_fu_2003_p2;
                add_ln703_469_reg_2729 <= add_ln703_469_fu_2020_p2;
                add_ln703_470_reg_2734 <= add_ln703_470_fu_2025_p2;
                add_ln703_476_reg_2739 <= add_ln703_476_fu_2052_p2;
                sext_ln1118_475_reg_2694 <= sext_ln1118_475_fu_1809_p1;
                trunc_ln708_432_reg_2689 <= sub_ln1118_fu_1625_p2(22 downto 8);
                trunc_ln708_488_reg_2699 <= sub_ln1118_10_fu_1888_p2(22 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then
                add_ln703_437_reg_2785 <= add_ln703_437_fu_2219_p2;
                add_ln703_449_reg_2790 <= add_ln703_449_fu_2230_p2;
                add_ln703_451_reg_2795 <= add_ln703_451_fu_2235_p2;
                tmp_data_2_V_reg_2800 <= tmp_data_2_V_fu_2256_p2;
                trunc_ln708_452_reg_2780 <= sub_ln1118_3_fu_2184_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_438_reg_2679 <= add_ln703_438_fu_1519_p2;
                add_ln703_492_reg_2684 <= add_ln703_492_fu_1555_p2;
                sext_ln1118_487_reg_2674 <= sext_ln1118_487_fu_1514_p1;
                trunc_ln708_445_reg_2649 <= kernel_data_V_5_load_reg_2500(15 downto 8);
                trunc_ln708_447_reg_2654 <= add_ln1118_1_fu_1355_p2(21 downto 8);
                trunc_ln708_481_reg_2659 <= grp_fu_850_p1(22 downto 8);
                trunc_ln708_482_reg_2664 <= trunc_ln708_482_fu_1460_p1(21 downto 8);
                trunc_ln708_483_reg_2669 <= grp_fu_371_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln289_2_fu_968_p2) and (icmp_ln79_fu_890_p2 = ap_const_lv1_0))) then
                add_ln703_447_reg_2474 <= grp_fu_844_p2;
                add_ln703_reg_2469 <= add_ln703_fu_986_p2;
                sext_ln1118_437_reg_2464 <= sext_ln1118_437_fu_980_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then
                add_ln703_456_reg_2765 <= add_ln703_456_fu_2136_p2;
                add_ln703_479_reg_2770 <= add_ln703_479_fu_2141_p2;
                add_ln703_488_reg_2775 <= add_ln703_488_fu_2153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_460_reg_2750 <= add_ln703_460_fu_2098_p2;
                add_ln703_483_reg_2755 <= add_ln703_483_fu_2104_p2;
                add_ln703_486_reg_2760 <= add_ln703_486_fu_2109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_463_reg_2522 <= add_ln703_463_fu_1056_p2;
                trunc_ln708_449_reg_2517 <= trunc_ln708_449_fu_1046_p1(22 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_465_reg_2581 <= add_ln703_465_fu_1207_p2;
                sext_ln1118_464_reg_2565 <= sext_ln1118_464_fu_1164_p1;
                trunc_ln708_456_reg_2555 <= sub_ln1118_4_fu_1144_p2(16 downto 8);
                trunc_ln708_462_reg_2560 <= grp_fu_850_p1(22 downto 8);
                trunc_ln708_465_reg_2571 <= add_ln1118_4_fu_1185_p2(22 downto 8);
                trunc_ln708_466_reg_2576 <= grp_fu_373_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_467_reg_2614 <= add_ln703_467_fu_1260_p2;
                trunc_ln708_478_reg_2604 <= grp_fu_374_p2(23 downto 8);
                trunc_ln708_480_reg_2609 <= grp_fu_373_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                add_ln703_482_reg_2599 <= add_ln703_482_fu_1242_p2;
                trunc_ln708_471_reg_2594 <= trunc_ln708_471_fu_1232_p1(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then
                add_ln703_485_reg_2815 <= add_ln703_485_fu_2303_p2;
                tmp_data_0_V_148_reg_2805 <= tmp_data_0_V_148_fu_2265_p2;
                tmp_data_1_V_reg_2810 <= tmp_data_1_V_fu_2283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln79_reg_2410 <= add_ln79_fu_896_p2;
                icmp_ln79_reg_2406 <= icmp_ln79_fu_890_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_890_p2 = ap_const_lv1_0))) then
                and_ln289_2_reg_2460 <= and_ln289_2_fu_968_p2;
                icmp_ln289_1_reg_2443 <= icmp_ln289_1_fu_930_p2;
                icmp_ln289_reg_2433 <= icmp_ln289_fu_920_p2;
                kernel_data_V_1170 <= kernel_data_V_2;
                kernel_data_V_1170_load_reg_2415 <= kernel_data_V_1170;
                kernel_data_V_2_load_reg_2423 <= kernel_data_V_2;
                pX_1_load_reg_2454 <= pX_1;
                pY_1_load_reg_2448 <= pY_1;
                sX_1_load_reg_2428 <= sX_1;
                sY_1_load_reg_2438 <= sY_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                kernel_data_V_10 <= kernel_data_V_11;
                kernel_data_V_11_load_reg_2586 <= kernel_data_V_11;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                kernel_data_V_2 <= kernel_data_V_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                kernel_data_V_5 <= kernel_data_V_6;
                kernel_data_V_5_load_reg_2500 <= kernel_data_V_5;
                kernel_data_V_6_load_reg_2508 <= kernel_data_V_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                kernel_data_V_6 <= kernel_data_V_7;
                kernel_data_V_7_load_reg_2532 <= kernel_data_V_7;
                kernel_data_V_9_load_reg_2527 <= kernel_data_V_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                kernel_data_V_9 <= kernel_data_V_10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0)))) then
                reg_870 <= grp_fu_372_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0)))) then
                reg_874 <= grp_fu_374_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln289_2_reg_2460)))) then
                reg_878 <= grp_fu_371_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_1 = and_ln289_2_reg_2460)))) then
                reg_882 <= grp_fu_374_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln289_2_reg_2460)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0)))) then
                reg_886 <= grp_fu_860_p1(22 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln313_fu_2319_p2 = ap_const_lv1_1) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then
                sY_1 <= ap_phi_mux_storemerge_i_i_phi_fu_364_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln289_2_reg_2460))) then
                sext_ln1118_438_reg_2484 <= sext_ln1118_438_fu_1016_p1;
                trunc_ln708_436_reg_2479 <= trunc_ln708_436_fu_1006_p1(22 downto 8);
                trunc_ln708_437_reg_2490 <= grp_fu_371_p2(23 downto 8);
                trunc_ln708_438_reg_2495 <= grp_fu_373_p2(23 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state9, ap_CS_fsm_state15, icmp_ln79_fu_890_p2, ap_CS_fsm_state2, io_acc_block_signal_op380, ap_predicate_op380_write_state15, data_V_data_V_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_890_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1118_1_fu_1355_p2 <= std_logic_vector(signed(sext_ln1118_443_fu_1351_p1) + signed(sext_ln1118_442_fu_1340_p1));
    add_ln1118_2_fu_1128_p2 <= std_logic_vector(signed(sext_ln1118_455_fu_1124_p1) + signed(shl_ln1118_10_fu_1110_p3));
    add_ln1118_3_fu_1749_p2 <= std_logic_vector(signed(sext_ln1118_459_fu_1710_p1) + signed(sext_ln1118_461_fu_1745_p1));
    add_ln1118_4_fu_1185_p2 <= std_logic_vector(signed(sext_ln1118_465_fu_1169_p1) + signed(sext_ln1118_466_fu_1181_p1));
    add_ln1118_5_fu_1836_p2 <= std_logic_vector(signed(sext_ln1118_477_fu_1832_p1) + signed(sext_ln1118_476_fu_1821_p1));
    add_ln1118_6_fu_1926_p2 <= std_logic_vector(signed(sext_ln1118_492_fu_1922_p1) + signed(sext_ln1118_491_fu_1911_p1));
    add_ln1118_fu_1583_p2 <= std_logic_vector(signed(sext_ln1118_433_fu_1579_p1) + signed(sext_ln1118_432_fu_1568_p1));
    add_ln321_fu_2370_p2 <= std_logic_vector(unsigned(pY_1_load_reg_2448) + unsigned(ap_const_lv32_1));
    add_ln323_fu_2381_p2 <= std_logic_vector(unsigned(sY_1_load_reg_2438) + unsigned(ap_const_lv32_1));
    add_ln326_fu_2324_p2 <= std_logic_vector(unsigned(pX_1_load_reg_2454) + unsigned(ap_const_lv32_1));
    add_ln328_fu_2335_p2 <= std_logic_vector(unsigned(sX_1_load_reg_2428) + unsigned(ap_const_lv32_1));
    add_ln703_432_fu_2205_p2 <= std_logic_vector(unsigned(reg_870) + unsigned(trunc_ln708_437_reg_2490));
    add_ln703_433_fu_2210_p2 <= std_logic_vector(unsigned(add_ln703_reg_2469) + unsigned(add_ln703_432_fu_2205_p2));
    add_ln703_435_fu_1942_p2 <= std_logic_vector(unsigned(grp_fu_804_p4) + unsigned(reg_878));
    add_ln703_436_fu_2215_p2 <= std_logic_vector(unsigned(add_ln703_434_reg_2545) + unsigned(add_ln703_435_reg_2704));
    add_ln703_437_fu_2219_p2 <= std_logic_vector(unsigned(add_ln703_433_fu_2210_p2) + unsigned(add_ln703_436_fu_2215_p2));
    add_ln703_438_fu_1519_p2 <= std_logic_vector(unsigned(grp_fu_834_p4) + unsigned(reg_870));
    add_ln703_439_fu_1948_p2 <= std_logic_vector(signed(sext_ln708_6_fu_1647_p1) + signed(trunc_ln708_489_fu_1932_p4));
    add_ln703_440_fu_1954_p2 <= std_logic_vector(unsigned(add_ln703_438_reg_2679) + unsigned(add_ln703_439_fu_1948_p2));
    add_ln703_441_fu_1959_p2 <= std_logic_vector(signed(sext_ln708_9_fu_1765_p1) + signed(sext_ln708_7_fu_1734_p1));
    add_ln703_442_fu_1965_p2 <= std_logic_vector(signed(sext_ln1118_441_fu_1641_p1) + signed(ap_const_lv10_374));
    add_ln703_443_fu_1975_p2 <= std_logic_vector(signed(sext_ln708_11_fu_1856_p1) + signed(sext_ln703_fu_1971_p1));
    add_ln703_444_fu_1981_p2 <= std_logic_vector(unsigned(add_ln703_441_fu_1959_p2) + unsigned(add_ln703_443_fu_1975_p2));
    add_ln703_445_fu_2261_p2 <= std_logic_vector(unsigned(add_ln703_440_reg_2709) + unsigned(add_ln703_444_reg_2714));
    add_ln703_448_fu_2225_p2 <= std_logic_vector(unsigned(reg_874) + unsigned(trunc_ln708_438_reg_2495));
    add_ln703_449_fu_2230_p2 <= std_logic_vector(unsigned(add_ln703_447_reg_2474) + unsigned(add_ln703_448_fu_2225_p2));
    add_ln703_450_fu_1091_p2 <= std_logic_vector(unsigned(grp_fu_824_p4) + unsigned(reg_878));
    add_ln703_451_fu_2235_p2 <= std_logic_vector(unsigned(trunc_ln708_466_reg_2576) + unsigned(grp_fu_824_p4));
    add_ln703_452_fu_2270_p2 <= std_logic_vector(unsigned(add_ln703_450_reg_2550) + unsigned(add_ln703_451_reg_2795));
    add_ln703_453_fu_2274_p2 <= std_logic_vector(unsigned(add_ln703_449_reg_2790) + unsigned(add_ln703_452_fu_2270_p2));
    add_ln703_454_fu_1987_p2 <= std_logic_vector(unsigned(grp_fu_814_p4) + unsigned(trunc_ln708_470_fu_1796_p4));
    add_ln703_455_fu_2131_p2 <= std_logic_vector(unsigned(reg_882) + unsigned(trunc_ln708_478_reg_2604));
    add_ln703_456_fu_2136_p2 <= std_logic_vector(unsigned(add_ln703_454_reg_2719) + unsigned(add_ln703_455_fu_2131_p2));
    add_ln703_457_fu_2089_p2 <= std_logic_vector(signed(sext_ln708_12_fu_2079_p1) + signed(sext_ln708_8_fu_2076_p1));
    add_ln703_458_fu_1993_p2 <= std_logic_vector(signed(sext_ln1118_450_fu_1688_p1) + signed(ap_const_lv14_3FA9));
    add_ln703_459_fu_2003_p2 <= std_logic_vector(signed(sext_ln1118_482_fu_1859_p1) + signed(sext_ln703_13_fu_1999_p1));
    add_ln703_460_fu_2098_p2 <= std_logic_vector(unsigned(add_ln703_457_fu_2089_p2) + unsigned(sext_ln703_14_fu_2095_p1));
    add_ln703_461_fu_2279_p2 <= std_logic_vector(unsigned(add_ln703_456_reg_2765) + unsigned(add_ln703_460_reg_2750));
    add_ln703_463_fu_1056_p2 <= std_logic_vector(unsigned(grp_fu_804_p4) + unsigned(reg_870));
    add_ln703_464_fu_1201_p2 <= std_logic_vector(unsigned(trunc_ln708_455_fu_1134_p4) + unsigned(reg_870));
    add_ln703_465_fu_1207_p2 <= std_logic_vector(unsigned(add_ln703_463_reg_2522) + unsigned(add_ln703_464_fu_1201_p2));
    add_ln703_466_fu_2009_p2 <= std_logic_vector(unsigned(reg_882) + unsigned(trunc_ln708_459_fu_1755_p4));
    add_ln703_467_fu_1260_p2 <= std_logic_vector(unsigned(grp_fu_824_p4) + unsigned(reg_870));
    add_ln703_468_fu_2015_p2 <= std_logic_vector(unsigned(add_ln703_466_fu_2009_p2) + unsigned(add_ln703_467_reg_2614));
    add_ln703_469_fu_2020_p2 <= std_logic_vector(unsigned(add_ln703_465_reg_2581) + unsigned(add_ln703_468_fu_2015_p2));
    add_ln703_470_fu_2025_p2 <= std_logic_vector(unsigned(grp_fu_834_p4) + unsigned(trunc_ln708_483_reg_2669));
    add_ln703_471_fu_2240_p2 <= std_logic_vector(signed(sext_ln708_4_fu_2158_p1) + signed(reg_878));
    add_ln703_472_fu_2246_p2 <= std_logic_vector(unsigned(add_ln703_470_reg_2734) + unsigned(add_ln703_471_fu_2240_p2));
    add_ln703_473_fu_2030_p2 <= std_logic_vector(signed(sext_ln708_fu_1599_p1) + signed(sext_ln708_10_fu_1852_p1));
    add_ln703_474_fu_2036_p2 <= std_logic_vector(signed(sext_ln1118_472_fu_1806_p1) + signed(ap_const_lv15_1E));
    add_ln703_475_fu_2046_p2 <= std_logic_vector(signed(sext_ln708_5_fu_1644_p1) + signed(sext_ln703_15_fu_2042_p1));
    add_ln703_476_fu_2052_p2 <= std_logic_vector(unsigned(add_ln703_473_fu_2030_p2) + unsigned(add_ln703_475_fu_2046_p2));
    add_ln703_477_fu_2251_p2 <= std_logic_vector(unsigned(add_ln703_472_fu_2246_p2) + unsigned(add_ln703_476_reg_2739));
    add_ln703_479_fu_2141_p2 <= std_logic_vector(unsigned(grp_fu_834_p4) + unsigned(reg_874));
    add_ln703_480_fu_2289_p2 <= std_logic_vector(unsigned(reg_874) + unsigned(trunc_ln708_452_reg_2780));
    add_ln703_481_fu_2294_p2 <= std_logic_vector(unsigned(add_ln703_479_reg_2770) + unsigned(add_ln703_480_fu_2289_p2));
    add_ln703_482_fu_1242_p2 <= std_logic_vector(unsigned(grp_fu_814_p4) + unsigned(reg_878));
    add_ln703_483_fu_2104_p2 <= std_logic_vector(unsigned(trunc_ln708_480_reg_2609) + unsigned(grp_fu_804_p4));
    add_ln703_484_fu_2299_p2 <= std_logic_vector(unsigned(add_ln703_482_reg_2599) + unsigned(add_ln703_483_reg_2755));
    add_ln703_485_fu_2303_p2 <= std_logic_vector(unsigned(add_ln703_481_fu_2294_p2) + unsigned(add_ln703_484_fu_2299_p2));
    add_ln703_486_fu_2109_p2 <= std_logic_vector(signed(sext_ln708_2_fu_2073_p1) + signed(grp_fu_834_p4));
    add_ln703_487_fu_2147_p2 <= std_logic_vector(signed(sext_ln708_13_fu_2128_p1) + signed(sext_ln708_3_fu_2115_p1));
    add_ln703_488_fu_2153_p2 <= std_logic_vector(unsigned(add_ln703_486_reg_2760) + unsigned(add_ln703_487_fu_2147_p2));
    add_ln703_489_fu_1525_p2 <= std_logic_vector(signed(sext_ln1118_485_fu_1510_p1) + signed(sext_ln1118_445_fu_1398_p1));
    add_ln703_490_fu_1535_p2 <= std_logic_vector(signed(sext_ln1118_456_fu_1402_p1) + signed(ap_const_lv10_21));
    add_ln703_491_fu_1545_p2 <= std_logic_vector(signed(sext_ln1118_474_fu_1441_p1) + signed(sext_ln703_17_fu_1541_p1));
    add_ln703_492_fu_1555_p2 <= std_logic_vector(signed(sext_ln703_16_fu_1531_p1) + signed(sext_ln703_18_fu_1551_p1));
    add_ln703_493_fu_2309_p2 <= std_logic_vector(unsigned(add_ln703_488_reg_2775) + unsigned(add_ln703_492_reg_2684));
    add_ln703_fu_986_p2 <= std_logic_vector(unsigned(grp_fu_824_p4) + unsigned(grp_fu_804_p4));
    add_ln79_fu_896_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_350) + unsigned(ap_const_lv10_1));
    and_ln289_1_fu_962_p2 <= (icmp_ln289_3_fu_950_p2 and icmp_ln289_2_fu_940_p2);
    and_ln289_2_fu_968_p2 <= (and_ln289_fu_956_p2 and and_ln289_1_fu_962_p2);
    and_ln289_fu_956_p2 <= (icmp_ln289_fu_920_p2 and icmp_ln289_1_fu_930_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state15_assign_proc : process(io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
                ap_block_state15 <= ((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1));
    end process;


    ap_condition_1445_assign_proc : process(ap_CS_fsm_state15, icmp_ln79_reg_2406, icmp_ln313_fu_2319_p2)
    begin
                ap_condition_1445 <= ((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln313_fu_2319_p2 = ap_const_lv1_1) and (icmp_ln79_reg_2406 = ap_const_lv1_0));
    end process;


    ap_condition_398_assign_proc : process(ap_CS_fsm_state15, icmp_ln79_reg_2406, io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
                ap_condition_398 <= (not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln79_reg_2406 = ap_const_lv1_0));
    end process;


    ap_condition_418_assign_proc : process(ap_CS_fsm_state15, icmp_ln79_reg_2406, io_acc_block_signal_op380, ap_predicate_op380_write_state15, icmp_ln313_fu_2319_p2)
    begin
                ap_condition_418 <= (not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln313_fu_2319_p2 = ap_const_lv1_1) and (icmp_ln79_reg_2406 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_364_p4_assign_proc : process(select_ln323_fu_2386_p3, icmp_ln317_fu_2365_p2, ap_condition_1445)
    begin
        if ((ap_const_boolean_1 = ap_condition_1445)) then
            if ((icmp_ln317_fu_2365_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_364_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_2365_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_364_p4 <= select_ln323_fu_2386_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_364_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_364_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_predicate_op380_write_state15_assign_proc : process(icmp_ln79_reg_2406, and_ln289_2_reg_2460)
    begin
                ap_predicate_op380_write_state15 <= ((ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_V_data_V_TDATA_blk_n <= data_V_data_V_TVALID_int;
        else 
            data_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_TREADY_assign_proc : process(data_V_data_V_TVALID, regslice_both_data_V_data_V_U_ack_in)
    begin
        if (((data_V_data_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_TREADY_int_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then 
            data_V_data_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_371_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2, sext_ln1118_437_fu_980_p1, sext_ln1118_438_fu_1016_p1, sext_ln1118_463_reg_2539, sext_ln708_1_fu_1036_p1, sext_ln1118_454_fu_1080_p1, sext_ln1118_468_fu_1227_p1, sext_ln1118_478_fu_1252_p1, sext_ln1118_479_fu_1445_p1, sext_ln1118_486_fu_1862_p1, sext_ln1118_490_fu_2083_p1, sext_ln1118_439_fu_2118_p1, sext_ln1118_457_fu_2200_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_371_p0 <= sext_ln1118_457_fu_2200_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_371_p0 <= sext_ln1118_439_fu_2118_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_371_p0 <= sext_ln1118_490_fu_2083_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_371_p0 <= sext_ln1118_486_fu_1862_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_371_p0 <= sext_ln1118_479_fu_1445_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_371_p0 <= sext_ln1118_478_fu_1252_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_371_p0 <= sext_ln1118_468_fu_1227_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_371_p0 <= sext_ln1118_463_reg_2539(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_371_p0 <= sext_ln1118_454_fu_1080_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_371_p0 <= sext_ln708_1_fu_1036_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_371_p0 <= sext_ln1118_438_fu_1016_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_371_p0 <= sext_ln1118_437_fu_980_p1(16 - 1 downto 0);
        else 
            grp_fu_371_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_371_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_371_p1 <= ap_const_lv24_51(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_371_p1 <= ap_const_lv23_3B(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_371_p1 <= ap_const_lv24_FFFF0F(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_371_p1 <= ap_const_lv23_7FFFCD(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_371_p1 <= ap_const_lv24_FFFE81(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_371_p1 <= ap_const_lv24_FFFE8A(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_371_p1 <= ap_const_lv24_4B(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_371_p1 <= ap_const_lv24_5B(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_371_p1 <= ap_const_lv24_F7(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_371_p1 <= ap_const_lv24_FFFF54(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_371_p1 <= ap_const_lv24_63(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_371_p1 <= ap_const_lv24_C4(10 - 1 downto 0);
        else 
            grp_fu_371_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_371_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_371_p0) * signed(grp_fu_371_p1))), 24));

    grp_fu_372_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2, sext_ln1118_437_reg_2464, sext_ln1118_438_reg_2484, sext_ln1118_464_reg_2565, sext_ln1118_475_fu_1809_p1, sext_ln1118_475_reg_2694, sext_ln1118_478_fu_1252_p1, sext_ln1118_fu_974_p1, sext_ln1118_446_fu_1076_p1, sext_ln1118_462_fu_1160_p1, sext_ln1118_481_fu_1455_p1, sext_ln1118_440_fu_2122_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_372_p0 <= sext_ln1118_440_fu_2122_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_372_p0 <= sext_ln1118_475_reg_2694(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_372_p0 <= sext_ln1118_475_fu_1809_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_372_p0 <= sext_ln1118_481_fu_1455_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_372_p0 <= sext_ln1118_478_fu_1252_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_372_p0 <= sext_ln1118_464_reg_2565(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_372_p0 <= sext_ln1118_462_fu_1160_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_372_p0 <= sext_ln1118_446_fu_1076_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_372_p0 <= sext_ln1118_438_reg_2484(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_372_p0 <= sext_ln1118_437_reg_2464(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_372_p0 <= sext_ln1118_fu_974_p1(16 - 1 downto 0);
        else 
            grp_fu_372_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_372_p1 <= ap_const_lv24_FFFF5E(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_372_p1 <= ap_const_lv24_FFFF1E(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_372_p1 <= ap_const_lv24_66(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_372_p1 <= ap_const_lv23_31(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_372_p1 <= ap_const_lv24_FFFF5C(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_372_p1 <= ap_const_lv24_FFFF73(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_372_p1 <= ap_const_lv23_2A(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_372_p1 <= ap_const_lv24_105(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_372_p1 <= ap_const_lv24_92(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_372_p1 <= ap_const_lv24_DD(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_372_p1 <= ap_const_lv24_67(11 - 1 downto 0);
        else 
            grp_fu_372_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_372_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_372_p0) * signed(grp_fu_372_p1))), 24));

    grp_fu_373_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2, sext_ln1118_437_fu_980_p1, sext_ln1118_438_fu_1016_p1, sext_ln1118_463_fu_1086_p1, sext_ln1118_464_fu_1164_p1, sext_ln1118_487_fu_1514_p1, sext_ln1118_487_reg_2674, sext_ln1118_478_fu_1252_p1, sext_ln1118_490_fu_2083_p1, sext_ln1118_440_fu_2122_p1, sext_ln1118_447_fu_1041_p1, sext_ln1118_467_fu_1222_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_373_p0 <= sext_ln1118_440_fu_2122_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_373_p0 <= sext_ln1118_490_fu_2083_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_373_p0 <= sext_ln1118_487_reg_2674(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_373_p0 <= sext_ln1118_487_fu_1514_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_373_p0 <= sext_ln1118_478_fu_1252_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_373_p0 <= sext_ln1118_467_fu_1222_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_373_p0 <= sext_ln1118_464_fu_1164_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_373_p0 <= sext_ln1118_463_fu_1086_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_373_p0 <= sext_ln1118_447_fu_1041_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_373_p0 <= sext_ln1118_438_fu_1016_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_373_p0 <= sext_ln1118_437_fu_980_p1(16 - 1 downto 0);
        else 
            grp_fu_373_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_373_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFFAB(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFE89(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFE79(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_373_p1 <= ap_const_lv24_69(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_373_p1 <= ap_const_lv24_94(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_373_p1 <= ap_const_lv22_3FFFE6(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_373_p1 <= ap_const_lv24_F9(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFF47(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_373_p1 <= ap_const_lv23_2E(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFF8A(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_373_p1 <= ap_const_lv24_FFFF21(10 - 1 downto 0);
        else 
            grp_fu_373_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_373_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_373_p0) * signed(grp_fu_373_p1))), 24));

    grp_fu_374_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2, sext_ln1118_438_reg_2484, sext_ln1118_463_reg_2539, sext_ln1118_464_reg_2565, sext_ln1118_475_fu_1809_p1, sext_ln1118_454_fu_1080_p1, sext_ln1118_478_fu_1252_p1, sext_ln1118_490_fu_2083_p1, sext_ln1118_457_fu_2200_p1, sext_ln1118_fu_974_p1, sext_ln1118_440_fu_2122_p1, sext_ln1118_436_fu_1002_p1, sext_ln1118_480_fu_1450_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_374_p0 <= sext_ln1118_457_fu_2200_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_374_p0 <= sext_ln1118_440_fu_2122_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_374_p0 <= sext_ln1118_490_fu_2083_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_374_p0 <= sext_ln1118_475_fu_1809_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_374_p0 <= sext_ln1118_480_fu_1450_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_374_p0 <= sext_ln1118_478_fu_1252_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_374_p0 <= sext_ln1118_464_reg_2565(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_374_p0 <= sext_ln1118_463_reg_2539(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_374_p0 <= sext_ln1118_454_fu_1080_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_374_p0 <= sext_ln1118_438_reg_2484(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_374_p0 <= sext_ln1118_436_fu_1002_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_374_p0 <= sext_ln1118_fu_974_p1(16 - 1 downto 0);
        else 
            grp_fu_374_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_374_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_374_p1 <= ap_const_lv24_FFFF6F(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_374_p1 <= ap_const_lv24_BD(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_374_p1 <= ap_const_lv24_FFFF22(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_374_p1 <= ap_const_lv24_FFFFAA(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_374_p1 <= ap_const_lv22_13(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_374_p1 <= ap_const_lv24_87(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_374_p1 <= ap_const_lv24_6E(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_374_p1 <= ap_const_lv24_FFFEAE(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_374_p1 <= ap_const_lv24_79(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_374_p1 <= ap_const_lv24_56(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_374_p1 <= ap_const_lv23_34(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_374_p1 <= ap_const_lv24_FFFF21(10 - 1 downto 0);
        else 
            grp_fu_374_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_374_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_374_p0) * signed(grp_fu_374_p1))), 24));
    grp_fu_804_p4 <= grp_fu_372_p2(23 downto 8);
    grp_fu_814_p4 <= grp_fu_374_p2(23 downto 8);
    grp_fu_824_p4 <= grp_fu_371_p2(23 downto 8);
    grp_fu_834_p4 <= grp_fu_373_p2(23 downto 8);
    grp_fu_844_p2 <= std_logic_vector(unsigned(grp_fu_834_p4) + unsigned(grp_fu_814_p4));
    grp_fu_850_p1 <= grp_fu_372_p2(23 - 1 downto 0);
    grp_fu_860_p1 <= grp_fu_371_p2(23 - 1 downto 0);
    icmp_ln289_1_fu_930_p2 <= "1" when (sY_1 = ap_const_lv32_3) else "0";
    icmp_ln289_2_fu_940_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln289_3_fu_950_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln289_fu_920_p2 <= "1" when (sX_1 = ap_const_lv32_3) else "0";
    icmp_ln313_fu_2319_p2 <= "1" when (pX_1_load_reg_2454 = ap_const_lv32_1B) else "0";
    icmp_ln317_fu_2365_p2 <= "1" when (pY_1_load_reg_2448 = ap_const_lv32_1B) else "0";
    icmp_ln79_fu_890_p2 <= "1" when (indvar_flatten_reg_350 = ap_const_lv10_310) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op380 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_0_we0_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1169_0_ce0_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then 
            line_buffer_Array_V_1169_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1169_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1169_0_we0_assign_proc : process(ap_CS_fsm_state9, data_V_data_V_TVALID_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (data_V_data_V_TVALID_int = ap_const_logic_1))) then 
            line_buffer_Array_V_1169_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1169_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_ce0_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_Array_V_2_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_we0_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_Array_V_2_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state15, icmp_ln79_reg_2406, and_ln289_2_reg_2460)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_148_reg_2805;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state15, io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
        if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_predicate_op380_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state15, icmp_ln79_reg_2406, and_ln289_2_reg_2460)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_2810;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state15, io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
        if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_predicate_op380_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state15, icmp_ln79_reg_2406, and_ln289_2_reg_2460)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_2800;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state15, io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
        if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_predicate_op380_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state15, icmp_ln79_reg_2406, and_ln289_2_reg_2460)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_2460) and (icmp_ln79_reg_2406 = ap_const_lv1_0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= std_logic_vector(unsigned(add_ln703_485_reg_2815) + unsigned(add_ln703_493_fu_2309_p2));

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state15, io_acc_block_signal_op380, ap_predicate_op380_write_state15)
    begin
        if ((not(((io_acc_block_signal_op380 = ap_const_logic_0) and (ap_predicate_op380_write_state15 = ap_const_boolean_1))) and (ap_predicate_op380_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_2386_p3 <= 
        ap_const_lv32_3 when (icmp_ln289_1_reg_2443(0) = '1') else 
        add_ln323_fu_2381_p2;
    select_ln328_fu_2340_p3 <= 
        ap_const_lv32_3 when (icmp_ln289_reg_2433(0) = '1') else 
        add_ln328_fu_2335_p2;
        sext_ln1118_432_fu_1568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1561_p3),22));

        sext_ln1118_433_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_1572_p3),22));

        sext_ln1118_434_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1603_p3),23));

        sext_ln1118_435_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1614_p3),23));

        sext_ln1118_436_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_2_load_reg_2423),23));

    sext_ln1118_437_fu_980_p0 <= kernel_data_V_2;
        sext_ln1118_437_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_437_fu_980_p0),24));

    sext_ln1118_438_fu_1016_p0 <= kernel_data_V_3;
        sext_ln1118_438_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_438_fu_1016_p0),24));

        sext_ln1118_439_fu_2118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_reg_2744),23));

        sext_ln1118_440_fu_2122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_reg_2744),24));

        sext_ln1118_441_fu_1641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_445_reg_2649),10));

        sext_ln1118_442_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_1333_p3),22));

        sext_ln1118_443_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1344_p3),22));

        sext_ln1118_444_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_1371_p3),22));

        sext_ln1118_445_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_448_fu_1388_p4),15));

        sext_ln1118_446_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_6_load_reg_2508),24));

    sext_ln1118_447_fu_1041_p0 <= kernel_data_V_6;
        sext_ln1118_447_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_447_fu_1041_p0),23));

        sext_ln1118_448_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_1650_p3),21));

        sext_ln1118_449_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_1661_p3),21));

        sext_ln1118_450_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_450_fu_1678_p4),14));

        sext_ln1118_451_fu_2169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_2162_p3),24));

        sext_ln1118_452_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_2173_p3),24));

        sext_ln1118_453_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_7_load_reg_2532),17));

    sext_ln1118_454_fu_1080_p0 <= kernel_data_V_7;
        sext_ln1118_454_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_454_fu_1080_p0),24));

        sext_ln1118_455_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_11_fu_1117_p3),24));

        sext_ln1118_456_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_456_reg_2555),10));

        sext_ln1118_457_fu_2200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_2_reg_2633),24));

        sext_ln1118_458_fu_1699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_12_fu_1692_p3),23));

        sext_ln1118_459_fu_1710_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_13_fu_1703_p3),24));

        sext_ln1118_460_fu_1714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_13_fu_1703_p3),23));

        sext_ln1118_461_fu_1745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_14_fu_1738_p3),24));

        sext_ln1118_462_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_9_load_reg_2527),23));

    sext_ln1118_463_fu_1086_p0 <= kernel_data_V_9;
        sext_ln1118_463_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_463_fu_1086_p0),24));

    sext_ln1118_464_fu_1164_p0 <= kernel_data_V_10;
        sext_ln1118_464_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_464_fu_1164_p0),24));

    sext_ln1118_465_fu_1169_p0 <= kernel_data_V_10;
        sext_ln1118_465_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_465_fu_1169_p0),23));

        sext_ln1118_466_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_15_fu_1173_p3),23));

    sext_ln1118_467_fu_1222_p0 <= kernel_data_V_11;
        sext_ln1118_467_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_467_fu_1222_p0),22));

    sext_ln1118_468_fu_1227_p0 <= kernel_data_V_11;
        sext_ln1118_468_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_468_fu_1227_p0),24));

        sext_ln1118_469_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_11_load_reg_2586),19));

        sext_ln1118_470_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_16_fu_1768_p3),24));

        sext_ln1118_471_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_17_fu_1779_p3),24));

        sext_ln1118_472_fu_1806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_471_reg_2594),15));

        sext_ln1118_473_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_18_fu_1408_p3),19));

        sext_ln1118_474_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_472_fu_1431_p4),12));

        sext_ln1118_475_fu_1809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_1_reg_2626),24));

        sext_ln1118_476_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_19_fu_1814_p3),23));

        sext_ln1118_477_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_20_fu_1825_p3),23));

    sext_ln1118_478_fu_1252_p0 <= kernel_data_V_13;
        sext_ln1118_478_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_478_fu_1252_p0),24));

    sext_ln1118_479_fu_1445_p0 <= kernel_data_V_14;
        sext_ln1118_479_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_479_fu_1445_p0),24));

    sext_ln1118_480_fu_1450_p0 <= kernel_data_V_14;
        sext_ln1118_480_fu_1450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_480_fu_1450_p0),22));

    sext_ln1118_481_fu_1455_p0 <= kernel_data_V_14;
        sext_ln1118_481_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_481_fu_1455_p0),23));

        sext_ln1118_482_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_482_reg_2664),15));

        sext_ln1118_483_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_21_fu_1470_p3),22));

        sext_ln1118_484_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_22_fu_1482_p3),22));

        sext_ln1118_485_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_484_fu_1500_p4),15));

        sext_ln1118_486_fu_1862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_15_load_reg_2642),23));

    sext_ln1118_487_fu_1514_p0 <= kernel_data_V_15;
        sext_ln1118_487_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_487_fu_1514_p0),24));

        sext_ln1118_488_fu_1873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_23_fu_1866_p3),23));

        sext_ln1118_489_fu_1884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_24_fu_1877_p3),23));

        sext_ln1118_490_fu_2083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_reg_2619),24));

        sext_ln1118_491_fu_1911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_25_fu_1904_p3),24));

        sext_ln1118_492_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_26_fu_1915_p3),24));

    sext_ln1118_fu_974_p0 <= kernel_data_V_1170;
        sext_ln1118_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_fu_974_p0),24));

        sext_ln703_13_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_458_fu_1993_p2),15));

        sext_ln703_14_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_459_reg_2724),16));

        sext_ln703_15_fu_2042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_474_fu_2036_p2),16));

        sext_ln703_16_fu_1531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_489_fu_1525_p2),16));

        sext_ln703_17_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_490_fu_1535_p2),12));

        sext_ln703_18_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_491_fu_1545_p2),16));

        sext_ln703_fu_1971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_442_fu_1965_p2),16));

        sext_ln708_10_fu_1852_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_475_fu_1842_p4),16));

        sext_ln708_11_fu_1856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_481_reg_2659),16));

        sext_ln708_12_fu_2079_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_886),16));

        sext_ln708_13_fu_2128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_488_reg_2699),16));

    sext_ln708_1_fu_1036_p0 <= kernel_data_V_5;
        sext_ln708_1_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln708_1_fu_1036_p0),24));

        sext_ln708_2_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_432_reg_2689),16));

        sext_ln708_3_fu_2115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_436_reg_2479),16));

        sext_ln708_4_fu_2158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_886),16));

        sext_ln708_5_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_447_reg_2654),16));

        sext_ln708_6_fu_1647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_449_reg_2517),16));

        sext_ln708_7_fu_1734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_457_fu_1724_p4),16));

        sext_ln708_8_fu_2076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_462_reg_2560),16));

        sext_ln708_9_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_465_reg_2571),16));

        sext_ln708_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_431_fu_1589_p4),16));

    shl_ln1118_10_fu_1110_p3 <= (kernel_data_V_7_load_reg_2532 & ap_const_lv8_0);
    shl_ln1118_11_fu_1117_p3 <= (kernel_data_V_7_load_reg_2532 & ap_const_lv3_0);
    shl_ln1118_12_fu_1692_p3 <= (DataOut_V_2_reg_2633 & ap_const_lv6_0);
    shl_ln1118_13_fu_1703_p3 <= (DataOut_V_2_reg_2633 & ap_const_lv1_0);
    shl_ln1118_14_fu_1738_p3 <= (DataOut_V_2_reg_2633 & ap_const_lv7_0);
    shl_ln1118_15_fu_1173_p1 <= kernel_data_V_10;
    shl_ln1118_15_fu_1173_p3 <= (shl_ln1118_15_fu_1173_p1 & ap_const_lv6_0);
    shl_ln1118_16_fu_1768_p3 <= (kernel_data_V_11_load_reg_2586 & ap_const_lv7_0);
    shl_ln1118_17_fu_1779_p3 <= (kernel_data_V_11_load_reg_2586 & ap_const_lv1_0);
    shl_ln1118_18_fu_1408_p3 <= (kernel_data_V_11_load_reg_2586 & ap_const_lv2_0);
    shl_ln1118_19_fu_1814_p3 <= (DataOut_V_1_reg_2626 & ap_const_lv6_0);
    shl_ln1118_1_fu_1572_p3 <= (kernel_data_V_1170_load_reg_2415 & ap_const_lv3_0);
    shl_ln1118_20_fu_1825_p3 <= (DataOut_V_1_reg_2626 & ap_const_lv4_0);
    shl_ln1118_21_fu_1470_p1 <= kernel_data_V_14;
    shl_ln1118_21_fu_1470_p3 <= (shl_ln1118_21_fu_1470_p1 & ap_const_lv5_0);
    shl_ln1118_22_fu_1482_p1 <= kernel_data_V_14;
    shl_ln1118_22_fu_1482_p3 <= (shl_ln1118_22_fu_1482_p1 & ap_const_lv2_0);
    shl_ln1118_23_fu_1866_p3 <= (kernel_data_V_15_load_reg_2642 & ap_const_lv6_0);
    shl_ln1118_24_fu_1877_p3 <= (kernel_data_V_15_load_reg_2642 & ap_const_lv1_0);
    shl_ln1118_25_fu_1904_p3 <= (tmp_data_0_V_reg_2619 & ap_const_lv7_0);
    shl_ln1118_26_fu_1915_p3 <= (tmp_data_0_V_reg_2619 & ap_const_lv2_0);
    shl_ln1118_2_fu_1603_p3 <= (kernel_data_V_1170_load_reg_2415 & ap_const_lv6_0);
    shl_ln1118_3_fu_1614_p3 <= (kernel_data_V_1170_load_reg_2415 & ap_const_lv2_0);
    shl_ln1118_4_fu_1333_p3 <= (kernel_data_V_5_load_reg_2500 & ap_const_lv5_0);
    shl_ln1118_5_fu_1344_p3 <= (kernel_data_V_5_load_reg_2500 & ap_const_lv2_0);
    shl_ln1118_6_fu_1371_p3 <= (kernel_data_V_5_load_reg_2500 & ap_const_lv1_0);
    shl_ln1118_7_fu_1650_p3 <= (kernel_data_V_6_load_reg_2508 & ap_const_lv4_0);
    shl_ln1118_8_fu_1661_p3 <= (kernel_data_V_6_load_reg_2508 & ap_const_lv1_0);
    shl_ln1118_9_fu_2162_p3 <= (kernel_data_V_6_load_reg_2508 & ap_const_lv7_0);
    shl_ln1118_s_fu_2173_p3 <= (kernel_data_V_6_load_reg_2508 & ap_const_lv3_0);
    shl_ln_fu_1561_p3 <= (kernel_data_V_1170_load_reg_2415 & ap_const_lv5_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_10_fu_1888_p2 <= std_logic_vector(signed(sext_ln1118_489_fu_1884_p1) - signed(sext_ln1118_488_fu_1873_p1));
    sub_ln1118_1_fu_1382_p2 <= std_logic_vector(signed(sext_ln1118_442_fu_1340_p1) - signed(sext_ln1118_444_fu_1378_p1));
    sub_ln1118_2_fu_1672_p2 <= std_logic_vector(signed(sext_ln1118_448_fu_1657_p1) - signed(sext_ln1118_449_fu_1668_p1));
    sub_ln1118_3_fu_2184_p2 <= std_logic_vector(signed(sext_ln1118_451_fu_2169_p1) - signed(sext_ln1118_452_fu_2180_p1));
    sub_ln1118_4_fu_1144_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1118_453_fu_1107_p1));
    sub_ln1118_5_fu_1718_p2 <= std_logic_vector(signed(sext_ln1118_458_fu_1699_p1) - signed(sext_ln1118_460_fu_1714_p1));
    sub_ln1118_6_fu_1790_p2 <= std_logic_vector(signed(sext_ln1118_470_fu_1775_p1) - signed(sext_ln1118_471_fu_1786_p1));
    sub_ln1118_7_fu_1419_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln1118_473_fu_1415_p1));
    sub_ln1118_8_fu_1425_p2 <= std_logic_vector(unsigned(sub_ln1118_7_fu_1419_p2) - unsigned(sext_ln1118_469_fu_1405_p1));
    sub_ln1118_9_fu_1494_p2 <= std_logic_vector(signed(sext_ln1118_483_fu_1478_p1) - signed(sext_ln1118_484_fu_1490_p1));
    sub_ln1118_fu_1625_p2 <= std_logic_vector(signed(sext_ln1118_434_fu_1610_p1) - signed(sext_ln1118_435_fu_1621_p1));
    tmp_data_0_V_148_fu_2265_p2 <= std_logic_vector(unsigned(add_ln703_437_reg_2785) + unsigned(add_ln703_445_fu_2261_p2));
    tmp_data_1_V_fu_2283_p2 <= std_logic_vector(unsigned(add_ln703_453_fu_2274_p2) + unsigned(add_ln703_461_fu_2279_p2));
    tmp_data_2_V_fu_2256_p2 <= std_logic_vector(unsigned(add_ln703_469_reg_2729) + unsigned(add_ln703_477_fu_2251_p2));
    trunc_ln708_431_fu_1589_p4 <= add_ln1118_fu_1583_p2(21 downto 8);
    trunc_ln708_436_fu_1006_p1 <= grp_fu_374_p2(23 - 1 downto 0);
    trunc_ln708_448_fu_1388_p4 <= sub_ln1118_1_fu_1382_p2(21 downto 8);
    trunc_ln708_449_fu_1046_p1 <= grp_fu_373_p2(23 - 1 downto 0);
    trunc_ln708_450_fu_1678_p4 <= sub_ln1118_2_fu_1672_p2(20 downto 8);
    trunc_ln708_455_fu_1134_p4 <= add_ln1118_2_fu_1128_p2(23 downto 8);
    trunc_ln708_457_fu_1724_p4 <= sub_ln1118_5_fu_1718_p2(22 downto 8);
    trunc_ln708_459_fu_1755_p4 <= add_ln1118_3_fu_1749_p2(23 downto 8);
    trunc_ln708_470_fu_1796_p4 <= sub_ln1118_6_fu_1790_p2(23 downto 8);
    trunc_ln708_471_fu_1232_p1 <= grp_fu_373_p2(22 - 1 downto 0);
    trunc_ln708_472_fu_1431_p4 <= sub_ln1118_8_fu_1425_p2(18 downto 8);
    trunc_ln708_475_fu_1842_p4 <= add_ln1118_5_fu_1836_p2(22 downto 8);
    trunc_ln708_482_fu_1460_p1 <= grp_fu_374_p2(22 - 1 downto 0);
    trunc_ln708_484_fu_1500_p4 <= sub_ln1118_9_fu_1494_p2(21 downto 8);
    trunc_ln708_489_fu_1932_p4 <= add_ln1118_6_fu_1926_p2(23 downto 8);
end behav;
