-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tanh_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_tanh_config10_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    res_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_V_data_4_V_TREADY : IN STD_LOGIC;
    res_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_V_data_5_V_TREADY : IN STD_LOGIC;
    res_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_V_data_6_V_TREADY : IN STD_LOGIC;
    res_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_V_data_7_V_TREADY : IN STD_LOGIC;
    res_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_V_data_8_V_TREADY : IN STD_LOGIC;
    res_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_V_data_9_V_TREADY : IN STD_LOGIC );
end;


architecture behav of tanh_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_tanh_config10_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv26_3FFFFF9 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111111001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_200 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op5 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal regslice_both_res_V_data_0_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_1_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_2_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_3_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_4_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_5_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_6_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_7_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_8_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_9_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tanh_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce0 : STD_LOGIC;
    signal tanh_table1_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce1 : STD_LOGIC;
    signal tanh_table1_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce2 : STD_LOGIC;
    signal tanh_table1_q2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce3 : STD_LOGIC;
    signal tanh_table1_q3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce4 : STD_LOGIC;
    signal tanh_table1_q4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce5 : STD_LOGIC;
    signal tanh_table1_q5 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce6 : STD_LOGIC;
    signal tanh_table1_q6 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce7 : STD_LOGIC;
    signal tanh_table1_q7 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce8 : STD_LOGIC;
    signal tanh_table1_q8 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table1_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table1_ce9 : STD_LOGIC;
    signal tanh_table1_q9 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal data_V_data_8_V_blk_n : STD_LOGIC;
    signal data_V_data_9_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_4_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_5_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_6_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_7_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_8_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_9_V_TDATA_blk_n : STD_LOGIC;
    signal sext_ln850_fu_471_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_reg_1863 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_reg_1869 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_reg_1874 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_499_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_reg_1879 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_1_fu_523_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_1_reg_1884 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_1_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_1_reg_1890 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_1_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_1_reg_1895 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_1_fu_551_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_1_reg_1900 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_2_fu_575_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_2_reg_1905 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_2_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_2_reg_1911 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_2_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_2_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_2_fu_603_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_2_reg_1921 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_3_fu_627_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_3_reg_1926 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_3_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_3_reg_1932 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_3_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_3_reg_1937 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_3_fu_655_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_3_reg_1942 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_4_fu_679_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_4_reg_1947 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_4_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_4_reg_1953 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_4_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_4_reg_1958 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_4_fu_707_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_4_reg_1963 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_5_fu_731_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_5_reg_1968 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_5_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_5_reg_1974 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_5_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_5_reg_1979 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_5_fu_759_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_5_reg_1984 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_6_fu_783_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_6_reg_1989 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_6_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_6_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_6_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_6_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_6_fu_811_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_6_reg_2005 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_7_fu_835_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_7_reg_2010 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_7_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_7_reg_2016 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_7_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_7_reg_2021 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_7_fu_863_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_7_reg_2026 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_8_fu_887_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_8_reg_2031 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_8_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_8_reg_2037 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_8_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_8_reg_2042 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_8_fu_915_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_8_reg_2047 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_9_fu_939_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln850_9_reg_2052 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_9_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_9_reg_2058 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_9_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_9_reg_2063 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_9_fu_967_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_9_reg_2068 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln408_fu_1052_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_1_fu_1136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_2_fu_1220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_3_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_4_fu_1388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_5_fu_1472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_6_fu_1556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_7_fu_1640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_8_fu_1724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_9_fu_1808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_1_fu_461_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_453_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_fu_481_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_fu_485_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_513_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_1_fu_505_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_1_fu_533_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_1_fu_537_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_565_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_2_fu_557_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_2_fu_585_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_2_fu_589_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_617_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_3_fu_609_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_3_fu_637_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_3_fu_641_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_669_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_4_fu_661_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_4_fu_689_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_4_fu_693_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_721_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_5_fu_713_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_5_fu_741_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_5_fu_745_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_773_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_6_fu_765_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_6_fu_793_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_6_fu_797_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_825_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_7_fu_817_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_7_fu_845_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_7_fu_849_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_877_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_8_fu_869_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_8_fu_897_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_8_fu_901_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_929_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_9_fu_921_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_9_fu_949_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_9_fu_953_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_fu_973_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_fu_978_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_fu_984_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_fu_988_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_fu_1008_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_1000_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_fu_1030_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_fu_994_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_1_fu_1044_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_1_fu_1057_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_1_fu_1062_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_1_fu_1068_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_1_fu_1072_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_fu_1092_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_1_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_1_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_1_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_2_fu_1114_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_1_fu_1078_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_3_fu_1128_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_2_fu_1141_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_2_fu_1146_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_2_fu_1152_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_2_fu_1156_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_13_fu_1176_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_1168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_2_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_2_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_2_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_4_fu_1198_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_2_fu_1162_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_5_fu_1212_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_3_fu_1225_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_3_fu_1230_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_3_fu_1236_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_3_fu_1240_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_17_fu_1260_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_3_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_3_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_3_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_6_fu_1282_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_3_fu_1246_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_7_fu_1296_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_4_fu_1309_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_4_fu_1314_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_4_fu_1320_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_4_fu_1324_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_20_fu_1344_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_19_fu_1336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_4_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_4_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_4_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_8_fu_1366_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_4_fu_1330_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_9_fu_1380_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_5_fu_1393_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_5_fu_1398_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_5_fu_1404_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_5_fu_1408_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_22_fu_1428_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_fu_1420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_5_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_5_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_5_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_10_fu_1450_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_5_fu_1414_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_11_fu_1464_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_6_fu_1477_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_6_fu_1482_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_6_fu_1488_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_6_fu_1492_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_24_fu_1512_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_23_fu_1504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_6_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_6_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_6_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_12_fu_1534_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_6_fu_1498_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_13_fu_1548_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_7_fu_1561_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_7_fu_1566_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_7_fu_1572_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_7_fu_1576_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_26_fu_1596_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_fu_1588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_7_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_7_fu_1606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_7_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_14_fu_1618_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_7_fu_1582_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_15_fu_1632_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_8_fu_1645_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_8_fu_1650_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_8_fu_1656_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_8_fu_1660_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_28_fu_1680_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_fu_1672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_8_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_8_fu_1690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_8_fu_1710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_16_fu_1702_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_8_fu_1666_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_17_fu_1716_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln851_9_fu_1729_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_9_fu_1734_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln403_9_fu_1740_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln403_9_fu_1744_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_30_fu_1764_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_1756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln404_9_fu_1780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln406_9_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln404_9_fu_1794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_18_fu_1786_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln403_9_fu_1750_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln404_19_fu_1800_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal res_V_data_0_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_0_V_TVALID_int : STD_LOGIC;
    signal res_V_data_0_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_0_V_U_vld_out : STD_LOGIC;
    signal res_V_data_1_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_1_V_TVALID_int : STD_LOGIC;
    signal res_V_data_1_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_1_V_U_vld_out : STD_LOGIC;
    signal res_V_data_2_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_2_V_TVALID_int : STD_LOGIC;
    signal res_V_data_2_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_2_V_U_vld_out : STD_LOGIC;
    signal res_V_data_3_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_3_V_TVALID_int : STD_LOGIC;
    signal res_V_data_3_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_3_V_U_vld_out : STD_LOGIC;
    signal res_V_data_4_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_4_V_TVALID_int : STD_LOGIC;
    signal res_V_data_4_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_4_V_U_vld_out : STD_LOGIC;
    signal res_V_data_5_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_5_V_TVALID_int : STD_LOGIC;
    signal res_V_data_5_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_5_V_U_vld_out : STD_LOGIC;
    signal res_V_data_6_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_6_V_TVALID_int : STD_LOGIC;
    signal res_V_data_6_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_6_V_U_vld_out : STD_LOGIC;
    signal res_V_data_7_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_7_V_TVALID_int : STD_LOGIC;
    signal res_V_data_7_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_7_V_U_vld_out : STD_LOGIC;
    signal res_V_data_8_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_8_V_TVALID_int : STD_LOGIC;
    signal res_V_data_8_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_8_V_U_vld_out : STD_LOGIC;
    signal res_V_data_9_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_9_V_TVALID_int : STD_LOGIC;
    signal res_V_data_9_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_9_V_U_vld_out : STD_LOGIC;

    component tanh_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_tanh_config10_s_tanh_taFfa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    tanh_table1_U : component tanh_array_ap_fixed_10u_array_ap_fixed_16_6_5_3_0_10u_tanh_config10_s_tanh_taFfa
    generic map (
        DataWidth => 11,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_table1_address0,
        ce0 => tanh_table1_ce0,
        q0 => tanh_table1_q0,
        address1 => tanh_table1_address1,
        ce1 => tanh_table1_ce1,
        q1 => tanh_table1_q1,
        address2 => tanh_table1_address2,
        ce2 => tanh_table1_ce2,
        q2 => tanh_table1_q2,
        address3 => tanh_table1_address3,
        ce3 => tanh_table1_ce3,
        q3 => tanh_table1_q3,
        address4 => tanh_table1_address4,
        ce4 => tanh_table1_ce4,
        q4 => tanh_table1_q4,
        address5 => tanh_table1_address5,
        ce5 => tanh_table1_ce5,
        q5 => tanh_table1_q5,
        address6 => tanh_table1_address6,
        ce6 => tanh_table1_ce6,
        q6 => tanh_table1_q6,
        address7 => tanh_table1_address7,
        ce7 => tanh_table1_ce7,
        q7 => tanh_table1_q7,
        address8 => tanh_table1_address8,
        ce8 => tanh_table1_ce8,
        q8 => tanh_table1_q8,
        address9 => tanh_table1_address9,
        ce9 => tanh_table1_ce9,
        q9 => tanh_table1_q9);

    regslice_both_res_V_data_0_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_0_V_TDATA_int,
        vld_in => res_V_data_0_V_TVALID_int,
        ack_in => res_V_data_0_V_TREADY_int,
        data_out => res_V_data_0_V_TDATA,
        vld_out => regslice_both_res_V_data_0_V_U_vld_out,
        ack_out => res_V_data_0_V_TREADY,
        apdone_blk => regslice_both_res_V_data_0_V_U_apdone_blk);

    regslice_both_res_V_data_1_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_1_V_TDATA_int,
        vld_in => res_V_data_1_V_TVALID_int,
        ack_in => res_V_data_1_V_TREADY_int,
        data_out => res_V_data_1_V_TDATA,
        vld_out => regslice_both_res_V_data_1_V_U_vld_out,
        ack_out => res_V_data_1_V_TREADY,
        apdone_blk => regslice_both_res_V_data_1_V_U_apdone_blk);

    regslice_both_res_V_data_2_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_2_V_TDATA_int,
        vld_in => res_V_data_2_V_TVALID_int,
        ack_in => res_V_data_2_V_TREADY_int,
        data_out => res_V_data_2_V_TDATA,
        vld_out => regslice_both_res_V_data_2_V_U_vld_out,
        ack_out => res_V_data_2_V_TREADY,
        apdone_blk => regslice_both_res_V_data_2_V_U_apdone_blk);

    regslice_both_res_V_data_3_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_3_V_TDATA_int,
        vld_in => res_V_data_3_V_TVALID_int,
        ack_in => res_V_data_3_V_TREADY_int,
        data_out => res_V_data_3_V_TDATA,
        vld_out => regslice_both_res_V_data_3_V_U_vld_out,
        ack_out => res_V_data_3_V_TREADY,
        apdone_blk => regslice_both_res_V_data_3_V_U_apdone_blk);

    regslice_both_res_V_data_4_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_4_V_TDATA_int,
        vld_in => res_V_data_4_V_TVALID_int,
        ack_in => res_V_data_4_V_TREADY_int,
        data_out => res_V_data_4_V_TDATA,
        vld_out => regslice_both_res_V_data_4_V_U_vld_out,
        ack_out => res_V_data_4_V_TREADY,
        apdone_blk => regslice_both_res_V_data_4_V_U_apdone_blk);

    regslice_both_res_V_data_5_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_5_V_TDATA_int,
        vld_in => res_V_data_5_V_TVALID_int,
        ack_in => res_V_data_5_V_TREADY_int,
        data_out => res_V_data_5_V_TDATA,
        vld_out => regslice_both_res_V_data_5_V_U_vld_out,
        ack_out => res_V_data_5_V_TREADY,
        apdone_blk => regslice_both_res_V_data_5_V_U_apdone_blk);

    regslice_both_res_V_data_6_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_6_V_TDATA_int,
        vld_in => res_V_data_6_V_TVALID_int,
        ack_in => res_V_data_6_V_TREADY_int,
        data_out => res_V_data_6_V_TDATA,
        vld_out => regslice_both_res_V_data_6_V_U_vld_out,
        ack_out => res_V_data_6_V_TREADY,
        apdone_blk => regslice_both_res_V_data_6_V_U_apdone_blk);

    regslice_both_res_V_data_7_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_7_V_TDATA_int,
        vld_in => res_V_data_7_V_TVALID_int,
        ack_in => res_V_data_7_V_TREADY_int,
        data_out => res_V_data_7_V_TDATA,
        vld_out => regslice_both_res_V_data_7_V_U_vld_out,
        ack_out => res_V_data_7_V_TREADY,
        apdone_blk => regslice_both_res_V_data_7_V_U_apdone_blk);

    regslice_both_res_V_data_8_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_8_V_TDATA_int,
        vld_in => res_V_data_8_V_TVALID_int,
        ack_in => res_V_data_8_V_TREADY_int,
        data_out => res_V_data_8_V_TDATA,
        vld_out => regslice_both_res_V_data_8_V_U_vld_out,
        ack_out => res_V_data_8_V_TREADY,
        apdone_blk => regslice_both_res_V_data_8_V_U_apdone_blk);

    regslice_both_res_V_data_9_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_9_V_TDATA_int,
        vld_in => res_V_data_9_V_TVALID_int,
        ack_in => res_V_data_9_V_TREADY_int,
        data_out => res_V_data_9_V_TDATA,
        vld_out => regslice_both_res_V_data_9_V_U_vld_out,
        ack_out => res_V_data_9_V_TREADY,
        apdone_blk => regslice_both_res_V_data_9_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln700_1_reg_1900 <= add_ln700_1_fu_551_p2;
                add_ln700_2_reg_1921 <= add_ln700_2_fu_603_p2;
                add_ln700_3_reg_1942 <= add_ln700_3_fu_655_p2;
                add_ln700_4_reg_1963 <= add_ln700_4_fu_707_p2;
                add_ln700_5_reg_1984 <= add_ln700_5_fu_759_p2;
                add_ln700_6_reg_2005 <= add_ln700_6_fu_811_p2;
                add_ln700_7_reg_2026 <= add_ln700_7_fu_863_p2;
                add_ln700_8_reg_2047 <= add_ln700_8_fu_915_p2;
                add_ln700_9_reg_2068 <= add_ln700_9_fu_967_p2;
                add_ln700_reg_1879 <= add_ln700_fu_499_p2;
                icmp_ln850_1_reg_1890 <= icmp_ln850_1_fu_527_p2;
                icmp_ln850_2_reg_1911 <= icmp_ln850_2_fu_579_p2;
                icmp_ln850_3_reg_1932 <= icmp_ln850_3_fu_631_p2;
                icmp_ln850_4_reg_1953 <= icmp_ln850_4_fu_683_p2;
                icmp_ln850_5_reg_1974 <= icmp_ln850_5_fu_735_p2;
                icmp_ln850_6_reg_1995 <= icmp_ln850_6_fu_787_p2;
                icmp_ln850_7_reg_2016 <= icmp_ln850_7_fu_839_p2;
                icmp_ln850_8_reg_2037 <= icmp_ln850_8_fu_891_p2;
                icmp_ln850_9_reg_2058 <= icmp_ln850_9_fu_943_p2;
                icmp_ln850_reg_1869 <= icmp_ln850_fu_475_p2;
                icmp_ln851_1_reg_1895 <= icmp_ln851_1_fu_545_p2;
                icmp_ln851_2_reg_1916 <= icmp_ln851_2_fu_597_p2;
                icmp_ln851_3_reg_1937 <= icmp_ln851_3_fu_649_p2;
                icmp_ln851_4_reg_1958 <= icmp_ln851_4_fu_701_p2;
                icmp_ln851_5_reg_1979 <= icmp_ln851_5_fu_753_p2;
                icmp_ln851_6_reg_2000 <= icmp_ln851_6_fu_805_p2;
                icmp_ln851_7_reg_2021 <= icmp_ln851_7_fu_857_p2;
                icmp_ln851_8_reg_2042 <= icmp_ln851_8_fu_909_p2;
                icmp_ln851_9_reg_2063 <= icmp_ln851_9_fu_961_p2;
                icmp_ln851_reg_1874 <= icmp_ln851_fu_493_p2;
                sext_ln850_1_reg_1884 <= sext_ln850_1_fu_523_p1;
                sext_ln850_2_reg_1905 <= sext_ln850_2_fu_575_p1;
                sext_ln850_3_reg_1926 <= sext_ln850_3_fu_627_p1;
                sext_ln850_4_reg_1947 <= sext_ln850_4_fu_679_p1;
                sext_ln850_5_reg_1968 <= sext_ln850_5_fu_731_p1;
                sext_ln850_6_reg_1989 <= sext_ln850_6_fu_783_p1;
                sext_ln850_7_reg_2010 <= sext_ln850_7_fu_835_p1;
                sext_ln850_8_reg_2031 <= sext_ln850_8_fu_887_p1;
                sext_ln850_9_reg_2052 <= sext_ln850_9_fu_939_p1;
                sext_ln850_reg_1863 <= sext_ln850_fu_471_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln403_1_fu_1072_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_1_fu_1062_p3));
    add_ln403_2_fu_1156_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_2_fu_1146_p3));
    add_ln403_3_fu_1240_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_3_fu_1230_p3));
    add_ln403_4_fu_1324_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_4_fu_1314_p3));
    add_ln403_5_fu_1408_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_5_fu_1398_p3));
    add_ln403_6_fu_1492_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_6_fu_1482_p3));
    add_ln403_7_fu_1576_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_7_fu_1566_p3));
    add_ln403_8_fu_1660_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_8_fu_1650_p3));
    add_ln403_9_fu_1744_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_9_fu_1734_p3));
    add_ln403_fu_988_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_fu_978_p3));
    add_ln700_1_fu_551_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_1_fu_523_p1));
    add_ln700_2_fu_603_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_2_fu_575_p1));
    add_ln700_3_fu_655_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_3_fu_627_p1));
    add_ln700_4_fu_707_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_4_fu_679_p1));
    add_ln700_5_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_5_fu_731_p1));
    add_ln700_6_fu_811_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_6_fu_783_p1));
    add_ln700_7_fu_863_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_7_fu_835_p1));
    add_ln700_8_fu_915_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_8_fu_887_p1));
    add_ln700_9_fu_967_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_9_fu_939_p1));
    add_ln700_fu_499_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_fu_471_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter3, io_acc_block_signal_op5, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op5, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, res_V_data_0_V_TREADY_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((res_V_data_0_V_TREADY_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((res_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, io_acc_block_signal_op5, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, res_V_data_0_V_TREADY_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((res_V_data_0_V_TREADY_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((res_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((io_acc_block_signal_op5 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_0_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_1_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_2_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_3_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_4_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_5_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_6_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_7_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_8_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_9_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln406_1_fu_1102_p2 <= "0" when (tmp_8_fu_1092_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_2_fu_1186_p2 <= "0" when (tmp_13_fu_1176_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_3_fu_1270_p2 <= "0" when (tmp_17_fu_1260_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_4_fu_1354_p2 <= "0" when (tmp_20_fu_1344_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_5_fu_1438_p2 <= "0" when (tmp_22_fu_1428_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_6_fu_1522_p2 <= "0" when (tmp_24_fu_1512_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_7_fu_1606_p2 <= "0" when (tmp_26_fu_1596_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_8_fu_1690_p2 <= "0" when (tmp_28_fu_1680_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_9_fu_1774_p2 <= "0" when (tmp_30_fu_1764_p4 = ap_const_lv4_0) else "1";
    icmp_ln406_fu_1018_p2 <= "0" when (tmp_4_fu_1008_p4 = ap_const_lv4_0) else "1";
    icmp_ln850_1_fu_527_p2 <= "1" when (signed(shl_ln1118_1_fu_505_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_2_fu_579_p2 <= "1" when (signed(shl_ln1118_2_fu_557_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_3_fu_631_p2 <= "1" when (signed(shl_ln1118_3_fu_609_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_4_fu_683_p2 <= "1" when (signed(shl_ln1118_4_fu_661_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_5_fu_735_p2 <= "1" when (signed(shl_ln1118_5_fu_713_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_6_fu_787_p2 <= "1" when (signed(shl_ln1118_6_fu_765_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_7_fu_839_p2 <= "1" when (signed(shl_ln1118_7_fu_817_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_8_fu_891_p2 <= "1" when (signed(shl_ln1118_8_fu_869_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_9_fu_943_p2 <= "1" when (signed(shl_ln1118_9_fu_921_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_fu_475_p2 <= "1" when (signed(shl_ln_fu_453_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln851_1_fu_545_p2 <= "1" when (p_Result_2_1_fu_537_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_597_p2 <= "1" when (p_Result_2_2_fu_589_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_649_p2 <= "1" when (p_Result_2_3_fu_641_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_4_fu_701_p2 <= "1" when (p_Result_2_4_fu_693_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_5_fu_753_p2 <= "1" when (p_Result_2_5_fu_745_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_6_fu_805_p2 <= "1" when (p_Result_2_6_fu_797_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_7_fu_857_p2 <= "1" when (p_Result_2_7_fu_849_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_8_fu_909_p2 <= "1" when (p_Result_2_8_fu_901_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_9_fu_961_p2 <= "1" when (p_Result_2_9_fu_953_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_fu_493_p2 <= "1" when (p_Result_2_fu_485_p3 = ap_const_lv10_0) else "0";
    io_acc_block_signal_op5 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    or_ln404_1_fu_1122_p2 <= (tmp_6_fu_1084_p3 or icmp_ln406_1_fu_1102_p2);
    or_ln404_2_fu_1206_p2 <= (tmp_11_fu_1168_p3 or icmp_ln406_2_fu_1186_p2);
    or_ln404_3_fu_1290_p2 <= (tmp_15_fu_1252_p3 or icmp_ln406_3_fu_1270_p2);
    or_ln404_4_fu_1374_p2 <= (tmp_19_fu_1336_p3 or icmp_ln406_4_fu_1354_p2);
    or_ln404_5_fu_1458_p2 <= (tmp_21_fu_1420_p3 or icmp_ln406_5_fu_1438_p2);
    or_ln404_6_fu_1542_p2 <= (tmp_23_fu_1504_p3 or icmp_ln406_6_fu_1522_p2);
    or_ln404_7_fu_1626_p2 <= (tmp_25_fu_1588_p3 or icmp_ln406_7_fu_1606_p2);
    or_ln404_8_fu_1710_p2 <= (tmp_27_fu_1672_p3 or icmp_ln406_8_fu_1690_p2);
    or_ln404_9_fu_1794_p2 <= (tmp_29_fu_1756_p3 or icmp_ln406_9_fu_1774_p2);
    or_ln404_fu_1038_p2 <= (tmp_2_fu_1000_p3 or icmp_ln406_fu_1018_p2);
    p_Result_2_1_fu_537_p3 <= (trunc_ln851_1_fu_533_p1 & ap_const_lv7_0);
    p_Result_2_2_fu_589_p3 <= (trunc_ln851_2_fu_585_p1 & ap_const_lv7_0);
    p_Result_2_3_fu_641_p3 <= (trunc_ln851_3_fu_637_p1 & ap_const_lv7_0);
    p_Result_2_4_fu_693_p3 <= (trunc_ln851_4_fu_689_p1 & ap_const_lv7_0);
    p_Result_2_5_fu_745_p3 <= (trunc_ln851_5_fu_741_p1 & ap_const_lv7_0);
    p_Result_2_6_fu_797_p3 <= (trunc_ln851_6_fu_793_p1 & ap_const_lv7_0);
    p_Result_2_7_fu_849_p3 <= (trunc_ln851_7_fu_845_p1 & ap_const_lv7_0);
    p_Result_2_8_fu_901_p3 <= (trunc_ln851_8_fu_897_p1 & ap_const_lv7_0);
    p_Result_2_9_fu_953_p3 <= (trunc_ln851_9_fu_949_p1 & ap_const_lv7_0);
    p_Result_2_fu_485_p3 <= (trunc_ln851_fu_481_p1 & ap_const_lv7_0);

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_0_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY_int;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_0_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q0),16));

    res_V_data_0_V_TVALID <= regslice_both_res_V_data_0_V_U_vld_out;

    res_V_data_0_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_1_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY_int;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_1_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q1),16));

    res_V_data_1_V_TVALID <= regslice_both_res_V_data_1_V_U_vld_out;

    res_V_data_1_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_2_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY_int;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_2_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q2),16));

    res_V_data_2_V_TVALID <= regslice_both_res_V_data_2_V_U_vld_out;

    res_V_data_2_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_3_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY_int;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_3_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q3),16));

    res_V_data_3_V_TVALID <= regslice_both_res_V_data_3_V_U_vld_out;

    res_V_data_3_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_4_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_4_V_TDATA_blk_n <= res_V_data_4_V_TREADY_int;
        else 
            res_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_4_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q4),16));

    res_V_data_4_V_TVALID <= regslice_both_res_V_data_4_V_U_vld_out;

    res_V_data_4_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_4_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_5_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_5_V_TDATA_blk_n <= res_V_data_5_V_TREADY_int;
        else 
            res_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_5_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q5),16));

    res_V_data_5_V_TVALID <= regslice_both_res_V_data_5_V_U_vld_out;

    res_V_data_5_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_5_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_6_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_6_V_TDATA_blk_n <= res_V_data_6_V_TREADY_int;
        else 
            res_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_6_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q6),16));

    res_V_data_6_V_TVALID <= regslice_both_res_V_data_6_V_U_vld_out;

    res_V_data_6_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_6_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_7_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_7_V_TDATA_blk_n <= res_V_data_7_V_TREADY_int;
        else 
            res_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_7_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q7),16));

    res_V_data_7_V_TVALID <= regslice_both_res_V_data_7_V_U_vld_out;

    res_V_data_7_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_7_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_8_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_8_V_TDATA_blk_n <= res_V_data_8_V_TREADY_int;
        else 
            res_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_8_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q8),16));

    res_V_data_8_V_TVALID <= regslice_both_res_V_data_8_V_U_vld_out;

    res_V_data_8_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_8_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, res_V_data_9_V_TREADY_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            res_V_data_9_V_TDATA_blk_n <= res_V_data_9_V_TREADY_int;
        else 
            res_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_9_V_TDATA_int <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table1_q9),16));

    res_V_data_9_V_TVALID <= regslice_both_res_V_data_9_V_U_vld_out;

    res_V_data_9_V_TVALID_int_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_9_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    select_ln404_10_fu_1450_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_5_fu_1444_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_11_fu_1464_p3 <= 
        select_ln404_10_fu_1450_p3 when (or_ln404_5_fu_1458_p2(0) = '1') else 
        xor_ln403_5_fu_1414_p2;
    select_ln404_12_fu_1534_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_6_fu_1528_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_13_fu_1548_p3 <= 
        select_ln404_12_fu_1534_p3 when (or_ln404_6_fu_1542_p2(0) = '1') else 
        xor_ln403_6_fu_1498_p2;
    select_ln404_14_fu_1618_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_7_fu_1612_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_15_fu_1632_p3 <= 
        select_ln404_14_fu_1618_p3 when (or_ln404_7_fu_1626_p2(0) = '1') else 
        xor_ln403_7_fu_1582_p2;
    select_ln404_16_fu_1702_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_8_fu_1696_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_17_fu_1716_p3 <= 
        select_ln404_16_fu_1702_p3 when (or_ln404_8_fu_1710_p2(0) = '1') else 
        xor_ln403_8_fu_1666_p2;
    select_ln404_18_fu_1786_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_9_fu_1780_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_19_fu_1800_p3 <= 
        select_ln404_18_fu_1786_p3 when (or_ln404_9_fu_1794_p2(0) = '1') else 
        xor_ln403_9_fu_1750_p2;
    select_ln404_1_fu_1044_p3 <= 
        select_ln404_fu_1030_p3 when (or_ln404_fu_1038_p2(0) = '1') else 
        xor_ln403_fu_994_p2;
    select_ln404_2_fu_1114_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_1_fu_1108_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_3_fu_1128_p3 <= 
        select_ln404_2_fu_1114_p3 when (or_ln404_1_fu_1122_p2(0) = '1') else 
        xor_ln403_1_fu_1078_p2;
    select_ln404_4_fu_1198_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_2_fu_1192_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_5_fu_1212_p3 <= 
        select_ln404_4_fu_1198_p3 when (or_ln404_2_fu_1206_p2(0) = '1') else 
        xor_ln403_2_fu_1162_p2;
    select_ln404_6_fu_1282_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_3_fu_1276_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_7_fu_1296_p3 <= 
        select_ln404_6_fu_1282_p3 when (or_ln404_3_fu_1290_p2(0) = '1') else 
        xor_ln403_3_fu_1246_p2;
    select_ln404_8_fu_1366_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_4_fu_1360_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln404_9_fu_1380_p3 <= 
        select_ln404_8_fu_1366_p3 when (or_ln404_4_fu_1374_p2(0) = '1') else 
        xor_ln403_4_fu_1330_p2;
    select_ln404_fu_1030_p3 <= 
        ap_const_lv10_3FF when (xor_ln404_fu_1024_p2(0) = '1') else 
        ap_const_lv10_0;
    select_ln850_1_fu_1062_p3 <= 
        select_ln851_1_fu_1057_p3 when (icmp_ln850_1_reg_1890(0) = '1') else 
        sext_ln850_1_reg_1884;
    select_ln850_2_fu_1146_p3 <= 
        select_ln851_2_fu_1141_p3 when (icmp_ln850_2_reg_1911(0) = '1') else 
        sext_ln850_2_reg_1905;
    select_ln850_3_fu_1230_p3 <= 
        select_ln851_3_fu_1225_p3 when (icmp_ln850_3_reg_1932(0) = '1') else 
        sext_ln850_3_reg_1926;
    select_ln850_4_fu_1314_p3 <= 
        select_ln851_4_fu_1309_p3 when (icmp_ln850_4_reg_1953(0) = '1') else 
        sext_ln850_4_reg_1947;
    select_ln850_5_fu_1398_p3 <= 
        select_ln851_5_fu_1393_p3 when (icmp_ln850_5_reg_1974(0) = '1') else 
        sext_ln850_5_reg_1968;
    select_ln850_6_fu_1482_p3 <= 
        select_ln851_6_fu_1477_p3 when (icmp_ln850_6_reg_1995(0) = '1') else 
        sext_ln850_6_reg_1989;
    select_ln850_7_fu_1566_p3 <= 
        select_ln851_7_fu_1561_p3 when (icmp_ln850_7_reg_2016(0) = '1') else 
        sext_ln850_7_reg_2010;
    select_ln850_8_fu_1650_p3 <= 
        select_ln851_8_fu_1645_p3 when (icmp_ln850_8_reg_2037(0) = '1') else 
        sext_ln850_8_reg_2031;
    select_ln850_9_fu_1734_p3 <= 
        select_ln851_9_fu_1729_p3 when (icmp_ln850_9_reg_2058(0) = '1') else 
        sext_ln850_9_reg_2052;
    select_ln850_fu_978_p3 <= 
        select_ln851_fu_973_p3 when (icmp_ln850_reg_1869(0) = '1') else 
        sext_ln850_reg_1863;
    select_ln851_1_fu_1057_p3 <= 
        sext_ln850_1_reg_1884 when (icmp_ln851_1_reg_1895(0) = '1') else 
        add_ln700_1_reg_1900;
    select_ln851_2_fu_1141_p3 <= 
        sext_ln850_2_reg_1905 when (icmp_ln851_2_reg_1916(0) = '1') else 
        add_ln700_2_reg_1921;
    select_ln851_3_fu_1225_p3 <= 
        sext_ln850_3_reg_1926 when (icmp_ln851_3_reg_1937(0) = '1') else 
        add_ln700_3_reg_1942;
    select_ln851_4_fu_1309_p3 <= 
        sext_ln850_4_reg_1947 when (icmp_ln851_4_reg_1958(0) = '1') else 
        add_ln700_4_reg_1963;
    select_ln851_5_fu_1393_p3 <= 
        sext_ln850_5_reg_1968 when (icmp_ln851_5_reg_1979(0) = '1') else 
        add_ln700_5_reg_1984;
    select_ln851_6_fu_1477_p3 <= 
        sext_ln850_6_reg_1989 when (icmp_ln851_6_reg_2000(0) = '1') else 
        add_ln700_6_reg_2005;
    select_ln851_7_fu_1561_p3 <= 
        sext_ln850_7_reg_2010 when (icmp_ln851_7_reg_2021(0) = '1') else 
        add_ln700_7_reg_2026;
    select_ln851_8_fu_1645_p3 <= 
        sext_ln850_8_reg_2031 when (icmp_ln851_8_reg_2042(0) = '1') else 
        add_ln700_8_reg_2047;
    select_ln851_9_fu_1729_p3 <= 
        sext_ln850_9_reg_2052 when (icmp_ln851_9_reg_2063(0) = '1') else 
        add_ln700_9_reg_2068;
    select_ln851_fu_973_p3 <= 
        sext_ln850_reg_1863 when (icmp_ln851_reg_1874(0) = '1') else 
        add_ln700_reg_1879;
        sext_ln850_1_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_513_p4),14));

        sext_ln850_2_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_565_p4),14));

        sext_ln850_3_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_617_p4),14));

        sext_ln850_4_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_669_p4),14));

        sext_ln850_5_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_721_p4),14));

        sext_ln850_6_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_773_p4),14));

        sext_ln850_7_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_825_p4),14));

        sext_ln850_8_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_fu_877_p4),14));

        sext_ln850_9_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_929_p4),14));

        sext_ln850_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_461_p4),14));

    shl_ln1118_1_fu_505_p3 <= (data_V_data_1_V_dout & ap_const_lv10_0);
    shl_ln1118_2_fu_557_p3 <= (data_V_data_2_V_dout & ap_const_lv10_0);
    shl_ln1118_3_fu_609_p3 <= (data_V_data_3_V_dout & ap_const_lv10_0);
    shl_ln1118_4_fu_661_p3 <= (data_V_data_4_V_dout & ap_const_lv10_0);
    shl_ln1118_5_fu_713_p3 <= (data_V_data_5_V_dout & ap_const_lv10_0);
    shl_ln1118_6_fu_765_p3 <= (data_V_data_6_V_dout & ap_const_lv10_0);
    shl_ln1118_7_fu_817_p3 <= (data_V_data_7_V_dout & ap_const_lv10_0);
    shl_ln1118_8_fu_869_p3 <= (data_V_data_8_V_dout & ap_const_lv10_0);
    shl_ln1118_9_fu_921_p3 <= (data_V_data_9_V_dout & ap_const_lv10_0);
    shl_ln_fu_453_p3 <= (data_V_data_0_V_dout & ap_const_lv10_0);
    tanh_table1_address0 <= zext_ln408_fu_1052_p1(10 - 1 downto 0);
    tanh_table1_address1 <= zext_ln408_1_fu_1136_p1(10 - 1 downto 0);
    tanh_table1_address2 <= zext_ln408_2_fu_1220_p1(10 - 1 downto 0);
    tanh_table1_address3 <= zext_ln408_3_fu_1304_p1(10 - 1 downto 0);
    tanh_table1_address4 <= zext_ln408_4_fu_1388_p1(10 - 1 downto 0);
    tanh_table1_address5 <= zext_ln408_5_fu_1472_p1(10 - 1 downto 0);
    tanh_table1_address6 <= zext_ln408_6_fu_1556_p1(10 - 1 downto 0);
    tanh_table1_address7 <= zext_ln408_7_fu_1640_p1(10 - 1 downto 0);
    tanh_table1_address8 <= zext_ln408_8_fu_1724_p1(10 - 1 downto 0);
    tanh_table1_address9 <= zext_ln408_9_fu_1808_p1(10 - 1 downto 0);

    tanh_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce0 <= ap_const_logic_1;
        else 
            tanh_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce1 <= ap_const_logic_1;
        else 
            tanh_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce2 <= ap_const_logic_1;
        else 
            tanh_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce3 <= ap_const_logic_1;
        else 
            tanh_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce4 <= ap_const_logic_1;
        else 
            tanh_table1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce5 <= ap_const_logic_1;
        else 
            tanh_table1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce6 <= ap_const_logic_1;
        else 
            tanh_table1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce7 <= ap_const_logic_1;
        else 
            tanh_table1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce8 <= ap_const_logic_1;
        else 
            tanh_table1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table1_ce9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tanh_table1_ce9 <= ap_const_logic_1;
        else 
            tanh_table1_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_773_p4 <= data_V_data_6_V_dout(15 downto 3);
    tmp_11_fu_1168_p3 <= add_ln403_2_fu_1156_p2(13 downto 13);
    tmp_12_fu_825_p4 <= data_V_data_7_V_dout(15 downto 3);
    tmp_13_fu_1176_p4 <= add_ln403_2_fu_1156_p2(13 downto 10);
    tmp_14_fu_877_p4 <= data_V_data_8_V_dout(15 downto 3);
    tmp_15_fu_1252_p3 <= add_ln403_3_fu_1240_p2(13 downto 13);
    tmp_16_fu_929_p4 <= data_V_data_9_V_dout(15 downto 3);
    tmp_17_fu_1260_p4 <= add_ln403_3_fu_1240_p2(13 downto 10);
    tmp_19_fu_1336_p3 <= add_ln403_4_fu_1324_p2(13 downto 13);
    tmp_1_fu_461_p4 <= data_V_data_0_V_dout(15 downto 3);
    tmp_20_fu_1344_p4 <= add_ln403_4_fu_1324_p2(13 downto 10);
    tmp_21_fu_1420_p3 <= add_ln403_5_fu_1408_p2(13 downto 13);
    tmp_22_fu_1428_p4 <= add_ln403_5_fu_1408_p2(13 downto 10);
    tmp_23_fu_1504_p3 <= add_ln403_6_fu_1492_p2(13 downto 13);
    tmp_24_fu_1512_p4 <= add_ln403_6_fu_1492_p2(13 downto 10);
    tmp_25_fu_1588_p3 <= add_ln403_7_fu_1576_p2(13 downto 13);
    tmp_26_fu_1596_p4 <= add_ln403_7_fu_1576_p2(13 downto 10);
    tmp_27_fu_1672_p3 <= add_ln403_8_fu_1660_p2(13 downto 13);
    tmp_28_fu_1680_p4 <= add_ln403_8_fu_1660_p2(13 downto 10);
    tmp_29_fu_1756_p3 <= add_ln403_9_fu_1744_p2(13 downto 13);
    tmp_2_fu_1000_p3 <= add_ln403_fu_988_p2(13 downto 13);
    tmp_30_fu_1764_p4 <= add_ln403_9_fu_1744_p2(13 downto 10);
    tmp_3_fu_513_p4 <= data_V_data_1_V_dout(15 downto 3);
    tmp_4_fu_1008_p4 <= add_ln403_fu_988_p2(13 downto 10);
    tmp_5_fu_565_p4 <= data_V_data_2_V_dout(15 downto 3);
    tmp_6_fu_1084_p3 <= add_ln403_1_fu_1072_p2(13 downto 13);
    tmp_7_fu_617_p4 <= data_V_data_3_V_dout(15 downto 3);
    tmp_8_fu_1092_p4 <= add_ln403_1_fu_1072_p2(13 downto 10);
    tmp_9_fu_669_p4 <= data_V_data_4_V_dout(15 downto 3);
    tmp_s_fu_721_p4 <= data_V_data_5_V_dout(15 downto 3);
    trunc_ln403_1_fu_1068_p1 <= select_ln850_1_fu_1062_p3(10 - 1 downto 0);
    trunc_ln403_2_fu_1152_p1 <= select_ln850_2_fu_1146_p3(10 - 1 downto 0);
    trunc_ln403_3_fu_1236_p1 <= select_ln850_3_fu_1230_p3(10 - 1 downto 0);
    trunc_ln403_4_fu_1320_p1 <= select_ln850_4_fu_1314_p3(10 - 1 downto 0);
    trunc_ln403_5_fu_1404_p1 <= select_ln850_5_fu_1398_p3(10 - 1 downto 0);
    trunc_ln403_6_fu_1488_p1 <= select_ln850_6_fu_1482_p3(10 - 1 downto 0);
    trunc_ln403_7_fu_1572_p1 <= select_ln850_7_fu_1566_p3(10 - 1 downto 0);
    trunc_ln403_8_fu_1656_p1 <= select_ln850_8_fu_1650_p3(10 - 1 downto 0);
    trunc_ln403_9_fu_1740_p1 <= select_ln850_9_fu_1734_p3(10 - 1 downto 0);
    trunc_ln403_fu_984_p1 <= select_ln850_fu_978_p3(10 - 1 downto 0);
    trunc_ln851_1_fu_533_p1 <= data_V_data_1_V_dout(3 - 1 downto 0);
    trunc_ln851_2_fu_585_p1 <= data_V_data_2_V_dout(3 - 1 downto 0);
    trunc_ln851_3_fu_637_p1 <= data_V_data_3_V_dout(3 - 1 downto 0);
    trunc_ln851_4_fu_689_p1 <= data_V_data_4_V_dout(3 - 1 downto 0);
    trunc_ln851_5_fu_741_p1 <= data_V_data_5_V_dout(3 - 1 downto 0);
    trunc_ln851_6_fu_793_p1 <= data_V_data_6_V_dout(3 - 1 downto 0);
    trunc_ln851_7_fu_845_p1 <= data_V_data_7_V_dout(3 - 1 downto 0);
    trunc_ln851_8_fu_897_p1 <= data_V_data_8_V_dout(3 - 1 downto 0);
    trunc_ln851_9_fu_949_p1 <= data_V_data_9_V_dout(3 - 1 downto 0);
    trunc_ln851_fu_481_p1 <= data_V_data_0_V_dout(3 - 1 downto 0);
    xor_ln403_1_fu_1078_p2 <= (trunc_ln403_1_fu_1068_p1 xor ap_const_lv10_200);
    xor_ln403_2_fu_1162_p2 <= (trunc_ln403_2_fu_1152_p1 xor ap_const_lv10_200);
    xor_ln403_3_fu_1246_p2 <= (trunc_ln403_3_fu_1236_p1 xor ap_const_lv10_200);
    xor_ln403_4_fu_1330_p2 <= (trunc_ln403_4_fu_1320_p1 xor ap_const_lv10_200);
    xor_ln403_5_fu_1414_p2 <= (trunc_ln403_5_fu_1404_p1 xor ap_const_lv10_200);
    xor_ln403_6_fu_1498_p2 <= (trunc_ln403_6_fu_1488_p1 xor ap_const_lv10_200);
    xor_ln403_7_fu_1582_p2 <= (trunc_ln403_7_fu_1572_p1 xor ap_const_lv10_200);
    xor_ln403_8_fu_1666_p2 <= (trunc_ln403_8_fu_1656_p1 xor ap_const_lv10_200);
    xor_ln403_9_fu_1750_p2 <= (trunc_ln403_9_fu_1740_p1 xor ap_const_lv10_200);
    xor_ln403_fu_994_p2 <= (trunc_ln403_fu_984_p1 xor ap_const_lv10_200);
    xor_ln404_1_fu_1108_p2 <= (tmp_6_fu_1084_p3 xor ap_const_lv1_1);
    xor_ln404_2_fu_1192_p2 <= (tmp_11_fu_1168_p3 xor ap_const_lv1_1);
    xor_ln404_3_fu_1276_p2 <= (tmp_15_fu_1252_p3 xor ap_const_lv1_1);
    xor_ln404_4_fu_1360_p2 <= (tmp_19_fu_1336_p3 xor ap_const_lv1_1);
    xor_ln404_5_fu_1444_p2 <= (tmp_21_fu_1420_p3 xor ap_const_lv1_1);
    xor_ln404_6_fu_1528_p2 <= (tmp_23_fu_1504_p3 xor ap_const_lv1_1);
    xor_ln404_7_fu_1612_p2 <= (tmp_25_fu_1588_p3 xor ap_const_lv1_1);
    xor_ln404_8_fu_1696_p2 <= (tmp_27_fu_1672_p3 xor ap_const_lv1_1);
    xor_ln404_9_fu_1780_p2 <= (tmp_29_fu_1756_p3 xor ap_const_lv1_1);
    xor_ln404_fu_1024_p2 <= (tmp_2_fu_1000_p3 xor ap_const_lv1_1);
    zext_ln408_1_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_3_fu_1128_p3),64));
    zext_ln408_2_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_5_fu_1212_p3),64));
    zext_ln408_3_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_7_fu_1296_p3),64));
    zext_ln408_4_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_9_fu_1380_p3),64));
    zext_ln408_5_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_11_fu_1464_p3),64));
    zext_ln408_6_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_13_fu_1548_p3),64));
    zext_ln408_7_fu_1640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_15_fu_1632_p3),64));
    zext_ln408_8_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_17_fu_1716_p3),64));
    zext_ln408_9_fu_1808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_19_fu_1800_p3),64));
    zext_ln408_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_1_fu_1044_p3),64));
end behav;
