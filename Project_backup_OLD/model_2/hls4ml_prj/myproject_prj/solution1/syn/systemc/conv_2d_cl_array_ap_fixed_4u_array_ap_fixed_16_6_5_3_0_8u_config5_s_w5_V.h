// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__
#define __conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 124;
  static const unsigned AddressRange = 36;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram) {
        ram[0] = "0b1110100001001111111010111111111111101110000100000000100100010000000010111101000000000001000100000000110001110000000111010010";
        ram[1] = "0b1111010011100000000010111010111111110101101111111110001100100000000001111111000000000000010100000000001111111111111111110101";
        ram[2] = "0b1101001111011111111000110111000000100011001000000000101001010000000101001111000000100100010000000010111111111111111111010010";
        ram[3] = "0b0001010110000000001001111010111111101101110011111111101001011111111111110001111111110011000011111111100001110000000100101100";
        ram[4] = "0b1110101010111111111101110001111111101101000011111100100100100000000001101010000000001110110100000000101110000000000100011111";
        ram[5] = "0b1101000101111111110111111010000000001000110011111101110101110000000100000011000000000001110100000001111110000000000000110010";
        ram[6] = "0b1011000011101111111111001001000000100110101111111111100110001111111101100100000000011001001100000000111000100000001011111111";
        ram[7] = "0b0010011010100000001111010100111111111011011000000000000100000000000100011010111111101001010111111101001011010000001101100101";
        ram[8] = "0b1110111100111111111101111101111111101110000011111110010111010000000011110010111111111110101000000001110000011111111011001101";
        ram[9] = "0b1100010111001111111011010010000000011100011100000001001010001111111110101111111111111001001011111111111110111111111000001001";
        ram[10] = "0b1110100010101111111101111000111111111010000111111110011010101111111011111011000000001101101100000100110110010000000010010011";
        ram[11] = "0b0000001010110000000100010010000000000100010011111111111011010000000011010001111111011100100111111101011100001111111100101001";
        ram[12] = "0b0001110111110000000001100101111111111010001000000010011101010000000101001010111111110100111100000000011101011111111101110111";
        ram[13] = "0b0000011010100000000010011010000000010010100111111111111010101111111101100100111111111000000000000000010111100000000001100000";
        ram[14] = "0b1110000001100000000011000100111111011110001000000010110101001111111110110011111111110110000111111110101010010000000000111011";
        ram[15] = "0b0001000111101111111111000100111111100100001000000001001010110000000100100111111111100111011111111111110101001111111101110001";
        ram[16] = "0b0000101111010000000101110001000000010010000011111101000001110000000000101110000000010000001000000000110110100000000010100001";
        ram[17] = "0b1111101111010000000101111110000000011011011111111111000100000000000000011101000000011111100100000010011110010000000111100010";
        ram[18] = "0b1111010101100000000100111101000000010101011011111110101110010000000011001001000000000011001111111111000100011111111110010001";
        ram[19] = "0b0010010111110000000001101101111111011111101111111110100101101111111000111001111111011100100111111100110011100000001001001100";
        ram[20] = "0b1111111000110000000000110110000000010011111111111110111010000000000110011000000000001001100000000000110100101111111111100101";
        ram[21] = "0b1111010000111111111100000111111111111001010100000001101101100000000010100001111111111010011111111111111101010000000101110101";
        ram[22] = "0b0001110010000000000111111111111111111011100100000000111010100000000100010111000000010110000000000010111100010000000111100001";
        ram[23] = "0b0001000011001111111010001100000000001011011111111111000111111111111111100011111111101010000100000000000110010000000010100110";
        ram[24] = "0b0000011000010000000001111100000000001010101000000000001110001111110110011111111111100111000100000010000101110000000010011100";
        ram[25] = "0b1111011001100000000111111101000000001011001111111110100110001111111101000110000000000110001000000001001001111111111111101010";
        ram[26] = "0b0000011010011111111111100110000000111000010111111111110001110000000000001010000000000011100100000001110010101111111100100100";
        ram[27] = "0b0000011010100000000000001111111110101010011011111111011101011111110110010100111111111010010011111110011100000000000001101111";
        ram[28] = "0b0001001001010000000001011101000000101100011000000000010000001111110110000100000000100001001000000001101101001111111111100101";
        ram[29] = "0b0001101010110000000110011101000000001001011000000001010011010000001000100000000000101001010011111111111100000000000000110110";
        ram[30] = "0b0000000100000000001110111100000000100100100000000000100011010000001010101100000000001111010111111111000101100000000000011001";
        ram[31] = "0b0000100001011111110111101110000000110001010011111110011100111111101011000111111111100111010100000001000100011111111110110101";
        ram[32] = "0b0000111110001111111011011110000000000111011100000001001111100000000101101001000000000011011011111111100110101111111100011111";
        ram[33] = "0b0000010010000000000000100010111111111110100000000001011001010000000010100010000000000111000011111111011101001111111110011100";
        ram[34] = "0b1111101110000000001100001100111111111101010100000001100001100000000000110011000000100011011011111101110010001111111100011000";
        ram[35] = "0b0001000011011111111000100000000000110001101011111111110101001111110010000100111111101100100100000011001000000000001000000111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {


static const unsigned DataWidth = 124;
static const unsigned AddressRange = 36;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram* meminst;


SC_CTOR(conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V) {
meminst = new conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram("conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V() {
    delete meminst;
}


};//endmodule
#endif
