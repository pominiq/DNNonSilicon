-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_7_V_blk_n : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal and_ln289_2_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel_data_V_1_27_ret_reg_987 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_26_ret_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_25_ret_reg_997 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_24_ret_reg_1002 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_15_ret_reg_1007 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_14_ret_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_13_ret_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_12_ret_reg_1022 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_3_ret_reg_1027 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_2_ret_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_1_ret_reg_1037 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_0_ret_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_4_ret_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_5_ret_reg_1052 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_6_ret_reg_1057 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_7_ret_reg_1062 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_8_ret_reg_1067 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_9_ret_reg_1072 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_10_ret_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_11_ret_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_16_ret_reg_1087 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_17_ret_reg_1092 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_18_ret_reg_1097 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_19_ret_reg_1102 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_20_ret_reg_1107 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_21_ret_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_22_ret_reg_1117 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_23_ret_reg_1122 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_28_ret_reg_1127 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_29_ret_reg_1132 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_30_ret_reg_1137 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_31_ret_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_32_ret_reg_1147 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_33_ret_reg_1152 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_34_ret_reg_1157 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_35_ret_reg_1162 : STD_LOGIC_VECTOR (15 downto 0);
    signal sX_2_load_reg_1167 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_1172 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_1182 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_1187 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_1193 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_2_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_done : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_idle : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready : STD_LOGIC;
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal io_acc_block_signal_op149 : STD_LOGIC;
    signal ap_block_state15_ignore_call0 : BOOLEAN;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_done : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_idle : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ready : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce : STD_LOGIC;
    signal select_ln323_fu_967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_275_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state15 : BOOLEAN;
    signal icmp_ln313_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal select_ln328_fu_921_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_806_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_56_fu_826_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_2_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_962_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_422 : BOOLEAN;
    signal ap_condition_599 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282 : component dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start,
        ap_done => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_done,
        ap_idle => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_idle,
        ap_ready => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready,
        data_0_V_read => kernel_data_V_1_0_ret_reg_1042,
        data_1_V_read => kernel_data_V_1_1_ret_reg_1037,
        data_2_V_read => kernel_data_V_1_2_ret_reg_1032,
        data_3_V_read => kernel_data_V_1_3_ret_reg_1027,
        data_4_V_read => kernel_data_V_1_4_ret_reg_1047,
        data_5_V_read => kernel_data_V_1_5_ret_reg_1052,
        data_6_V_read => kernel_data_V_1_6_ret_reg_1057,
        data_7_V_read => kernel_data_V_1_7_ret_reg_1062,
        data_8_V_read => kernel_data_V_1_8_ret_reg_1067,
        data_9_V_read => kernel_data_V_1_9_ret_reg_1072,
        data_10_V_read => kernel_data_V_1_10_ret_reg_1077,
        data_11_V_read => kernel_data_V_1_11_ret_reg_1082,
        data_12_V_read => kernel_data_V_1_12_ret_reg_1022,
        data_13_V_read => kernel_data_V_1_13_ret_reg_1017,
        data_14_V_read => kernel_data_V_1_14_ret_reg_1012,
        data_15_V_read => kernel_data_V_1_15_ret_reg_1007,
        data_16_V_read => kernel_data_V_1_16_ret_reg_1087,
        data_17_V_read => kernel_data_V_1_17_ret_reg_1092,
        data_18_V_read => kernel_data_V_1_18_ret_reg_1097,
        data_19_V_read => kernel_data_V_1_19_ret_reg_1102,
        data_20_V_read => kernel_data_V_1_20_ret_reg_1107,
        data_21_V_read => kernel_data_V_1_21_ret_reg_1112,
        data_22_V_read => kernel_data_V_1_22_ret_reg_1117,
        data_23_V_read => kernel_data_V_1_23_ret_reg_1122,
        data_24_V_read => kernel_data_V_1_24_ret_reg_1002,
        data_25_V_read => kernel_data_V_1_25_ret_reg_997,
        data_26_V_read => kernel_data_V_1_26_ret_reg_992,
        data_27_V_read => kernel_data_V_1_27_ret_reg_987,
        data_28_V_read => kernel_data_V_1_28_ret_reg_1127,
        data_29_V_read => kernel_data_V_1_29_ret_reg_1132,
        data_30_V_read => kernel_data_V_1_30_ret_reg_1137,
        data_31_V_read => kernel_data_V_1_31_ret_reg_1142,
        data_32_V_read => kernel_data_V_1_32_ret_reg_1147,
        data_33_V_read => kernel_data_V_1_33_ret_reg_1152,
        data_34_V_read => kernel_data_V_1_34_ret_reg_1157,
        data_35_V_read => kernel_data_V_1_35_ret_reg_1162,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce);

    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start,
        ap_done => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_done,
        ap_idle => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_idle,
        ap_ready => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read,
        in_elem_data_1_V_read => in_elem_data_1_V_read,
        in_elem_data_2_V_read => in_elem_data_2_V_read,
        in_elem_data_3_V_read => in_elem_data_3_V_read,
        kernel_window_4_V_read => kernel_data_V_1_4,
        kernel_window_5_V_read => kernel_data_V_1_5,
        kernel_window_6_V_read => kernel_data_V_1_6,
        kernel_window_7_V_read => kernel_data_V_1_7,
        kernel_window_8_V_read => kernel_data_V_1_8,
        kernel_window_9_V_read => kernel_data_V_1_9,
        kernel_window_10_V_read => kernel_data_V_1_10,
        kernel_window_11_V_read => kernel_data_V_1_11,
        kernel_window_16_V_read => kernel_data_V_1_16,
        kernel_window_17_V_read => kernel_data_V_1_17,
        kernel_window_18_V_read => kernel_data_V_1_18,
        kernel_window_19_V_read => kernel_data_V_1_19,
        kernel_window_20_V_read => kernel_data_V_1_20,
        kernel_window_21_V_read => kernel_data_V_1_21,
        kernel_window_22_V_read => kernel_data_V_1_22,
        kernel_window_23_V_read => kernel_data_V_1_23,
        kernel_window_28_V_read => kernel_data_V_1_28,
        kernel_window_29_V_read => kernel_data_V_1_29,
        kernel_window_30_V_read => kernel_data_V_1_30,
        kernel_window_31_V_read => kernel_data_V_1_31,
        kernel_window_32_V_read => kernel_data_V_1_32,
        kernel_window_33_V_read => kernel_data_V_1_33,
        kernel_window_34_V_read => kernel_data_V_1_34,
        kernel_window_35_V_read => kernel_data_V_1_35,
        ap_return_0 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0,
        ap_return_1 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1,
        ap_return_2 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2,
        ap_return_3 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3,
        ap_return_4 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4,
        ap_return_5 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5,
        ap_return_6 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6,
        ap_return_7 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7,
        ap_return_8 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8,
        ap_return_9 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9,
        ap_return_10 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10,
        ap_return_11 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11,
        ap_return_12 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12,
        ap_return_13 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13,
        ap_return_14 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14,
        ap_return_15 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15,
        ap_return_16 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16,
        ap_return_17 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17,
        ap_return_18 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18,
        ap_return_19 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19,
        ap_return_20 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20,
        ap_return_21 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21,
        ap_return_22 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22,
        ap_return_23 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23,
        ap_return_24 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24,
        ap_return_25 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25,
        ap_return_26 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26,
        ap_return_27 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27,
        ap_return_28 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28,
        ap_return_29 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29,
        ap_return_30 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30,
        ap_return_31 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31,
        ap_return_32 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32,
        ap_return_33 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33,
        ap_return_34 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34,
        ap_return_35 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35,
        ap_ce => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln289_2_fu_854_p2))) then 
                    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if ((icmp_ln313_fu_900_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_900_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_905_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_599)) then
                if ((icmp_ln317_fu_946_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_946_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_951_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if ((icmp_ln313_fu_900_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_900_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_921_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then
                and_ln289_2_reg_1199 <= and_ln289_2_fu_854_p2;
                icmp_ln289_1_reg_1182 <= icmp_ln289_1_fu_796_p2;
                icmp_ln289_reg_1172 <= icmp_ln289_fu_786_p2;
                kernel_data_V_1_0_ret_reg_1042 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0;
                kernel_data_V_1_10 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18;
                kernel_data_V_1_10_ret_reg_1077 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18;
                kernel_data_V_1_11 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19;
                kernel_data_V_1_11_ret_reg_1082 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19;
                kernel_data_V_1_12_ret_reg_1022 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4;
                kernel_data_V_1_13_ret_reg_1017 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5;
                kernel_data_V_1_14_ret_reg_1012 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6;
                kernel_data_V_1_15_ret_reg_1007 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7;
                kernel_data_V_1_16 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20;
                kernel_data_V_1_16_ret_reg_1087 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20;
                kernel_data_V_1_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21;
                kernel_data_V_1_17_ret_reg_1092 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21;
                kernel_data_V_1_18 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22;
                kernel_data_V_1_18_ret_reg_1097 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22;
                kernel_data_V_1_19 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23;
                kernel_data_V_1_19_ret_reg_1102 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23;
                kernel_data_V_1_1_ret_reg_1037 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1;
                kernel_data_V_1_20 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24;
                kernel_data_V_1_20_ret_reg_1107 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24;
                kernel_data_V_1_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25;
                kernel_data_V_1_21_ret_reg_1112 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25;
                kernel_data_V_1_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26;
                kernel_data_V_1_22_ret_reg_1117 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26;
                kernel_data_V_1_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27;
                kernel_data_V_1_23_ret_reg_1122 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27;
                kernel_data_V_1_24_ret_reg_1002 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8;
                kernel_data_V_1_25_ret_reg_997 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9;
                kernel_data_V_1_26_ret_reg_992 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10;
                kernel_data_V_1_27_ret_reg_987 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11;
                kernel_data_V_1_28 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28;
                kernel_data_V_1_28_ret_reg_1127 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28;
                kernel_data_V_1_29 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29;
                kernel_data_V_1_29_ret_reg_1132 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29;
                kernel_data_V_1_2_ret_reg_1032 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2;
                kernel_data_V_1_30 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30;
                kernel_data_V_1_30_ret_reg_1137 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30;
                kernel_data_V_1_31 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31;
                kernel_data_V_1_31_ret_reg_1142 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31;
                kernel_data_V_1_32 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32;
                kernel_data_V_1_32_ret_reg_1147 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32;
                kernel_data_V_1_33 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33;
                kernel_data_V_1_33_ret_reg_1152 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33;
                kernel_data_V_1_34 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34;
                kernel_data_V_1_34_ret_reg_1157 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34;
                kernel_data_V_1_35 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35;
                kernel_data_V_1_35_ret_reg_1162 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35;
                kernel_data_V_1_3_ret_reg_1027 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3;
                kernel_data_V_1_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12;
                kernel_data_V_1_4_ret_reg_1047 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12;
                kernel_data_V_1_5 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13;
                kernel_data_V_1_5_ret_reg_1052 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13;
                kernel_data_V_1_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14;
                kernel_data_V_1_6_ret_reg_1057 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14;
                kernel_data_V_1_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15;
                kernel_data_V_1_7_ret_reg_1062 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15;
                kernel_data_V_1_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16;
                kernel_data_V_1_8_ret_reg_1067 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16;
                kernel_data_V_1_9 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17;
                kernel_data_V_1_9_ret_reg_1072 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17;
                pX_2_load_reg_1193 <= pX_2;
                pY_2_load_reg_1187 <= pY_2;
                sX_2_load_reg_1167 <= sX_2;
                sY_2_load_reg_1177 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_fu_900_p2 = ap_const_lv1_1))) then
                sY_2 <= ap_phi_mux_storemerge_phi_fu_275_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, io_acc_block_signal_op149)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln321_fu_951_p2 <= std_logic_vector(unsigned(pY_2_load_reg_1187) + unsigned(ap_const_lv32_1));
    add_ln323_fu_962_p2 <= std_logic_vector(unsigned(sY_2_load_reg_1177) + unsigned(ap_const_lv32_1));
    add_ln326_fu_905_p2 <= std_logic_vector(unsigned(pX_2_load_reg_1193) + unsigned(ap_const_lv32_1));
    add_ln328_fu_916_p2 <= std_logic_vector(unsigned(sX_2_load_reg_1167) + unsigned(ap_const_lv32_1));
    and_ln289_1_fu_848_p2 <= (icmp_ln289_3_fu_836_p2 and icmp_ln289_2_fu_816_p2);
    and_ln289_2_fu_854_p2 <= (and_ln289_fu_842_p2 and and_ln289_1_fu_848_p2);
    and_ln289_fu_842_p2 <= (icmp_ln289_fu_786_p2 and icmp_ln289_1_fu_796_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);

    ap_block_state15_assign_proc : process(and_ln289_2_reg_1199, io_acc_block_signal_op149)
    begin
                ap_block_state15 <= ((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199));
    end process;


    ap_block_state15_ignore_call0_assign_proc : process(and_ln289_2_reg_1199, io_acc_block_signal_op149)
    begin
                ap_block_state15_ignore_call0 <= ((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199));
    end process;


    ap_condition_422_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
                ap_condition_422 <= (not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce));
    end process;


    ap_condition_599_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149, icmp_ln313_fu_900_p2)
    begin
                ap_condition_599 <= (not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (icmp_ln313_fu_900_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_275_p4_assign_proc : process(ap_CS_fsm_state15, select_ln323_fu_967_p3, icmp_ln313_fu_900_p2, icmp_ln317_fu_946_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln313_fu_900_p2 = ap_const_lv1_1))) then
            if ((icmp_ln317_fu_946_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_phi_fu_275_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_946_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_phi_fu_275_p4 <= select_ln323_fu_967_p3;
            else 
                ap_phi_mux_storemerge_phi_fu_275_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_phi_fu_275_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce <= ap_const_logic_1;
        else 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start <= ap_const_logic_1;
        else 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, io_acc_block_signal_op149)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15))))) then 
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg;
    icmp_ln289_1_fu_796_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_816_p2 <= "1" when (signed(tmp_fu_806_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_836_p2 <= "1" when (signed(tmp_56_fu_826_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_786_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_900_p2 <= "1" when (pX_2_load_reg_1193 = ap_const_lv32_5) else "0";
    icmp_ln317_fu_946_p2 <= "1" when (pY_2_load_reg_1187 = ap_const_lv32_5) else "0";
    io_acc_block_signal_op149 <= (res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state15, and_ln289_2_reg_1199)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state15, and_ln289_2_reg_1199, ap_ce, io_acc_block_signal_op149)
    begin
        if ((not(((io_acc_block_signal_op149 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_1 = and_ln289_2_reg_1199))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_967_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_reg_1182(0) = '1') else 
        add_ln323_fu_962_p2;
    select_ln328_fu_921_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_reg_1172(0) = '1') else 
        add_ln328_fu_916_p2;
    tmp_56_fu_826_p4 <= pX_2(31 downto 1);
    tmp_fu_806_p4 <= pY_2(31 downto 1);
end behav;
