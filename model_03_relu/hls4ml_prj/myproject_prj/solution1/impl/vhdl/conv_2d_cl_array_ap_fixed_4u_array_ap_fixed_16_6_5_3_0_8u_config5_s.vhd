-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv16_DB : STD_LOGIC_VECTOR (15 downto 0) := "0000000011011011";
    constant ap_const_lv16_2A5 : STD_LOGIC_VECTOR (15 downto 0) := "0000001010100101";
    constant ap_const_lv16_1C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011100";
    constant ap_const_lv16_97 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010010111";
    constant ap_const_lv16_FE96 : STD_LOGIC_VECTOR (15 downto 0) := "1111111010010110";
    constant ap_const_lv16_FFC0 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111000000";
    constant ap_const_lv16_2B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101011";
    constant ap_const_lv16_FFC9 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111001001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_20F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000001111";
    constant ap_const_lv32_210 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000010000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_22F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000101111";
    constant ap_const_lv32_230 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000110000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_24F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001111";
    constant ap_const_lv32_250 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001010000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_26F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101111";
    constant ap_const_lv32_270 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001110000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_28F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010001111";
    constant ap_const_lv32_290 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010010000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010101111";
    constant ap_const_lv32_2B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010110000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011001111";
    constant ap_const_lv32_2D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011010000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011101111";
    constant ap_const_lv32_2F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011110000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_30F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100001111";
    constant ap_const_lv32_310 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100010000";
    constant ap_const_lv32_31F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100011111";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_32F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100101111";
    constant ap_const_lv32_330 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100110000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_34F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101001111";
    constant ap_const_lv32_350 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010000";
    constant ap_const_lv32_35F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101011111";
    constant ap_const_lv32_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100000";
    constant ap_const_lv32_36F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101101111";
    constant ap_const_lv32_370 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101110000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_38F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110001111";
    constant ap_const_lv32_390 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110010000";
    constant ap_const_lv32_39F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110011111";
    constant ap_const_lv32_3A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100000";
    constant ap_const_lv32_3AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110101111";
    constant ap_const_lv32_3B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110110000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111001111";
    constant ap_const_lv32_3D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111010000";
    constant ap_const_lv32_3DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111011111";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111101111";
    constant ap_const_lv32_3F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111110000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_40F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000001111";
    constant ap_const_lv32_410 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000010000";
    constant ap_const_lv32_41F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000011111";
    constant ap_const_lv32_420 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000100000";
    constant ap_const_lv32_42F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000101111";
    constant ap_const_lv32_430 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000110000";
    constant ap_const_lv32_43F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000111111";
    constant ap_const_lv32_440 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001000000";
    constant ap_const_lv32_44F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001001111";
    constant ap_const_lv32_450 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001010000";
    constant ap_const_lv32_45F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001011111";
    constant ap_const_lv32_460 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001100000";
    constant ap_const_lv32_46F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001101111";
    constant ap_const_lv32_470 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001110000";
    constant ap_const_lv32_478 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001111000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w5_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w5_V_ce0 : STD_LOGIC;
    signal w5_V_q0 : STD_LOGIC_VECTOR (1144 downto 0);
    signal kernel_data_V_1_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_1_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal and_ln289_2_reg_6908 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal w_index132_reg_870 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state11_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_data_0_V_7130_reg_1818 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_7128_reg_1829 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_7126_reg_1840 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_7124_reg_1851 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_5122_reg_1862 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_5120_reg_1873 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_5118_reg_1884 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_5116_reg_1895 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_6686 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op43 : STD_LOGIC;
    signal tmp_data_1_V_reg_6692 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_6698 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_6704 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln79_fu_2028_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln79_reg_6710 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln241_fu_2034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_ic_fu_2040_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic_reg_6719 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln246_fu_2046_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln246_reg_6724 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_data_V_1_8_load_reg_6748 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_9_load_reg_6753 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_10_load_reg_6758 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_11_load_reg_6763 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_20_load_reg_6768 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_21_load_reg_6773 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_22_load_reg_6778 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_23_load_reg_6783 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_32_load_reg_6788 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_33_load_reg_6793 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_34_load_reg_6798 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_35_load_reg_6803 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_iw_fu_2186_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln213_fu_2480_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln213_1_fu_2546_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln213_2_fu_2606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln213_2_fu_2612_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sX_2_load_reg_6876 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_2668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_6881 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_6886 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_2678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_6891 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_6896 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_6902 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_2_fu_2736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_2746_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_index_reg_6912 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal or_ln_fu_2757_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_reg_6922 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln43_fu_2765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6926 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6926_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6926_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6926_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln56_fu_2787_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln56_reg_6950 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_88_reg_6975 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_89_reg_7000 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_reg_7025 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_reg_7050 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_92_reg_7075 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_93_reg_7100 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_94_reg_7125 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_reg_7150 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_96_reg_7175 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_97_reg_7200 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_98_reg_7225 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_99_reg_7250 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_reg_7275 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_101_reg_7300 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_102_reg_7325 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_103_reg_7350 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_104_reg_7375 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_reg_7400 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_106_reg_7425 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_107_reg_7450 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_reg_7475 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_109_reg_7500 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_reg_7525 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_111_reg_7550 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_112_reg_7575 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_113_reg_7600 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_114_reg_7625 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_115_reg_7650 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_116_reg_7675 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_117_reg_7700 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_118_reg_7725 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_119_reg_7750 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_120_reg_7775 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_121_reg_7800 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_122_reg_7825 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_123_reg_7850 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_124_reg_7875 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_125_reg_7900 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_126_reg_7925 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_127_reg_7950 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_128_reg_7975 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_129_reg_8000 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_130_reg_8025 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_131_reg_8050 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_132_reg_8075 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_133_reg_8100 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_134_reg_8125 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_135_reg_8150 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_136_reg_8175 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_137_reg_8200 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_138_reg_8225 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_139_reg_8250 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_140_reg_8275 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_141_reg_8300 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_142_reg_8325 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_143_reg_8350 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_144_reg_8375 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_reg_8400 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_146_reg_8425 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_147_reg_8450 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_148_reg_8475 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_149_reg_8500 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_150_reg_8525 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_151_reg_8550 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_152_reg_8575 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_153_reg_8600 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_154_reg_8625 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_155_reg_8650 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_156_reg_8675 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_157_reg_8700 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_158_reg_8725 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2_reg_8730 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_reg_8735 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_79_reg_8740 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_80_reg_8745 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_81_reg_8750 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_82_reg_8755 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_83_reg_8760 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_84_reg_8765 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_85_reg_8770 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_86_reg_8775 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_87_reg_8780 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_88_reg_8785 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_89_reg_8790 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_90_reg_8795 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_91_reg_8800 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_92_reg_8805 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_93_reg_8810 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_94_reg_8815 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_95_reg_8820 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_96_reg_8825 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_97_reg_8830 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_98_reg_8835 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_99_reg_8840 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_100_reg_8845 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_101_reg_8850 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_102_reg_8855 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_103_reg_8860 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_104_reg_8865 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_105_reg_8870 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_106_reg_8875 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_107_reg_8880 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_108_reg_8885 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_109_reg_8890 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_110_reg_8895 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_111_reg_8900 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_112_reg_8905 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_113_reg_8910 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_114_reg_8915 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_115_reg_8920 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_116_reg_8925 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_117_reg_8930 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_118_reg_8935 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_119_reg_8940 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_120_reg_8945 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_121_reg_8950 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_122_reg_8955 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_123_reg_8960 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_124_reg_8965 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_125_reg_8970 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_126_reg_8975 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_127_reg_8980 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_128_reg_8985 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_129_reg_8990 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_130_reg_8995 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_131_reg_9000 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_132_reg_9005 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_133_reg_9010 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_134_reg_9015 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_135_reg_9020 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_136_reg_9025 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_137_reg_9030 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_138_reg_9035 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_139_reg_9040 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_140_reg_9045 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_141_reg_9050 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_142_reg_9055 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_143_reg_9060 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_144_reg_9065 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_145_reg_9070 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_146_reg_9075 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_147_reg_9080 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_148_reg_9085 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_81_fu_5701_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_81_reg_9090 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_85_fu_5720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_85_reg_9095 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_90_fu_5734_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_90_reg_9100 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_94_fu_5753_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_94_reg_9105 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_99_fu_5767_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_99_reg_9110 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_103_fu_5786_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_103_reg_9115 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_108_fu_5800_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_108_reg_9120 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_112_fu_5819_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_112_reg_9125 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_117_fu_5833_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_117_reg_9130 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_121_fu_5852_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_121_reg_9135 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_126_fu_5866_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_126_reg_9140 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_130_fu_5885_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_130_reg_9145 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_fu_5899_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_reg_9150 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_139_fu_5918_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_139_reg_9155 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_fu_5935_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_reg_9160 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_148_fu_5955_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_148_reg_9165 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_fu_5965_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_reg_9170 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal acc_1_V_fu_5975_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_9176 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_5985_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_reg_9182 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_5995_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_reg_9188 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_6005_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_reg_9194 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_fu_6015_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_reg_9200 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_fu_6025_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_reg_9206 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_fu_6035_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_reg_9212 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal indvar_flatten133_reg_777 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op1477 : STD_LOGIC;
    signal ap_block_state16 : BOOLEAN;
    signal icmp_ln79_fu_6128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic4_0_i_i_i_reg_789 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal shift_buffer_1_0_V_reg_800 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_0_V_reg_813 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_iw_0_i_i_i_i_reg_826 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln194_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_0_reg_837 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln213_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_1_reg_848 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln213_1_fu_2540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic2_0_i_i_i_i_2_reg_859 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_w_index132_phi_fu_874_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_reg_pp1_iter0_phi_ln56_reg_882 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_reg_882 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_reg_882 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_1_reg_895 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_1_reg_895 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_2_reg_908 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_2_reg_908 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_3_reg_921 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_3_reg_921 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_4_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_4_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_5_reg_947 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_5_reg_947 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_6_reg_960 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_6_reg_960 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_7_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_7_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_8_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_8_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_9_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_9_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1025 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1025 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1051 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1051 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1168 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1168 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1181 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1181 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1207 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1207 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1233 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1233 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1272 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1272 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1324 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1324 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1337 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1337 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1363 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1363 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1376 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1376 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1402 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1402 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1415 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1415 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1428 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1428 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1441 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1441 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1454 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1454 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1467 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1467 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1493 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1493 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1506 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1506 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1558 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1558 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1571 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1571 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1597 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1597 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1623 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1623 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1636 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1636 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1649 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1649 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1662 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1662 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1688 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1688 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1701 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1701 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1714 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1714 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1727 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1727 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1740 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1740 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1753 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1753 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1766 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1766 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1779 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1779 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1792 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1792 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1805 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1805 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln323_fu_6108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_1909_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_6041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_6087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_2752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_82_fu_2502_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_fu_2568_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_fu_2622_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln203_2_fu_2632_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln203_fu_2210_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_fu_2204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_1_fu_2229_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_1_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_2_fu_2260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_2_fu_2273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_3_fu_2291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_3_fu_2304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_4_fu_2322_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_5_fu_2341_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_6_fu_2360_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_7_fu_2379_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_8_fu_2398_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_9_fu_2417_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_10_fu_2436_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_11_fu_2455_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln328_fu_6062_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_6092_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_6046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buffer_1_3_V_fu_692 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_1_fu_696 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_2_fu_700 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_3_fu_704 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_fu_708 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_1_fu_712 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_2_fu_716 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_3_fu_720 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_2050_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_2050_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln201_fu_2192_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_2196_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_fu_2236_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_1_fu_2267_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_3_fu_2298_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_82_fu_2502_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_fu_2568_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_fu_2622_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_2688_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_fu_2708_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_2_fu_2698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_2718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_2730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln43_fu_2742_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1118_fu_6134_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_80_fu_6141_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_81_fu_6148_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_82_fu_6155_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_83_fu_6162_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_84_fu_6169_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_85_fu_6176_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_86_fu_6183_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_87_fu_6190_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_88_fu_6197_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_89_fu_6204_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_90_fu_6211_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_91_fu_6218_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_92_fu_6225_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_93_fu_6232_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_94_fu_6239_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_95_fu_6246_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_96_fu_6253_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_97_fu_6260_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_98_fu_6267_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_99_fu_6274_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_100_fu_6281_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_101_fu_6288_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_102_fu_6295_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_103_fu_6302_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_104_fu_6309_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_105_fu_6316_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_106_fu_6323_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_107_fu_6330_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_108_fu_6337_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_109_fu_6344_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_110_fu_6351_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_111_fu_6358_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_112_fu_6365_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_113_fu_6372_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_114_fu_6379_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_115_fu_6386_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_116_fu_6393_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_117_fu_6400_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_118_fu_6407_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_119_fu_6414_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_120_fu_6421_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_121_fu_6428_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_122_fu_6435_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_123_fu_6442_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_124_fu_6449_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_125_fu_6456_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_126_fu_6463_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_127_fu_6470_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_128_fu_6477_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_129_fu_6484_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_130_fu_6491_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_131_fu_6498_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_132_fu_6505_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_133_fu_6512_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_134_fu_6519_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_135_fu_6526_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_136_fu_6533_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_137_fu_6540_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_138_fu_6547_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_139_fu_6554_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_140_fu_6561_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_141_fu_6568_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_142_fu_6575_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_143_fu_6582_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_144_fu_6589_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_145_fu_6596_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_146_fu_6603_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_147_fu_6610_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_148_fu_6617_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_149_fu_6624_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_150_fu_6631_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_fu_5693_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_80_fu_5697_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_83_fu_5711_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_82_fu_5707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_84_fu_5715_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_88_fu_5726_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_89_fu_5730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_92_fu_5744_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_91_fu_5740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_93_fu_5748_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_97_fu_5759_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_98_fu_5763_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_101_fu_5777_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_100_fu_5773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_102_fu_5781_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_106_fu_5792_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_107_fu_5796_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_110_fu_5810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_109_fu_5806_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_111_fu_5814_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_115_fu_5825_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_116_fu_5829_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_119_fu_5843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_118_fu_5839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_120_fu_5847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_124_fu_5858_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_125_fu_5862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_128_fu_5876_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_127_fu_5872_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_129_fu_5880_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_133_fu_5891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_134_fu_5895_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_137_fu_5909_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_136_fu_5905_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_138_fu_5913_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_143_fu_5931_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_142_fu_5927_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_5924_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_146_fu_5945_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_147_fu_5950_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_145_fu_5941_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_86_fu_5961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_95_fu_5971_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_104_fu_5981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_113_fu_5991_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_122_fu_6001_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_131_fu_6011_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_140_fu_6021_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_149_fu_6031_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_6057_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_6103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_603 : BOOLEAN;
    signal ap_condition_685 : BOOLEAN;
    signal ap_condition_1543 : BOOLEAN;
    signal ap_condition_2240 : BOOLEAN;

    component myproject_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_9s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1144 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    w5_V_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V
    generic map (
        DataWidth => 1145,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w5_V_address0,
        ce0 => w5_V_ce0,
        q0 => w5_V_q0);

    line_buffer_Array_V_1_0_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_0_ce0,
        we0 => line_buffer_Array_V_1_0_0_we0,
        d0 => DataIn_V_assign_fu_2050_p6,
        q0 => line_buffer_Array_V_1_0_0_q0);

    line_buffer_Array_V_1_0_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_1_ce0,
        we0 => line_buffer_Array_V_1_0_1_we0,
        d0 => DataIn_V_assign_fu_2050_p6,
        q0 => line_buffer_Array_V_1_0_1_q0);

    line_buffer_Array_V_1_0_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_2_ce0,
        we0 => line_buffer_Array_V_1_0_2_we0,
        d0 => DataIn_V_assign_fu_2050_p6,
        q0 => line_buffer_Array_V_1_0_2_q0);

    line_buffer_Array_V_1_0_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_3_ce0,
        we0 => line_buffer_Array_V_1_0_3_we0,
        d0 => DataIn_V_assign_fu_2050_p6,
        q0 => line_buffer_Array_V_1_0_3_q0);

    line_buffer_Array_V_1_1_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_0_ce0,
        we0 => line_buffer_Array_V_1_1_0_we0,
        d0 => shift_buffer_1_0_V_reg_800,
        q0 => line_buffer_Array_V_1_1_0_q0);

    line_buffer_Array_V_1_1_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_1_ce0,
        we0 => line_buffer_Array_V_1_1_1_we0,
        d0 => shift_buffer_1_0_V_reg_800,
        q0 => line_buffer_Array_V_1_1_1_q0);

    line_buffer_Array_V_1_1_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_2_ce0,
        we0 => line_buffer_Array_V_1_1_2_we0,
        d0 => shift_buffer_1_0_V_reg_800,
        q0 => line_buffer_Array_V_1_1_2_q0);

    line_buffer_Array_V_1_1_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffpcA
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_3_ce0,
        we0 => line_buffer_Array_V_1_1_3_we0,
        d0 => shift_buffer_1_0_V_reg_800,
        q0 => line_buffer_Array_V_1_1_3_q0);

    myproject_mux_42_16_1_1_U70 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_6686,
        din1 => tmp_data_1_V_reg_6692,
        din2 => tmp_data_2_V_reg_6698,
        din3 => tmp_data_3_V_reg_6704,
        din4 => DataIn_V_assign_fu_2050_p5,
        dout => DataIn_V_assign_fu_2050_p6);

    myproject_mux_42_16_1_1_U71 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_0_3_V_3_fu_720,
        din1 => shift_buffer_0_3_V_2_fu_716,
        din2 => shift_buffer_0_3_V_1_fu_712,
        din3 => shift_buffer_0_3_V_fu_708,
        din4 => tmp_82_fu_2502_p5,
        dout => tmp_82_fu_2502_p6);

    myproject_mux_42_16_1_1_U72 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_1_3_V_3_fu_704,
        din1 => shift_buffer_1_3_V_2_fu_700,
        din2 => shift_buffer_1_3_V_1_fu_696,
        din3 => shift_buffer_1_3_V_fu_692,
        din4 => tmp_84_fu_2568_p5,
        dout => tmp_84_fu_2568_p6);

    myproject_mux_42_16_1_1_U73 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_6686,
        din1 => tmp_data_1_V_reg_6692,
        din2 => tmp_data_2_V_reg_6698,
        din3 => tmp_data_3_V_reg_6704,
        din4 => tmp_85_fu_2622_p5,
        dout => tmp_85_fu_2622_p6);

    myproject_mul_mul_16s_16s_26_1_1_U74 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => trunc_ln56_reg_6950,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_reg_882,
        dout => mul_ln1118_fu_6134_p2);

    myproject_mul_mul_16s_16s_26_1_1_U75 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895,
        din1 => tmp_88_reg_6975,
        dout => mul_ln1118_80_fu_6141_p2);

    myproject_mul_mul_16s_16s_26_1_1_U76 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908,
        din1 => tmp_89_reg_7000,
        dout => mul_ln1118_81_fu_6148_p2);

    myproject_mul_mul_16s_16s_26_1_1_U77 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921,
        din1 => tmp_90_reg_7025,
        dout => mul_ln1118_82_fu_6155_p2);

    myproject_mul_mul_16s_16s_26_1_1_U78 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934,
        din1 => tmp_91_reg_7050,
        dout => mul_ln1118_83_fu_6162_p2);

    myproject_mul_mul_16s_16s_26_1_1_U79 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947,
        din1 => tmp_92_reg_7075,
        dout => mul_ln1118_84_fu_6169_p2);

    myproject_mul_mul_16s_16s_26_1_1_U80 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960,
        din1 => tmp_93_reg_7100,
        dout => mul_ln1118_85_fu_6176_p2);

    myproject_mul_mul_16s_16s_26_1_1_U81 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_94_reg_7125,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973,
        dout => mul_ln1118_86_fu_6183_p2);

    myproject_mul_mul_16s_16s_26_1_1_U82 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986,
        din1 => tmp_95_reg_7150,
        dout => mul_ln1118_87_fu_6190_p2);

    myproject_mul_mul_16s_16s_26_1_1_U83 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999,
        din1 => tmp_96_reg_7175,
        dout => mul_ln1118_88_fu_6197_p2);

    myproject_mul_mul_16s_16s_26_1_1_U84 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012,
        din1 => tmp_97_reg_7200,
        dout => mul_ln1118_89_fu_6204_p2);

    myproject_mul_mul_16s_16s_26_1_1_U85 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025,
        din1 => tmp_98_reg_7225,
        dout => mul_ln1118_90_fu_6211_p2);

    myproject_mul_mul_16s_16s_26_1_1_U86 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038,
        din1 => tmp_99_reg_7250,
        dout => mul_ln1118_91_fu_6218_p2);

    myproject_mul_mul_16s_16s_26_1_1_U87 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051,
        din1 => tmp_100_reg_7275,
        dout => mul_ln1118_92_fu_6225_p2);

    myproject_mul_mul_16s_16s_26_1_1_U88 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064,
        din1 => tmp_101_reg_7300,
        dout => mul_ln1118_93_fu_6232_p2);

    myproject_mul_mul_16s_16s_26_1_1_U89 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077,
        din1 => tmp_102_reg_7325,
        dout => mul_ln1118_94_fu_6239_p2);

    myproject_mul_mul_16s_16s_26_1_1_U90 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_103_reg_7350,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090,
        dout => mul_ln1118_95_fu_6246_p2);

    myproject_mul_mul_16s_16s_26_1_1_U91 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103,
        din1 => tmp_104_reg_7375,
        dout => mul_ln1118_96_fu_6253_p2);

    myproject_mul_mul_16s_16s_26_1_1_U92 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116,
        din1 => tmp_105_reg_7400,
        dout => mul_ln1118_97_fu_6260_p2);

    myproject_mul_mul_16s_16s_26_1_1_U93 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129,
        din1 => tmp_106_reg_7425,
        dout => mul_ln1118_98_fu_6267_p2);

    myproject_mul_mul_16s_16s_26_1_1_U94 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142,
        din1 => tmp_107_reg_7450,
        dout => mul_ln1118_99_fu_6274_p2);

    myproject_mul_mul_16s_16s_26_1_1_U95 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155,
        din1 => tmp_108_reg_7475,
        dout => mul_ln1118_100_fu_6281_p2);

    myproject_mul_mul_16s_16s_26_1_1_U96 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168,
        din1 => tmp_109_reg_7500,
        dout => mul_ln1118_101_fu_6288_p2);

    myproject_mul_mul_16s_16s_26_1_1_U97 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181,
        din1 => tmp_110_reg_7525,
        dout => mul_ln1118_102_fu_6295_p2);

    myproject_mul_mul_16s_16s_26_1_1_U98 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194,
        din1 => tmp_111_reg_7550,
        dout => mul_ln1118_103_fu_6302_p2);

    myproject_mul_mul_16s_16s_26_1_1_U99 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_112_reg_7575,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207,
        dout => mul_ln1118_104_fu_6309_p2);

    myproject_mul_mul_16s_16s_26_1_1_U100 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220,
        din1 => tmp_113_reg_7600,
        dout => mul_ln1118_105_fu_6316_p2);

    myproject_mul_mul_16s_16s_26_1_1_U101 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233,
        din1 => tmp_114_reg_7625,
        dout => mul_ln1118_106_fu_6323_p2);

    myproject_mul_mul_16s_16s_26_1_1_U102 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246,
        din1 => tmp_115_reg_7650,
        dout => mul_ln1118_107_fu_6330_p2);

    myproject_mul_mul_16s_16s_26_1_1_U103 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259,
        din1 => tmp_116_reg_7675,
        dout => mul_ln1118_108_fu_6337_p2);

    myproject_mul_mul_16s_16s_26_1_1_U104 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272,
        din1 => tmp_117_reg_7700,
        dout => mul_ln1118_109_fu_6344_p2);

    myproject_mul_mul_16s_16s_26_1_1_U105 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285,
        din1 => tmp_118_reg_7725,
        dout => mul_ln1118_110_fu_6351_p2);

    myproject_mul_mul_16s_16s_26_1_1_U106 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298,
        din1 => tmp_119_reg_7750,
        dout => mul_ln1118_111_fu_6358_p2);

    myproject_mul_mul_16s_16s_26_1_1_U107 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311,
        din1 => tmp_120_reg_7775,
        dout => mul_ln1118_112_fu_6365_p2);

    myproject_mul_mul_16s_16s_26_1_1_U108 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_121_reg_7800,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324,
        dout => mul_ln1118_113_fu_6372_p2);

    myproject_mul_mul_16s_16s_26_1_1_U109 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337,
        din1 => tmp_122_reg_7825,
        dout => mul_ln1118_114_fu_6379_p2);

    myproject_mul_mul_16s_16s_26_1_1_U110 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350,
        din1 => tmp_123_reg_7850,
        dout => mul_ln1118_115_fu_6386_p2);

    myproject_mul_mul_16s_16s_26_1_1_U111 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363,
        din1 => tmp_124_reg_7875,
        dout => mul_ln1118_116_fu_6393_p2);

    myproject_mul_mul_16s_16s_26_1_1_U112 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376,
        din1 => tmp_125_reg_7900,
        dout => mul_ln1118_117_fu_6400_p2);

    myproject_mul_mul_16s_16s_26_1_1_U113 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389,
        din1 => tmp_126_reg_7925,
        dout => mul_ln1118_118_fu_6407_p2);

    myproject_mul_mul_16s_16s_26_1_1_U114 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402,
        din1 => tmp_127_reg_7950,
        dout => mul_ln1118_119_fu_6414_p2);

    myproject_mul_mul_16s_16s_26_1_1_U115 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415,
        din1 => tmp_128_reg_7975,
        dout => mul_ln1118_120_fu_6421_p2);

    myproject_mul_mul_16s_16s_26_1_1_U116 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428,
        din1 => tmp_129_reg_8000,
        dout => mul_ln1118_121_fu_6428_p2);

    myproject_mul_mul_16s_16s_26_1_1_U117 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_130_reg_8025,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441,
        dout => mul_ln1118_122_fu_6435_p2);

    myproject_mul_mul_16s_16s_26_1_1_U118 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454,
        din1 => tmp_131_reg_8050,
        dout => mul_ln1118_123_fu_6442_p2);

    myproject_mul_mul_16s_16s_26_1_1_U119 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467,
        din1 => tmp_132_reg_8075,
        dout => mul_ln1118_124_fu_6449_p2);

    myproject_mul_mul_16s_16s_26_1_1_U120 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480,
        din1 => tmp_133_reg_8100,
        dout => mul_ln1118_125_fu_6456_p2);

    myproject_mul_mul_16s_16s_26_1_1_U121 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493,
        din1 => tmp_134_reg_8125,
        dout => mul_ln1118_126_fu_6463_p2);

    myproject_mul_mul_16s_16s_26_1_1_U122 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506,
        din1 => tmp_135_reg_8150,
        dout => mul_ln1118_127_fu_6470_p2);

    myproject_mul_mul_16s_16s_26_1_1_U123 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519,
        din1 => tmp_136_reg_8175,
        dout => mul_ln1118_128_fu_6477_p2);

    myproject_mul_mul_16s_16s_26_1_1_U124 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532,
        din1 => tmp_137_reg_8200,
        dout => mul_ln1118_129_fu_6484_p2);

    myproject_mul_mul_16s_16s_26_1_1_U125 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545,
        din1 => tmp_138_reg_8225,
        dout => mul_ln1118_130_fu_6491_p2);

    myproject_mul_mul_16s_16s_26_1_1_U126 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_139_reg_8250,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558,
        dout => mul_ln1118_131_fu_6498_p2);

    myproject_mul_mul_16s_16s_26_1_1_U127 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571,
        din1 => tmp_140_reg_8275,
        dout => mul_ln1118_132_fu_6505_p2);

    myproject_mul_mul_16s_16s_26_1_1_U128 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584,
        din1 => tmp_141_reg_8300,
        dout => mul_ln1118_133_fu_6512_p2);

    myproject_mul_mul_16s_16s_26_1_1_U129 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597,
        din1 => tmp_142_reg_8325,
        dout => mul_ln1118_134_fu_6519_p2);

    myproject_mul_mul_16s_16s_26_1_1_U130 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610,
        din1 => tmp_143_reg_8350,
        dout => mul_ln1118_135_fu_6526_p2);

    myproject_mul_mul_16s_16s_26_1_1_U131 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623,
        din1 => tmp_144_reg_8375,
        dout => mul_ln1118_136_fu_6533_p2);

    myproject_mul_mul_16s_16s_26_1_1_U132 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636,
        din1 => tmp_145_reg_8400,
        dout => mul_ln1118_137_fu_6540_p2);

    myproject_mul_mul_16s_16s_26_1_1_U133 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649,
        din1 => tmp_146_reg_8425,
        dout => mul_ln1118_138_fu_6547_p2);

    myproject_mul_mul_16s_16s_26_1_1_U134 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662,
        din1 => tmp_147_reg_8450,
        dout => mul_ln1118_139_fu_6554_p2);

    myproject_mul_mul_16s_16s_26_1_1_U135 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_148_reg_8475,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675,
        dout => mul_ln1118_140_fu_6561_p2);

    myproject_mul_mul_16s_16s_26_1_1_U136 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688,
        din1 => tmp_149_reg_8500,
        dout => mul_ln1118_141_fu_6568_p2);

    myproject_mul_mul_16s_16s_26_1_1_U137 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701,
        din1 => tmp_150_reg_8525,
        dout => mul_ln1118_142_fu_6575_p2);

    myproject_mul_mul_16s_16s_26_1_1_U138 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714,
        din1 => tmp_151_reg_8550,
        dout => mul_ln1118_143_fu_6582_p2);

    myproject_mul_mul_16s_16s_26_1_1_U139 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727,
        din1 => tmp_152_reg_8575,
        dout => mul_ln1118_144_fu_6589_p2);

    myproject_mul_mul_16s_16s_26_1_1_U140 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740,
        din1 => tmp_153_reg_8600,
        dout => mul_ln1118_145_fu_6596_p2);

    myproject_mul_mul_16s_16s_26_1_1_U141 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753,
        din1 => tmp_154_reg_8625,
        dout => mul_ln1118_146_fu_6603_p2);

    myproject_mul_mul_16s_16s_26_1_1_U142 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766,
        din1 => tmp_155_reg_8650,
        dout => mul_ln1118_147_fu_6610_p2);

    myproject_mul_mul_16s_16s_26_1_1_U143 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779,
        din1 => tmp_156_reg_8675,
        dout => mul_ln1118_148_fu_6617_p2);

    myproject_mul_mul_16s_16s_26_1_1_U144 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_157_reg_8700,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792,
        dout => mul_ln1118_149_fu_6624_p2);

    myproject_mul_mul_16s_9s_25_1_1_U145 : component myproject_mul_mul_16s_9s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805,
        din1 => tmp_158_reg_8725,
        dout => mul_ln1118_150_fu_6631_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln43_fu_2765_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1012 <= ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1012;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1025 <= ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1025;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1038 <= ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1038;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1051 <= ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1051;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1064 <= ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1064;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1077 <= ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1077;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1090 <= ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1090;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1103 <= ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1103;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1116 <= ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1116;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1129 <= ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1129;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_895 <= ap_phi_reg_pp1_iter1_phi_ln56_1_reg_895;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1142 <= ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1142;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1155 <= ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1155;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1168 <= ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1168;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1181 <= ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1181;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1194 <= ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1194;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1207 <= ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1207;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1220 <= ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1220;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1233 <= ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1233;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1246 <= ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1246;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1259 <= ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1259;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_908 <= ap_phi_reg_pp1_iter1_phi_ln56_2_reg_908;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1272 <= ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1272;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1285 <= ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1285;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1298 <= ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1298;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1311 <= ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1311;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1324 <= ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1324;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1337 <= ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1337;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1350 <= ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1350;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1363 <= ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1363;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1376 <= ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1376;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1389 <= ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1389;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_921 <= ap_phi_reg_pp1_iter1_phi_ln56_3_reg_921;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1402 <= ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1402;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1415 <= ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1415;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1428 <= ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1428;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1441 <= ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1441;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1454 <= ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1454;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1467 <= ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1467;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1480 <= ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1480;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1493 <= ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1493;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1506 <= ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1506;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1519 <= ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1519;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_934 <= ap_phi_reg_pp1_iter1_phi_ln56_4_reg_934;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1532 <= ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1532;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1545 <= ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1545;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1558 <= ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1558;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1571 <= ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1571;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1584 <= ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1584;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1597 <= ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1597;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1610 <= ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1610;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1623 <= ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1623;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1636 <= ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1636;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1649 <= ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1649;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_947 <= ap_phi_reg_pp1_iter1_phi_ln56_5_reg_947;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1662 <= ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1662;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1675 <= ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1675;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1688 <= ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1688;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1701 <= ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1701;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1714 <= ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1714;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1727 <= ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1727;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1740 <= ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1740;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1753 <= ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1753;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1766 <= ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1766;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1779 <= ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1779;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_960 <= ap_phi_reg_pp1_iter1_phi_ln56_6_reg_960;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1792 <= ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1792;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1805 <= ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1805;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_973 <= ap_phi_reg_pp1_iter1_phi_ln56_7_reg_973;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6922 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6922 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6922 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_986 <= ap_phi_reg_pp1_iter1_phi_ln56_8_reg_986;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_999 <= ap_phi_reg_pp1_iter1_phi_ln56_9_reg_999;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_reg_882_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_870 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_882 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_870 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_882 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_870 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_882 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_870 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_882 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_882 <= ap_phi_reg_pp1_iter1_phi_ln56_reg_882;
                end if;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_0_reg_837_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_0_reg_837 <= add_ln213_fu_2480_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_ic2_0_i_i_i_i_0_reg_837 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_1_reg_848_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_1_reg_848 <= add_ln213_1_fu_2546_p2;
            elsif (((icmp_ln213_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_1_reg_848 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_2_reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_2606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_ic2_0_i_i_i_i_2_reg_859 <= add_ln213_2_fu_2612_p2;
            elsif (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_2_reg_859 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic4_0_i_i_i_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_ic4_0_i_i_i_reg_789 <= i_ic_reg_6719;
            elsif (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_ic4_0_i_i_i_reg_789 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_iw_0_i_i_i_i_reg_826_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2034_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_iw_0_i_i_i_i_reg_826 <= ap_const_lv2_0;
            elsif (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_iw_0_i_i_i_i_reg_826 <= i_iw_fu_2186_p2;
            end if; 
        end if;
    end process;

    indvar_flatten133_reg_777_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                indvar_flatten133_reg_777 <= add_ln79_reg_6710;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten133_reg_777 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1543)) then
                if ((icmp_ln313_fu_6041_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_6041_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_6046_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2240)) then
                if ((icmp_ln317_fu_6087_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_6087_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_6092_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1543)) then
                if ((icmp_ln313_fu_6041_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_6041_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_6062_p3;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_0_0_V_reg_813_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((trunc_ln246_reg_6724 = ap_const_lv2_0)) then 
                    shift_buffer_0_0_V_reg_813 <= line_buffer_Array_V_1_1_0_q0;
                elsif ((trunc_ln246_reg_6724 = ap_const_lv2_1)) then 
                    shift_buffer_0_0_V_reg_813 <= line_buffer_Array_V_1_1_1_q0;
                elsif ((trunc_ln246_reg_6724 = ap_const_lv2_2)) then 
                    shift_buffer_0_0_V_reg_813 <= line_buffer_Array_V_1_1_2_q0;
                elsif ((trunc_ln246_reg_6724 = ap_const_lv2_3)) then 
                    shift_buffer_0_0_V_reg_813 <= line_buffer_Array_V_1_1_3_q0;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_1_0_V_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((trunc_ln246_fu_2046_p1 = ap_const_lv2_0)) then 
                    shift_buffer_1_0_V_reg_800 <= line_buffer_Array_V_1_0_0_q0;
                elsif ((trunc_ln246_fu_2046_p1 = ap_const_lv2_1)) then 
                    shift_buffer_1_0_V_reg_800 <= line_buffer_Array_V_1_0_1_q0;
                elsif ((trunc_ln246_fu_2046_p1 = ap_const_lv2_2)) then 
                    shift_buffer_1_0_V_reg_800 <= line_buffer_Array_V_1_0_2_q0;
                elsif ((trunc_ln246_fu_2046_p1 = ap_const_lv2_3)) then 
                    shift_buffer_1_0_V_reg_800 <= line_buffer_Array_V_1_0_3_q0;
                end if;
            end if; 
        end if;
    end process;

    tmp_data_0_V_7130_reg_1818_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_0_V_7130_reg_1818 <= acc_0_V_fu_5965_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_0_V_7130_reg_1818 <= ap_const_lv16_DB;
            end if; 
        end if;
    end process;

    tmp_data_1_V_7128_reg_1829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_1_V_7128_reg_1829 <= acc_1_V_fu_5975_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_1_V_7128_reg_1829 <= ap_const_lv16_2A5;
            end if; 
        end if;
    end process;

    tmp_data_2_V_7126_reg_1840_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_2_V_7126_reg_1840 <= acc_2_V_fu_5985_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_2_V_7126_reg_1840 <= ap_const_lv16_1C;
            end if; 
        end if;
    end process;

    tmp_data_3_V_7124_reg_1851_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_3_V_7124_reg_1851 <= acc_3_V_fu_5995_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_3_V_7124_reg_1851 <= ap_const_lv16_97;
            end if; 
        end if;
    end process;

    tmp_data_4_V_5122_reg_1862_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_4_V_5122_reg_1862 <= acc_4_V_fu_6005_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_4_V_5122_reg_1862 <= ap_const_lv16_FE96;
            end if; 
        end if;
    end process;

    tmp_data_5_V_5120_reg_1873_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_5_V_5120_reg_1873 <= acc_5_V_fu_6015_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_5_V_5120_reg_1873 <= ap_const_lv16_FFC0;
            end if; 
        end if;
    end process;

    tmp_data_6_V_5118_reg_1884_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_6_V_5118_reg_1884 <= acc_6_V_fu_6025_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_6_V_5118_reg_1884 <= ap_const_lv16_2B;
            end if; 
        end if;
    end process;

    tmp_data_7_V_5116_reg_1895_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_7_V_5116_reg_1895 <= acc_7_V_fu_6035_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_7_V_5116_reg_1895 <= ap_const_lv16_FFC9;
            end if; 
        end if;
    end process;

    w_index132_reg_870_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6926 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                w_index132_reg_870 <= w_index_reg_6912;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                w_index132_reg_870 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then
                acc_0_V_reg_9170 <= acc_0_V_fu_5965_p2;
                acc_1_V_reg_9176 <= acc_1_V_fu_5975_p2;
                acc_2_V_reg_9182 <= acc_2_V_fu_5985_p2;
                acc_3_V_reg_9188 <= acc_3_V_fu_5995_p2;
                acc_4_V_reg_9194 <= acc_4_V_fu_6005_p2;
                acc_5_V_reg_9200 <= acc_5_V_fu_6015_p2;
                acc_6_V_reg_9206 <= acc_6_V_fu_6025_p2;
                acc_7_V_reg_9212 <= acc_7_V_fu_6035_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                add_ln703_103_reg_9115 <= add_ln703_103_fu_5786_p2;
                add_ln703_108_reg_9120 <= add_ln703_108_fu_5800_p2;
                add_ln703_112_reg_9125 <= add_ln703_112_fu_5819_p2;
                add_ln703_117_reg_9130 <= add_ln703_117_fu_5833_p2;
                add_ln703_121_reg_9135 <= add_ln703_121_fu_5852_p2;
                add_ln703_126_reg_9140 <= add_ln703_126_fu_5866_p2;
                add_ln703_130_reg_9145 <= add_ln703_130_fu_5885_p2;
                add_ln703_135_reg_9150 <= add_ln703_135_fu_5899_p2;
                add_ln703_139_reg_9155 <= add_ln703_139_fu_5918_p2;
                add_ln703_144_reg_9160 <= add_ln703_144_fu_5935_p2;
                add_ln703_148_reg_9165 <= add_ln703_148_fu_5955_p2;
                add_ln703_81_reg_9090 <= add_ln703_81_fu_5701_p2;
                add_ln703_85_reg_9095 <= add_ln703_85_fu_5720_p2;
                add_ln703_90_reg_9100 <= add_ln703_90_fu_5734_p2;
                add_ln703_94_reg_9105 <= add_ln703_94_fu_5753_p2;
                add_ln703_99_reg_9110 <= add_ln703_99_fu_5767_p2;
                icmp_ln43_reg_6926_pp1_iter2_reg <= icmp_ln43_reg_6926_pp1_iter1_reg;
                icmp_ln43_reg_6926_pp1_iter3_reg <= icmp_ln43_reg_6926_pp1_iter2_reg;
                trunc_ln2_reg_8730 <= mul_ln1118_fu_6134_p2(25 downto 10);
                trunc_ln708_100_reg_8845 <= mul_ln1118_102_fu_6295_p2(25 downto 10);
                trunc_ln708_101_reg_8850 <= mul_ln1118_103_fu_6302_p2(25 downto 10);
                trunc_ln708_102_reg_8855 <= mul_ln1118_104_fu_6309_p2(25 downto 10);
                trunc_ln708_103_reg_8860 <= mul_ln1118_105_fu_6316_p2(25 downto 10);
                trunc_ln708_104_reg_8865 <= mul_ln1118_106_fu_6323_p2(25 downto 10);
                trunc_ln708_105_reg_8870 <= mul_ln1118_107_fu_6330_p2(25 downto 10);
                trunc_ln708_106_reg_8875 <= mul_ln1118_108_fu_6337_p2(25 downto 10);
                trunc_ln708_107_reg_8880 <= mul_ln1118_109_fu_6344_p2(25 downto 10);
                trunc_ln708_108_reg_8885 <= mul_ln1118_110_fu_6351_p2(25 downto 10);
                trunc_ln708_109_reg_8890 <= mul_ln1118_111_fu_6358_p2(25 downto 10);
                trunc_ln708_110_reg_8895 <= mul_ln1118_112_fu_6365_p2(25 downto 10);
                trunc_ln708_111_reg_8900 <= mul_ln1118_113_fu_6372_p2(25 downto 10);
                trunc_ln708_112_reg_8905 <= mul_ln1118_114_fu_6379_p2(25 downto 10);
                trunc_ln708_113_reg_8910 <= mul_ln1118_115_fu_6386_p2(25 downto 10);
                trunc_ln708_114_reg_8915 <= mul_ln1118_116_fu_6393_p2(25 downto 10);
                trunc_ln708_115_reg_8920 <= mul_ln1118_117_fu_6400_p2(25 downto 10);
                trunc_ln708_116_reg_8925 <= mul_ln1118_118_fu_6407_p2(25 downto 10);
                trunc_ln708_117_reg_8930 <= mul_ln1118_119_fu_6414_p2(25 downto 10);
                trunc_ln708_118_reg_8935 <= mul_ln1118_120_fu_6421_p2(25 downto 10);
                trunc_ln708_119_reg_8940 <= mul_ln1118_121_fu_6428_p2(25 downto 10);
                trunc_ln708_120_reg_8945 <= mul_ln1118_122_fu_6435_p2(25 downto 10);
                trunc_ln708_121_reg_8950 <= mul_ln1118_123_fu_6442_p2(25 downto 10);
                trunc_ln708_122_reg_8955 <= mul_ln1118_124_fu_6449_p2(25 downto 10);
                trunc_ln708_123_reg_8960 <= mul_ln1118_125_fu_6456_p2(25 downto 10);
                trunc_ln708_124_reg_8965 <= mul_ln1118_126_fu_6463_p2(25 downto 10);
                trunc_ln708_125_reg_8970 <= mul_ln1118_127_fu_6470_p2(25 downto 10);
                trunc_ln708_126_reg_8975 <= mul_ln1118_128_fu_6477_p2(25 downto 10);
                trunc_ln708_127_reg_8980 <= mul_ln1118_129_fu_6484_p2(25 downto 10);
                trunc_ln708_128_reg_8985 <= mul_ln1118_130_fu_6491_p2(25 downto 10);
                trunc_ln708_129_reg_8990 <= mul_ln1118_131_fu_6498_p2(25 downto 10);
                trunc_ln708_130_reg_8995 <= mul_ln1118_132_fu_6505_p2(25 downto 10);
                trunc_ln708_131_reg_9000 <= mul_ln1118_133_fu_6512_p2(25 downto 10);
                trunc_ln708_132_reg_9005 <= mul_ln1118_134_fu_6519_p2(25 downto 10);
                trunc_ln708_133_reg_9010 <= mul_ln1118_135_fu_6526_p2(25 downto 10);
                trunc_ln708_134_reg_9015 <= mul_ln1118_136_fu_6533_p2(25 downto 10);
                trunc_ln708_135_reg_9020 <= mul_ln1118_137_fu_6540_p2(25 downto 10);
                trunc_ln708_136_reg_9025 <= mul_ln1118_138_fu_6547_p2(25 downto 10);
                trunc_ln708_137_reg_9030 <= mul_ln1118_139_fu_6554_p2(25 downto 10);
                trunc_ln708_138_reg_9035 <= mul_ln1118_140_fu_6561_p2(25 downto 10);
                trunc_ln708_139_reg_9040 <= mul_ln1118_141_fu_6568_p2(25 downto 10);
                trunc_ln708_140_reg_9045 <= mul_ln1118_142_fu_6575_p2(25 downto 10);
                trunc_ln708_141_reg_9050 <= mul_ln1118_143_fu_6582_p2(25 downto 10);
                trunc_ln708_142_reg_9055 <= mul_ln1118_144_fu_6589_p2(25 downto 10);
                trunc_ln708_143_reg_9060 <= mul_ln1118_145_fu_6596_p2(25 downto 10);
                trunc_ln708_144_reg_9065 <= mul_ln1118_146_fu_6603_p2(25 downto 10);
                trunc_ln708_145_reg_9070 <= mul_ln1118_147_fu_6610_p2(25 downto 10);
                trunc_ln708_146_reg_9075 <= mul_ln1118_148_fu_6617_p2(25 downto 10);
                trunc_ln708_147_reg_9080 <= mul_ln1118_149_fu_6624_p2(25 downto 10);
                trunc_ln708_148_reg_9085 <= mul_ln1118_150_fu_6631_p2(24 downto 10);
                trunc_ln708_79_reg_8740 <= mul_ln1118_81_fu_6148_p2(25 downto 10);
                trunc_ln708_80_reg_8745 <= mul_ln1118_82_fu_6155_p2(25 downto 10);
                trunc_ln708_81_reg_8750 <= mul_ln1118_83_fu_6162_p2(25 downto 10);
                trunc_ln708_82_reg_8755 <= mul_ln1118_84_fu_6169_p2(25 downto 10);
                trunc_ln708_83_reg_8760 <= mul_ln1118_85_fu_6176_p2(25 downto 10);
                trunc_ln708_84_reg_8765 <= mul_ln1118_86_fu_6183_p2(25 downto 10);
                trunc_ln708_85_reg_8770 <= mul_ln1118_87_fu_6190_p2(25 downto 10);
                trunc_ln708_86_reg_8775 <= mul_ln1118_88_fu_6197_p2(25 downto 10);
                trunc_ln708_87_reg_8780 <= mul_ln1118_89_fu_6204_p2(25 downto 10);
                trunc_ln708_88_reg_8785 <= mul_ln1118_90_fu_6211_p2(25 downto 10);
                trunc_ln708_89_reg_8790 <= mul_ln1118_91_fu_6218_p2(25 downto 10);
                trunc_ln708_90_reg_8795 <= mul_ln1118_92_fu_6225_p2(25 downto 10);
                trunc_ln708_91_reg_8800 <= mul_ln1118_93_fu_6232_p2(25 downto 10);
                trunc_ln708_92_reg_8805 <= mul_ln1118_94_fu_6239_p2(25 downto 10);
                trunc_ln708_93_reg_8810 <= mul_ln1118_95_fu_6246_p2(25 downto 10);
                trunc_ln708_94_reg_8815 <= mul_ln1118_96_fu_6253_p2(25 downto 10);
                trunc_ln708_95_reg_8820 <= mul_ln1118_97_fu_6260_p2(25 downto 10);
                trunc_ln708_96_reg_8825 <= mul_ln1118_98_fu_6267_p2(25 downto 10);
                trunc_ln708_97_reg_8830 <= mul_ln1118_99_fu_6274_p2(25 downto 10);
                trunc_ln708_98_reg_8835 <= mul_ln1118_100_fu_6281_p2(25 downto 10);
                trunc_ln708_99_reg_8840 <= mul_ln1118_101_fu_6288_p2(25 downto 10);
                trunc_ln708_s_reg_8735 <= mul_ln1118_80_fu_6141_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln79_reg_6710 <= add_ln79_fu_2028_p2;
                tmp_data_0_V_reg_6686 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_6692 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_6698 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_6704 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                and_ln289_2_reg_6908 <= and_ln289_2_fu_2736_p2;
                icmp_ln289_1_reg_6891 <= icmp_ln289_1_fu_2678_p2;
                icmp_ln289_reg_6881 <= icmp_ln289_fu_2668_p2;
                pX_2_load_reg_6902 <= pX_2;
                pY_2_load_reg_6896 <= pY_2;
                sX_2_load_reg_6876 <= sX_2;
                sY_2_load_reg_6886 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1012 <= ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1012;
                ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1025 <= ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1025;
                ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1038 <= ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1038;
                ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1051 <= ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1051;
                ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1064 <= ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1064;
                ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1077 <= ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1077;
                ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1090 <= ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1090;
                ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1103 <= ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1103;
                ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1116 <= ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1116;
                ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1129 <= ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1129;
                ap_phi_reg_pp1_iter1_phi_ln56_1_reg_895 <= ap_phi_reg_pp1_iter0_phi_ln56_1_reg_895;
                ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1142 <= ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1142;
                ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1155 <= ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1155;
                ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1168 <= ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1168;
                ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1181 <= ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1181;
                ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1194 <= ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1194;
                ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1207 <= ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1207;
                ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1220 <= ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1220;
                ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1233 <= ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1233;
                ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1246 <= ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1246;
                ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1259 <= ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1259;
                ap_phi_reg_pp1_iter1_phi_ln56_2_reg_908 <= ap_phi_reg_pp1_iter0_phi_ln56_2_reg_908;
                ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1272 <= ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1272;
                ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1285 <= ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1285;
                ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1298 <= ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1298;
                ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1311 <= ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1311;
                ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1324 <= ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1324;
                ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1337 <= ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1337;
                ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1350 <= ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1350;
                ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1363 <= ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1363;
                ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1376 <= ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1376;
                ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1389 <= ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1389;
                ap_phi_reg_pp1_iter1_phi_ln56_3_reg_921 <= ap_phi_reg_pp1_iter0_phi_ln56_3_reg_921;
                ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1402 <= ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1402;
                ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1415 <= ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1415;
                ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1428 <= ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1428;
                ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1441 <= ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1441;
                ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1454 <= ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1454;
                ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1467 <= ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1467;
                ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1480 <= ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1480;
                ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1493 <= ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1493;
                ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1506 <= ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1506;
                ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1519 <= ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1519;
                ap_phi_reg_pp1_iter1_phi_ln56_4_reg_934 <= ap_phi_reg_pp1_iter0_phi_ln56_4_reg_934;
                ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1532 <= ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1532;
                ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1545 <= ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1545;
                ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1558 <= ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1558;
                ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1571 <= ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1571;
                ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1584 <= ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1584;
                ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1597 <= ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1597;
                ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1610 <= ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1610;
                ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1623 <= ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1623;
                ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1636 <= ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1636;
                ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1649 <= ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1649;
                ap_phi_reg_pp1_iter1_phi_ln56_5_reg_947 <= ap_phi_reg_pp1_iter0_phi_ln56_5_reg_947;
                ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1662 <= ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1662;
                ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1675 <= ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1675;
                ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1688 <= ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1688;
                ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1701 <= ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1701;
                ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1714 <= ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1714;
                ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1727 <= ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1727;
                ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1740 <= ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1740;
                ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1753 <= ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1753;
                ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1766 <= ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1766;
                ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1779 <= ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1779;
                ap_phi_reg_pp1_iter1_phi_ln56_6_reg_960 <= ap_phi_reg_pp1_iter0_phi_ln56_6_reg_960;
                ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1792 <= ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1792;
                ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1805 <= ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1805;
                ap_phi_reg_pp1_iter1_phi_ln56_7_reg_973 <= ap_phi_reg_pp1_iter0_phi_ln56_7_reg_973;
                ap_phi_reg_pp1_iter1_phi_ln56_8_reg_986 <= ap_phi_reg_pp1_iter0_phi_ln56_8_reg_986;
                ap_phi_reg_pp1_iter1_phi_ln56_9_reg_999 <= ap_phi_reg_pp1_iter0_phi_ln56_9_reg_999;
                ap_phi_reg_pp1_iter1_phi_ln56_reg_882 <= ap_phi_reg_pp1_iter0_phi_ln56_reg_882;
                w_index_reg_6912 <= w_index_fu_2746_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_ic_reg_6719 <= i_ic_fu_2040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln43_reg_6926 <= icmp_ln43_fu_2765_p2;
                icmp_ln43_reg_6926_pp1_iter1_reg <= icmp_ln43_reg_6926;
                    or_ln_reg_6922(1 downto 0) <= or_ln_fu_2757_p3(1 downto 0);
                tmp_100_reg_7275 <= w5_V_q0(223 downto 208);
                tmp_101_reg_7300 <= w5_V_q0(239 downto 224);
                tmp_102_reg_7325 <= w5_V_q0(255 downto 240);
                tmp_103_reg_7350 <= w5_V_q0(271 downto 256);
                tmp_104_reg_7375 <= w5_V_q0(287 downto 272);
                tmp_105_reg_7400 <= w5_V_q0(303 downto 288);
                tmp_106_reg_7425 <= w5_V_q0(319 downto 304);
                tmp_107_reg_7450 <= w5_V_q0(335 downto 320);
                tmp_108_reg_7475 <= w5_V_q0(351 downto 336);
                tmp_109_reg_7500 <= w5_V_q0(367 downto 352);
                tmp_110_reg_7525 <= w5_V_q0(383 downto 368);
                tmp_111_reg_7550 <= w5_V_q0(399 downto 384);
                tmp_112_reg_7575 <= w5_V_q0(415 downto 400);
                tmp_113_reg_7600 <= w5_V_q0(431 downto 416);
                tmp_114_reg_7625 <= w5_V_q0(447 downto 432);
                tmp_115_reg_7650 <= w5_V_q0(463 downto 448);
                tmp_116_reg_7675 <= w5_V_q0(479 downto 464);
                tmp_117_reg_7700 <= w5_V_q0(495 downto 480);
                tmp_118_reg_7725 <= w5_V_q0(511 downto 496);
                tmp_119_reg_7750 <= w5_V_q0(527 downto 512);
                tmp_120_reg_7775 <= w5_V_q0(543 downto 528);
                tmp_121_reg_7800 <= w5_V_q0(559 downto 544);
                tmp_122_reg_7825 <= w5_V_q0(575 downto 560);
                tmp_123_reg_7850 <= w5_V_q0(591 downto 576);
                tmp_124_reg_7875 <= w5_V_q0(607 downto 592);
                tmp_125_reg_7900 <= w5_V_q0(623 downto 608);
                tmp_126_reg_7925 <= w5_V_q0(639 downto 624);
                tmp_127_reg_7950 <= w5_V_q0(655 downto 640);
                tmp_128_reg_7975 <= w5_V_q0(671 downto 656);
                tmp_129_reg_8000 <= w5_V_q0(687 downto 672);
                tmp_130_reg_8025 <= w5_V_q0(703 downto 688);
                tmp_131_reg_8050 <= w5_V_q0(719 downto 704);
                tmp_132_reg_8075 <= w5_V_q0(735 downto 720);
                tmp_133_reg_8100 <= w5_V_q0(751 downto 736);
                tmp_134_reg_8125 <= w5_V_q0(767 downto 752);
                tmp_135_reg_8150 <= w5_V_q0(783 downto 768);
                tmp_136_reg_8175 <= w5_V_q0(799 downto 784);
                tmp_137_reg_8200 <= w5_V_q0(815 downto 800);
                tmp_138_reg_8225 <= w5_V_q0(831 downto 816);
                tmp_139_reg_8250 <= w5_V_q0(847 downto 832);
                tmp_140_reg_8275 <= w5_V_q0(863 downto 848);
                tmp_141_reg_8300 <= w5_V_q0(879 downto 864);
                tmp_142_reg_8325 <= w5_V_q0(895 downto 880);
                tmp_143_reg_8350 <= w5_V_q0(911 downto 896);
                tmp_144_reg_8375 <= w5_V_q0(927 downto 912);
                tmp_145_reg_8400 <= w5_V_q0(943 downto 928);
                tmp_146_reg_8425 <= w5_V_q0(959 downto 944);
                tmp_147_reg_8450 <= w5_V_q0(975 downto 960);
                tmp_148_reg_8475 <= w5_V_q0(991 downto 976);
                tmp_149_reg_8500 <= w5_V_q0(1007 downto 992);
                tmp_150_reg_8525 <= w5_V_q0(1023 downto 1008);
                tmp_151_reg_8550 <= w5_V_q0(1039 downto 1024);
                tmp_152_reg_8575 <= w5_V_q0(1055 downto 1040);
                tmp_153_reg_8600 <= w5_V_q0(1071 downto 1056);
                tmp_154_reg_8625 <= w5_V_q0(1087 downto 1072);
                tmp_155_reg_8650 <= w5_V_q0(1103 downto 1088);
                tmp_156_reg_8675 <= w5_V_q0(1119 downto 1104);
                tmp_157_reg_8700 <= w5_V_q0(1135 downto 1120);
                tmp_158_reg_8725 <= w5_V_q0(1144 downto 1136);
                tmp_88_reg_6975 <= w5_V_q0(31 downto 16);
                tmp_89_reg_7000 <= w5_V_q0(47 downto 32);
                tmp_90_reg_7025 <= w5_V_q0(63 downto 48);
                tmp_91_reg_7050 <= w5_V_q0(79 downto 64);
                tmp_92_reg_7075 <= w5_V_q0(95 downto 80);
                tmp_93_reg_7100 <= w5_V_q0(111 downto 96);
                tmp_94_reg_7125 <= w5_V_q0(127 downto 112);
                tmp_95_reg_7150 <= w5_V_q0(143 downto 128);
                tmp_96_reg_7175 <= w5_V_q0(159 downto 144);
                tmp_97_reg_7200 <= w5_V_q0(175 downto 160);
                tmp_98_reg_7225 <= w5_V_q0(191 downto 176);
                tmp_99_reg_7250 <= w5_V_q0(207 downto 192);
                trunc_ln56_reg_6950 <= trunc_ln56_fu_2787_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (icmp_ln203_fu_2204_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_0 <= select_ln203_fu_2210_p3;
                kernel_data_V_1_12 <= select_ln203_4_fu_2322_p3;
                kernel_data_V_1_13 <= select_ln203_5_fu_2341_p3;
                kernel_data_V_1_14 <= select_ln203_6_fu_2360_p3;
                kernel_data_V_1_15 <= select_ln203_7_fu_2379_p3;
                kernel_data_V_1_24 <= select_ln203_8_fu_2398_p3;
                kernel_data_V_1_25 <= select_ln203_9_fu_2417_p3;
                kernel_data_V_1_26 <= select_ln203_10_fu_2436_p3;
                kernel_data_V_1_27 <= select_ln203_11_fu_2455_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (icmp_ln203_1_fu_2242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_1 <= select_ln203_1_fu_2229_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_2))) then
                kernel_data_V_1_10 <= tmp_82_fu_2502_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2034_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                kernel_data_V_1_10_load_reg_6758 <= kernel_data_V_1_10;
                kernel_data_V_1_11_load_reg_6763 <= kernel_data_V_1_11;
                kernel_data_V_1_20_load_reg_6768 <= kernel_data_V_1_20;
                kernel_data_V_1_21_load_reg_6773 <= kernel_data_V_1_21;
                kernel_data_V_1_22_load_reg_6778 <= kernel_data_V_1_22;
                kernel_data_V_1_23_load_reg_6783 <= kernel_data_V_1_23;
                kernel_data_V_1_32_load_reg_6788 <= kernel_data_V_1_32;
                kernel_data_V_1_33_load_reg_6793 <= kernel_data_V_1_33;
                kernel_data_V_1_34_load_reg_6798 <= kernel_data_V_1_34;
                kernel_data_V_1_35_load_reg_6803 <= kernel_data_V_1_35;
                kernel_data_V_1_8_load_reg_6748 <= kernel_data_V_1_8;
                kernel_data_V_1_9_load_reg_6753 <= kernel_data_V_1_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_0)) and (icmp_ln213_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_11 <= tmp_82_fu_2502_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_fu_2204_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_16 <= select_ln203_4_fu_2322_p3;
                kernel_data_V_1_17 <= select_ln203_5_fu_2341_p3;
                kernel_data_V_1_18 <= select_ln203_6_fu_2360_p3;
                kernel_data_V_1_19 <= select_ln203_7_fu_2379_p3;
                kernel_data_V_1_28 <= select_ln203_8_fu_2398_p3;
                kernel_data_V_1_29 <= select_ln203_9_fu_2417_p3;
                kernel_data_V_1_30 <= select_ln203_10_fu_2436_p3;
                kernel_data_V_1_31 <= select_ln203_11_fu_2455_p3;
                kernel_data_V_1_4 <= select_ln203_fu_2210_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (icmp_ln203_2_fu_2273_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_2 <= select_ln203_2_fu_2260_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_0))) then
                kernel_data_V_1_20 <= tmp_84_fu_2568_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_1))) then
                kernel_data_V_1_21 <= tmp_84_fu_2568_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_2))) then
                kernel_data_V_1_22 <= tmp_84_fu_2568_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 = ap_const_lv3_0)) and (icmp_ln213_1_fu_2540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_23 <= tmp_84_fu_2568_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (icmp_ln203_3_fu_2304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_3 <= select_ln203_3_fu_2291_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2632_p3 = ap_const_lv6_20) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_32 <= tmp_85_fu_2622_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2632_p3 = ap_const_lv6_21) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_33 <= tmp_85_fu_2622_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2632_p3 = ap_const_lv6_22) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_34 <= tmp_85_fu_2622_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((or_ln203_2_fu_2632_p3 = ap_const_lv6_22)) and not((or_ln203_2_fu_2632_p3 = ap_const_lv6_21)) and not((or_ln203_2_fu_2632_p3 = ap_const_lv6_20)) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_35 <= tmp_85_fu_2622_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_1_fu_2242_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_5 <= select_ln203_1_fu_2229_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_2_fu_2273_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_6 <= select_ln203_2_fu_2260_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_3_fu_2304_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_7 <= select_ln203_3_fu_2291_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_0))) then
                kernel_data_V_1_8 <= tmp_82_fu_2502_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2474_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 = ap_const_lv3_1))) then
                kernel_data_V_1_9 <= tmp_82_fu_2502_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln313_fu_6041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_1909_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_1_fu_712 <= shift_buffer_0_0_V_reg_813;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_2_fu_716 <= shift_buffer_0_0_V_reg_813;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_3_fu_720 <= shift_buffer_0_0_V_reg_813;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_fu_708 <= shift_buffer_0_0_V_reg_813;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_1_fu_696 <= shift_buffer_1_0_V_reg_800;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_2_fu_700 <= shift_buffer_1_0_V_reg_800;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_3_fu_704 <= shift_buffer_1_0_V_reg_800;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6724 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_fu_692 <= shift_buffer_1_0_V_reg_800;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln246_reg_6724 <= trunc_ln246_fu_2046_p1;
            end if;
        end if;
    end process;
    or_ln_reg_6922(5 downto 2) <= "1000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op43, icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln213_2_fu_2606_p2, ap_CS_fsm_state10, and_ln289_2_fu_2736_p2, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter3, io_acc_block_signal_op1477, icmp_ln79_fu_6128_p2, icmp_ln194_fu_2180_p2, icmp_ln213_fu_2474_p2, icmp_ln213_1_fu_2540_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln241_fu_2034_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln194_fu_2180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln213_fu_2474_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln213_1_fu_2540_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_lv1_1 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_lv1_0 = and_ln289_2_fu_2736_p2) and (icmp_ln213_2_fu_2606_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    DataIn_V_assign_fu_2050_p5 <= i_ic4_0_i_i_i_reg_789(2 - 1 downto 0);
    acc_0_V_fu_5965_p2 <= std_logic_vector(unsigned(add_ln703_86_fu_5961_p2) + unsigned(tmp_data_0_V_7130_reg_1818));
    acc_1_V_fu_5975_p2 <= std_logic_vector(unsigned(add_ln703_95_fu_5971_p2) + unsigned(tmp_data_1_V_7128_reg_1829));
    acc_2_V_fu_5985_p2 <= std_logic_vector(unsigned(add_ln703_104_fu_5981_p2) + unsigned(tmp_data_2_V_7126_reg_1840));
    acc_3_V_fu_5995_p2 <= std_logic_vector(unsigned(add_ln703_113_fu_5991_p2) + unsigned(tmp_data_3_V_7124_reg_1851));
    acc_4_V_fu_6005_p2 <= std_logic_vector(unsigned(add_ln703_122_fu_6001_p2) + unsigned(tmp_data_4_V_5122_reg_1862));
    acc_5_V_fu_6015_p2 <= std_logic_vector(unsigned(add_ln703_131_fu_6011_p2) + unsigned(tmp_data_5_V_5120_reg_1873));
    acc_6_V_fu_6025_p2 <= std_logic_vector(unsigned(add_ln703_140_fu_6021_p2) + unsigned(tmp_data_6_V_5118_reg_1884));
    acc_7_V_fu_6035_p2 <= std_logic_vector(unsigned(tmp_data_7_V_5116_reg_1895) + unsigned(add_ln703_149_fu_6031_p2));
    add_ln213_1_fu_2546_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_1_reg_848) + unsigned(ap_const_lv3_1));
    add_ln213_2_fu_2612_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_2_reg_859) + unsigned(ap_const_lv3_1));
    add_ln213_fu_2480_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_0_reg_837) + unsigned(ap_const_lv3_1));
    add_ln321_fu_6092_p2 <= std_logic_vector(unsigned(pY_2_load_reg_6896) + unsigned(ap_const_lv32_1));
    add_ln323_fu_6103_p2 <= std_logic_vector(unsigned(sY_2_load_reg_6886) + unsigned(ap_const_lv32_1));
    add_ln326_fu_6046_p2 <= std_logic_vector(unsigned(pX_2_load_reg_6902) + unsigned(ap_const_lv32_1));
    add_ln328_fu_6057_p2 <= std_logic_vector(unsigned(sX_2_load_reg_6876) + unsigned(ap_const_lv32_1));
    add_ln703_100_fu_5773_p2 <= std_logic_vector(unsigned(trunc_ln708_100_reg_8845) + unsigned(trunc_ln708_99_reg_8840));
    add_ln703_101_fu_5777_p2 <= std_logic_vector(unsigned(trunc_ln708_103_reg_8860) + unsigned(trunc_ln708_102_reg_8855));
    add_ln703_102_fu_5781_p2 <= std_logic_vector(unsigned(trunc_ln708_101_reg_8850) + unsigned(add_ln703_101_fu_5777_p2));
    add_ln703_103_fu_5786_p2 <= std_logic_vector(unsigned(add_ln703_100_fu_5773_p2) + unsigned(add_ln703_102_fu_5781_p2));
    add_ln703_104_fu_5981_p2 <= std_logic_vector(unsigned(add_ln703_99_reg_9110) + unsigned(add_ln703_103_reg_9115));
    add_ln703_106_fu_5792_p2 <= std_logic_vector(unsigned(trunc_ln708_105_reg_8870) + unsigned(trunc_ln708_104_reg_8865));
    add_ln703_107_fu_5796_p2 <= std_logic_vector(unsigned(trunc_ln708_107_reg_8880) + unsigned(trunc_ln708_106_reg_8875));
    add_ln703_108_fu_5800_p2 <= std_logic_vector(unsigned(add_ln703_106_fu_5792_p2) + unsigned(add_ln703_107_fu_5796_p2));
    add_ln703_109_fu_5806_p2 <= std_logic_vector(unsigned(trunc_ln708_109_reg_8890) + unsigned(trunc_ln708_108_reg_8885));
    add_ln703_110_fu_5810_p2 <= std_logic_vector(unsigned(trunc_ln708_112_reg_8905) + unsigned(trunc_ln708_111_reg_8900));
    add_ln703_111_fu_5814_p2 <= std_logic_vector(unsigned(trunc_ln708_110_reg_8895) + unsigned(add_ln703_110_fu_5810_p2));
    add_ln703_112_fu_5819_p2 <= std_logic_vector(unsigned(add_ln703_109_fu_5806_p2) + unsigned(add_ln703_111_fu_5814_p2));
    add_ln703_113_fu_5991_p2 <= std_logic_vector(unsigned(add_ln703_108_reg_9120) + unsigned(add_ln703_112_reg_9125));
    add_ln703_115_fu_5825_p2 <= std_logic_vector(unsigned(trunc_ln708_114_reg_8915) + unsigned(trunc_ln708_113_reg_8910));
    add_ln703_116_fu_5829_p2 <= std_logic_vector(unsigned(trunc_ln708_116_reg_8925) + unsigned(trunc_ln708_115_reg_8920));
    add_ln703_117_fu_5833_p2 <= std_logic_vector(unsigned(add_ln703_115_fu_5825_p2) + unsigned(add_ln703_116_fu_5829_p2));
    add_ln703_118_fu_5839_p2 <= std_logic_vector(unsigned(trunc_ln708_118_reg_8935) + unsigned(trunc_ln708_117_reg_8930));
    add_ln703_119_fu_5843_p2 <= std_logic_vector(unsigned(trunc_ln708_121_reg_8950) + unsigned(trunc_ln708_120_reg_8945));
    add_ln703_120_fu_5847_p2 <= std_logic_vector(unsigned(trunc_ln708_119_reg_8940) + unsigned(add_ln703_119_fu_5843_p2));
    add_ln703_121_fu_5852_p2 <= std_logic_vector(unsigned(add_ln703_118_fu_5839_p2) + unsigned(add_ln703_120_fu_5847_p2));
    add_ln703_122_fu_6001_p2 <= std_logic_vector(unsigned(add_ln703_117_reg_9130) + unsigned(add_ln703_121_reg_9135));
    add_ln703_124_fu_5858_p2 <= std_logic_vector(unsigned(trunc_ln708_123_reg_8960) + unsigned(trunc_ln708_122_reg_8955));
    add_ln703_125_fu_5862_p2 <= std_logic_vector(unsigned(trunc_ln708_125_reg_8970) + unsigned(trunc_ln708_124_reg_8965));
    add_ln703_126_fu_5866_p2 <= std_logic_vector(unsigned(add_ln703_124_fu_5858_p2) + unsigned(add_ln703_125_fu_5862_p2));
    add_ln703_127_fu_5872_p2 <= std_logic_vector(unsigned(trunc_ln708_127_reg_8980) + unsigned(trunc_ln708_126_reg_8975));
    add_ln703_128_fu_5876_p2 <= std_logic_vector(unsigned(trunc_ln708_130_reg_8995) + unsigned(trunc_ln708_129_reg_8990));
    add_ln703_129_fu_5880_p2 <= std_logic_vector(unsigned(trunc_ln708_128_reg_8985) + unsigned(add_ln703_128_fu_5876_p2));
    add_ln703_130_fu_5885_p2 <= std_logic_vector(unsigned(add_ln703_127_fu_5872_p2) + unsigned(add_ln703_129_fu_5880_p2));
    add_ln703_131_fu_6011_p2 <= std_logic_vector(unsigned(add_ln703_126_reg_9140) + unsigned(add_ln703_130_reg_9145));
    add_ln703_133_fu_5891_p2 <= std_logic_vector(unsigned(trunc_ln708_132_reg_9005) + unsigned(trunc_ln708_131_reg_9000));
    add_ln703_134_fu_5895_p2 <= std_logic_vector(unsigned(trunc_ln708_134_reg_9015) + unsigned(trunc_ln708_133_reg_9010));
    add_ln703_135_fu_5899_p2 <= std_logic_vector(unsigned(add_ln703_133_fu_5891_p2) + unsigned(add_ln703_134_fu_5895_p2));
    add_ln703_136_fu_5905_p2 <= std_logic_vector(unsigned(trunc_ln708_136_reg_9025) + unsigned(trunc_ln708_135_reg_9020));
    add_ln703_137_fu_5909_p2 <= std_logic_vector(unsigned(trunc_ln708_139_reg_9040) + unsigned(trunc_ln708_138_reg_9035));
    add_ln703_138_fu_5913_p2 <= std_logic_vector(unsigned(trunc_ln708_137_reg_9030) + unsigned(add_ln703_137_fu_5909_p2));
    add_ln703_139_fu_5918_p2 <= std_logic_vector(unsigned(add_ln703_136_fu_5905_p2) + unsigned(add_ln703_138_fu_5913_p2));
    add_ln703_140_fu_6021_p2 <= std_logic_vector(unsigned(add_ln703_135_reg_9150) + unsigned(add_ln703_139_reg_9155));
    add_ln703_142_fu_5927_p2 <= std_logic_vector(unsigned(trunc_ln708_140_reg_9045) + unsigned(trunc_ln708_141_reg_9050));
    add_ln703_143_fu_5931_p2 <= std_logic_vector(unsigned(trunc_ln708_142_reg_9055) + unsigned(trunc_ln708_143_reg_9060));
    add_ln703_144_fu_5935_p2 <= std_logic_vector(unsigned(add_ln703_143_fu_5931_p2) + unsigned(add_ln703_142_fu_5927_p2));
    add_ln703_145_fu_5941_p2 <= std_logic_vector(unsigned(trunc_ln708_144_reg_9065) + unsigned(trunc_ln708_145_reg_9070));
    add_ln703_146_fu_5945_p2 <= std_logic_vector(unsigned(trunc_ln708_147_reg_9080) + unsigned(sext_ln708_fu_5924_p1));
    add_ln703_147_fu_5950_p2 <= std_logic_vector(unsigned(add_ln703_146_fu_5945_p2) + unsigned(trunc_ln708_146_reg_9075));
    add_ln703_148_fu_5955_p2 <= std_logic_vector(unsigned(add_ln703_147_fu_5950_p2) + unsigned(add_ln703_145_fu_5941_p2));
    add_ln703_149_fu_6031_p2 <= std_logic_vector(unsigned(add_ln703_148_reg_9165) + unsigned(add_ln703_144_reg_9160));
    add_ln703_80_fu_5697_p2 <= std_logic_vector(unsigned(trunc_ln708_80_reg_8745) + unsigned(trunc_ln708_79_reg_8740));
    add_ln703_81_fu_5701_p2 <= std_logic_vector(unsigned(add_ln703_fu_5693_p2) + unsigned(add_ln703_80_fu_5697_p2));
    add_ln703_82_fu_5707_p2 <= std_logic_vector(unsigned(trunc_ln708_82_reg_8755) + unsigned(trunc_ln708_81_reg_8750));
    add_ln703_83_fu_5711_p2 <= std_logic_vector(unsigned(trunc_ln708_85_reg_8770) + unsigned(trunc_ln708_84_reg_8765));
    add_ln703_84_fu_5715_p2 <= std_logic_vector(unsigned(trunc_ln708_83_reg_8760) + unsigned(add_ln703_83_fu_5711_p2));
    add_ln703_85_fu_5720_p2 <= std_logic_vector(unsigned(add_ln703_82_fu_5707_p2) + unsigned(add_ln703_84_fu_5715_p2));
    add_ln703_86_fu_5961_p2 <= std_logic_vector(unsigned(add_ln703_81_reg_9090) + unsigned(add_ln703_85_reg_9095));
    add_ln703_88_fu_5726_p2 <= std_logic_vector(unsigned(trunc_ln708_87_reg_8780) + unsigned(trunc_ln708_86_reg_8775));
    add_ln703_89_fu_5730_p2 <= std_logic_vector(unsigned(trunc_ln708_89_reg_8790) + unsigned(trunc_ln708_88_reg_8785));
    add_ln703_90_fu_5734_p2 <= std_logic_vector(unsigned(add_ln703_88_fu_5726_p2) + unsigned(add_ln703_89_fu_5730_p2));
    add_ln703_91_fu_5740_p2 <= std_logic_vector(unsigned(trunc_ln708_91_reg_8800) + unsigned(trunc_ln708_90_reg_8795));
    add_ln703_92_fu_5744_p2 <= std_logic_vector(unsigned(trunc_ln708_94_reg_8815) + unsigned(trunc_ln708_93_reg_8810));
    add_ln703_93_fu_5748_p2 <= std_logic_vector(unsigned(trunc_ln708_92_reg_8805) + unsigned(add_ln703_92_fu_5744_p2));
    add_ln703_94_fu_5753_p2 <= std_logic_vector(unsigned(add_ln703_91_fu_5740_p2) + unsigned(add_ln703_93_fu_5748_p2));
    add_ln703_95_fu_5971_p2 <= std_logic_vector(unsigned(add_ln703_90_reg_9100) + unsigned(add_ln703_94_reg_9105));
    add_ln703_97_fu_5759_p2 <= std_logic_vector(unsigned(trunc_ln708_96_reg_8825) + unsigned(trunc_ln708_95_reg_8820));
    add_ln703_98_fu_5763_p2 <= std_logic_vector(unsigned(trunc_ln708_98_reg_8835) + unsigned(trunc_ln708_97_reg_8830));
    add_ln703_99_fu_5767_p2 <= std_logic_vector(unsigned(add_ln703_97_fu_5759_p2) + unsigned(add_ln703_98_fu_5763_p2));
    add_ln703_fu_5693_p2 <= std_logic_vector(unsigned(trunc_ln708_s_reg_8735) + unsigned(trunc_ln2_reg_8730));
    add_ln79_fu_2028_p2 <= std_logic_vector(unsigned(indvar_flatten133_reg_777) + unsigned(ap_const_lv6_1));
    and_ln289_1_fu_2730_p2 <= (icmp_ln289_3_fu_2718_p2 and icmp_ln289_2_fu_2698_p2);
    and_ln289_2_fu_2736_p2 <= (and_ln289_fu_2724_p2 and and_ln289_1_fu_2730_p2);
    and_ln289_fu_2724_p2 <= (icmp_ln289_fu_2668_p2 and icmp_ln289_1_fu_2678_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state11_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_assign_proc : process(and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
                ap_block_state16 <= ((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908));
    end process;


    ap_condition_1543_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
                ap_condition_1543 <= (not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_logic_1 = ap_CS_fsm_state16));
    end process;


    ap_condition_2240_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477, icmp_ln313_fu_6041_p2)
    begin
                ap_condition_2240 <= (not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln313_fu_6041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16));
    end process;


    ap_condition_603_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_603 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_685_assign_proc : process(or_ln_reg_6922)
    begin
                ap_condition_685 <= (not((or_ln_reg_6922 = ap_const_lv6_20)) and not((or_ln_reg_6922 = ap_const_lv6_21)) and not((or_ln_reg_6922 = ap_const_lv6_22)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477, icmp_ln79_fu_6128_p2)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_841_p4 <= i_ic2_0_i_i_i_i_0_reg_837;
    ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_852_p4 <= i_ic2_0_i_i_i_i_1_reg_848;

    ap_phi_mux_storemerge_i_i_phi_fu_1909_p4_assign_proc : process(ap_CS_fsm_state16, select_ln323_fu_6108_p3, icmp_ln313_fu_6041_p2, icmp_ln317_fu_6087_p2)
    begin
        if (((icmp_ln313_fu_6041_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
            if ((icmp_ln317_fu_6087_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_1909_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_6087_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_1909_p4 <= select_ln323_fu_6108_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_1909_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_1909_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_w_index132_phi_fu_874_p4_assign_proc : process(w_index132_reg_870, ap_CS_fsm_pp1_stage0, w_index_reg_6912, icmp_ln43_reg_6926, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln43_reg_6926 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_w_index132_phi_fu_874_p4 <= w_index_reg_6912;
        else 
            ap_phi_mux_w_index132_phi_fu_874_p4 <= w_index132_reg_870;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1012 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1025 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1038 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1051 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1064 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1077 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1090 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1103 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1116 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1129 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_1_reg_895 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1142 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1155 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1168 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1181 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1194 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1207 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1220 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1233 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1246 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1259 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_2_reg_908 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1272 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1285 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1298 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1311 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1324 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1337 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1350 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1363 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1376 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1389 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_3_reg_921 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1402 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1415 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1428 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1441 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1454 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1467 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1480 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1493 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1506 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1519 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_4_reg_934 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1532 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1545 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1558 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1571 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1584 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1597 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1610 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1623 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1636 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1649 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_5_reg_947 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1662 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1675 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1688 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1701 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1714 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1727 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1740 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1753 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1766 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1779 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_6_reg_960 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1792 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1805 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_7_reg_973 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_8_reg_986 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_9_reg_999 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_reg_882 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_ic_fu_2040_p2 <= std_logic_vector(unsigned(i_ic4_0_i_i_i_reg_789) + unsigned(ap_const_lv3_1));
    i_iw_fu_2186_p2 <= std_logic_vector(unsigned(i_iw_0_i_i_i_i_reg_826) + unsigned(ap_const_lv2_1));
    icmp_ln194_fu_2180_p2 <= "1" when (i_iw_0_i_i_i_i_reg_826 = ap_const_lv2_2) else "0";
    icmp_ln203_1_fu_2242_p2 <= "1" when (or_ln203_fu_2236_p2 = ap_const_lv3_1) else "0";
    icmp_ln203_2_fu_2273_p2 <= "1" when (or_ln203_1_fu_2267_p2 = ap_const_lv3_2) else "0";
    icmp_ln203_3_fu_2304_p2 <= "1" when (or_ln203_3_fu_2298_p2 = ap_const_lv3_3) else "0";
    icmp_ln203_fu_2204_p2 <= "1" when (shl_ln_fu_2196_p3 = ap_const_lv3_0) else "0";
    icmp_ln213_1_fu_2540_p2 <= "1" when (i_ic2_0_i_i_i_i_1_reg_848 = ap_const_lv3_4) else "0";
    icmp_ln213_2_fu_2606_p2 <= "1" when (i_ic2_0_i_i_i_i_2_reg_859 = ap_const_lv3_4) else "0";
    icmp_ln213_fu_2474_p2 <= "1" when (i_ic2_0_i_i_i_i_0_reg_837 = ap_const_lv3_4) else "0";
    icmp_ln241_fu_2034_p2 <= "1" when (i_ic4_0_i_i_i_reg_789 = ap_const_lv3_4) else "0";
    icmp_ln289_1_fu_2678_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_2698_p2 <= "1" when (signed(tmp_fu_2688_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_2718_p2 <= "1" when (signed(tmp_1_fu_2708_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_2668_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_6041_p2 <= "1" when (pX_2_load_reg_6902 = ap_const_lv32_5) else "0";
    icmp_ln317_fu_6087_p2 <= "1" when (pY_2_load_reg_6896 = ap_const_lv32_5) else "0";
    icmp_ln43_fu_2765_p2 <= "1" when (ap_phi_mux_w_index132_phi_fu_874_p4 = ap_const_lv2_3) else "0";
    icmp_ln79_fu_6128_p2 <= "1" when (indvar_flatten133_reg_777 = ap_const_lv6_23) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477, icmp_ln79_fu_6128_p2)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (icmp_ln79_fu_6128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op1477 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op43 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    line_buffer_Array_V_1_0_0_ce0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_0) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_0_we0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_0) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_ce0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_1) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_we0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_1) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_ce0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_2) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_we0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_2) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_ce0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_3) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_we0_assign_proc : process(icmp_ln241_fu_2034_p2, ap_CS_fsm_state3, trunc_ln246_fu_2046_p1)
    begin
        if (((trunc_ln246_fu_2046_p1 = ap_const_lv2_3) and (icmp_ln241_fu_2034_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_ce0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_we0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_ce0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_we0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_ce0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_we0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_ce0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_we0_assign_proc : process(trunc_ln246_reg_6724, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6724 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln203_1_fu_2267_p2 <= (shl_ln_fu_2196_p3 or ap_const_lv3_2);
    or_ln203_2_fu_2632_p3 <= (ap_const_lv3_4 & i_ic2_0_i_i_i_i_2_reg_859);
    or_ln203_3_fu_2298_p2 <= (shl_ln_fu_2196_p3 or ap_const_lv3_3);
    or_ln203_fu_2236_p2 <= (shl_ln_fu_2196_p3 or ap_const_lv3_1);
    or_ln_fu_2757_p3 <= (ap_const_lv3_4 & zext_ln43_fu_2742_p1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= acc_0_V_reg_9170;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= acc_1_V_reg_9176;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= acc_2_V_reg_9182;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= acc_3_V_reg_9188;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= acc_4_V_reg_9194;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= acc_5_V_reg_9200;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= acc_6_V_reg_9206;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6908)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= acc_7_V_reg_9212;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6908, io_acc_block_signal_op1477)
    begin
        if ((not(((io_acc_block_signal_op1477 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6908))) and (ap_const_lv1_1 = and_ln289_2_reg_6908) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln203_10_fu_2436_p3 <= 
        kernel_data_V_1_30 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_34_load_reg_6798;
    select_ln203_11_fu_2455_p3 <= 
        kernel_data_V_1_31 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_35_load_reg_6803;
    select_ln203_1_fu_2229_p3 <= 
        kernel_data_V_1_5 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_9_load_reg_6753;
    select_ln203_2_fu_2260_p3 <= 
        kernel_data_V_1_6 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_10_load_reg_6758;
    select_ln203_3_fu_2291_p3 <= 
        kernel_data_V_1_7 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_11_load_reg_6763;
    select_ln203_4_fu_2322_p3 <= 
        kernel_data_V_1_16 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_20_load_reg_6768;
    select_ln203_5_fu_2341_p3 <= 
        kernel_data_V_1_17 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_21_load_reg_6773;
    select_ln203_6_fu_2360_p3 <= 
        kernel_data_V_1_18 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_22_load_reg_6778;
    select_ln203_7_fu_2379_p3 <= 
        kernel_data_V_1_19 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_23_load_reg_6783;
    select_ln203_8_fu_2398_p3 <= 
        kernel_data_V_1_28 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_32_load_reg_6788;
    select_ln203_9_fu_2417_p3 <= 
        kernel_data_V_1_29 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_33_load_reg_6793;
    select_ln203_fu_2210_p3 <= 
        kernel_data_V_1_4 when (icmp_ln203_fu_2204_p2(0) = '1') else 
        kernel_data_V_1_8_load_reg_6748;
    select_ln323_fu_6108_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_reg_6891(0) = '1') else 
        add_ln323_fu_6103_p2;
    select_ln328_fu_6062_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_reg_6881(0) = '1') else 
        add_ln328_fu_6057_p2;
        sext_ln708_fu_5924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_148_reg_9085),16));

    shl_ln_fu_2196_p3 <= (trunc_ln201_fu_2192_p1 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_2708_p4 <= pX_2(31 downto 1);
    tmp_82_fu_2502_p5 <= i_ic2_0_i_i_i_i_0_reg_837(2 - 1 downto 0);
    tmp_84_fu_2568_p5 <= i_ic2_0_i_i_i_i_1_reg_848(2 - 1 downto 0);
    tmp_85_fu_2622_p5 <= i_ic2_0_i_i_i_i_2_reg_859(2 - 1 downto 0);
    tmp_fu_2688_p4 <= pY_2(31 downto 1);
    trunc_ln201_fu_2192_p1 <= i_iw_0_i_i_i_i_reg_826(1 - 1 downto 0);
    trunc_ln246_fu_2046_p1 <= i_ic4_0_i_i_i_reg_789(2 - 1 downto 0);
    trunc_ln56_fu_2787_p1 <= w5_V_q0(16 - 1 downto 0);
    w5_V_address0 <= zext_ln56_fu_2752_p1(2 - 1 downto 0);

    w5_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            w5_V_ce0 <= ap_const_logic_1;
        else 
            w5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_2746_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index132_phi_fu_874_p4) + unsigned(ap_const_lv2_1));
    zext_ln43_fu_2742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index132_phi_fu_874_p4),3));
    zext_ln56_fu_2752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index132_phi_fu_874_p4),64));
end behav;
