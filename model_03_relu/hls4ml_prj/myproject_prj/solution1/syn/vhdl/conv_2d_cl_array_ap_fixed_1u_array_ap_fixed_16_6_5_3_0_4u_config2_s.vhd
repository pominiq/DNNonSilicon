-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_TVALID : IN STD_LOGIC;
    data_V_data_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_FFF2 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110010";
    constant ap_const_lv16_FF26 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100100110";
    constant ap_const_lv16_FFDE : STD_LOGIC_VECTOR (15 downto 0) := "1111111111011110";
    constant ap_const_lv16_FFCF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111001111";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv10_30F : STD_LOGIC_VECTOR (9 downto 0) := "1100001111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_1153 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2154 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w2_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w2_V_ce0 : STD_LOGIC;
    signal w2_V_q0 : STD_LOGIC_VECTOR (186 downto 0);
    signal kernel_data_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3155 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1152_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1152_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1152_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal and_ln289_4_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal w_index40_reg_286 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_data_0_V_838_reg_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_836_reg_441 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_834_reg_452 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_832_reg_463 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_1380 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataOut_V_8_reg_1385 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataOut_V_reg_1390 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_2154_load_reg_1395 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_load_reg_1400 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_8_load_reg_1405 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln79_fu_528_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln79_reg_1410 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_iw_fu_540_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sX_3_load_reg_1426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln289_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_3_load_reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_4_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_4_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_3_load_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_3_load_reg_1452 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_4_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_700_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_index_reg_1462 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln43_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1472_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_1472_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal trunc_ln56_fu_721_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln56_reg_1491 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_162_reg_1511 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_163_reg_1531 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_164_reg_1551 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_165_reg_1571 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_166_reg_1591 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_167_reg_1611 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_168_reg_1631 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_169_reg_1651 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_170_reg_1671 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_171_reg_1691 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_172_reg_1711 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln3_reg_1716 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_reg_1721 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_149_reg_1726 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_150_reg_1731 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_151_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_152_reg_1741 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_153_reg_1746 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_154_reg_1751 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_155_reg_1756 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_156_reg_1761 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_157_reg_1766 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_158_reg_1771 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_fu_1152_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_reg_1776 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal acc_1_V_fu_1167_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_1782 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_1182_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_1197_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_reg_1794 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal indvar_flatten41_reg_263 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op266 : STD_LOGIC;
    signal ap_block_state9 : BOOLEAN;
    signal icmp_ln79_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_iw_0_i_i_i_i_reg_275 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln194_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_w_index40_phi_fu_290_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_reg_pp1_iter0_phi_ln56_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln323_fu_1270_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_477_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln203_fu_550_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln201_fu_546_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_12_fu_569_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_13_fu_588_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln328_fu_1224_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_1208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_646_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_fu_666_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_5_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_6_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_3_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_fu_1296_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_151_fu_1303_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_152_fu_1310_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_153_fu_1317_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_154_fu_1324_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_155_fu_1331_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_156_fu_1338_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_157_fu_1345_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_158_fu_1352_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_159_fu_1359_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_160_fu_1366_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_161_fu_1373_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_fu_1143_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_151_fu_1147_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_153_fu_1158_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_154_fu_1162_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_156_fu_1173_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_157_fu_1177_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_159_fu_1188_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_160_fu_1192_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_1219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_1265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TVALID_int : STD_LOGIC;
    signal data_V_data_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_ack_in : STD_LOGIC;
    signal ap_condition_228 : BOOLEAN;
    signal ap_condition_390 : BOOLEAN;
    signal ap_condition_529 : BOOLEAN;

    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_11s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_w2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (186 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    w2_V_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_w2_V
    generic map (
        DataWidth => 187,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w2_V_address0,
        ce0 => w2_V_ce0,
        q0 => w2_V_q0);

    line_buffer_Array_V_0_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_0_0_ce0,
        we0 => line_buffer_Array_V_0_0_we0,
        d0 => data_V_data_V_TDATA_int,
        q0 => line_buffer_Array_V_0_0_q0);

    line_buffer_Array_V_1152_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_1152_0_ce0,
        we0 => line_buffer_Array_V_1152_0_we0,
        d0 => line_buffer_Array_V_0_0_q0,
        q0 => line_buffer_Array_V_1152_0_q0);

    myproject_mul_mul_16s_16s_26_1_1_U1 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_reg_298,
        din1 => trunc_ln56_reg_1491,
        dout => mul_ln1118_fu_1296_p2);

    myproject_mul_mul_16s_16s_26_1_1_U2 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_162_reg_1511,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309,
        dout => mul_ln1118_151_fu_1303_p2);

    myproject_mul_mul_16s_16s_26_1_1_U3 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_163_reg_1531,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320,
        dout => mul_ln1118_152_fu_1310_p2);

    myproject_mul_mul_16s_16s_26_1_1_U4 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_164_reg_1551,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331,
        dout => mul_ln1118_153_fu_1317_p2);

    myproject_mul_mul_16s_16s_26_1_1_U5 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_165_reg_1571,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342,
        dout => mul_ln1118_154_fu_1324_p2);

    myproject_mul_mul_16s_16s_26_1_1_U6 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_166_reg_1591,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353,
        dout => mul_ln1118_155_fu_1331_p2);

    myproject_mul_mul_16s_16s_26_1_1_U7 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_167_reg_1611,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364,
        dout => mul_ln1118_156_fu_1338_p2);

    myproject_mul_mul_16s_16s_26_1_1_U8 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_168_reg_1631,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375,
        dout => mul_ln1118_157_fu_1345_p2);

    myproject_mul_mul_16s_16s_26_1_1_U9 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_169_reg_1651,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386,
        dout => mul_ln1118_158_fu_1352_p2);

    myproject_mul_mul_16s_16s_26_1_1_U10 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_170_reg_1671,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397,
        dout => mul_ln1118_159_fu_1359_p2);

    myproject_mul_mul_16s_16s_26_1_1_U11 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_171_reg_1691,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408,
        dout => mul_ln1118_160_fu_1366_p2);

    myproject_mul_mul_16s_11s_26_1_1_U12 : component myproject_mul_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419,
        din1 => tmp_172_reg_1711,
        dout => mul_ln1118_161_fu_1373_p2);

    regslice_both_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_V_TDATA,
        vld_in => data_V_data_V_TVALID,
        ack_in => regslice_both_data_V_data_V_U_ack_in,
        data_out => data_V_data_V_TDATA_int,
        vld_out => data_V_data_V_TVALID_int,
        ack_out => data_V_data_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln43_fu_711_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_5;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_4;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_3155;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_8;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_7;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_2154;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_1153;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_5;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_4;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_3155;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_8;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_7;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_2154;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_1153;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_5;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_4;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_3155;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_8;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_7;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_2154;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_1153;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_5;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_4;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_3155;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_8;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_7;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if ((not((w_index40_reg_286 = ap_const_lv2_0)) and not((w_index40_reg_286 = ap_const_lv2_1)))) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_2154;
                elsif ((w_index40_reg_286 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_1153;
                elsif ((w_index40_reg_286 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= ap_phi_reg_pp1_iter1_phi_ln56_reg_298;
                end if;
            end if; 
        end if;
    end process;

    i_iw_0_i_i_i_i_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_iw_0_i_i_i_i_reg_275 <= i_iw_fu_540_p2;
            elsif (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_iw_0_i_i_i_i_reg_275 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten41_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                indvar_flatten41_reg_263 <= add_ln79_reg_1410;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten41_reg_263 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_390)) then
                if ((icmp_ln313_fu_1203_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_1203_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln326_fu_1208_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((icmp_ln317_fu_1249_p2 = ap_const_lv1_1)) then 
                    pY_3 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_1249_p2 = ap_const_lv1_0)) then 
                    pY_3 <= add_ln321_fu_1254_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_390)) then
                if ((icmp_ln313_fu_1203_p2 = ap_const_lv1_1)) then 
                    sX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_1203_p2 = ap_const_lv1_0)) then 
                    sX_3 <= select_ln328_fu_1224_p3;
                end if;
            end if; 
        end if;
    end process;

    tmp_data_0_V_838_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_1472_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_0_V_838_reg_430 <= acc_0_V_fu_1152_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                tmp_data_0_V_838_reg_430 <= ap_const_lv16_FFF2;
            end if; 
        end if;
    end process;

    tmp_data_1_V_836_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_1472_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_1_V_836_reg_441 <= acc_1_V_fu_1167_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                tmp_data_1_V_836_reg_441 <= ap_const_lv16_FF26;
            end if; 
        end if;
    end process;

    tmp_data_2_V_834_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_1472_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_2_V_834_reg_452 <= acc_2_V_fu_1182_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                tmp_data_2_V_834_reg_452 <= ap_const_lv16_FFDE;
            end if; 
        end if;
    end process;

    tmp_data_3_V_832_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_1472_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_3_V_832_reg_463 <= acc_3_V_fu_1197_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                tmp_data_3_V_832_reg_463 <= ap_const_lv16_FFCF;
            end if; 
        end if;
    end process;

    w_index40_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_1472 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                w_index40_reg_286 <= w_index_reg_1462;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then 
                w_index40_reg_286 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                DataOut_V_8_reg_1385 <= line_buffer_Array_V_0_0_q0;
                DataOut_V_reg_1390 <= line_buffer_Array_V_1152_0_q0;
                add_ln79_reg_1410 <= add_ln79_fu_528_p2;
                kernel_data_V_2154_load_reg_1395 <= kernel_data_V_2154;
                kernel_data_V_5_load_reg_1400 <= kernel_data_V_5;
                kernel_data_V_8_load_reg_1405 <= kernel_data_V_8;
                tmp_data_0_V_reg_1380 <= data_V_data_V_TDATA_int;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                acc_0_V_reg_1776 <= acc_0_V_fu_1152_p2;
                acc_1_V_reg_1782 <= acc_1_V_fu_1167_p2;
                acc_2_V_reg_1788 <= acc_2_V_fu_1182_p2;
                acc_3_V_reg_1794 <= acc_3_V_fu_1197_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln289_4_reg_1458 <= and_ln289_4_fu_694_p2;
                icmp_ln289_4_reg_1441 <= icmp_ln289_4_fu_636_p2;
                icmp_ln289_reg_1431 <= icmp_ln289_fu_626_p2;
                kernel_data_V_2154 <= DataOut_V_reg_1390;
                kernel_data_V_5 <= DataOut_V_8_reg_1385;
                kernel_data_V_8 <= tmp_data_0_V_reg_1380;
                pX_3_load_reg_1452 <= pX_3;
                pY_3_load_reg_1446 <= pY_3;
                sX_3_load_reg_1426 <= sX_3;
                sY_3_load_reg_1436 <= sY_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309 <= ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309;
                ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320 <= ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320;
                ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331 <= ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331;
                ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342 <= ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342;
                ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353 <= ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353;
                ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364 <= ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364;
                ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375 <= ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375;
                ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386 <= ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386;
                ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397 <= ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397;
                ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408 <= ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408;
                ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419 <= ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419;
                ap_phi_reg_pp1_iter1_phi_ln56_reg_298 <= ap_phi_reg_pp1_iter0_phi_ln56_reg_298;
                w_index_reg_1462 <= w_index_fu_700_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln43_reg_1472 <= icmp_ln43_fu_711_p2;
                icmp_ln43_reg_1472_pp1_iter1_reg <= icmp_ln43_reg_1472;
                tmp_162_reg_1511 <= w2_V_q0(31 downto 16);
                tmp_163_reg_1531 <= w2_V_q0(47 downto 32);
                tmp_164_reg_1551 <= w2_V_q0(63 downto 48);
                tmp_165_reg_1571 <= w2_V_q0(79 downto 64);
                tmp_166_reg_1591 <= w2_V_q0(95 downto 80);
                tmp_167_reg_1611 <= w2_V_q0(111 downto 96);
                tmp_168_reg_1631 <= w2_V_q0(127 downto 112);
                tmp_169_reg_1651 <= w2_V_q0(143 downto 128);
                tmp_170_reg_1671 <= w2_V_q0(159 downto 144);
                tmp_171_reg_1691 <= w2_V_q0(175 downto 160);
                tmp_172_reg_1711 <= w2_V_q0(186 downto 176);
                trunc_ln56_reg_1491 <= trunc_ln56_fu_721_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln43_reg_1472_pp1_iter2_reg <= icmp_ln43_reg_1472_pp1_iter1_reg;
                trunc_ln3_reg_1716 <= mul_ln1118_fu_1296_p2(25 downto 10);
                trunc_ln708_149_reg_1726 <= mul_ln1118_152_fu_1310_p2(25 downto 10);
                trunc_ln708_150_reg_1731 <= mul_ln1118_153_fu_1317_p2(25 downto 10);
                trunc_ln708_151_reg_1736 <= mul_ln1118_154_fu_1324_p2(25 downto 10);
                trunc_ln708_152_reg_1741 <= mul_ln1118_155_fu_1331_p2(25 downto 10);
                trunc_ln708_153_reg_1746 <= mul_ln1118_156_fu_1338_p2(25 downto 10);
                trunc_ln708_154_reg_1751 <= mul_ln1118_157_fu_1345_p2(25 downto 10);
                trunc_ln708_155_reg_1756 <= mul_ln1118_158_fu_1352_p2(25 downto 10);
                trunc_ln708_156_reg_1761 <= mul_ln1118_159_fu_1359_p2(25 downto 10);
                trunc_ln708_157_reg_1766 <= mul_ln1118_160_fu_1366_p2(25 downto 10);
                trunc_ln708_158_reg_1771 <= mul_ln1118_161_fu_1373_p2(25 downto 10);
                trunc_ln708_s_reg_1721 <= mul_ln1118_151_fu_1303_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln201_fu_546_p1 = ap_const_lv1_0) and (icmp_ln194_fu_534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                kernel_data_V_0 <= select_ln203_fu_550_p3;
                kernel_data_V_3155 <= select_ln203_12_fu_569_p3;
                kernel_data_V_6 <= select_ln203_13_fu_588_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln201_fu_546_p1 = ap_const_lv1_1))) then
                kernel_data_V_1153 <= select_ln203_fu_550_p3;
                kernel_data_V_4 <= select_ln203_12_fu_569_p3;
                kernel_data_V_7 <= select_ln203_13_fu_588_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln313_fu_1203_p2 = ap_const_lv1_1))) then
                sY_3 <= ap_phi_mux_storemerge_i_i_phi_fu_477_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state9, and_ln289_4_reg_1458, ap_CS_fsm_state3, ap_CS_fsm_state4, and_ln289_4_fu_694_p2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, io_acc_block_signal_op266, icmp_ln79_fu_1290_p2, icmp_ln194_fu_534_p2, data_V_data_V_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln194_fu_534_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_4_fu_694_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    acc_0_V_fu_1152_p2 <= std_logic_vector(unsigned(tmp_data_0_V_838_reg_430) + unsigned(add_ln703_151_fu_1147_p2));
    acc_1_V_fu_1167_p2 <= std_logic_vector(unsigned(tmp_data_1_V_836_reg_441) + unsigned(add_ln703_154_fu_1162_p2));
    acc_2_V_fu_1182_p2 <= std_logic_vector(unsigned(tmp_data_2_V_834_reg_452) + unsigned(add_ln703_157_fu_1177_p2));
    acc_3_V_fu_1197_p2 <= std_logic_vector(unsigned(tmp_data_3_V_832_reg_463) + unsigned(add_ln703_160_fu_1192_p2));
    add_ln321_fu_1254_p2 <= std_logic_vector(unsigned(pY_3_load_reg_1446) + unsigned(ap_const_lv32_1));
    add_ln323_fu_1265_p2 <= std_logic_vector(unsigned(sY_3_load_reg_1436) + unsigned(ap_const_lv32_1));
    add_ln326_fu_1208_p2 <= std_logic_vector(unsigned(pX_3_load_reg_1452) + unsigned(ap_const_lv32_1));
    add_ln328_fu_1219_p2 <= std_logic_vector(unsigned(sX_3_load_reg_1426) + unsigned(ap_const_lv32_1));
    add_ln703_151_fu_1147_p2 <= std_logic_vector(unsigned(add_ln703_fu_1143_p2) + unsigned(trunc_ln3_reg_1716));
    add_ln703_153_fu_1158_p2 <= std_logic_vector(unsigned(trunc_ln708_151_reg_1736) + unsigned(trunc_ln708_152_reg_1741));
    add_ln703_154_fu_1162_p2 <= std_logic_vector(unsigned(add_ln703_153_fu_1158_p2) + unsigned(trunc_ln708_150_reg_1731));
    add_ln703_156_fu_1173_p2 <= std_logic_vector(unsigned(trunc_ln708_154_reg_1751) + unsigned(trunc_ln708_155_reg_1756));
    add_ln703_157_fu_1177_p2 <= std_logic_vector(unsigned(add_ln703_156_fu_1173_p2) + unsigned(trunc_ln708_153_reg_1746));
    add_ln703_159_fu_1188_p2 <= std_logic_vector(unsigned(trunc_ln708_157_reg_1766) + unsigned(trunc_ln708_158_reg_1771));
    add_ln703_160_fu_1192_p2 <= std_logic_vector(unsigned(add_ln703_159_fu_1188_p2) + unsigned(trunc_ln708_156_reg_1761));
    add_ln703_fu_1143_p2 <= std_logic_vector(unsigned(trunc_ln708_s_reg_1721) + unsigned(trunc_ln708_149_reg_1726));
    add_ln79_fu_528_p2 <= std_logic_vector(unsigned(indvar_flatten41_reg_263) + unsigned(ap_const_lv10_1));
    and_ln289_3_fu_688_p2 <= (icmp_ln289_6_fu_676_p2 and icmp_ln289_5_fu_656_p2);
    and_ln289_4_fu_694_p2 <= (and_ln289_fu_682_p2 and and_ln289_3_fu_688_p2);
    and_ln289_fu_682_p2 <= (icmp_ln289_fu_626_p2 and icmp_ln289_4_fu_636_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_assign_proc : process(and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
                ap_block_state9 <= ((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458));
    end process;


    ap_condition_228_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_228 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_390_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
                ap_condition_390 <= (not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9));
    end process;


    ap_condition_529_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266, icmp_ln313_fu_1203_p2)
    begin
                ap_condition_529 <= (not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln313_fu_1203_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266, icmp_ln79_fu_1290_p2)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_477_p4_assign_proc : process(ap_CS_fsm_state9, select_ln323_fu_1270_p3, icmp_ln313_fu_1203_p2, icmp_ln317_fu_1249_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln313_fu_1203_p2 = ap_const_lv1_1))) then
            if ((icmp_ln317_fu_1249_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_477_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_1249_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_477_p4 <= select_ln323_fu_1270_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_477_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_477_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_w_index40_phi_fu_290_p4_assign_proc : process(w_index40_reg_286, ap_CS_fsm_pp1_stage0, w_index_reg_1462, icmp_ln43_reg_1472, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln43_reg_1472 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_w_index40_phi_fu_290_p4 <= w_index_reg_1462;
        else 
            ap_phi_mux_w_index40_phi_fu_290_p4 <= w_index40_reg_286;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_reg_298 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    data_V_data_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_V_TDATA_blk_n <= data_V_data_V_TVALID_int;
        else 
            data_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_TREADY_assign_proc : process(data_V_data_V_TVALID, regslice_both_data_V_data_V_U_ack_in)
    begin
        if (((regslice_both_data_V_data_V_U_ack_in = ap_const_logic_1) and (data_V_data_V_TVALID = ap_const_logic_1))) then 
            data_V_data_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_TREADY_int_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    i_iw_fu_540_p2 <= std_logic_vector(unsigned(i_iw_0_i_i_i_i_reg_275) + unsigned(ap_const_lv2_1));
    icmp_ln194_fu_534_p2 <= "1" when (i_iw_0_i_i_i_i_reg_275 = ap_const_lv2_2) else "0";
    icmp_ln289_4_fu_636_p2 <= "1" when (sY_3 = ap_const_lv32_2) else "0";
    icmp_ln289_5_fu_656_p2 <= "1" when (signed(tmp_fu_646_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_6_fu_676_p2 <= "1" when (signed(tmp_2_fu_666_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_626_p2 <= "1" when (sX_3 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_1203_p2 <= "1" when (pX_3_load_reg_1452 = ap_const_lv32_1B) else "0";
    icmp_ln317_fu_1249_p2 <= "1" when (pY_3_load_reg_1446 = ap_const_lv32_1B) else "0";
    icmp_ln43_fu_711_p2 <= "1" when (ap_phi_mux_w_index40_phi_fu_290_p4 = ap_const_lv2_2) else "0";
    icmp_ln79_fu_1290_p2 <= "1" when (indvar_flatten41_reg_263 = ap_const_lv10_30F) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266, icmp_ln79_fu_1290_p2)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln79_fu_1290_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op266 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_0_we0_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1152_0_ce0_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            line_buffer_Array_V_1152_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1152_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1152_0_we0_assign_proc : process(ap_CS_fsm_state2, data_V_data_V_TVALID_int)
    begin
        if (((data_V_data_V_TVALID_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            line_buffer_Array_V_1152_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1152_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state9, and_ln289_4_reg_1458)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= acc_0_V_reg_1776;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state9, and_ln289_4_reg_1458)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= acc_1_V_reg_1782;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state9, and_ln289_4_reg_1458)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= acc_2_V_reg_1788;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state9, and_ln289_4_reg_1458)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= acc_3_V_reg_1794;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln289_4_reg_1458, io_acc_block_signal_op266)
    begin
        if ((not(((io_acc_block_signal_op266 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln289_4_reg_1458))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln203_12_fu_569_p3 <= 
        kernel_data_V_5_load_reg_1400 when (trunc_ln201_fu_546_p1(0) = '1') else 
        kernel_data_V_4;
    select_ln203_13_fu_588_p3 <= 
        kernel_data_V_8_load_reg_1405 when (trunc_ln201_fu_546_p1(0) = '1') else 
        kernel_data_V_7;
    select_ln203_fu_550_p3 <= 
        kernel_data_V_2154_load_reg_1395 when (trunc_ln201_fu_546_p1(0) = '1') else 
        kernel_data_V_1153;
    select_ln323_fu_1270_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_4_reg_1441(0) = '1') else 
        add_ln323_fu_1265_p2;
    select_ln328_fu_1224_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_reg_1431(0) = '1') else 
        add_ln328_fu_1219_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_666_p4 <= pX_3(31 downto 1);
    tmp_fu_646_p4 <= pY_3(31 downto 1);
    trunc_ln201_fu_546_p1 <= i_iw_0_i_i_i_i_reg_275(1 - 1 downto 0);
    trunc_ln56_fu_721_p1 <= w2_V_q0(16 - 1 downto 0);
    w2_V_address0 <= zext_ln56_fu_706_p1(2 - 1 downto 0);

    w2_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            w2_V_ce0 <= ap_const_logic_1;
        else 
            w2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_700_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index40_phi_fu_290_p4) + unsigned(ap_const_lv2_1));
    zext_ln56_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index40_phi_fu_290_p4),64));
end behav;
