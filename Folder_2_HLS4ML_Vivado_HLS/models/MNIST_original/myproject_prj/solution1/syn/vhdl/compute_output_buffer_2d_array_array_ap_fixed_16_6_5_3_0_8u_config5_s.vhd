-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_4_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_5_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_6_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_7_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op141 : STD_LOGIC;
    signal and_ln289_2_reg_1047 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal in_elem_data_3_V_read_2_reg_1027 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_elem_data_2_V_read_2_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_elem_data_1_V_read_2_reg_1037 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_elem_data_0_V_read_2_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln289_2_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_1051 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_523_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln317_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_ready : STD_LOGIC;
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_done : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_idle : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ready : STD_LOGIC;
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call36 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call36 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp71 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg : STD_LOGIC := '0';
    signal select_ln328_fu_473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_395_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_54_fu_415_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_2_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_90 : BOOLEAN;
    signal ap_condition_482 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_32_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_33_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_34_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_35_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283 : component dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0
    port map (
        ap_ready => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_ready,
        data_0_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_0,
        data_1_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_1,
        data_2_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_2,
        data_3_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_3,
        data_4_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_12,
        data_5_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_13,
        data_6_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_14,
        data_7_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_15,
        data_8_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_16,
        data_9_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_17,
        data_10_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_18,
        data_11_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_19,
        data_12_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_4,
        data_13_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_5,
        data_14_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_6,
        data_15_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_7,
        data_16_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_20,
        data_17_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_21,
        data_18_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_22,
        data_19_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_23,
        data_20_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_24,
        data_21_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_25,
        data_22_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_26,
        data_23_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_27,
        data_24_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_8,
        data_25_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_9,
        data_26_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_10,
        data_27_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_11,
        data_28_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_28,
        data_29_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_29,
        data_30_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_30,
        data_31_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_31,
        data_32_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_32,
        data_33_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_33,
        data_34_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_34,
        data_35_V_read => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_35,
        ap_return_0 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_0,
        ap_return_1 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_1,
        ap_return_2 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_2,
        ap_return_3 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_3,
        ap_return_4 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_4,
        ap_return_5 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_5,
        ap_return_6 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_6,
        ap_return_7 => call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_7);

    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start,
        ap_done => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_done,
        ap_idle => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_idle,
        ap_ready => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ready,
        in_elem_data_0_V_read => in_elem_data_0_V_read_2_reg_1042,
        in_elem_data_1_V_read => in_elem_data_1_V_read_2_reg_1037,
        in_elem_data_2_V_read => in_elem_data_2_V_read_2_reg_1032,
        in_elem_data_3_V_read => in_elem_data_3_V_read_2_reg_1027,
        kernel_window_4_V_read => kernel_data_V_1_4,
        kernel_window_5_V_read => kernel_data_V_1_5,
        kernel_window_6_V_read => kernel_data_V_1_6,
        kernel_window_7_V_read => kernel_data_V_1_7,
        kernel_window_8_V_read => kernel_data_V_1_8,
        kernel_window_9_V_read => kernel_data_V_1_9,
        kernel_window_10_V_read => kernel_data_V_1_10,
        kernel_window_11_V_read => kernel_data_V_1_11,
        kernel_window_16_V_read => kernel_data_V_1_16,
        kernel_window_17_V_read => kernel_data_V_1_17,
        kernel_window_18_V_read => kernel_data_V_1_18,
        kernel_window_19_V_read => kernel_data_V_1_19,
        kernel_window_20_V_read => kernel_data_V_1_20,
        kernel_window_21_V_read => kernel_data_V_1_21,
        kernel_window_22_V_read => kernel_data_V_1_22,
        kernel_window_23_V_read => kernel_data_V_1_23,
        kernel_window_28_V_read => kernel_data_V_1_28,
        kernel_window_29_V_read => kernel_data_V_1_29,
        kernel_window_30_V_read => kernel_data_V_1_30,
        kernel_window_31_V_read => kernel_data_V_1_31,
        kernel_window_32_V_read => kernel_data_V_1_32,
        kernel_window_33_V_read => kernel_data_V_1_33,
        kernel_window_34_V_read => kernel_data_V_1_34,
        kernel_window_35_V_read => kernel_data_V_1_35,
        ap_return_0 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_0,
        ap_return_1 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_1,
        ap_return_2 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_2,
        ap_return_3 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_3,
        ap_return_4 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_4,
        ap_return_5 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_5,
        ap_return_6 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_6,
        ap_return_7 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_7,
        ap_return_8 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_8,
        ap_return_9 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_9,
        ap_return_10 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_10,
        ap_return_11 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_11,
        ap_return_12 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_12,
        ap_return_13 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_13,
        ap_return_14 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_14,
        ap_return_15 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_15,
        ap_return_16 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_16,
        ap_return_17 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_17,
        ap_return_18 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_18,
        ap_return_19 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_19,
        ap_return_20 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_20,
        ap_return_21 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_21,
        ap_return_22 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_22,
        ap_return_23 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_23,
        ap_return_24 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_24,
        ap_return_25 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_25,
        ap_return_26 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_26,
        ap_return_27 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_27,
        ap_return_28 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_28,
        ap_return_29 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_29,
        ap_return_30 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_30,
        ap_return_31 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_31,
        ap_return_32 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_32,
        ap_return_33 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_33,
        ap_return_34 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_34,
        ap_return_35 => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_35,
        ap_ce => call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg <= ap_const_logic_1;
                elsif ((call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ready = ap_const_logic_1)) then 
                    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if (((icmp_ln317_fu_499_p2 = ap_const_lv1_1) and (icmp_ln313_fu_449_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_272 <= ap_const_lv32_0;
                elsif (((icmp_ln313_fu_449_p2 = ap_const_lv1_1) and (icmp_ln317_fu_499_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_272 <= select_ln323_fu_523_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_272 <= ap_phi_reg_pp0_iter0_storemerge_reg_272;
                end if;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if ((icmp_ln313_fu_449_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_449_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_455_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_482)) then
                if ((icmp_ln317_fu_499_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_499_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_505_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_90)) then
                if ((icmp_ln313_fu_449_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_449_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_473_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln289_2_reg_1047 <= and_ln289_2_fu_443_p2;
                icmp_ln313_reg_1051 <= icmp_ln313_fu_449_p2;
                in_elem_data_0_V_read_2_reg_1042 <= in_elem_data_0_V_read;
                in_elem_data_1_V_read_2_reg_1037 <= in_elem_data_1_V_read;
                in_elem_data_2_V_read_2_reg_1032 <= in_elem_data_2_V_read;
                in_elem_data_3_V_read_2_reg_1027 <= in_elem_data_3_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_data_V_1_10 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_18;
                kernel_data_V_1_11 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_19;
                kernel_data_V_1_16 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_20;
                kernel_data_V_1_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_21;
                kernel_data_V_1_18 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_22;
                kernel_data_V_1_19 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_23;
                kernel_data_V_1_20 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_24;
                kernel_data_V_1_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_25;
                kernel_data_V_1_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_26;
                kernel_data_V_1_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_27;
                kernel_data_V_1_28 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_28;
                kernel_data_V_1_29 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_29;
                kernel_data_V_1_30 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_30;
                kernel_data_V_1_31 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_31;
                kernel_data_V_1_32 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_32;
                kernel_data_V_1_33 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_33;
                kernel_data_V_1_34 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_34;
                kernel_data_V_1_35 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_35;
                kernel_data_V_1_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_12;
                kernel_data_V_1_5 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_13;
                kernel_data_V_1_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_14;
                kernel_data_V_1_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_15;
                kernel_data_V_1_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_16;
                kernel_data_V_1_9 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_return_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_1051 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sY_2 <= ap_phi_reg_pp0_iter1_storemerge_reg_272;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln321_fu_505_p2 <= std_logic_vector(unsigned(pY_2) + unsigned(ap_const_lv32_1));
    add_ln323_fu_517_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_2_load) + unsigned(ap_const_lv32_1));
    add_ln326_fu_455_p2 <= std_logic_vector(unsigned(pX_2) + unsigned(ap_const_lv32_1));
    add_ln328_fu_467_p2 <= std_logic_vector(unsigned(sX_2) + unsigned(ap_const_lv32_1));
    and_ln289_1_fu_437_p2 <= (icmp_ln289_3_fu_425_p2 and icmp_ln289_2_fu_405_p2);
    and_ln289_2_fu_443_p2 <= (and_ln289_fu_431_p2 and and_ln289_1_fu_437_p2);
    and_ln289_fu_431_p2 <= (icmp_ln289_fu_375_p2 and icmp_ln289_1_fu_385_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op141, and_ln289_2_reg_1047)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op141, and_ln289_2_reg_1047)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp71_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op141, and_ln289_2_reg_1047)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp71 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op141, and_ln289_2_reg_1047, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call36_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call36 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op141, and_ln289_2_reg_1047)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call36_assign_proc : process(io_acc_block_signal_op141, and_ln289_2_reg_1047)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call36 <= ((ap_const_lv1_1 = and_ln289_2_reg_1047) and (io_acc_block_signal_op141 = ap_const_logic_0));
    end process;


    ap_condition_482_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce, icmp_ln313_fu_449_p2)
    begin
                ap_condition_482 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_449_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_90_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_90 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_272 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sY_2_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, sY_2, icmp_ln313_reg_1051, ap_phi_reg_pp0_iter1_storemerge_reg_272)
    begin
        if (((icmp_ln313_reg_1051 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_sY_2_load <= ap_phi_reg_pp0_iter1_storemerge_reg_272;
        else 
            ap_sig_allocacmp_sY_2_load <= sY_2;
        end if; 
    end process;


    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp71)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp71) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ce <= ap_const_logic_1;
        else 
            call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_323_ap_start_reg;
    icmp_ln289_1_fu_385_p2 <= "1" when (ap_sig_allocacmp_sY_2_load = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_405_p2 <= "1" when (signed(tmp_fu_395_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_425_p2 <= "1" when (signed(tmp_54_fu_415_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_375_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_449_p2 <= "1" when (pX_2 = ap_const_lv32_5) else "0";
    icmp_ln317_fu_499_p2 <= "1" when (pY_2 = ap_const_lv32_5) else "0";
    io_acc_block_signal_op141 <= (res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_0_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_0;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_1_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_1;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_2_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_2;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_3_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_3;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_4_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_4;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_5_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_5;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_6_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_6;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_7_V_full_n, and_ln289_2_reg_1047)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_283_ap_return_7;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_2_reg_1047, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_1047) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_523_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_fu_385_p2(0) = '1') else 
        add_ln323_fu_517_p2;
    select_ln328_fu_473_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_fu_375_p2(0) = '1') else 
        add_ln328_fu_467_p2;
    tmp_54_fu_415_p4 <= pX_2(31 downto 1);
    tmp_fu_395_p4 <= pY_2(31 downto 1);
end behav;
