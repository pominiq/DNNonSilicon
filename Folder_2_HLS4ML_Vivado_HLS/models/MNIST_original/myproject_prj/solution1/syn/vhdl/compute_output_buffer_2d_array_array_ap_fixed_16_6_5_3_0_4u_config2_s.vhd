-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_1_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_2_V_blk_n : OUT STD_LOGIC;
    res_stream_V_data_3_V_blk_n : OUT STD_LOGIC );
end;


architecture behav of compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op67 : STD_LOGIC;
    signal and_ln289_4_reg_479 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal kernel_data_V_1283 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2284 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal in_elem_data_V_read_2_reg_474 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln289_4_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_483 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_323_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln317_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_ready : STD_LOGIC;
    signal call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_done : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_idle : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ready : STD_LOGIC;
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp46 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_reg_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg : STD_LOGIC := '0';
    signal select_ln328_fu_273_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_3_load : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_195_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_55_fu_215_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_4_fu_185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_5_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_6_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_3_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_74 : BOOLEAN;
    signal ap_condition_221 : BOOLEAN;

    component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143 : component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0
    port map (
        ap_ready => call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_ready,
        data_0_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_0,
        data_1_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_3,
        data_2_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_4,
        data_3_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_1,
        data_4_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_5,
        data_5_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_6,
        data_6_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_2,
        data_7_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_7,
        data_8_V_read => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_8,
        ap_return_0 => call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_0,
        ap_return_1 => call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_1,
        ap_return_2 => call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_2,
        ap_return_3 => call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_3);

    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156 : component shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start,
        ap_done => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_done,
        ap_idle => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_idle,
        ap_ready => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ready,
        in_elem_data_V_read => in_elem_data_V_read_2_reg_474,
        kernel_window_1_V_read => kernel_data_V_1283,
        kernel_window_2_V_read => kernel_data_V_2284,
        kernel_window_4_V_read => kernel_data_V_4,
        kernel_window_5_V_read => kernel_data_V_5,
        kernel_window_7_V_read => kernel_data_V_7,
        kernel_window_8_V_read => kernel_data_V_8,
        ap_return_0 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_0,
        ap_return_1 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_1,
        ap_return_2 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_2,
        ap_return_3 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_3,
        ap_return_4 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_4,
        ap_return_5 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_5,
        ap_return_6 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_6,
        ap_return_7 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_7,
        ap_return_8 => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_8,
        ap_ce => call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg <= ap_const_logic_1;
                elsif ((call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ready = ap_const_logic_1)) then 
                    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_74)) then
                if (((icmp_ln317_fu_299_p2 = ap_const_lv1_1) and (icmp_ln313_fu_249_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_132 <= ap_const_lv32_0;
                elsif (((icmp_ln313_fu_249_p2 = ap_const_lv1_1) and (icmp_ln317_fu_299_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_132 <= select_ln323_fu_323_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_132 <= ap_phi_reg_pp0_iter0_storemerge_reg_132;
                end if;
            end if; 
        end if;
    end process;

    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_74)) then
                if ((icmp_ln313_fu_249_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_249_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln326_fu_255_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_221)) then
                if ((icmp_ln317_fu_299_p2 = ap_const_lv1_1)) then 
                    pY_3 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_299_p2 = ap_const_lv1_0)) then 
                    pY_3 <= add_ln321_fu_305_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_74)) then
                if ((icmp_ln313_fu_249_p2 = ap_const_lv1_1)) then 
                    sX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_249_p2 = ap_const_lv1_0)) then 
                    sX_3 <= select_ln328_fu_273_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln289_4_reg_479 <= and_ln289_4_fu_243_p2;
                icmp_ln313_reg_483 <= icmp_ln313_fu_249_p2;
                in_elem_data_V_read_2_reg_474 <= in_elem_data_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_data_V_1283 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_3;
                kernel_data_V_2284 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_4;
                kernel_data_V_4 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_5;
                kernel_data_V_5 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_6;
                kernel_data_V_7 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_7;
                kernel_data_V_8 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_return_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_483 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sY_3 <= ap_phi_reg_pp0_iter1_storemerge_reg_132;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln321_fu_305_p2 <= std_logic_vector(unsigned(pY_3) + unsigned(ap_const_lv32_1));
    add_ln323_fu_317_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_3_load) + unsigned(ap_const_lv32_1));
    add_ln326_fu_255_p2 <= std_logic_vector(unsigned(pX_3) + unsigned(ap_const_lv32_1));
    add_ln328_fu_267_p2 <= std_logic_vector(unsigned(sX_3) + unsigned(ap_const_lv32_1));
    and_ln289_3_fu_237_p2 <= (icmp_ln289_6_fu_225_p2 and icmp_ln289_5_fu_205_p2);
    and_ln289_4_fu_243_p2 <= (and_ln289_fu_231_p2 and and_ln289_3_fu_237_p2);
    and_ln289_fu_231_p2 <= (icmp_ln289_fu_175_p2 and icmp_ln289_4_fu_185_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op67, and_ln289_4_reg_479)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op67, and_ln289_4_reg_479)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp46_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op67, and_ln289_4_reg_479)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp46 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, io_acc_block_signal_op67, and_ln289_4_reg_479, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call11_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call11 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op67, and_ln289_4_reg_479)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call11_assign_proc : process(io_acc_block_signal_op67, and_ln289_4_reg_479)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call11 <= ((ap_const_lv1_1 = and_ln289_4_reg_479) and (io_acc_block_signal_op67 = ap_const_logic_0));
    end process;


    ap_condition_221_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce, icmp_ln313_fu_249_p2)
    begin
                ap_condition_221 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_249_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_74_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_74 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_132 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sY_3_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, sY_3, icmp_ln313_reg_483, ap_phi_reg_pp0_iter1_storemerge_reg_132)
    begin
        if (((icmp_ln313_reg_483 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_sY_3_load <= ap_phi_reg_pp0_iter1_storemerge_reg_132;
        else 
            ap_sig_allocacmp_sY_3_load <= sY_3;
        end if; 
    end process;


    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp46)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp46))) then 
            call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ce <= ap_const_logic_1;
        else 
            call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_156_ap_start_reg;
    icmp_ln289_4_fu_185_p2 <= "1" when (ap_sig_allocacmp_sY_3_load = ap_const_lv32_2) else "0";
    icmp_ln289_5_fu_205_p2 <= "1" when (signed(tmp_fu_195_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_6_fu_225_p2 <= "1" when (signed(tmp_55_fu_215_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_175_p2 <= "1" when (sX_3 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_249_p2 <= "1" when (pX_3 = ap_const_lv32_1B) else "0";
    icmp_ln317_fu_299_p2 <= "1" when (pY_3 = ap_const_lv32_1B) else "0";
    io_acc_block_signal_op67 <= (res_stream_V_data_3_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_0_V_full_n);

    res_stream_V_data_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_0_V_full_n, and_ln289_4_reg_479)
    begin
        if (((ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_0;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_4_reg_479, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_1_V_full_n, and_ln289_4_reg_479)
    begin
        if (((ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_1;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_4_reg_479, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_2_V_full_n, and_ln289_4_reg_479)
    begin
        if (((ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_2;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_4_reg_479, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_V_data_3_V_full_n, and_ln289_4_reg_479)
    begin
        if (((ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= call_ret_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_143_ap_return_3;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln289_4_reg_479, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_4_reg_479) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_323_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_4_fu_185_p2(0) = '1') else 
        add_ln323_fu_317_p2;
    select_ln328_fu_273_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_fu_175_p2(0) = '1') else 
        add_ln328_fu_267_p2;
    tmp_55_fu_215_p4 <= pX_3(31 downto 1);
    tmp_fu_195_p4 <= pY_3(31 downto 1);
end behav;
