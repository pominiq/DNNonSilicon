-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    res_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_V_data_4_V_TREADY : IN STD_LOGIC;
    res_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_V_data_5_V_TREADY : IN STD_LOGIC;
    res_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_V_data_6_V_TREADY : IN STD_LOGIC;
    res_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_V_data_7_V_TREADY : IN STD_LOGIC;
    res_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_V_data_8_V_TREADY : IN STD_LOGIC;
    res_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_V_data_9_V_TREADY : IN STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exp_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce0 : STD_LOGIC;
    signal exp_table1_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce1 : STD_LOGIC;
    signal exp_table1_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce2 : STD_LOGIC;
    signal exp_table1_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce3 : STD_LOGIC;
    signal exp_table1_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce4 : STD_LOGIC;
    signal exp_table1_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table2_ce0 : STD_LOGIC;
    signal invert_table2_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal io_acc_block_signal_op16 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal y_V_5_fu_1816_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_2515 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1850_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_2520 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1884_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_2525 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1918_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_reg_2530 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_fu_1952_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_2535 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_1_reg_2540 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_1_reg_2540_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_2546 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_2546_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_2552 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_2552_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_2558 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_2558_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_2564 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_2564_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_2595 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_2600 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_2605 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2610 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2617 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_ready : STD_LOGIC;
    signal p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_ready : STD_LOGIC;
    signal p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_0_V_fu_250 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exp_res_1_V_fu_254 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_fu_258 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_fu_262 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_fu_266 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_fu_270 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_fu_274 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_fu_278 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_fu_282 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_fu_286 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_fu_1629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_1_fu_1668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_2251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1118_fu_462_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_fu_462_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_2256_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_2_fu_463_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_2_fu_463_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_464_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_4_fu_464_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_6_fu_465_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_6_fu_465_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_3_fu_466_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_3_fu_466_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_7_fu_467_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_7_fu_467_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_5_fu_468_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_5_fu_468_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_1_fu_469_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_1_fu_469_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_8_fu_470_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_8_fu_470_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_9_fu_471_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1118_9_fu_471_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1496_fu_905_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_905_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_911_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_911_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_919_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_919_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_1_fu_925_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_925_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_911_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_925_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_947_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_947_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_953_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_3_fu_953_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_961_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_961_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_4_fu_967_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_967_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_3_fu_953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_967_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_939_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_981_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_6_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_fu_1003_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_7_fu_1003_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_7_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_1009_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_7_fu_1009_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_fu_995_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_7_fu_1009_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_8_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_fu_1031_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_fu_1023_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_1031_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_1035_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_1039_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_1053_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1045_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_1091_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_2_fu_1091_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_1095_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_1109_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_1147_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_3_fu_1147_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_1151_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_1165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_1203_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_4_fu_1203_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_1207_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_fu_1221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1213_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_1259_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_5_fu_1259_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_1263_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_fu_1277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1269_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_1315_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_6_fu_1315_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_1319_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_32_fu_1333_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1325_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1371_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_7_fu_1371_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1375_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_fu_1389_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1381_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1427_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_8_fu_1427_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1431_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_1445_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_9_fu_1483_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_9_fu_1483_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_8_fu_1487_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_1501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1493_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_1539_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_10_fu_1539_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_9_fu_1543_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_fu_1557_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1595_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1605_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1613_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_1621_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1634_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1644_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1652_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1660_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1673_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1683_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1691_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1699_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1712_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1722_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1730_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1738_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1751_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1761_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1769_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1777_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1790_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1800_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1808_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1824_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1834_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1842_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_17_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1858_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1868_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1876_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_18_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1892_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1902_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1910_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1926_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_18_fu_1936_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_1944_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_fu_2025_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_fu_2029_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_fu_2025_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_fu_2029_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_2033_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_22_fu_2047_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_22_fu_2047_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_22_fu_2047_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_18_fu_2053_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_2039_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_10_fu_2061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_21_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_20_fu_2073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_2067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_20_fu_2091_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln388_10_fu_2099_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_24_fu_2118_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_23_fu_2115_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_25_fu_2121_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_19_fu_2131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_fu_2127_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_27_fu_2139_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_26_fu_2107_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_1_fu_2151_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_1_fu_2155_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_1_fu_2159_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln746_fu_2147_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_29_fu_2173_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_21_fu_2179_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_2165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_11_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_23_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_22_fu_2199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_2217_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_1_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_2211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_22_fu_2227_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_11_fu_2235_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_10_fu_2243_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_fu_462_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_1_fu_469_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_2_fu_463_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_3_fu_466_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_fu_464_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_5_fu_468_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_6_fu_465_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_7_fu_467_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_8_fu_470_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_9_fu_471_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_469_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_2_fu_463_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_3_fu_466_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_fu_464_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_5_fu_468_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_6_fu_465_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_7_fu_467_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_8_fu_470_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_9_fu_471_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_462_p00 : STD_LOGIC_VECTOR (25 downto 0);

    component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        x_0_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_1_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_2_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_3_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_4_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_5_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_6_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_7_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_8_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_9_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_V_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_exp_tabFfa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_invert_Gfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table1_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_exp_tabFfa
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table1_address0,
        ce0 => exp_table1_ce0,
        q0 => exp_table1_q0,
        address1 => exp_table1_address1,
        ce1 => exp_table1_ce1,
        q1 => exp_table1_q1,
        address2 => exp_table1_address2,
        ce2 => exp_table1_ce2,
        q2 => exp_table1_q2,
        address3 => exp_table1_address3,
        ce3 => exp_table1_ce3,
        q3 => exp_table1_q3,
        address4 => exp_table1_address4,
        ce4 => exp_table1_ce4,
        q4 => exp_table1_q4);

    invert_table2_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_invert_Gfk
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table2_address0,
        ce0 => invert_table2_ce0,
        q0 => invert_table2_q0);

    p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s
    port map (
        ap_ready => p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_ready,
        x_0_V => exp_res_0_V_fu_250,
        x_1_V => exp_res_1_V_fu_254,
        x_2_V => exp_res_2_V_fu_258,
        x_3_V => exp_res_3_V_fu_262,
        x_4_V => exp_res_4_V_fu_266,
        x_5_V => exp_res_5_V_fu_270,
        x_6_V => exp_res_6_V_fu_274,
        x_7_V => exp_res_7_V_fu_278,
        x_8_V => exp_res_8_V_fu_282,
        x_9_V => exp_res_9_V_fu_286,
        x_V_offset => ap_const_lv5_0,
        ap_return => p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_return);

    p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s
    port map (
        ap_ready => p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_ready,
        x_0_V => exp_res_0_V_fu_250,
        x_1_V => exp_res_1_V_fu_254,
        x_2_V => exp_res_2_V_fu_258,
        x_3_V => exp_res_3_V_fu_262,
        x_4_V => exp_res_4_V_fu_266,
        x_5_V => exp_res_5_V_fu_270,
        x_6_V => exp_res_6_V_fu_274,
        x_7_V => exp_res_7_V_fu_278,
        x_8_V => exp_res_8_V_fu_282,
        x_9_V => exp_res_9_V_fu_286,
        x_V_offset => ap_const_lv5_4,
        ap_return => p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                exp_res_0_V_1_reg_2540 <= exp_table1_q0;
                exp_res_1_V_1_reg_2546 <= exp_table1_q1;
                exp_res_2_V_1_reg_2552 <= exp_table1_q2;
                exp_res_3_V_1_reg_2558 <= exp_table1_q3;
                exp_res_4_V_1_reg_2564 <= exp_table1_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_0_V_1_reg_2540_pp0_iter1_reg <= exp_res_0_V_1_reg_2540;
                exp_res_1_V_1_reg_2546_pp0_iter1_reg <= exp_res_1_V_1_reg_2546;
                exp_res_2_V_1_reg_2552_pp0_iter1_reg <= exp_res_2_V_1_reg_2552;
                exp_res_3_V_1_reg_2558_pp0_iter1_reg <= exp_res_3_V_1_reg_2558;
                exp_res_4_V_1_reg_2564_pp0_iter1_reg <= exp_res_4_V_1_reg_2564;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_fu_250 <= exp_res_0_V_1_reg_2540;
                exp_res_1_V_fu_254 <= exp_res_1_V_1_reg_2546;
                exp_res_2_V_fu_258 <= exp_res_2_V_1_reg_2552;
                exp_res_3_V_fu_262 <= exp_res_3_V_1_reg_2558;
                exp_res_4_V_fu_266 <= exp_res_4_V_1_reg_2564;
                exp_res_5_V_1_reg_2595 <= exp_table1_q0;
                exp_res_5_V_fu_270 <= exp_table1_q0;
                exp_res_6_V_1_reg_2600 <= exp_table1_q1;
                exp_res_6_V_fu_274 <= exp_table1_q1;
                exp_res_7_V_1_reg_2605 <= exp_table1_q2;
                exp_res_7_V_fu_278 <= exp_table1_q2;
                exp_res_8_V_1_reg_2610 <= exp_table1_q3;
                exp_res_8_V_fu_282 <= exp_table1_q3;
                exp_res_9_V_1_reg_2617 <= exp_table1_q4;
                exp_res_9_V_fu_286 <= exp_table1_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                y_V_5_reg_2515 <= y_V_5_fu_1816_p3;
                y_V_6_reg_2520 <= y_V_6_fu_1850_p3;
                y_V_7_reg_2525 <= y_V_7_fu_1884_p3;
                y_V_8_reg_2530 <= y_V_8_fu_1918_p3;
                y_V_9_reg_2535 <= y_V_9_fu_1952_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln746_fu_2127_p2 <= std_logic_vector(unsigned(exp_res_8_V_1_reg_2610) + unsigned(exp_res_9_V_1_reg_2617));
    and_ln786_1_fu_1123_p2 <= (xor_ln786_1_fu_1117_p2 and tmp_23_fu_1101_p3);
    and_ln786_2_fu_1179_p2 <= (xor_ln786_2_fu_1173_p2 and tmp_25_fu_1157_p3);
    and_ln786_3_fu_1235_p2 <= (xor_ln786_3_fu_1229_p2 and tmp_27_fu_1213_p3);
    and_ln786_4_fu_1291_p2 <= (xor_ln786_4_fu_1285_p2 and tmp_29_fu_1269_p3);
    and_ln786_5_fu_1347_p2 <= (xor_ln786_5_fu_1341_p2 and tmp_31_fu_1325_p3);
    and_ln786_6_fu_1403_p2 <= (xor_ln786_6_fu_1397_p2 and tmp_33_fu_1381_p3);
    and_ln786_7_fu_1459_p2 <= (xor_ln786_7_fu_1453_p2 and tmp_35_fu_1437_p3);
    and_ln786_8_fu_1515_p2 <= (xor_ln786_8_fu_1509_p2 and tmp_37_fu_1493_p3);
    and_ln786_9_fu_1571_p2 <= (xor_ln786_9_fu_1565_p2 and tmp_39_fu_1549_p3);
    and_ln786_fu_1067_p2 <= (xor_ln786_fu_1061_p2 and tmp_21_fu_1045_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op16)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op16 = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, res_V_data_0_V_TREADY, io_acc_block_signal_op16)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op16 = ap_const_logic_0))) or ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, res_V_data_0_V_TREADY, io_acc_block_signal_op16)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op16 = ap_const_logic_0))) or ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op16)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op16 = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln225_fu_1629_p1, zext_ln225_5_fu_1960_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table1_address0 <= zext_ln225_5_fu_1960_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table1_address0 <= zext_ln225_fu_1629_p1(10 - 1 downto 0);
            else 
                exp_table1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln225_1_fu_1668_p1, zext_ln225_6_fu_1964_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table1_address1 <= zext_ln225_6_fu_1964_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table1_address1 <= zext_ln225_1_fu_1668_p1(10 - 1 downto 0);
            else 
                exp_table1_address1 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln225_2_fu_1707_p1, zext_ln225_7_fu_1968_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table1_address2 <= zext_ln225_7_fu_1968_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table1_address2 <= zext_ln225_2_fu_1707_p1(10 - 1 downto 0);
            else 
                exp_table1_address2 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table1_address2 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln225_3_fu_1746_p1, zext_ln225_8_fu_1972_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table1_address3 <= zext_ln225_8_fu_1972_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table1_address3 <= zext_ln225_3_fu_1746_p1(10 - 1 downto 0);
            else 
                exp_table1_address3 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table1_address3 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln225_4_fu_1785_p1, zext_ln225_9_fu_1976_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                exp_table1_address4 <= zext_ln225_9_fu_1976_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exp_table1_address4 <= zext_ln225_4_fu_1785_p1(10 - 1 downto 0);
            else 
                exp_table1_address4 <= "XXXXXXXXXX";
            end if;
        else 
            exp_table1_address4 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce0 <= ap_const_logic_1;
        else 
            exp_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce1 <= ap_const_logic_1;
        else 
            exp_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce2 <= ap_const_logic_1;
        else 
            exp_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce3 <= ap_const_logic_1;
        else 
            exp_table1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce4 <= ap_const_logic_1;
        else 
            exp_table1_ce4 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_1_fu_919_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_1_fu_919_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_1_fu_919_p2 <= "1" when (signed(icmp_ln1496_1_fu_919_p0) < signed(icmp_ln1496_1_fu_919_p1)) else "0";
    icmp_ln1496_2_fu_933_p2 <= "1" when (signed(select_ln65_fu_911_p3) < signed(select_ln65_1_fu_925_p3)) else "0";
    icmp_ln1496_3_fu_947_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_3_fu_947_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_3_fu_947_p2 <= "1" when (signed(icmp_ln1496_3_fu_947_p0) < signed(icmp_ln1496_3_fu_947_p1)) else "0";
    icmp_ln1496_4_fu_961_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_4_fu_961_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_4_fu_961_p2 <= "1" when (signed(icmp_ln1496_4_fu_961_p0) < signed(icmp_ln1496_4_fu_961_p1)) else "0";
    icmp_ln1496_5_fu_975_p2 <= "1" when (signed(select_ln65_3_fu_953_p3) < signed(select_ln65_4_fu_967_p3)) else "0";
    icmp_ln1496_6_fu_989_p2 <= "1" when (signed(select_ln65_2_fu_939_p3) < signed(select_ln65_5_fu_981_p3)) else "0";
    icmp_ln1496_7_fu_1003_p0 <= data_V_data_8_V_dout;
    icmp_ln1496_7_fu_1003_p1 <= data_V_data_9_V_dout;
    icmp_ln1496_7_fu_1003_p2 <= "1" when (signed(icmp_ln1496_7_fu_1003_p0) < signed(icmp_ln1496_7_fu_1003_p1)) else "0";
    icmp_ln1496_8_fu_1017_p2 <= "1" when (signed(select_ln65_6_fu_995_p3) < signed(select_ln65_7_fu_1009_p3)) else "0";
    icmp_ln1496_fu_905_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_905_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_905_p2 <= "1" when (signed(icmp_ln1496_fu_905_p0) < signed(icmp_ln1496_fu_905_p1)) else "0";
    invert_table2_address0 <= zext_ln235_fu_2251_p1(10 - 1 downto 0);

    invert_table2_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            invert_table2_ce0 <= ap_const_logic_1;
        else 
            invert_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op16 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
        lhs_V_1_fu_2151_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_fu_2107_p3),19));

    lhs_V_fu_2025_p0 <= p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_return;
        lhs_V_fu_2025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_2025_p0),19));

    mul_ln1118_1_fu_469_p0 <= mul_ln1118_1_fu_469_p00(17 - 1 downto 0);
    mul_ln1118_1_fu_469_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_1_reg_2546_pp0_iter1_reg),26));
    mul_ln1118_1_fu_469_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_1_fu_469_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_1_fu_469_p0) * signed(mul_ln1118_1_fu_469_p1))), 26));
    mul_ln1118_2_fu_463_p0 <= mul_ln1118_2_fu_463_p00(17 - 1 downto 0);
    mul_ln1118_2_fu_463_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_1_reg_2552_pp0_iter1_reg),26));
    mul_ln1118_2_fu_463_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_2_fu_463_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_2_fu_463_p0) * signed(mul_ln1118_2_fu_463_p1))), 26));
    mul_ln1118_3_fu_466_p0 <= mul_ln1118_3_fu_466_p00(17 - 1 downto 0);
    mul_ln1118_3_fu_466_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_1_reg_2558_pp0_iter1_reg),26));
    mul_ln1118_3_fu_466_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_3_fu_466_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_3_fu_466_p0) * signed(mul_ln1118_3_fu_466_p1))), 26));
    mul_ln1118_4_fu_464_p0 <= mul_ln1118_4_fu_464_p00(17 - 1 downto 0);
    mul_ln1118_4_fu_464_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_1_reg_2564_pp0_iter1_reg),26));
    mul_ln1118_4_fu_464_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_4_fu_464_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_4_fu_464_p0) * signed(mul_ln1118_4_fu_464_p1))), 26));
    mul_ln1118_5_fu_468_p0 <= mul_ln1118_5_fu_468_p00(17 - 1 downto 0);
    mul_ln1118_5_fu_468_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_1_reg_2595),26));
    mul_ln1118_5_fu_468_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_5_fu_468_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_5_fu_468_p0) * signed(mul_ln1118_5_fu_468_p1))), 26));
    mul_ln1118_6_fu_465_p0 <= mul_ln1118_6_fu_465_p00(17 - 1 downto 0);
    mul_ln1118_6_fu_465_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_V_1_reg_2600),26));
    mul_ln1118_6_fu_465_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_6_fu_465_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_6_fu_465_p0) * signed(mul_ln1118_6_fu_465_p1))), 26));
    mul_ln1118_7_fu_467_p0 <= mul_ln1118_7_fu_467_p00(17 - 1 downto 0);
    mul_ln1118_7_fu_467_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_V_1_reg_2605),26));
    mul_ln1118_7_fu_467_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_7_fu_467_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_7_fu_467_p0) * signed(mul_ln1118_7_fu_467_p1))), 26));
    mul_ln1118_8_fu_470_p0 <= mul_ln1118_8_fu_470_p00(17 - 1 downto 0);
    mul_ln1118_8_fu_470_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2610),26));
    mul_ln1118_8_fu_470_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_8_fu_470_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_8_fu_470_p0) * signed(mul_ln1118_8_fu_470_p1))), 26));
    mul_ln1118_9_fu_471_p0 <= mul_ln1118_9_fu_471_p00(17 - 1 downto 0);
    mul_ln1118_9_fu_471_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2617),26));
    mul_ln1118_9_fu_471_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_9_fu_471_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_9_fu_471_p0) * signed(mul_ln1118_9_fu_471_p1))), 26));
    mul_ln1118_fu_462_p0 <= mul_ln1118_fu_462_p00(17 - 1 downto 0);
    mul_ln1118_fu_462_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_1_reg_2540_pp0_iter1_reg),26));
    mul_ln1118_fu_462_p1 <= sext_ln241_fu_2256_p1(18 - 1 downto 0);
    mul_ln1118_fu_462_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_fu_462_p0) * signed(mul_ln1118_fu_462_p1))), 26));
    or_ln340_10_fu_2085_p2 <= (xor_ln340_21_fu_2079_p2 or p_Result_18_fu_2053_p3);
    or_ln340_11_fu_2211_p2 <= (xor_ln340_23_fu_2205_p2 or p_Result_21_fu_2179_p3);
    or_ln340_1_fu_1141_p2 <= (xor_ln340_1_fu_1135_p2 or tmp_24_fu_1109_p3);
    or_ln340_2_fu_1197_p2 <= (xor_ln340_2_fu_1191_p2 or tmp_26_fu_1165_p3);
    or_ln340_3_fu_1253_p2 <= (xor_ln340_3_fu_1247_p2 or tmp_28_fu_1221_p3);
    or_ln340_4_fu_1309_p2 <= (xor_ln340_4_fu_1303_p2 or tmp_30_fu_1277_p3);
    or_ln340_5_fu_1365_p2 <= (xor_ln340_5_fu_1359_p2 or tmp_32_fu_1333_p3);
    or_ln340_6_fu_1421_p2 <= (xor_ln340_6_fu_1415_p2 or tmp_34_fu_1389_p3);
    or_ln340_7_fu_1477_p2 <= (xor_ln340_7_fu_1471_p2 or tmp_36_fu_1445_p3);
    or_ln340_8_fu_1533_p2 <= (xor_ln340_8_fu_1527_p2 or tmp_38_fu_1501_p3);
    or_ln340_9_fu_1589_p2 <= (xor_ln340_9_fu_1583_p2 or tmp_40_fu_1557_p3);
    or_ln340_fu_1085_p2 <= (xor_ln340_fu_1079_p2 or tmp_22_fu_1053_p3);
    p_Result_18_fu_2053_p3 <= p_Val2_22_fu_2047_p2(17 downto 17);
    p_Result_19_fu_2131_p3 <= p_Val2_25_fu_2121_p2(17 downto 17);
    p_Result_20_fu_2165_p3 <= ret_V_1_fu_2159_p2(18 downto 18);
    p_Result_21_fu_2179_p3 <= p_Val2_29_fu_2173_p2(17 downto 17);
    p_Result_s_fu_2039_p3 <= ret_V_fu_2033_p2(18 downto 18);
    p_Val2_22_fu_2047_p0 <= p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_return;
    p_Val2_22_fu_2047_p1 <= p_Val2_19_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_833_ap_return;
    p_Val2_22_fu_2047_p2 <= std_logic_vector(signed(p_Val2_22_fu_2047_p0) + signed(p_Val2_22_fu_2047_p1));
    p_Val2_23_fu_2115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2610),18));
    p_Val2_24_fu_2118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2617),18));
    p_Val2_25_fu_2121_p2 <= std_logic_vector(unsigned(p_Val2_24_fu_2118_p1) + unsigned(p_Val2_23_fu_2115_p1));
    p_Val2_26_fu_2107_p3 <= 
        select_ln340_20_fu_2091_p3 when (or_ln340_10_fu_2085_p2(0) = '1') else 
        select_ln388_10_fu_2099_p3;
    p_Val2_27_fu_2139_p3 <= 
        ap_const_lv17_1FFFF when (p_Result_19_fu_2131_p3(0) = '1') else 
        add_ln746_fu_2127_p2;
    p_Val2_29_fu_2173_p2 <= std_logic_vector(unsigned(zext_ln746_fu_2147_p1) + unsigned(p_Val2_26_fu_2107_p3));
    res_V_data_0_V_TDATA <= mul_ln1118_fu_462_p2(25 downto 10);

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_0_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_0_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_1_V_TDATA <= mul_ln1118_1_fu_469_p2(25 downto 10);

    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_1_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_1_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_2_V_TDATA <= mul_ln1118_2_fu_463_p2(25 downto 10);

    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_2_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_2_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_3_V_TDATA <= mul_ln1118_3_fu_466_p2(25 downto 10);

    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_3_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_3_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_4_V_TDATA <= mul_ln1118_4_fu_464_p2(25 downto 10);

    res_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_4_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_4_V_TDATA_blk_n <= res_V_data_4_V_TREADY;
        else 
            res_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_4_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_4_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_5_V_TDATA <= mul_ln1118_5_fu_468_p2(25 downto 10);

    res_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_5_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_5_V_TDATA_blk_n <= res_V_data_5_V_TREADY;
        else 
            res_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_5_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_5_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_6_V_TDATA <= mul_ln1118_6_fu_465_p2(25 downto 10);

    res_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_6_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_6_V_TDATA_blk_n <= res_V_data_6_V_TREADY;
        else 
            res_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_6_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_6_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_7_V_TDATA <= mul_ln1118_7_fu_467_p2(25 downto 10);

    res_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_7_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_7_V_TDATA_blk_n <= res_V_data_7_V_TREADY;
        else 
            res_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_7_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_7_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_8_V_TDATA <= mul_ln1118_8_fu_470_p2(25 downto 10);

    res_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_8_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_8_V_TDATA_blk_n <= res_V_data_8_V_TREADY;
        else 
            res_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_8_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_8_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_9_V_TDATA <= mul_ln1118_9_fu_471_p2(25 downto 10);

    res_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, res_V_data_9_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_9_V_TDATA_blk_n <= res_V_data_9_V_TREADY;
        else 
            res_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_9_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_9_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_2159_p2 <= std_logic_vector(signed(lhs_V_1_fu_2151_p1) + signed(rhs_V_1_fu_2155_p1));
    ret_V_fu_2033_p2 <= std_logic_vector(signed(lhs_V_fu_2025_p1) + signed(rhs_V_fu_2029_p1));
    rhs_V_1_fu_2155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_27_fu_2139_p3),19));
    rhs_V_fu_2029_p0 <= p_Val2_1_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_849_ap_return;
        rhs_V_fu_2029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_2029_p0),19));

    select_ln340_10_fu_1800_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1353_p2(0) = '1') else 
        tmp_15_fu_1790_p4;
    select_ln340_12_fu_1834_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1409_p2(0) = '1') else 
        tmp_16_fu_1824_p4;
    select_ln340_14_fu_1868_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1465_p2(0) = '1') else 
        tmp_17_fu_1858_p4;
    select_ln340_16_fu_1902_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_1521_p2(0) = '1') else 
        tmp_18_fu_1892_p4;
    select_ln340_18_fu_1936_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_1577_p2(0) = '1') else 
        tmp_19_fu_1926_p4;
    select_ln340_20_fu_2091_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln340_20_fu_2073_p2(0) = '1') else 
        p_Val2_22_fu_2047_p2;
    select_ln340_22_fu_2227_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_22_fu_2199_p2(0) = '1') else 
        tmp_20_fu_2217_p4;
    select_ln340_2_fu_1644_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_1129_p2(0) = '1') else 
        tmp_11_fu_1634_p4;
    select_ln340_4_fu_1683_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_1185_p2(0) = '1') else 
        tmp_12_fu_1673_p4;
    select_ln340_6_fu_1722_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_1241_p2(0) = '1') else 
        tmp_13_fu_1712_p4;
    select_ln340_8_fu_1761_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1297_p2(0) = '1') else 
        tmp_14_fu_1751_p4;
    select_ln340_fu_1605_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_1073_p2(0) = '1') else 
        tmp_fu_1595_p4;
    select_ln388_10_fu_2099_p3 <= 
        ap_const_lv18_20000 when (underflow_fu_2067_p2(0) = '1') else 
        p_Val2_22_fu_2047_p2;
    select_ln388_11_fu_2235_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_2193_p2(0) = '1') else 
        tmp_20_fu_2217_p4;
    select_ln388_1_fu_1652_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_1123_p2(0) = '1') else 
        tmp_11_fu_1634_p4;
    select_ln388_2_fu_1691_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_1179_p2(0) = '1') else 
        tmp_12_fu_1673_p4;
    select_ln388_3_fu_1730_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_1235_p2(0) = '1') else 
        tmp_13_fu_1712_p4;
    select_ln388_4_fu_1769_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_1291_p2(0) = '1') else 
        tmp_14_fu_1751_p4;
    select_ln388_5_fu_1808_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1347_p2(0) = '1') else 
        tmp_15_fu_1790_p4;
    select_ln388_6_fu_1842_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1403_p2(0) = '1') else 
        tmp_16_fu_1824_p4;
    select_ln388_7_fu_1876_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1459_p2(0) = '1') else 
        tmp_17_fu_1858_p4;
    select_ln388_8_fu_1910_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_1515_p2(0) = '1') else 
        tmp_18_fu_1892_p4;
    select_ln388_9_fu_1944_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_1571_p2(0) = '1') else 
        tmp_19_fu_1926_p4;
    select_ln388_fu_1613_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_1067_p2(0) = '1') else 
        tmp_fu_1595_p4;
    select_ln65_1_fu_925_p1 <= data_V_data_3_V_dout;
    select_ln65_1_fu_925_p2 <= data_V_data_2_V_dout;
    select_ln65_1_fu_925_p3 <= 
        select_ln65_1_fu_925_p1 when (icmp_ln1496_1_fu_919_p2(0) = '1') else 
        select_ln65_1_fu_925_p2;
    select_ln65_2_fu_939_p3 <= 
        select_ln65_1_fu_925_p3 when (icmp_ln1496_2_fu_933_p2(0) = '1') else 
        select_ln65_fu_911_p3;
    select_ln65_3_fu_953_p1 <= data_V_data_5_V_dout;
    select_ln65_3_fu_953_p2 <= data_V_data_4_V_dout;
    select_ln65_3_fu_953_p3 <= 
        select_ln65_3_fu_953_p1 when (icmp_ln1496_3_fu_947_p2(0) = '1') else 
        select_ln65_3_fu_953_p2;
    select_ln65_4_fu_967_p1 <= data_V_data_7_V_dout;
    select_ln65_4_fu_967_p2 <= data_V_data_6_V_dout;
    select_ln65_4_fu_967_p3 <= 
        select_ln65_4_fu_967_p1 when (icmp_ln1496_4_fu_961_p2(0) = '1') else 
        select_ln65_4_fu_967_p2;
    select_ln65_5_fu_981_p3 <= 
        select_ln65_4_fu_967_p3 when (icmp_ln1496_5_fu_975_p2(0) = '1') else 
        select_ln65_3_fu_953_p3;
    select_ln65_6_fu_995_p3 <= 
        select_ln65_5_fu_981_p3 when (icmp_ln1496_6_fu_989_p2(0) = '1') else 
        select_ln65_2_fu_939_p3;
    select_ln65_7_fu_1009_p1 <= data_V_data_9_V_dout;
    select_ln65_7_fu_1009_p2 <= data_V_data_8_V_dout;
    select_ln65_7_fu_1009_p3 <= 
        select_ln65_7_fu_1009_p1 when (icmp_ln1496_7_fu_1003_p2(0) = '1') else 
        select_ln65_7_fu_1009_p2;
    select_ln65_fu_911_p1 <= data_V_data_1_V_dout;
    select_ln65_fu_911_p2 <= data_V_data_0_V_dout;
    select_ln65_fu_911_p3 <= 
        select_ln65_fu_911_p1 when (icmp_ln1496_fu_905_p2(0) = '1') else 
        select_ln65_fu_911_p2;
        sext_ln241_fu_2256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(invert_table2_q0),26));

    sext_ln703_10_fu_1539_p0 <= data_V_data_9_V_dout;
        sext_ln703_10_fu_1539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_10_fu_1539_p0),17));

        sext_ln703_1_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_1023_p3),17));

    sext_ln703_2_fu_1091_p0 <= data_V_data_1_V_dout;
        sext_ln703_2_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_2_fu_1091_p0),17));

    sext_ln703_3_fu_1147_p0 <= data_V_data_2_V_dout;
        sext_ln703_3_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_3_fu_1147_p0),17));

    sext_ln703_4_fu_1203_p0 <= data_V_data_3_V_dout;
        sext_ln703_4_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_4_fu_1203_p0),17));

    sext_ln703_5_fu_1259_p0 <= data_V_data_4_V_dout;
        sext_ln703_5_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_5_fu_1259_p0),17));

    sext_ln703_6_fu_1315_p0 <= data_V_data_5_V_dout;
        sext_ln703_6_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_6_fu_1315_p0),17));

    sext_ln703_7_fu_1371_p0 <= data_V_data_6_V_dout;
        sext_ln703_7_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_7_fu_1371_p0),17));

    sext_ln703_8_fu_1427_p0 <= data_V_data_7_V_dout;
        sext_ln703_8_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_8_fu_1427_p0),17));

    sext_ln703_9_fu_1483_p0 <= data_V_data_8_V_dout;
        sext_ln703_9_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_9_fu_1483_p0),17));

    sext_ln703_fu_1031_p0 <= data_V_data_0_V_dout;
        sext_ln703_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_1031_p0),17));

    sub_ln1193_1_fu_1095_p2 <= std_logic_vector(signed(sext_ln703_2_fu_1091_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_2_fu_1151_p2 <= std_logic_vector(signed(sext_ln703_3_fu_1147_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_3_fu_1207_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1203_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_4_fu_1263_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1259_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_5_fu_1319_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1315_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_6_fu_1375_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1371_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_7_fu_1431_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1427_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_8_fu_1487_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1483_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_9_fu_1543_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1539_p1) - signed(sext_ln703_1_fu_1035_p1));
    sub_ln1193_fu_1039_p2 <= std_logic_vector(signed(sext_ln703_fu_1031_p1) - signed(sext_ln703_1_fu_1035_p1));
    tmp_11_fu_1634_p4 <= sub_ln1193_1_fu_1095_p2(15 downto 6);
    tmp_12_fu_1673_p4 <= sub_ln1193_2_fu_1151_p2(15 downto 6);
    tmp_13_fu_1712_p4 <= sub_ln1193_3_fu_1207_p2(15 downto 6);
    tmp_14_fu_1751_p4 <= sub_ln1193_4_fu_1263_p2(15 downto 6);
    tmp_15_fu_1790_p4 <= sub_ln1193_5_fu_1319_p2(15 downto 6);
    tmp_16_fu_1824_p4 <= sub_ln1193_6_fu_1375_p2(15 downto 6);
    tmp_17_fu_1858_p4 <= sub_ln1193_7_fu_1431_p2(15 downto 6);
    tmp_18_fu_1892_p4 <= sub_ln1193_8_fu_1487_p2(15 downto 6);
    tmp_19_fu_1926_p4 <= sub_ln1193_9_fu_1543_p2(15 downto 6);
    tmp_20_fu_2217_p4 <= p_Val2_29_fu_2173_p2(17 downto 8);
    tmp_21_fu_1045_p3 <= sub_ln1193_fu_1039_p2(16 downto 16);
    tmp_22_fu_1053_p3 <= sub_ln1193_fu_1039_p2(15 downto 15);
    tmp_23_fu_1101_p3 <= sub_ln1193_1_fu_1095_p2(16 downto 16);
    tmp_24_fu_1109_p3 <= sub_ln1193_1_fu_1095_p2(15 downto 15);
    tmp_25_fu_1157_p3 <= sub_ln1193_2_fu_1151_p2(16 downto 16);
    tmp_26_fu_1165_p3 <= sub_ln1193_2_fu_1151_p2(15 downto 15);
    tmp_27_fu_1213_p3 <= sub_ln1193_3_fu_1207_p2(16 downto 16);
    tmp_28_fu_1221_p3 <= sub_ln1193_3_fu_1207_p2(15 downto 15);
    tmp_29_fu_1269_p3 <= sub_ln1193_4_fu_1263_p2(16 downto 16);
    tmp_30_fu_1277_p3 <= sub_ln1193_4_fu_1263_p2(15 downto 15);
    tmp_31_fu_1325_p3 <= sub_ln1193_5_fu_1319_p2(16 downto 16);
    tmp_32_fu_1333_p3 <= sub_ln1193_5_fu_1319_p2(15 downto 15);
    tmp_33_fu_1381_p3 <= sub_ln1193_6_fu_1375_p2(16 downto 16);
    tmp_34_fu_1389_p3 <= sub_ln1193_6_fu_1375_p2(15 downto 15);
    tmp_35_fu_1437_p3 <= sub_ln1193_7_fu_1431_p2(16 downto 16);
    tmp_36_fu_1445_p3 <= sub_ln1193_7_fu_1431_p2(15 downto 15);
    tmp_37_fu_1493_p3 <= sub_ln1193_8_fu_1487_p2(16 downto 16);
    tmp_38_fu_1501_p3 <= sub_ln1193_8_fu_1487_p2(15 downto 15);
    tmp_39_fu_1549_p3 <= sub_ln1193_9_fu_1543_p2(16 downto 16);
    tmp_40_fu_1557_p3 <= sub_ln1193_9_fu_1543_p2(15 downto 15);
    tmp_fu_1595_p4 <= sub_ln1193_fu_1039_p2(15 downto 6);
    underflow_1_fu_2193_p2 <= (xor_ln786_11_fu_2187_p2 and p_Result_20_fu_2165_p3);
    underflow_fu_2067_p2 <= (xor_ln786_10_fu_2061_p2 and p_Result_s_fu_2039_p3);
    x_max_V_fu_1023_p3 <= 
        select_ln65_7_fu_1009_p3 when (icmp_ln1496_8_fu_1017_p2(0) = '1') else 
        select_ln65_6_fu_995_p3;
    xor_ln340_10_fu_1073_p2 <= (tmp_22_fu_1053_p3 xor tmp_21_fu_1045_p3);
    xor_ln340_11_fu_1129_p2 <= (tmp_24_fu_1109_p3 xor tmp_23_fu_1101_p3);
    xor_ln340_12_fu_1185_p2 <= (tmp_26_fu_1165_p3 xor tmp_25_fu_1157_p3);
    xor_ln340_13_fu_1241_p2 <= (tmp_28_fu_1221_p3 xor tmp_27_fu_1213_p3);
    xor_ln340_14_fu_1297_p2 <= (tmp_30_fu_1277_p3 xor tmp_29_fu_1269_p3);
    xor_ln340_15_fu_1353_p2 <= (tmp_32_fu_1333_p3 xor tmp_31_fu_1325_p3);
    xor_ln340_16_fu_1409_p2 <= (tmp_34_fu_1389_p3 xor tmp_33_fu_1381_p3);
    xor_ln340_17_fu_1465_p2 <= (tmp_36_fu_1445_p3 xor tmp_35_fu_1437_p3);
    xor_ln340_18_fu_1521_p2 <= (tmp_38_fu_1501_p3 xor tmp_37_fu_1493_p3);
    xor_ln340_19_fu_1577_p2 <= (tmp_40_fu_1557_p3 xor tmp_39_fu_1549_p3);
    xor_ln340_1_fu_1135_p2 <= (tmp_23_fu_1101_p3 xor ap_const_lv1_1);
    xor_ln340_20_fu_2073_p2 <= (p_Result_s_fu_2039_p3 xor p_Result_18_fu_2053_p3);
    xor_ln340_21_fu_2079_p2 <= (p_Result_s_fu_2039_p3 xor ap_const_lv1_1);
    xor_ln340_22_fu_2199_p2 <= (p_Result_21_fu_2179_p3 xor p_Result_20_fu_2165_p3);
    xor_ln340_23_fu_2205_p2 <= (p_Result_20_fu_2165_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_1191_p2 <= (tmp_25_fu_1157_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_1247_p2 <= (tmp_27_fu_1213_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_1303_p2 <= (tmp_29_fu_1269_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1359_p2 <= (tmp_31_fu_1325_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1415_p2 <= (tmp_33_fu_1381_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1471_p2 <= (tmp_35_fu_1437_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1527_p2 <= (tmp_37_fu_1493_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1583_p2 <= (tmp_39_fu_1549_p3 xor ap_const_lv1_1);
    xor_ln340_fu_1079_p2 <= (tmp_21_fu_1045_p3 xor ap_const_lv1_1);
    xor_ln786_10_fu_2061_p2 <= (p_Result_18_fu_2053_p3 xor ap_const_lv1_1);
    xor_ln786_11_fu_2187_p2 <= (p_Result_21_fu_2179_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_1117_p2 <= (tmp_24_fu_1109_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_1173_p2 <= (tmp_26_fu_1165_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1229_p2 <= (tmp_28_fu_1221_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1285_p2 <= (tmp_30_fu_1277_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1341_p2 <= (tmp_32_fu_1333_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1397_p2 <= (tmp_34_fu_1389_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1453_p2 <= (tmp_36_fu_1445_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1509_p2 <= (tmp_38_fu_1501_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1565_p2 <= (tmp_40_fu_1557_p3 xor ap_const_lv1_1);
    xor_ln786_fu_1061_p2 <= (tmp_22_fu_1053_p3 xor ap_const_lv1_1);
    y_V_10_fu_2243_p3 <= 
        select_ln340_22_fu_2227_p3 when (or_ln340_11_fu_2211_p2(0) = '1') else 
        select_ln388_11_fu_2235_p3;
    y_V_1_fu_1660_p3 <= 
        select_ln340_2_fu_1644_p3 when (or_ln340_1_fu_1141_p2(0) = '1') else 
        select_ln388_1_fu_1652_p3;
    y_V_2_fu_1699_p3 <= 
        select_ln340_4_fu_1683_p3 when (or_ln340_2_fu_1197_p2(0) = '1') else 
        select_ln388_2_fu_1691_p3;
    y_V_3_fu_1738_p3 <= 
        select_ln340_6_fu_1722_p3 when (or_ln340_3_fu_1253_p2(0) = '1') else 
        select_ln388_3_fu_1730_p3;
    y_V_4_fu_1777_p3 <= 
        select_ln340_8_fu_1761_p3 when (or_ln340_4_fu_1309_p2(0) = '1') else 
        select_ln388_4_fu_1769_p3;
    y_V_5_fu_1816_p3 <= 
        select_ln340_10_fu_1800_p3 when (or_ln340_5_fu_1365_p2(0) = '1') else 
        select_ln388_5_fu_1808_p3;
    y_V_6_fu_1850_p3 <= 
        select_ln340_12_fu_1834_p3 when (or_ln340_6_fu_1421_p2(0) = '1') else 
        select_ln388_6_fu_1842_p3;
    y_V_7_fu_1884_p3 <= 
        select_ln340_14_fu_1868_p3 when (or_ln340_7_fu_1477_p2(0) = '1') else 
        select_ln388_7_fu_1876_p3;
    y_V_8_fu_1918_p3 <= 
        select_ln340_16_fu_1902_p3 when (or_ln340_8_fu_1533_p2(0) = '1') else 
        select_ln388_8_fu_1910_p3;
    y_V_9_fu_1952_p3 <= 
        select_ln340_18_fu_1936_p3 when (or_ln340_9_fu_1589_p2(0) = '1') else 
        select_ln388_9_fu_1944_p3;
    y_V_fu_1621_p3 <= 
        select_ln340_fu_1605_p3 when (or_ln340_fu_1085_p2(0) = '1') else 
        select_ln388_fu_1613_p3;
    zext_ln225_1_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_fu_1660_p3),64));
    zext_ln225_2_fu_1707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_fu_1699_p3),64));
    zext_ln225_3_fu_1746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_fu_1738_p3),64));
    zext_ln225_4_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_fu_1777_p3),64));
    zext_ln225_5_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_2515),64));
    zext_ln225_6_fu_1964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_2520),64));
    zext_ln225_7_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_2525),64));
    zext_ln225_8_fu_1972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_reg_2530),64));
    zext_ln225_9_fu_1976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_reg_2535),64));
    zext_ln225_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_fu_1621_p3),64));
    zext_ln235_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_fu_2243_p3),64));
    zext_ln746_fu_2147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_27_fu_2139_p3),18));
end behav;
