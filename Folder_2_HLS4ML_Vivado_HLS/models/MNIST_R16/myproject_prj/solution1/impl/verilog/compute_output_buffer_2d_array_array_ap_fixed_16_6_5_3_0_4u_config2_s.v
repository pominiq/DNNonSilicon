// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_0_V_blk_n,
        res_stream_V_data_1_V_blk_n,
        res_stream_V_data_2_V_blk_n,
        res_stream_V_data_3_V_blk_n,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_elem_data_V_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output   res_stream_V_data_0_V_blk_n;
output   res_stream_V_data_1_V_blk_n;
output   res_stream_V_data_2_V_blk_n;
output   res_stream_V_data_3_V_blk_n;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_0_V_blk_n;
reg res_stream_V_data_1_V_blk_n;
reg res_stream_V_data_2_V_blk_n;
reg res_stream_V_data_3_V_blk_n;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1283;
reg   [15:0] kernel_data_V_2284;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_8;
reg   [31:0] sX_3;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
wire    ap_CS_fsm_state12;
reg   [0:0] and_ln289_4_reg_499;
reg   [31:0] sX_3_load_reg_467;
wire   [0:0] icmp_ln289_fu_175_p2;
reg   [0:0] icmp_ln289_reg_472;
reg   [31:0] sY_3_load_reg_477;
wire   [0:0] icmp_ln289_4_fu_185_p2;
reg   [0:0] icmp_ln289_4_reg_482;
reg   [31:0] pY_3_load_reg_487;
reg   [31:0] pX_3_load_reg_493;
wire   [0:0] and_ln289_4_fu_243_p2;
wire    ap_CS_fsm_state2;
reg   [15:0] ap_port_reg_in_elem_data_V_read;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_done;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_idle;
wire    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ready;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_3;
reg    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    io_acc_block_signal_op69;
reg    ap_block_state12_ignore_call0;
reg    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_start;
wire    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_done;
wire    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_idle;
wire    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ready;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_0;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_1;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_2;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_3;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_4;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_5;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_6;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_7;
wire   [15:0] call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_8;
reg    call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ce;
wire   [31:0] select_ln323_fu_447_p3;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_135_p4;
reg    ap_block_state12;
wire   [0:0] icmp_ln313_fu_380_p2;
wire   [0:0] icmp_ln317_fu_426_p2;
reg    grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg;
reg   [11:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
wire   [31:0] select_ln328_fu_401_p3;
wire   [31:0] add_ln321_fu_431_p2;
wire   [31:0] add_ln326_fu_385_p2;
wire   [30:0] tmp_fu_195_p4;
wire   [30:0] tmp_52_fu_215_p4;
wire   [0:0] icmp_ln289_5_fu_205_p2;
wire   [0:0] icmp_ln289_6_fu_225_p2;
wire   [0:0] and_ln289_3_fu_237_p2;
wire   [0:0] and_ln289_fu_231_p2;
wire   [31:0] add_ln328_fu_396_p2;
wire   [31:0] add_ln323_fu_442_p2;
reg    ap_condition_227;
reg    ap_condition_294;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 kernel_data_V_1283 = 16'd0;
#0 kernel_data_V_2284 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 sX_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg = 1'b0;
end

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ready),
    .data_0_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_0),
    .data_1_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_3),
    .data_2_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_4),
    .data_3_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_1),
    .data_4_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_5),
    .data_5_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_6),
    .data_6_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_2),
    .data_7_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_7),
    .data_8_V_read(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_8),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_3),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ce)
);

shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_start),
    .ap_done(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_done),
    .ap_idle(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_idle),
    .ap_ready(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ready),
    .in_elem_data_V_read(ap_port_reg_in_elem_data_V_read),
    .kernel_window_1_V_read(kernel_data_V_1283),
    .kernel_window_2_V_read(kernel_data_V_2284),
    .kernel_window_4_V_read(kernel_data_V_4),
    .kernel_window_5_V_read(kernel_data_V_5),
    .kernel_window_7_V_read(kernel_data_V_7),
    .kernel_window_8_V_read(kernel_data_V_8),
    .ap_return_0(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_0),
    .ap_return_1(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_1),
    .ap_return_2(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_2),
    .ap_return_3(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_3),
    .ap_return_4(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_4),
    .ap_return_5(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_5),
    .ap_return_6(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_6),
    .ap_return_7(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_7),
    .ap_return_8(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_8),
    .ap_ce(call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg <= 1'b0;
    end else begin
        if (((1'd1 == and_ln289_4_fu_243_p2) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_NS_fsm_state2))) begin
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_227)) begin
        if ((icmp_ln313_fu_380_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_380_p2 == 1'd0)) begin
            pX_3 <= add_ln326_fu_385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_294)) begin
        if ((icmp_ln317_fu_426_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln317_fu_426_p2 == 1'd0)) begin
            pY_3 <= add_ln321_fu_431_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_227)) begin
        if ((icmp_ln313_fu_380_p2 == 1'd1)) begin
            sX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_380_p2 == 1'd0)) begin
            sX_3 <= select_ln328_fu_401_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        and_ln289_4_reg_499 <= and_ln289_4_fu_243_p2;
        ap_port_reg_in_elem_data_V_read <= in_elem_data_V_read;
        icmp_ln289_4_reg_482 <= icmp_ln289_4_fu_185_p2;
        icmp_ln289_reg_472 <= icmp_ln289_fu_175_p2;
        pX_3_load_reg_493 <= pX_3;
        pY_3_load_reg_487 <= pY_3;
        sX_3_load_reg_467 <= sX_3;
        sY_3_load_reg_477 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
        kernel_data_V_1283 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_3;
        kernel_data_V_2284 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_4;
        kernel_data_V_4 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_5;
        kernel_data_V_5 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_6;
        kernel_data_V_7 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_7;
        kernel_data_V_8 <= call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (icmp_ln313_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        sY_3 <= ap_phi_mux_storemerge_phi_fu_135_p4;
    end
end

always @ (*) begin
    if (((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state12)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        if ((icmp_ln317_fu_426_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_135_p4 = 32'd0;
        end else if ((icmp_ln317_fu_426_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_135_p4 = select_ln323_fu_447_p3;
        end else begin
            ap_phi_mux_storemerge_phi_fu_135_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_135_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ce = 1'b1;
    end else begin
        call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
        call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_start = 1'b1;
    end else begin
        call_ret2_shift_line_buffer_array_ap_fixed_16_6_5_3_0_1u_config2_s_fu_155_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_CS_fsm_state12))))) begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'd1 == and_ln289_4_reg_499) & (1'b1 == ap_CS_fsm_state12))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln321_fu_431_p2 = (pY_3_load_reg_487 + 32'd1);

assign add_ln323_fu_442_p2 = (sY_3_load_reg_477 + 32'd1);

assign add_ln326_fu_385_p2 = (pX_3_load_reg_493 + 32'd1);

assign add_ln328_fu_396_p2 = (sX_3_load_reg_467 + 32'd1);

assign and_ln289_3_fu_237_p2 = (icmp_ln289_6_fu_225_p2 & icmp_ln289_5_fu_205_p2);

assign and_ln289_4_fu_243_p2 = (and_ln289_fu_231_p2 & and_ln289_3_fu_237_p2);

assign and_ln289_fu_231_p2 = (icmp_ln289_fu_175_p2 & icmp_ln289_4_fu_185_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

always @ (*) begin
    ap_block_state12 = ((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0));
end

always @ (*) begin
    ap_block_state12_ignore_call0 = ((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0));
end

always @ (*) begin
    ap_condition_227 = (~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state12));
end

always @ (*) begin
    ap_condition_294 = (~((1'd1 == and_ln289_4_reg_499) & (io_acc_block_signal_op69 == 1'b0)) & (1'b1 == ap_ce) & (icmp_ln313_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12));
end

assign grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_start_reg;

assign icmp_ln289_4_fu_185_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_5_fu_205_p2 = (($signed(tmp_fu_195_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_6_fu_225_p2 = (($signed(tmp_52_fu_215_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_175_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_380_p2 = ((pX_3_load_reg_493 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_426_p2 = ((pY_3_load_reg_487 == 32'd27) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op69 = (res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_0;

assign res_stream_V_data_1_V_din = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_1;

assign res_stream_V_data_2_V_din = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_2;

assign res_stream_V_data_3_V_din = grp_dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_fu_142_ap_return_3;

assign select_ln323_fu_447_p3 = ((icmp_ln289_4_reg_482[0:0] === 1'b1) ? 32'd2 : add_ln323_fu_442_p2);

assign select_ln328_fu_401_p3 = ((icmp_ln289_reg_472[0:0] === 1'b1) ? 32'd2 : add_ln328_fu_396_p2);

assign tmp_52_fu_215_p4 = {{pX_3[31:1]}};

assign tmp_fu_195_p4 = {{pY_3[31:1]}};

endmodule //compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_4u_config2_s
