-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv26_3FFFD75 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101110101";
    constant ap_const_lv26_3FFFEF6 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011110110";
    constant ap_const_lv26_2B0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010110000";
    constant ap_const_lv26_3FFFC45 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001000101";
    constant ap_const_lv26_103 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000011";
    constant ap_const_lv26_12E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100101110";
    constant ap_const_lv26_1CC : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111001100";
    constant ap_const_lv25_C5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011000101";
    constant ap_const_lv26_25E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001011110";
    constant ap_const_lv26_2DE : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011011110";
    constant ap_const_lv26_3FFFD68 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101101000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv26_3FFFD16 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100010110";
    constant ap_const_lv26_2EA : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011101010";
    constant ap_const_lv26_22F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000101111";
    constant ap_const_lv26_4A7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010100111";
    constant ap_const_lv26_2D5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011010101";
    constant ap_const_lv26_222 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000100010";
    constant ap_const_lv26_3FFFE87 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010000111";
    constant ap_const_lv26_3FFFEE7 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011100111";
    constant ap_const_lv25_1FFFF7B : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101111011";
    constant ap_const_lv26_3FFFC85 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110010000101";
    constant ap_const_lv26_308 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100001000";
    constant ap_const_lv26_318 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100011000";
    constant ap_const_lv26_3FFFC7E : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001111110";
    constant ap_const_lv26_3BE : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110111110";
    constant ap_const_lv26_3FFFD30 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100110000";
    constant ap_const_lv26_16C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101101100";
    constant ap_const_lv26_257 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001010111";
    constant ap_const_lv26_3FFFC2F : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000101111";
    constant ap_const_lv26_3FFFAB2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101010110010";
    constant ap_const_lv26_15C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101011100";
    constant ap_const_lv26_2AC : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010101100";
    constant ap_const_lv26_3A1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110100001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv15_7D7D : STD_LOGIC_VECTOR (14 downto 0) := "111110101111101";
    constant ap_const_lv16_97 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010010111";
    constant ap_const_lv16_FF25 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100100101";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_477_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_507 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_487_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_511 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_497_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_515 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_531 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal sext_ln1116_cast_fu_535_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_cast_reg_940 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_76_cast_fu_542_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_76_cast_reg_945 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_519_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_951 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_V_read_2_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_77_cast_fu_548_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_77_cast_reg_962 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_337_fu_553_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_337_reg_968 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_346_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_78_cast_fu_559_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_78_cast_reg_978 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_155_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_158_reg_989 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_156_reg_994 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln708_157_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_79_cast_fu_604_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_79_cast_reg_1004 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_322_fu_620_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_322_reg_1011 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_331_fu_676_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_331_reg_1016 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_340_fu_693_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_340_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_2_reg_1026 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_349_fu_717_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_349_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_81_cast1_fu_760_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_81_cast1_reg_1037 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln708_168_reg_1042 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_323_fu_781_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_323_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_82_cast_fu_804_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_82_cast_reg_1052 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_332_fu_810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_332_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_352_fu_826_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_352_reg_1063 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_83_cast_fu_832_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_83_cast_reg_1068 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_327_fu_854_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_327_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_1_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_4_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_5_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_6_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_7_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_8_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_206_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_80_cast_fu_698_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_206_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_207_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_81_cast_fu_765_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_208_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_77_cast_fu_548_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_78_cast_fu_559_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_46_fu_564_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_46_fu_564_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_47_fu_576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_47_fu_576_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_152_fu_572_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_153_fu_584_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1118_33_fu_588_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_320_fu_609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_321_fu_614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_625_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_s_fu_638_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_fu_632_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_fu_645_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1118_32_fu_649_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_152_fu_655_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_329_fu_665_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_330_fu_670_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_338_fu_682_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_339_fu_687_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_80_cast_fu_698_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_347_fu_705_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_348_fu_711_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_48_fu_722_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_49_fu_733_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_154_fu_729_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_155_fu_740_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1118_34_fu_744_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_81_cast1_fu_760_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_81_cast_fu_765_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_168_fu_771_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln708_163_fu_750_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_170_fu_790_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln708_170_fu_790_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_cast_fu_787_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_351_fu_816_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_9_fu_800_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_822_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_324_fu_837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_325_fu_843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_326_fu_849_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_859_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_333_fu_862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_334_fu_868_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_335_fu_874_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_342_fu_884_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_343_fu_890_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_344_fu_896_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_353_fu_907_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_fu_879_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_902_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_912_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln703_322_reg_1011 <= add_ln703_322_fu_620_p2;
                sext_ln1116_79_cast_reg_1004 <= sext_ln1116_79_cast_fu_604_p1;
                trunc_ln708_156_reg_994 <= grp_fu_207_p2(25 downto 10);
                trunc_ln708_157_reg_999 <= grp_fu_206_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                add_ln703_323_reg_1047 <= add_ln703_323_fu_781_p2;
                sext_ln1116_81_cast1_reg_1037 <= sext_ln1116_81_cast1_fu_760_p1;
                trunc_ln708_168_reg_1042 <= trunc_ln708_168_fu_771_p1(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                add_ln703_327_reg_1075 <= add_ln703_327_fu_854_p2;
                sext_ln1116_83_cast_reg_1068 <= sext_ln1116_83_cast_fu_832_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln703_331_reg_1016 <= add_ln703_331_fu_676_p2;
                add_ln703_340_reg_1021 <= add_ln703_340_fu_693_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                add_ln703_332_reg_1058 <= add_ln703_332_fu_810_p2;
                add_ln703_352_reg_1063 <= add_ln703_352_fu_826_p2;
                sext_ln1116_82_cast_reg_1052 <= sext_ln1116_82_cast_fu_804_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln703_337_reg_968 <= add_ln703_337_fu_553_p2;
                add_ln703_346_reg_973 <= grp_fu_519_p2;
                data_2_V_read_2_reg_956 <= ap_port_reg_data_2_V_read;
                sext_ln1116_77_cast_reg_962 <= sext_ln1116_77_cast_fu_548_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln703_349_reg_1032 <= add_ln703_349_fu_717_p2;
                data_5_V_read_2_reg_1026 <= ap_port_reg_data_5_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln703_reg_951 <= grp_fu_519_p2;
                sext_ln1116_76_cast_reg_945 <= sext_ln1116_76_cast_fu_542_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                ap_port_reg_data_1_V_read <= data_1_V_read;
                ap_port_reg_data_2_V_read <= data_2_V_read;
                ap_port_reg_data_3_V_read <= data_3_V_read;
                ap_port_reg_data_4_V_read <= data_4_V_read;
                ap_port_reg_data_5_V_read <= data_5_V_read;
                ap_port_reg_data_6_V_read <= data_6_V_read;
                ap_port_reg_data_7_V_read <= data_7_V_read;
                ap_port_reg_data_8_V_read <= data_8_V_read;
                sext_ln1116_cast_reg_940 <= sext_ln1116_cast_fu_535_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_507 <= grp_fu_207_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_511 <= grp_fu_206_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_515 <= grp_fu_208_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_531 <= grp_fu_525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                sext_ln1116_78_cast_reg_978 <= sext_ln1116_78_cast_fu_559_p1;
                trunc_ln708_155_reg_984 <= grp_fu_208_p2(25 downto 10);
                trunc_ln708_158_reg_989 <= sub_ln1118_33_fu_588_p2(23 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    acc_1_V_fu_879_p2 <= std_logic_vector(unsigned(add_ln703_331_reg_1016) + unsigned(add_ln703_335_fu_874_p2));
    acc_2_V_fu_902_p2 <= std_logic_vector(unsigned(add_ln703_340_reg_1021) + unsigned(add_ln703_344_fu_896_p2));
    acc_3_V_fu_912_p2 <= std_logic_vector(unsigned(add_ln703_349_reg_1032) + unsigned(add_ln703_353_fu_907_p2));
    add_ln703_320_fu_609_p2 <= std_logic_vector(unsigned(grp_fu_497_p4) + unsigned(trunc_ln708_155_reg_984));
    add_ln703_321_fu_614_p2 <= std_logic_vector(unsigned(reg_515) + unsigned(add_ln703_320_fu_609_p2));
    add_ln703_322_fu_620_p2 <= std_logic_vector(unsigned(add_ln703_reg_951) + unsigned(add_ln703_321_fu_614_p2));
    add_ln703_323_fu_781_p2 <= std_logic_vector(unsigned(grp_fu_477_p4) + unsigned(trunc_ln708_163_fu_750_p4));
    add_ln703_324_fu_837_p2 <= std_logic_vector(unsigned(grp_fu_497_p4) + unsigned(ap_const_lv16_97));
    add_ln703_325_fu_843_p2 <= std_logic_vector(unsigned(reg_511) + unsigned(add_ln703_324_fu_837_p2));
    add_ln703_326_fu_849_p2 <= std_logic_vector(unsigned(add_ln703_323_reg_1047) + unsigned(add_ln703_325_fu_843_p2));
    add_ln703_327_fu_854_p2 <= std_logic_vector(unsigned(add_ln703_322_reg_1011) + unsigned(add_ln703_326_fu_849_p2));
    add_ln703_329_fu_665_p2 <= std_logic_vector(unsigned(grp_fu_477_p4) + unsigned(trunc_ln708_156_reg_994));
    add_ln703_330_fu_670_p2 <= std_logic_vector(unsigned(trunc_ln708_152_fu_655_p4) + unsigned(add_ln703_329_fu_665_p2));
    add_ln703_331_fu_676_p2 <= std_logic_vector(unsigned(reg_531) + unsigned(add_ln703_330_fu_670_p2));
    add_ln703_332_fu_810_p2 <= std_logic_vector(unsigned(grp_fu_497_p4) + unsigned(reg_507));
    add_ln703_333_fu_862_p2 <= std_logic_vector(signed(sext_ln708_fu_859_p1) + signed(ap_const_lv16_FF25));
    add_ln703_334_fu_868_p2 <= std_logic_vector(unsigned(grp_fu_477_p4) + unsigned(add_ln703_333_fu_862_p2));
    add_ln703_335_fu_874_p2 <= std_logic_vector(unsigned(add_ln703_332_reg_1058) + unsigned(add_ln703_334_fu_868_p2));
    add_ln703_337_fu_553_p2 <= std_logic_vector(unsigned(grp_fu_477_p4) + unsigned(reg_515));
    add_ln703_338_fu_682_p2 <= std_logic_vector(unsigned(grp_fu_487_p4) + unsigned(trunc_ln708_157_reg_999));
    add_ln703_339_fu_687_p2 <= std_logic_vector(unsigned(reg_507) + unsigned(add_ln703_338_fu_682_p2));
    add_ln703_340_fu_693_p2 <= std_logic_vector(unsigned(add_ln703_337_reg_968) + unsigned(add_ln703_339_fu_687_p2));
    add_ln703_342_fu_884_p2 <= std_logic_vector(unsigned(grp_fu_487_p4) + unsigned(ap_const_lv16_FFFF));
    add_ln703_343_fu_890_p2 <= std_logic_vector(unsigned(reg_507) + unsigned(add_ln703_342_fu_884_p2));
    add_ln703_344_fu_896_p2 <= std_logic_vector(unsigned(reg_531) + unsigned(add_ln703_343_fu_890_p2));
    add_ln703_347_fu_705_p2 <= std_logic_vector(unsigned(grp_fu_497_p4) + unsigned(reg_515));
    add_ln703_348_fu_711_p2 <= std_logic_vector(unsigned(reg_511) + unsigned(add_ln703_347_fu_705_p2));
    add_ln703_349_fu_717_p2 <= std_logic_vector(unsigned(add_ln703_346_reg_973) + unsigned(add_ln703_348_fu_711_p2));
    add_ln703_351_fu_816_p2 <= std_logic_vector(signed(p_cast_fu_787_p1) + signed(ap_const_lv15_7D7D));
    add_ln703_352_fu_826_p2 <= std_logic_vector(signed(sext_ln708_9_fu_800_p1) + signed(sext_ln703_fu_822_p1));
    add_ln703_353_fu_907_p2 <= std_logic_vector(unsigned(grp_fu_525_p2) + unsigned(add_ln703_352_reg_1063));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= add_ln703_327_reg_1075;
    ap_return_1 <= acc_1_V_fu_879_p2;
    ap_return_2 <= acc_2_V_fu_902_p2;
    ap_return_3 <= acc_3_V_fu_912_p2;

    grp_fu_206_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln1116_cast_fu_535_p1, sext_ln1116_76_cast_fu_542_p1, sext_ln1116_76_cast_reg_945, sext_ln1116_77_cast_reg_962, sext_ln1116_78_cast_reg_978, ap_CS_fsm_state5, sext_ln1116_79_cast_reg_1004, sext_ln1116_81_cast1_fu_760_p1, sext_ln1116_82_cast_fu_804_p1, sext_ln1116_82_cast_reg_1052, sext_ln1116_83_cast_reg_1068, sext_ln1116_80_cast_fu_698_p1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_206_p0 <= sext_ln1116_83_cast_reg_1068(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_206_p0 <= sext_ln1116_82_cast_reg_1052(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_206_p0 <= sext_ln1116_82_cast_fu_804_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_206_p0 <= sext_ln1116_81_cast1_fu_760_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_206_p0 <= sext_ln1116_80_cast_fu_698_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_206_p0 <= sext_ln1116_79_cast_reg_1004(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_206_p0 <= sext_ln1116_78_cast_reg_978(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_206_p0 <= sext_ln1116_77_cast_reg_962(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_206_p0 <= sext_ln1116_76_cast_reg_945(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_206_p0 <= sext_ln1116_76_cast_fu_542_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_206_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_206_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_206_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_206_p1 <= ap_const_lv26_3FFFD68(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_206_p1 <= ap_const_lv26_2DE(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_206_p1 <= ap_const_lv26_25E(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_206_p1 <= ap_const_lv25_C5(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_206_p1 <= ap_const_lv26_1CC(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_206_p1 <= ap_const_lv26_12E(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_206_p1 <= ap_const_lv26_103(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_206_p1 <= ap_const_lv26_3FFFC45(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_206_p1 <= ap_const_lv26_2B0(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_206_p1 <= ap_const_lv26_3FFFEF6(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_206_p1 <= ap_const_lv26_3FFFD75(12 - 1 downto 0);
        else 
            grp_fu_206_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_206_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_206_p0) * signed(grp_fu_206_p1))), 26));

    grp_fu_207_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln1116_cast_fu_535_p1, sext_ln1116_cast_reg_940, sext_ln1116_76_cast_reg_945, sext_ln1116_77_cast_reg_962, sext_ln1116_78_cast_reg_978, ap_CS_fsm_state5, sext_ln1116_79_cast_reg_1004, sext_ln1116_81_cast1_reg_1037, sext_ln1116_82_cast_reg_1052, sext_ln1116_83_cast_reg_1068, sext_ln1116_80_cast_fu_698_p1, ap_CS_fsm_state11, sext_ln1116_81_cast_fu_765_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_207_p0 <= sext_ln1116_83_cast_reg_1068(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_207_p0 <= sext_ln1116_82_cast_reg_1052(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_207_p0 <= sext_ln1116_81_cast1_reg_1037(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_207_p0 <= sext_ln1116_81_cast_fu_765_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_207_p0 <= sext_ln1116_80_cast_fu_698_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_207_p0 <= sext_ln1116_79_cast_reg_1004(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_207_p0 <= sext_ln1116_78_cast_reg_978(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_207_p0 <= sext_ln1116_77_cast_reg_962(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_207_p0 <= sext_ln1116_76_cast_reg_945(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_207_p0 <= sext_ln1116_cast_reg_940(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_207_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_207_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_207_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_207_p1 <= ap_const_lv26_308(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_207_p1 <= ap_const_lv26_3FFFC85(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_207_p1 <= ap_const_lv25_1FFFF7B(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_207_p1 <= ap_const_lv26_3FFFEE7(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_207_p1 <= ap_const_lv26_3FFFE87(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_207_p1 <= ap_const_lv26_222(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_207_p1 <= ap_const_lv26_2D5(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_207_p1 <= ap_const_lv26_4A7(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_207_p1 <= ap_const_lv26_22F(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_207_p1 <= ap_const_lv26_2EA(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_207_p1 <= ap_const_lv26_3FFFD16(13 - 1 downto 0);
        else 
            grp_fu_207_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_207_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_207_p0) * signed(grp_fu_207_p1))), 26));

    grp_fu_208_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln1116_cast_fu_535_p1, sext_ln1116_76_cast_fu_542_p1, sext_ln1116_77_cast_fu_548_p1, sext_ln1116_78_cast_fu_559_p1, ap_CS_fsm_state5, sext_ln1116_79_cast_fu_604_p1, sext_ln1116_79_cast_reg_1004, sext_ln1116_82_cast_fu_804_p1, sext_ln1116_83_cast_fu_832_p1, sext_ln1116_83_cast_reg_1068, sext_ln1116_80_cast_fu_698_p1, ap_CS_fsm_state11, sext_ln1116_81_cast_fu_765_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_208_p0 <= sext_ln1116_83_cast_reg_1068(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_208_p0 <= sext_ln1116_83_cast_fu_832_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_208_p0 <= sext_ln1116_82_cast_fu_804_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_208_p0 <= sext_ln1116_81_cast_fu_765_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_208_p0 <= sext_ln1116_80_cast_fu_698_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_208_p0 <= sext_ln1116_79_cast_reg_1004(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_208_p0 <= sext_ln1116_79_cast_fu_604_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_208_p0 <= sext_ln1116_78_cast_fu_559_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_208_p0 <= sext_ln1116_77_cast_fu_548_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_208_p0 <= sext_ln1116_76_cast_fu_542_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_208_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_208_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_208_p1 <= ap_const_lv26_3A1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_208_p1 <= ap_const_lv26_2AC(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_208_p1 <= ap_const_lv26_15C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_208_p1 <= ap_const_lv26_3FFFAB2(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_208_p1 <= ap_const_lv26_3FFFC2F(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_208_p1 <= ap_const_lv26_257(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_208_p1 <= ap_const_lv26_16C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_208_p1 <= ap_const_lv26_3FFFD30(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_208_p1 <= ap_const_lv26_3BE(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_208_p1 <= ap_const_lv26_3FFFC7E(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_208_p1 <= ap_const_lv26_318(12 - 1 downto 0);
        else 
            grp_fu_208_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_208_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_208_p0) * signed(grp_fu_208_p1))), 26));
    grp_fu_477_p4 <= grp_fu_207_p2(25 downto 10);
    grp_fu_487_p4 <= grp_fu_206_p2(25 downto 10);
    grp_fu_497_p4 <= grp_fu_208_p2(25 downto 10);
    grp_fu_519_p2 <= std_logic_vector(unsigned(grp_fu_487_p4) + unsigned(reg_507));
    grp_fu_525_p2 <= std_logic_vector(unsigned(grp_fu_497_p4) + unsigned(reg_511));
        p_cast_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_158_reg_989),15));

        sext_ln1116_76_cast_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_1_V_read),26));

    sext_ln1116_77_cast_fu_548_p0 <= ap_port_reg_data_2_V_read;
        sext_ln1116_77_cast_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_77_cast_fu_548_p0),26));

    sext_ln1116_78_cast_fu_559_p0 <= ap_port_reg_data_3_V_read;
        sext_ln1116_78_cast_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_78_cast_fu_559_p0),26));

        sext_ln1116_79_cast_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_4_V_read),26));

    sext_ln1116_80_cast_fu_698_p0 <= ap_port_reg_data_5_V_read;
        sext_ln1116_80_cast_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_80_cast_fu_698_p0),26));

    sext_ln1116_81_cast1_fu_760_p0 <= ap_port_reg_data_6_V_read;
        sext_ln1116_81_cast1_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_81_cast1_fu_760_p0),25));

    sext_ln1116_81_cast_fu_765_p0 <= ap_port_reg_data_6_V_read;
        sext_ln1116_81_cast_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_81_cast_fu_765_p0),26));

        sext_ln1116_82_cast_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_7_V_read),26));

        sext_ln1116_83_cast_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_8_V_read),26));

        sext_ln1116_cast_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_0_V_read),26));

        sext_ln1118_152_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_46_fu_564_p3),24));

        sext_ln1118_153_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_47_fu_576_p3),24));

        sext_ln1118_154_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_48_fu_722_p3),26));

        sext_ln1118_155_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_49_fu_733_p3),26));

        sext_ln1118_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_638_p3),26));

        sext_ln703_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_351_fu_816_p2),16));

        sext_ln708_9_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_170_fu_790_p4),16));

        sext_ln708_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_168_reg_1042),16));

    shl_ln1118_46_fu_564_p1 <= ap_port_reg_data_3_V_read;
    shl_ln1118_46_fu_564_p3 <= (shl_ln1118_46_fu_564_p1 & ap_const_lv7_0);
    shl_ln1118_47_fu_576_p1 <= ap_port_reg_data_3_V_read;
    shl_ln1118_47_fu_576_p3 <= (shl_ln1118_47_fu_576_p1 & ap_const_lv4_0);
    shl_ln1118_48_fu_722_p3 <= (data_5_V_read_2_reg_1026 & ap_const_lv9_0);
    shl_ln1118_49_fu_733_p3 <= (data_5_V_read_2_reg_1026 & ap_const_lv3_0);
    shl_ln1118_s_fu_638_p3 <= (data_2_V_read_2_reg_956 & ap_const_lv5_0);
    shl_ln_fu_625_p3 <= (data_2_V_read_2_reg_956 & ap_const_lv10_0);
    sub_ln1118_32_fu_649_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_632_p2) - unsigned(sext_ln1118_fu_645_p1));
    sub_ln1118_33_fu_588_p2 <= std_logic_vector(signed(sext_ln1118_152_fu_572_p1) - signed(sext_ln1118_153_fu_584_p1));
    sub_ln1118_34_fu_744_p2 <= std_logic_vector(signed(sext_ln1118_154_fu_729_p1) - signed(sext_ln1118_155_fu_740_p1));
    sub_ln1118_fu_632_p2 <= std_logic_vector(unsigned(ap_const_lv26_0) - unsigned(shl_ln_fu_625_p3));
    trunc_ln708_152_fu_655_p4 <= sub_ln1118_32_fu_649_p2(25 downto 10);
    trunc_ln708_163_fu_750_p4 <= sub_ln1118_34_fu_744_p2(25 downto 10);
    trunc_ln708_168_fu_771_p1 <= grp_fu_206_p2(25 - 1 downto 0);
    trunc_ln708_170_fu_790_p1 <= grp_fu_207_p2(25 - 1 downto 0);
    trunc_ln708_170_fu_790_p4 <= trunc_ln708_170_fu_790_p1(24 downto 10);
end behav;
