// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_HH_
#define _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_17ns_18s_26_1_1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_exp_table1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_invert_table2.h"

namespace ap_rtl {

struct softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;


    // Module declarations
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s);

    ~softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s();

    sc_trace_file* mVcdFile;

    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_exp_table1* exp_table1_U;
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config5_s_invert_table2* invert_table2_U;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U104;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U105;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U106;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<17> > exp_table1_q0;
    sc_signal< sc_lv<10> > exp_table1_address1;
    sc_signal< sc_logic > exp_table1_ce1;
    sc_signal< sc_lv<17> > exp_table1_q1;
    sc_signal< sc_lv<10> > exp_table1_address2;
    sc_signal< sc_logic > exp_table1_ce2;
    sc_signal< sc_lv<17> > exp_table1_q2;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_618;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_623;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_628;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln255_fu_360_p1;
    sc_signal< sc_lv<64> > zext_ln255_1_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln255_2_fu_438_p1;
    sc_signal< sc_lv<64> > zext_ln265_fu_519_p1;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_126_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_126_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_126_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_132_p1;
    sc_signal< sc_lv<16> > select_ln65_fu_132_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_132_p3;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_140_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_140_p2;
    sc_signal< sc_lv<16> > x_max_V_fu_146_p1;
    sc_signal< sc_lv<16> > sext_ln703_fu_154_p0;
    sc_signal< sc_lv<16> > x_max_V_fu_146_p3;
    sc_signal< sc_lv<17> > sext_ln703_fu_154_p1;
    sc_signal< sc_lv<17> > sext_ln703_1_fu_158_p1;
    sc_signal< sc_lv<17> > sub_ln1193_fu_162_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_176_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_168_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_184_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_202_p2;
    sc_signal< sc_lv<16> > sext_ln703_2_fu_214_p0;
    sc_signal< sc_lv<17> > sext_ln703_2_fu_214_p1;
    sc_signal< sc_lv<17> > sub_ln1193_1_fu_218_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_232_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_224_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_240_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_258_p2;
    sc_signal< sc_lv<16> > sext_ln703_3_fu_270_p0;
    sc_signal< sc_lv<17> > sext_ln703_3_fu_270_p1;
    sc_signal< sc_lv<17> > sub_ln1193_2_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_288_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_280_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_296_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_314_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_196_p2;
    sc_signal< sc_lv<10> > tmp_fu_326_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_190_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_208_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_336_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_344_p3;
    sc_signal< sc_lv<10> > y_V_fu_352_p3;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_252_p2;
    sc_signal< sc_lv<10> > tmp_2_fu_365_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_246_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_264_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_375_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_383_p3;
    sc_signal< sc_lv<10> > y_V_1_fu_391_p3;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_308_p2;
    sc_signal< sc_lv<10> > tmp_4_fu_404_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_302_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_320_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_414_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_422_p3;
    sc_signal< sc_lv<10> > y_V_2_fu_430_p3;
    sc_signal< sc_lv<18> > zext_ln203_1_fu_447_p1;
    sc_signal< sc_lv<18> > zext_ln203_fu_443_p1;
    sc_signal< sc_lv<18> > p_Val2_6_fu_455_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_467_p3;
    sc_signal< sc_lv<17> > add_ln746_fu_461_p2;
    sc_signal< sc_lv<17> > p_Val2_7_fu_475_p3;
    sc_signal< sc_lv<18> > zext_ln746_fu_483_p1;
    sc_signal< sc_lv<18> > zext_ln203_2_fu_451_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_487_p2;
    sc_signal< sc_lv<1> > p_Result_6_fu_493_p3;
    sc_signal< sc_lv<10> > tmp_6_fu_501_p4;
    sc_signal< sc_lv<10> > y_V_3_fu_511_p3;
    sc_signal< sc_lv<26> > mul_ln1118_fu_582_p2;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_589_p2;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_596_p2;
    sc_signal< sc_lv<17> > mul_ln1118_fu_582_p0;
    sc_signal< sc_lv<18> > mul_ln1118_fu_582_p1;
    sc_signal< sc_lv<26> > sext_ln1116_fu_524_p1;
    sc_signal< sc_lv<17> > mul_ln1118_1_fu_589_p0;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_589_p1;
    sc_signal< sc_lv<17> > mul_ln1118_2_fu_596_p0;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_596_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_589_p00;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_596_p00;
    sc_signal< sc_lv<26> > mul_ln1118_fu_582_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<17> ap_const_lv17_1FFFF;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln746_fu_461_p2();
    void thread_and_ln786_1_fu_246_p2();
    void thread_and_ln786_2_fu_302_p2();
    void thread_and_ln786_fu_190_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_exp_table1_address0();
    void thread_exp_table1_address1();
    void thread_exp_table1_address2();
    void thread_exp_table1_ce0();
    void thread_exp_table1_ce1();
    void thread_exp_table1_ce2();
    void thread_icmp_ln1496_1_fu_140_p1();
    void thread_icmp_ln1496_1_fu_140_p2();
    void thread_icmp_ln1496_fu_126_p0();
    void thread_icmp_ln1496_fu_126_p1();
    void thread_icmp_ln1496_fu_126_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_mul_ln1118_1_fu_589_p0();
    void thread_mul_ln1118_1_fu_589_p00();
    void thread_mul_ln1118_1_fu_589_p1();
    void thread_mul_ln1118_2_fu_596_p0();
    void thread_mul_ln1118_2_fu_596_p00();
    void thread_mul_ln1118_2_fu_596_p1();
    void thread_mul_ln1118_fu_582_p0();
    void thread_mul_ln1118_fu_582_p00();
    void thread_mul_ln1118_fu_582_p1();
    void thread_or_ln340_1_fu_264_p2();
    void thread_or_ln340_2_fu_320_p2();
    void thread_or_ln340_fu_208_p2();
    void thread_p_Result_6_fu_493_p3();
    void thread_p_Result_s_fu_467_p3();
    void thread_p_Val2_6_fu_455_p2();
    void thread_p_Val2_7_fu_475_p3();
    void thread_p_Val2_9_fu_487_p2();
    void thread_select_ln340_2_fu_375_p3();
    void thread_select_ln340_4_fu_414_p3();
    void thread_select_ln340_fu_336_p3();
    void thread_select_ln388_1_fu_383_p3();
    void thread_select_ln388_2_fu_422_p3();
    void thread_select_ln388_fu_344_p3();
    void thread_select_ln65_fu_132_p1();
    void thread_select_ln65_fu_132_p2();
    void thread_select_ln65_fu_132_p3();
    void thread_sext_ln1116_fu_524_p1();
    void thread_sext_ln703_1_fu_158_p1();
    void thread_sext_ln703_2_fu_214_p0();
    void thread_sext_ln703_2_fu_214_p1();
    void thread_sext_ln703_3_fu_270_p0();
    void thread_sext_ln703_3_fu_270_p1();
    void thread_sext_ln703_fu_154_p0();
    void thread_sext_ln703_fu_154_p1();
    void thread_sub_ln1193_1_fu_218_p2();
    void thread_sub_ln1193_2_fu_274_p2();
    void thread_sub_ln1193_fu_162_p2();
    void thread_tmp_1_fu_168_p3();
    void thread_tmp_2_fu_365_p4();
    void thread_tmp_3_fu_176_p3();
    void thread_tmp_4_fu_404_p4();
    void thread_tmp_5_fu_224_p3();
    void thread_tmp_6_fu_501_p4();
    void thread_tmp_7_fu_232_p3();
    void thread_tmp_8_fu_280_p3();
    void thread_tmp_9_fu_288_p3();
    void thread_tmp_fu_326_p4();
    void thread_x_max_V_fu_146_p1();
    void thread_x_max_V_fu_146_p3();
    void thread_xor_ln340_1_fu_258_p2();
    void thread_xor_ln340_2_fu_314_p2();
    void thread_xor_ln340_3_fu_196_p2();
    void thread_xor_ln340_4_fu_252_p2();
    void thread_xor_ln340_5_fu_308_p2();
    void thread_xor_ln340_fu_202_p2();
    void thread_xor_ln786_1_fu_240_p2();
    void thread_xor_ln786_2_fu_296_p2();
    void thread_xor_ln786_fu_184_p2();
    void thread_y_V_1_fu_391_p3();
    void thread_y_V_2_fu_430_p3();
    void thread_y_V_3_fu_511_p3();
    void thread_y_V_fu_352_p3();
    void thread_zext_ln203_1_fu_447_p1();
    void thread_zext_ln203_2_fu_451_p1();
    void thread_zext_ln203_fu_443_p1();
    void thread_zext_ln255_1_fu_399_p1();
    void thread_zext_ln255_2_fu_438_p1();
    void thread_zext_ln255_fu_360_p1();
    void thread_zext_ln265_fu_519_p1();
    void thread_zext_ln746_fu_483_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
