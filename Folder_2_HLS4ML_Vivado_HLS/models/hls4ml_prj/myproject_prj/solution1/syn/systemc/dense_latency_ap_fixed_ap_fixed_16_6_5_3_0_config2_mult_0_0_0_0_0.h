// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_HH_
#define _dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_5_V_read;
    sc_in< sc_lv<16> > data_6_V_read;
    sc_in< sc_lv<16> > data_7_V_read;
    sc_in< sc_lv<16> > data_8_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0);

    ~dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > grp_fu_185_p4;
    sc_signal< sc_lv<16> > reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > grp_fu_175_p4;
    sc_signal< sc_lv<16> > trunc_ln_reg_345;
    sc_signal< sc_lv<16> > trunc_ln708_s_reg_350;
    sc_signal< sc_lv<16> > trunc_ln708_79_reg_355;
    sc_signal< sc_lv<16> > acc_2_V_fu_227_p2;
    sc_signal< sc_lv<16> > acc_2_V_reg_360;
    sc_signal< sc_lv<16> > ap_port_reg_data_3_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_5_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_6_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_7_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_8_V_read;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > grp_fu_106_p0;
    sc_signal< sc_lv<16> > grp_fu_106_p1;
    sc_signal< sc_lv<26> > sext_ln1116_75_cast_fu_199_p1;
    sc_signal< sc_lv<26> > sext_ln1116_76_cast_fu_205_p1;
    sc_signal< sc_lv<26> > sext_ln1116_79_cast_fu_215_p1;
    sc_signal< sc_lv<26> > sext_ln1116_80_cast_fu_233_p1;
    sc_signal< sc_lv<13> > grp_fu_107_p0;
    sc_signal< sc_lv<16> > grp_fu_107_p1;
    sc_signal< sc_lv<26> > sext_ln1116_78_cast_fu_210_p1;
    sc_signal< sc_lv<26> > sext_ln1116_81_cast_fu_238_p1;
    sc_signal< sc_lv<26> > grp_fu_106_p2;
    sc_signal< sc_lv<26> > grp_fu_107_p2;
    sc_signal< sc_lv<16> > add_ln703_84_fu_221_p2;
    sc_signal< sc_lv<16> > sext_ln1116_81_cast_fu_238_p0;
    sc_signal< sc_lv<16> > trunc_ln1118_fu_243_p0;
    sc_signal< sc_lv<15> > trunc_ln1118_fu_243_p1;
    sc_signal< sc_lv<16> > shl_ln1118_s_fu_255_p1;
    sc_signal< sc_lv<20> > shl_ln1118_s_fu_255_p3;
    sc_signal< sc_lv<26> > sext_ln1118_fu_263_p1;
    sc_signal< sc_lv<26> > shl_ln_fu_247_p3;
    sc_signal< sc_lv<26> > add_ln1118_fu_267_p2;
    sc_signal< sc_lv<16> > trunc_ln708_84_fu_273_p4;
    sc_signal< sc_lv<16> > add_ln703_fu_283_p2;
    sc_signal< sc_lv<16> > add_ln703_82_fu_298_p2;
    sc_signal< sc_lv<16> > add_ln703_81_fu_294_p2;
    sc_signal< sc_lv<16> > add_ln703_86_fu_310_p2;
    sc_signal< sc_lv<16> > add_ln703_80_fu_289_p2;
    sc_signal< sc_lv<16> > acc_1_V_fu_304_p2;
    sc_signal< sc_lv<16> > acc_3_V_fu_316_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<26> ap_const_lv26_3FFF8C4;
    static const sc_lv<26> ap_const_lv26_3FFFAE4;
    static const sc_lv<26> ap_const_lv26_618;
    static const sc_lv<26> ap_const_lv26_5D0;
    static const sc_lv<26> ap_const_lv26_6AE;
    static const sc_lv<26> ap_const_lv26_3FFFBDF;
    static const sc_lv<26> ap_const_lv26_3FFFA5F;
    static const sc_lv<26> ap_const_lv26_3FFFA99;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<16> ap_const_lv16_FFFC;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_47;
    static const sc_lv<16> ap_const_lv16_FC9C;
    static const sc_lv<16> ap_const_lv16_FFF9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_1_V_fu_304_p2();
    void thread_acc_2_V_fu_227_p2();
    void thread_acc_3_V_fu_316_p2();
    void thread_add_ln1118_fu_267_p2();
    void thread_add_ln703_80_fu_289_p2();
    void thread_add_ln703_81_fu_294_p2();
    void thread_add_ln703_82_fu_298_p2();
    void thread_add_ln703_84_fu_221_p2();
    void thread_add_ln703_86_fu_310_p2();
    void thread_add_ln703_fu_283_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_grp_fu_106_p0();
    void thread_grp_fu_106_p1();
    void thread_grp_fu_106_p2();
    void thread_grp_fu_107_p0();
    void thread_grp_fu_107_p1();
    void thread_grp_fu_107_p2();
    void thread_grp_fu_175_p4();
    void thread_grp_fu_185_p4();
    void thread_sext_ln1116_75_cast_fu_199_p1();
    void thread_sext_ln1116_76_cast_fu_205_p1();
    void thread_sext_ln1116_78_cast_fu_210_p1();
    void thread_sext_ln1116_79_cast_fu_215_p1();
    void thread_sext_ln1116_80_cast_fu_233_p1();
    void thread_sext_ln1116_81_cast_fu_238_p0();
    void thread_sext_ln1116_81_cast_fu_238_p1();
    void thread_sext_ln1118_fu_263_p1();
    void thread_shl_ln1118_s_fu_255_p1();
    void thread_shl_ln1118_s_fu_255_p3();
    void thread_shl_ln_fu_247_p3();
    void thread_trunc_ln1118_fu_243_p0();
    void thread_trunc_ln1118_fu_243_p1();
    void thread_trunc_ln708_84_fu_273_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
