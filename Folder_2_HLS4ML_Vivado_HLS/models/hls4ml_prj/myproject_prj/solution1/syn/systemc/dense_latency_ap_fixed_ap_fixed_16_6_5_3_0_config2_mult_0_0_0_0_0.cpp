// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_ST_fsm_state1 = "1";
const sc_lv<4> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_ST_fsm_state2 = "10";
const sc_lv<4> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_ST_fsm_state3 = "100";
const sc_lv<4> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_ST_fsm_state4 = "1000";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_1 = "1";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_2 = "10";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_3 = "11";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_3FFF8C4 = "11111111111111100011000100";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_3FFFAE4 = "11111111111111101011100100";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_618 = "11000011000";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_5D0 = "10111010000";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_6AE = "11010101110";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_3FFFBDF = "11111111111111101111011111";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_3FFFA5F = "11111111111111101001011111";
const sc_lv<26> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv26_3FFFA99 = "11111111111111101010011001";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_A = "1010";
const sc_lv<32> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv32_19 = "11001";
const sc_lv<16> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv16_FFFC = "1111111111111100";
const sc_lv<11> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv11_0 = "00000000000";
const sc_lv<4> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv4_0 = "0000";
const sc_lv<16> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv16_47 = "1000111";
const sc_lv<16> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv16_FC9C = "1111110010011100";
const sc_lv<16> dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_lv16_FFF9 = "1111111111111001";
const bool dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::ap_const_boolean_1 = true;

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_1_V_fu_304_p2);
    sensitive << ( add_ln703_82_fu_298_p2 );
    sensitive << ( add_ln703_81_fu_294_p2 );

    SC_METHOD(thread_acc_2_V_fu_227_p2);
    sensitive << ( reg_195 );
    sensitive << ( add_ln703_84_fu_221_p2 );

    SC_METHOD(thread_acc_3_V_fu_316_p2);
    sensitive << ( reg_195 );
    sensitive << ( add_ln703_86_fu_310_p2 );

    SC_METHOD(thread_add_ln1118_fu_267_p2);
    sensitive << ( sext_ln1118_fu_263_p1 );
    sensitive << ( shl_ln_fu_247_p3 );

    SC_METHOD(thread_add_ln703_80_fu_289_p2);
    sensitive << ( trunc_ln_reg_345 );
    sensitive << ( add_ln703_fu_283_p2 );

    SC_METHOD(thread_add_ln703_81_fu_294_p2);
    sensitive << ( trunc_ln708_s_reg_350 );
    sensitive << ( trunc_ln708_79_reg_355 );

    SC_METHOD(thread_add_ln703_82_fu_298_p2);
    sensitive << ( grp_fu_175_p4 );

    SC_METHOD(thread_add_ln703_84_fu_221_p2);
    sensitive << ( grp_fu_175_p4 );

    SC_METHOD(thread_add_ln703_86_fu_310_p2);
    sensitive << ( grp_fu_185_p4 );

    SC_METHOD(thread_add_ln703_fu_283_p2);
    sensitive << ( trunc_ln708_84_fu_273_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( add_ln703_80_fu_289_p2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_1_V_fu_304_p2 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_ce );
    sensitive << ( acc_2_V_reg_360 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_3_V_fu_316_p2 );

    SC_METHOD(thread_grp_fu_106_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_106_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_75_cast_fu_199_p1 );
    sensitive << ( sext_ln1116_76_cast_fu_205_p1 );
    sensitive << ( sext_ln1116_79_cast_fu_215_p1 );
    sensitive << ( sext_ln1116_80_cast_fu_233_p1 );

    SC_METHOD(thread_grp_fu_106_p2);
    sensitive << ( grp_fu_106_p0 );
    sensitive << ( grp_fu_106_p1 );

    SC_METHOD(thread_grp_fu_107_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_107_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_75_cast_fu_199_p1 );
    sensitive << ( sext_ln1116_79_cast_fu_215_p1 );
    sensitive << ( sext_ln1116_78_cast_fu_210_p1 );
    sensitive << ( sext_ln1116_81_cast_fu_238_p1 );

    SC_METHOD(thread_grp_fu_107_p2);
    sensitive << ( grp_fu_107_p0 );
    sensitive << ( grp_fu_107_p1 );

    SC_METHOD(thread_grp_fu_175_p4);
    sensitive << ( grp_fu_106_p2 );

    SC_METHOD(thread_grp_fu_185_p4);
    sensitive << ( grp_fu_107_p2 );

    SC_METHOD(thread_sext_ln1116_75_cast_fu_199_p1);
    sensitive << ( data_2_V_read );

    SC_METHOD(thread_sext_ln1116_76_cast_fu_205_p1);
    sensitive << ( ap_port_reg_data_3_V_read );

    SC_METHOD(thread_sext_ln1116_78_cast_fu_210_p1);
    sensitive << ( ap_port_reg_data_5_V_read );

    SC_METHOD(thread_sext_ln1116_79_cast_fu_215_p1);
    sensitive << ( ap_port_reg_data_6_V_read );

    SC_METHOD(thread_sext_ln1116_80_cast_fu_233_p1);
    sensitive << ( ap_port_reg_data_7_V_read );

    SC_METHOD(thread_sext_ln1116_81_cast_fu_238_p0);
    sensitive << ( ap_port_reg_data_8_V_read );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln1116_81_cast_fu_238_p1);
    sensitive << ( sext_ln1116_81_cast_fu_238_p0 );

    SC_METHOD(thread_sext_ln1118_fu_263_p1);
    sensitive << ( shl_ln1118_s_fu_255_p3 );

    SC_METHOD(thread_shl_ln1118_s_fu_255_p1);
    sensitive << ( ap_port_reg_data_8_V_read );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_shl_ln1118_s_fu_255_p3);
    sensitive << ( shl_ln1118_s_fu_255_p1 );

    SC_METHOD(thread_shl_ln_fu_247_p3);
    sensitive << ( trunc_ln1118_fu_243_p1 );

    SC_METHOD(thread_trunc_ln1118_fu_243_p0);
    sensitive << ( ap_port_reg_data_8_V_read );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_trunc_ln1118_fu_243_p1);
    sensitive << ( trunc_ln1118_fu_243_p0 );

    SC_METHOD(thread_trunc_ln708_84_fu_273_p4);
    sensitive << ( add_ln1118_fu_267_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_ce );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_2_V_read, "(port)data_2_V_read");
    sc_trace(mVcdFile, data_3_V_read, "(port)data_3_V_read");
    sc_trace(mVcdFile, data_5_V_read, "(port)data_5_V_read");
    sc_trace(mVcdFile, data_6_V_read, "(port)data_6_V_read");
    sc_trace(mVcdFile, data_7_V_read, "(port)data_7_V_read");
    sc_trace(mVcdFile, data_8_V_read, "(port)data_8_V_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_185_p4, "grp_fu_185_p4");
    sc_trace(mVcdFile, reg_195, "reg_195");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_175_p4, "grp_fu_175_p4");
    sc_trace(mVcdFile, trunc_ln_reg_345, "trunc_ln_reg_345");
    sc_trace(mVcdFile, trunc_ln708_s_reg_350, "trunc_ln708_s_reg_350");
    sc_trace(mVcdFile, trunc_ln708_79_reg_355, "trunc_ln708_79_reg_355");
    sc_trace(mVcdFile, acc_2_V_fu_227_p2, "acc_2_V_fu_227_p2");
    sc_trace(mVcdFile, acc_2_V_reg_360, "acc_2_V_reg_360");
    sc_trace(mVcdFile, ap_port_reg_data_3_V_read, "ap_port_reg_data_3_V_read");
    sc_trace(mVcdFile, ap_port_reg_data_5_V_read, "ap_port_reg_data_5_V_read");
    sc_trace(mVcdFile, ap_port_reg_data_6_V_read, "ap_port_reg_data_6_V_read");
    sc_trace(mVcdFile, ap_port_reg_data_7_V_read, "ap_port_reg_data_7_V_read");
    sc_trace(mVcdFile, ap_port_reg_data_8_V_read, "ap_port_reg_data_8_V_read");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_106_p0, "grp_fu_106_p0");
    sc_trace(mVcdFile, grp_fu_106_p1, "grp_fu_106_p1");
    sc_trace(mVcdFile, sext_ln1116_75_cast_fu_199_p1, "sext_ln1116_75_cast_fu_199_p1");
    sc_trace(mVcdFile, sext_ln1116_76_cast_fu_205_p1, "sext_ln1116_76_cast_fu_205_p1");
    sc_trace(mVcdFile, sext_ln1116_79_cast_fu_215_p1, "sext_ln1116_79_cast_fu_215_p1");
    sc_trace(mVcdFile, sext_ln1116_80_cast_fu_233_p1, "sext_ln1116_80_cast_fu_233_p1");
    sc_trace(mVcdFile, grp_fu_107_p0, "grp_fu_107_p0");
    sc_trace(mVcdFile, grp_fu_107_p1, "grp_fu_107_p1");
    sc_trace(mVcdFile, sext_ln1116_78_cast_fu_210_p1, "sext_ln1116_78_cast_fu_210_p1");
    sc_trace(mVcdFile, sext_ln1116_81_cast_fu_238_p1, "sext_ln1116_81_cast_fu_238_p1");
    sc_trace(mVcdFile, grp_fu_106_p2, "grp_fu_106_p2");
    sc_trace(mVcdFile, grp_fu_107_p2, "grp_fu_107_p2");
    sc_trace(mVcdFile, add_ln703_84_fu_221_p2, "add_ln703_84_fu_221_p2");
    sc_trace(mVcdFile, sext_ln1116_81_cast_fu_238_p0, "sext_ln1116_81_cast_fu_238_p0");
    sc_trace(mVcdFile, trunc_ln1118_fu_243_p0, "trunc_ln1118_fu_243_p0");
    sc_trace(mVcdFile, trunc_ln1118_fu_243_p1, "trunc_ln1118_fu_243_p1");
    sc_trace(mVcdFile, shl_ln1118_s_fu_255_p1, "shl_ln1118_s_fu_255_p1");
    sc_trace(mVcdFile, shl_ln1118_s_fu_255_p3, "shl_ln1118_s_fu_255_p3");
    sc_trace(mVcdFile, sext_ln1118_fu_263_p1, "sext_ln1118_fu_263_p1");
    sc_trace(mVcdFile, shl_ln_fu_247_p3, "shl_ln_fu_247_p3");
    sc_trace(mVcdFile, add_ln1118_fu_267_p2, "add_ln1118_fu_267_p2");
    sc_trace(mVcdFile, trunc_ln708_84_fu_273_p4, "trunc_ln708_84_fu_273_p4");
    sc_trace(mVcdFile, add_ln703_fu_283_p2, "add_ln703_fu_283_p2");
    sc_trace(mVcdFile, add_ln703_82_fu_298_p2, "add_ln703_82_fu_298_p2");
    sc_trace(mVcdFile, add_ln703_81_fu_294_p2, "add_ln703_81_fu_294_p2");
    sc_trace(mVcdFile, add_ln703_86_fu_310_p2, "add_ln703_86_fu_310_p2");
    sc_trace(mVcdFile, add_ln703_80_fu_289_p2, "add_ln703_80_fu_289_p2");
    sc_trace(mVcdFile, acc_1_V_fu_304_p2, "acc_1_V_fu_304_p2");
    sc_trace(mVcdFile, acc_3_V_fu_316_p2, "acc_3_V_fu_316_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::~dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        acc_2_V_reg_360 = acc_2_V_fu_227_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ap_port_reg_data_3_V_read = data_3_V_read.read();
        ap_port_reg_data_5_V_read = data_5_V_read.read();
        ap_port_reg_data_6_V_read = data_6_V_read.read();
        ap_port_reg_data_7_V_read = data_7_V_read.read();
        ap_port_reg_data_8_V_read = data_8_V_read.read();
        trunc_ln708_s_reg_350 = grp_fu_107_p2.read().range(25, 10);
        trunc_ln_reg_345 = grp_fu_106_p2.read().range(25, 10);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())))) {
        reg_195 = grp_fu_107_p2.read().range(25, 10);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        trunc_ln708_79_reg_355 = grp_fu_106_p2.read().range(25, 10);
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_acc_1_V_fu_304_p2() {
    acc_1_V_fu_304_p2 = (!add_ln703_82_fu_298_p2.read().is_01() || !add_ln703_81_fu_294_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_82_fu_298_p2.read()) + sc_biguint<16>(add_ln703_81_fu_294_p2.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_acc_2_V_fu_227_p2() {
    acc_2_V_fu_227_p2 = (!add_ln703_84_fu_221_p2.read().is_01() || !reg_195.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_84_fu_221_p2.read()) + sc_biguint<16>(reg_195.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_acc_3_V_fu_316_p2() {
    acc_3_V_fu_316_p2 = (!add_ln703_86_fu_310_p2.read().is_01() || !reg_195.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_86_fu_310_p2.read()) + sc_biguint<16>(reg_195.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln1118_fu_267_p2() {
    add_ln1118_fu_267_p2 = (!sext_ln1118_fu_263_p1.read().is_01() || !shl_ln_fu_247_p3.read().is_01())? sc_lv<26>(): (sc_bigint<26>(sext_ln1118_fu_263_p1.read()) + sc_biguint<26>(shl_ln_fu_247_p3.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_80_fu_289_p2() {
    add_ln703_80_fu_289_p2 = (!add_ln703_fu_283_p2.read().is_01() || !trunc_ln_reg_345.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_fu_283_p2.read()) + sc_biguint<16>(trunc_ln_reg_345.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_81_fu_294_p2() {
    add_ln703_81_fu_294_p2 = (!trunc_ln708_s_reg_350.read().is_01() || !trunc_ln708_79_reg_355.read().is_01())? sc_lv<16>(): (sc_biguint<16>(trunc_ln708_s_reg_350.read()) + sc_biguint<16>(trunc_ln708_79_reg_355.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_82_fu_298_p2() {
    add_ln703_82_fu_298_p2 = (!ap_const_lv16_FC9C.is_01() || !grp_fu_175_p4.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_FC9C) + sc_biguint<16>(grp_fu_175_p4.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_84_fu_221_p2() {
    add_ln703_84_fu_221_p2 = (!ap_const_lv16_FFFC.is_01() || !grp_fu_175_p4.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_FFFC) + sc_biguint<16>(grp_fu_175_p4.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_86_fu_310_p2() {
    add_ln703_86_fu_310_p2 = (!ap_const_lv16_FFF9.is_01() || !grp_fu_185_p4.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_FFF9) + sc_biguint<16>(grp_fu_185_p4.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_add_ln703_fu_283_p2() {
    add_ln703_fu_283_p2 = (!ap_const_lv16_47.is_01() || !trunc_ln708_84_fu_273_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_47) + sc_biguint<16>(trunc_ln708_84_fu_273_p4.read()));
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_return_0() {
    ap_return_0 = add_ln703_80_fu_289_p2.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_return_1() {
    ap_return_1 = acc_1_V_fu_304_p2.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_return_2() {
    ap_return_2 = acc_2_V_reg_360.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_return_3() {
    ap_return_3 = acc_3_V_fu_316_p2.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_106_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_106_p0 =  (sc_lv<13>) (ap_const_lv26_5D0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_106_p0 =  (sc_lv<13>) (ap_const_lv26_618);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_106_p0 =  (sc_lv<13>) (ap_const_lv26_3FFFAE4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_106_p0 =  (sc_lv<13>) (ap_const_lv26_3FFF8C4);
    } else {
        grp_fu_106_p0 = "XXXXXXXXXXXXX";
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_106_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_106_p1 =  (sc_lv<16>) (sext_ln1116_80_cast_fu_233_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_106_p1 =  (sc_lv<16>) (sext_ln1116_79_cast_fu_215_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_106_p1 =  (sc_lv<16>) (sext_ln1116_76_cast_fu_205_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_106_p1 =  (sc_lv<16>) (sext_ln1116_75_cast_fu_199_p1.read());
    } else {
        grp_fu_106_p1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_106_p2() {
    grp_fu_106_p2 = (!grp_fu_106_p0.read().is_01() || !grp_fu_106_p1.read().is_01())? sc_lv<26>(): sc_bigint<13>(grp_fu_106_p0.read()) * sc_bigint<16>(grp_fu_106_p1.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_107_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_107_p0 =  (sc_lv<13>) (ap_const_lv26_3FFFA99);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_107_p0 =  (sc_lv<13>) (ap_const_lv26_3FFFA5F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_107_p0 =  (sc_lv<13>) (ap_const_lv26_3FFFBDF);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_107_p0 =  (sc_lv<13>) (ap_const_lv26_6AE);
    } else {
        grp_fu_107_p0 = "XXXXXXXXXXXXX";
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_107_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_107_p1 =  (sc_lv<16>) (sext_ln1116_81_cast_fu_238_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_107_p1 =  (sc_lv<16>) (sext_ln1116_79_cast_fu_215_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_107_p1 =  (sc_lv<16>) (sext_ln1116_78_cast_fu_210_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_107_p1 =  (sc_lv<16>) (sext_ln1116_75_cast_fu_199_p1.read());
    } else {
        grp_fu_107_p1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_107_p2() {
    grp_fu_107_p2 = (!grp_fu_107_p0.read().is_01() || !grp_fu_107_p1.read().is_01())? sc_lv<26>(): sc_bigint<13>(grp_fu_107_p0.read()) * sc_bigint<16>(grp_fu_107_p1.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_175_p4() {
    grp_fu_175_p4 = grp_fu_106_p2.read().range(25, 10);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_grp_fu_185_p4() {
    grp_fu_185_p4 = grp_fu_107_p2.read().range(25, 10);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_75_cast_fu_199_p1() {
    sext_ln1116_75_cast_fu_199_p1 = esl_sext<26,16>(data_2_V_read.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_76_cast_fu_205_p1() {
    sext_ln1116_76_cast_fu_205_p1 = esl_sext<26,16>(ap_port_reg_data_3_V_read.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_78_cast_fu_210_p1() {
    sext_ln1116_78_cast_fu_210_p1 = esl_sext<26,16>(ap_port_reg_data_5_V_read.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_79_cast_fu_215_p1() {
    sext_ln1116_79_cast_fu_215_p1 = esl_sext<26,16>(ap_port_reg_data_6_V_read.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_80_cast_fu_233_p1() {
    sext_ln1116_80_cast_fu_233_p1 = esl_sext<26,16>(ap_port_reg_data_7_V_read.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_81_cast_fu_238_p0() {
    sext_ln1116_81_cast_fu_238_p0 = ap_port_reg_data_8_V_read.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1116_81_cast_fu_238_p1() {
    sext_ln1116_81_cast_fu_238_p1 = esl_sext<26,16>(sext_ln1116_81_cast_fu_238_p0.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_sext_ln1118_fu_263_p1() {
    sext_ln1118_fu_263_p1 = esl_sext<26,20>(shl_ln1118_s_fu_255_p3.read());
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_shl_ln1118_s_fu_255_p1() {
    shl_ln1118_s_fu_255_p1 = ap_port_reg_data_8_V_read.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_shl_ln1118_s_fu_255_p3() {
    shl_ln1118_s_fu_255_p3 = esl_concat<16,4>(shl_ln1118_s_fu_255_p1.read(), ap_const_lv4_0);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_shl_ln_fu_247_p3() {
    shl_ln_fu_247_p3 = esl_concat<15,11>(trunc_ln1118_fu_243_p1.read(), ap_const_lv11_0);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_trunc_ln1118_fu_243_p0() {
    trunc_ln1118_fu_243_p0 = ap_port_reg_data_8_V_read.read();
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_trunc_ln1118_fu_243_p1() {
    trunc_ln1118_fu_243_p1 = trunc_ln1118_fu_243_p0.read().range(15-1, 0);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_trunc_ln708_84_fu_273_p4() {
    trunc_ln708_84_fu_273_p4 = add_ln1118_fu_267_p2.read().range(25, 10);
}

void dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

