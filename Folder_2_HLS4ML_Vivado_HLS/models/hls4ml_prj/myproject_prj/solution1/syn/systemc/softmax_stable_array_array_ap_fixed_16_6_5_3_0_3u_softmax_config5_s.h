// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_HH_
#define _softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_exp_table1.h"
#include "softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_invert_tabkb.h"

namespace ap_rtl {

struct softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_TDATA;
    sc_out< sc_logic > res_V_data_0_V_TVALID;
    sc_in< sc_logic > res_V_data_0_V_TREADY;
    sc_out< sc_lv<16> > res_V_data_1_V_TDATA;
    sc_out< sc_logic > res_V_data_1_V_TVALID;
    sc_in< sc_logic > res_V_data_1_V_TREADY;
    sc_out< sc_lv<16> > res_V_data_2_V_TDATA;
    sc_out< sc_logic > res_V_data_2_V_TVALID;
    sc_in< sc_logic > res_V_data_2_V_TREADY;
    sc_out< sc_logic > data_V_data_0_V_blk_n;
    sc_out< sc_logic > data_V_data_1_V_blk_n;
    sc_out< sc_logic > data_V_data_2_V_blk_n;
    sc_out< sc_logic > res_V_data_0_V_TDATA_blk_n;
    sc_out< sc_logic > res_V_data_1_V_TDATA_blk_n;
    sc_out< sc_logic > res_V_data_2_V_TDATA_blk_n;


    // Module declarations
    softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s);

    ~softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s();

    sc_trace_file* mVcdFile;

    softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_exp_table1* exp_table1_U;
    softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_invert_tabkb* invert_table2_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<17> > exp_table1_q0;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_logic > io_acc_block_signal_op8;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > y_V_1_fu_496_p3;
    sc_signal< sc_lv<10> > y_V_1_reg_689;
    sc_signal< sc_lv<10> > y_V_2_fu_530_p3;
    sc_signal< sc_lv<10> > y_V_2_reg_694;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_699;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_710;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_721;
    sc_signal< sc_lv<26> > sext_ln241_fu_667_p1;
    sc_signal< sc_lv<26> > sext_ln241_reg_731;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_736;
    sc_signal< sc_lv<16> > tmp_data_1_V_reg_741;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln225_fu_465_p1;
    sc_signal< sc_lv<64> > zext_ln225_1_fu_538_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln225_2_fu_542_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln235_fu_662_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<17> > grp_fu_191_p0;
    sc_signal< sc_lv<26> > zext_ln1118_fu_672_p1;
    sc_signal< sc_lv<26> > zext_ln1118_1_fu_676_p1;
    sc_signal< sc_lv<26> > zext_ln1118_2_fu_680_p1;
    sc_signal< sc_lv<18> > grp_fu_191_p1;
    sc_signal< sc_lv<26> > grp_fu_191_p2;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_231_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_231_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_231_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_237_p1;
    sc_signal< sc_lv<16> > select_ln65_fu_237_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_237_p3;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_245_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_245_p2;
    sc_signal< sc_lv<16> > x_max_V_fu_251_p1;
    sc_signal< sc_lv<16> > sext_ln703_fu_259_p0;
    sc_signal< sc_lv<16> > x_max_V_fu_251_p3;
    sc_signal< sc_lv<17> > sext_ln703_fu_259_p1;
    sc_signal< sc_lv<17> > sext_ln703_1_fu_263_p1;
    sc_signal< sc_lv<17> > sub_ln1193_fu_267_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_281_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_273_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_289_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_307_p2;
    sc_signal< sc_lv<16> > sext_ln703_2_fu_319_p0;
    sc_signal< sc_lv<17> > sext_ln703_2_fu_319_p1;
    sc_signal< sc_lv<17> > sub_ln1193_1_fu_323_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_337_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_329_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_345_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_363_p2;
    sc_signal< sc_lv<16> > sext_ln703_3_fu_375_p0;
    sc_signal< sc_lv<17> > sext_ln703_3_fu_375_p1;
    sc_signal< sc_lv<17> > sub_ln1193_2_fu_379_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_393_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_385_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_401_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_419_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_301_p2;
    sc_signal< sc_lv<10> > tmp_fu_431_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_295_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_313_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_441_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_449_p3;
    sc_signal< sc_lv<10> > y_V_fu_457_p3;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_357_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_470_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_351_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_369_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_480_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_488_p3;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_413_p2;
    sc_signal< sc_lv<10> > tmp_8_fu_504_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_407_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_425_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_514_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_522_p3;
    sc_signal< sc_lv<18> > zext_ln36_2_fu_553_p1;
    sc_signal< sc_lv<18> > zext_ln36_1_fu_550_p1;
    sc_signal< sc_lv<18> > ret_V_fu_556_p2;
    sc_signal< sc_lv<19> > rhs_V_fu_566_p1;
    sc_signal< sc_lv<19> > lhs_V_fu_562_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_570_p2;
    sc_signal< sc_lv<18> > zext_ln36_fu_546_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_584_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_590_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_576_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_598_p2;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_616_p2;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_610_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_628_p4;
    sc_signal< sc_lv<1> > underflow_fu_604_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_622_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_638_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_646_p3;
    sc_signal< sc_lv<10> > y_V_3_fu_654_p3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0_1to2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_pp0_stage1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage2;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln786_1_fu_351_p2();
    void thread_and_ln786_2_fu_407_p2();
    void thread_and_ln786_fu_295_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage2_iter1();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_idle_pp0_1to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_exp_table1_address0();
    void thread_exp_table1_ce0();
    void thread_grp_fu_191_p0();
    void thread_grp_fu_191_p1();
    void thread_grp_fu_191_p2();
    void thread_icmp_ln1496_1_fu_245_p1();
    void thread_icmp_ln1496_1_fu_245_p2();
    void thread_icmp_ln1496_fu_231_p0();
    void thread_icmp_ln1496_fu_231_p1();
    void thread_icmp_ln1496_fu_231_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_io_acc_block_signal_op8();
    void thread_lhs_V_fu_562_p1();
    void thread_or_ln340_1_fu_369_p2();
    void thread_or_ln340_2_fu_425_p2();
    void thread_or_ln340_3_fu_622_p2();
    void thread_or_ln340_fu_313_p2();
    void thread_p_Result_7_fu_590_p3();
    void thread_p_Result_s_fu_576_p3();
    void thread_p_Val2_9_fu_584_p2();
    void thread_res_V_data_0_V_TDATA();
    void thread_res_V_data_0_V_TDATA_blk_n();
    void thread_res_V_data_0_V_TVALID();
    void thread_res_V_data_1_V_TDATA();
    void thread_res_V_data_1_V_TDATA_blk_n();
    void thread_res_V_data_1_V_TVALID();
    void thread_res_V_data_2_V_TDATA();
    void thread_res_V_data_2_V_TDATA_blk_n();
    void thread_res_V_data_2_V_TVALID();
    void thread_ret_V_1_fu_570_p2();
    void thread_ret_V_fu_556_p2();
    void thread_rhs_V_fu_566_p1();
    void thread_select_ln340_2_fu_480_p3();
    void thread_select_ln340_4_fu_514_p3();
    void thread_select_ln340_6_fu_638_p3();
    void thread_select_ln340_fu_441_p3();
    void thread_select_ln388_1_fu_488_p3();
    void thread_select_ln388_2_fu_522_p3();
    void thread_select_ln388_3_fu_646_p3();
    void thread_select_ln388_fu_449_p3();
    void thread_select_ln65_fu_237_p1();
    void thread_select_ln65_fu_237_p2();
    void thread_select_ln65_fu_237_p3();
    void thread_sext_ln241_fu_667_p1();
    void thread_sext_ln703_1_fu_263_p1();
    void thread_sext_ln703_2_fu_319_p0();
    void thread_sext_ln703_2_fu_319_p1();
    void thread_sext_ln703_3_fu_375_p0();
    void thread_sext_ln703_3_fu_375_p1();
    void thread_sext_ln703_fu_259_p0();
    void thread_sext_ln703_fu_259_p1();
    void thread_sub_ln1193_1_fu_323_p2();
    void thread_sub_ln1193_2_fu_379_p2();
    void thread_sub_ln1193_fu_267_p2();
    void thread_tmp_10_fu_337_p3();
    void thread_tmp_11_fu_385_p3();
    void thread_tmp_12_fu_393_p3();
    void thread_tmp_5_fu_273_p3();
    void thread_tmp_6_fu_470_p4();
    void thread_tmp_7_fu_281_p3();
    void thread_tmp_8_fu_504_p4();
    void thread_tmp_9_fu_329_p3();
    void thread_tmp_fu_431_p4();
    void thread_tmp_s_fu_628_p4();
    void thread_underflow_fu_604_p2();
    void thread_x_max_V_fu_251_p1();
    void thread_x_max_V_fu_251_p3();
    void thread_xor_ln340_1_fu_363_p2();
    void thread_xor_ln340_2_fu_419_p2();
    void thread_xor_ln340_3_fu_301_p2();
    void thread_xor_ln340_4_fu_357_p2();
    void thread_xor_ln340_5_fu_413_p2();
    void thread_xor_ln340_6_fu_610_p2();
    void thread_xor_ln340_7_fu_616_p2();
    void thread_xor_ln340_fu_307_p2();
    void thread_xor_ln786_1_fu_345_p2();
    void thread_xor_ln786_2_fu_401_p2();
    void thread_xor_ln786_3_fu_598_p2();
    void thread_xor_ln786_fu_289_p2();
    void thread_y_V_1_fu_496_p3();
    void thread_y_V_2_fu_530_p3();
    void thread_y_V_3_fu_654_p3();
    void thread_y_V_fu_457_p3();
    void thread_zext_ln1118_1_fu_676_p1();
    void thread_zext_ln1118_2_fu_680_p1();
    void thread_zext_ln1118_fu_672_p1();
    void thread_zext_ln225_1_fu_538_p1();
    void thread_zext_ln225_2_fu_542_p1();
    void thread_zext_ln225_fu_465_p1();
    void thread_zext_ln235_fu_662_p1();
    void thread_zext_ln36_1_fu_550_p1();
    void thread_zext_ln36_2_fu_553_p1();
    void thread_zext_ln36_fu_546_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
