// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_TDATA,
        data_V_data_0_V_TVALID,
        data_V_data_0_V_TREADY,
        data_V_data_1_V_TDATA,
        data_V_data_1_V_TVALID,
        data_V_data_1_V_TREADY,
        data_V_data_2_V_TDATA,
        data_V_data_2_V_TVALID,
        data_V_data_2_V_TREADY,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_TDATA;
input   data_V_data_0_V_TVALID;
output   data_V_data_0_V_TREADY;
input  [15:0] data_V_data_1_V_TDATA;
input   data_V_data_1_V_TVALID;
output   data_V_data_1_V_TREADY;
input  [15:0] data_V_data_2_V_TDATA;
input   data_V_data_2_V_TVALID;
output   data_V_data_2_V_TREADY;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_TREADY;
reg data_V_data_1_V_TREADY;
reg data_V_data_2_V_TREADY;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_3;
reg   [31:0] sX_3;
reg   [31:0] pY_3;
reg   [31:0] sY_3;
reg   [15:0] kernel_data_V_1_3;
reg   [15:0] kernel_data_V_1_4;
reg   [15:0] kernel_data_V_1_5;
reg   [15:0] kernel_data_V_1_12;
reg   [15:0] kernel_data_V_1_13;
reg   [15:0] kernel_data_V_1_14;
reg   [15:0] kernel_data_V_1_21;
reg   [15:0] kernel_data_V_1_22;
reg   [15:0] kernel_data_V_1_23;
reg   [15:0] kernel_data_V_1_6;
reg   [15:0] kernel_data_V_1_7;
reg   [15:0] kernel_data_V_1_8;
reg   [15:0] kernel_data_V_1_15;
reg   [15:0] kernel_data_V_1_16;
reg   [15:0] kernel_data_V_1_17;
reg   [15:0] kernel_data_V_1_24;
reg   [15:0] kernel_data_V_1_25;
reg   [15:0] kernel_data_V_1_26;
reg    line_buffer_Array_V_1_0_0_ce0;
reg    line_buffer_Array_V_1_0_0_we0;
wire   [15:0] line_buffer_Array_V_1_0_0_q0;
reg    line_buffer_Array_V_1_1_0_ce0;
reg    line_buffer_Array_V_1_1_0_we0;
wire   [15:0] line_buffer_Array_V_1_1_0_q0;
reg    line_buffer_Array_V_1_0_1_ce0;
reg    line_buffer_Array_V_1_0_1_we0;
wire   [15:0] line_buffer_Array_V_1_0_1_q0;
reg    line_buffer_Array_V_1_1_1_ce0;
reg    line_buffer_Array_V_1_1_1_we0;
wire   [15:0] line_buffer_Array_V_1_1_1_q0;
reg    line_buffer_Array_V_1_0_2_ce0;
reg    line_buffer_Array_V_1_0_2_we0;
wire   [15:0] line_buffer_Array_V_1_0_2_q0;
reg    line_buffer_Array_V_1_1_2_ce0;
reg    line_buffer_Array_V_1_1_2_we0;
wire   [15:0] line_buffer_Array_V_1_1_2_q0;
reg    data_V_data_0_V_TDATA_blk_n;
wire    ap_CS_fsm_state5;
reg    data_V_data_1_V_TDATA_blk_n;
reg    data_V_data_2_V_TDATA_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state9;
reg   [0:0] icmp_ln63_reg_1603;
reg   [0:0] and_ln266_4_reg_1644;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
wire   [15:0] grp_fu_716_p4;
reg   [15:0] reg_762;
wire    io_acc_block_signal_op122;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln63_fu_766_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln63_fu_772_p2;
reg   [10:0] add_ln63_reg_1607;
reg   [31:0] sX_3_load_reg_1612;
wire   [0:0] icmp_ln266_fu_824_p2;
reg   [0:0] icmp_ln266_reg_1617;
reg   [31:0] sY_3_load_reg_1622;
wire   [0:0] icmp_ln266_4_fu_834_p2;
reg   [0:0] icmp_ln266_4_reg_1627;
reg   [31:0] pY_3_load_reg_1632;
reg   [31:0] pX_3_load_reg_1638;
wire   [0:0] and_ln266_4_fu_892_p2;
wire  signed [24:0] sext_ln1118_fu_898_p1;
wire  signed [23:0] sext_ln1118_1504_fu_903_p1;
wire  signed [25:0] sext_ln1118_1505_fu_908_p1;
wire  signed [25:0] sext_ln1118_1506_fu_913_p1;
wire  signed [23:0] sext_ln1118_1507_fu_918_p1;
wire  signed [25:0] sext_ln1118_1508_fu_923_p1;
wire  signed [24:0] sext_ln1118_1514_fu_970_p1;
wire    ap_CS_fsm_state3;
wire  signed [25:0] sext_ln1118_1515_fu_975_p1;
wire  signed [25:0] sext_ln1118_1516_fu_980_p1;
wire  signed [25:0] sext_ln1118_1517_fu_985_p1;
wire  signed [25:0] sext_ln1118_1518_fu_990_p1;
wire  signed [23:0] sext_ln1118_1519_fu_995_p1;
wire  signed [24:0] sext_ln1118_1525_fu_1042_p1;
wire    ap_CS_fsm_state4;
wire  signed [25:0] sext_ln1118_1526_fu_1047_p1;
wire  signed [25:0] sext_ln1118_1527_fu_1052_p1;
wire  signed [25:0] sext_ln1118_1528_fu_1057_p1;
wire  signed [25:0] sext_ln1118_1529_fu_1062_p1;
wire  signed [23:0] sext_ln1118_1530_fu_1067_p1;
reg  signed [15:0] tmp_data_1_V_2_reg_1738;
reg  signed [15:0] tmp_data_2_V_2_reg_1743;
wire   [14:0] grp_fu_696_p4;
reg   [14:0] trunc_ln_reg_1748;
reg   [13:0] trunc_ln708_s_reg_1753;
reg   [13:0] trunc_ln708_2933_reg_1758;
wire  signed [24:0] sext_ln1118_1509_fu_1228_p1;
wire  signed [25:0] sext_ln1118_1513_fu_1263_p1;
wire  signed [25:0] sext_ln1118_1521_fu_1268_p1;
wire  signed [23:0] sext_ln1118_1522_fu_1273_p1;
wire  signed [24:0] sext_ln1118_1524_fu_1278_p1;
wire  signed [23:0] sext_ln1118_1532_fu_1283_p1;
wire   [15:0] add_ln703_3682_fu_1288_p2;
reg   [15:0] add_ln703_3682_reg_1803;
wire   [0:0] icmp_ln288_fu_1294_p2;
reg   [0:0] icmp_ln288_reg_1808;
wire   [0:0] icmp_ln292_fu_1321_p2;
reg   [0:0] icmp_ln292_reg_1812;
reg   [10:0] trunc_ln708_2935_reg_1816;
wire    ap_CS_fsm_state6;
reg   [14:0] trunc_ln708_2936_reg_1821;
wire   [15:0] grp_fu_706_p4;
reg   [15:0] trunc_ln708_11_reg_1826;
wire   [13:0] grp_fu_746_p4;
reg   [13:0] trunc_ln708_2937_reg_1831;
wire  signed [24:0] sext_ln1118_1533_fu_1352_p1;
wire  signed [24:0] sext_ln1118_1534_fu_1356_p1;
wire   [15:0] add_ln703_fu_1360_p2;
reg   [15:0] add_ln703_reg_1846;
wire   [15:0] grp_fu_756_p2;
reg   [15:0] add_ln703_3674_reg_1851;
wire   [31:0] select_ln297_fu_1391_p3;
reg   [14:0] trunc_ln708_2940_reg_1861;
reg   [15:0] trunc_ln708_20_reg_1866;
wire   [15:0] add_ln703_3676_fu_1405_p2;
reg   [15:0] add_ln703_3676_reg_1871;
wire   [14:0] add_ln703_3686_fu_1410_p2;
reg   [14:0] add_ln703_3686_reg_1876;
wire   [15:0] tmp_data_0_V_fu_1508_p2;
reg   [15:0] tmp_data_0_V_reg_1881;
wire    ap_CS_fsm_state8;
wire   [15:0] add_ln703_3679_fu_1524_p2;
reg   [15:0] add_ln703_3679_reg_1886;
wire   [15:0] add_ln703_3684_fu_1535_p2;
reg   [15:0] add_ln703_3684_reg_1891;
wire   [15:0] add_ln703_3685_fu_1540_p2;
reg   [15:0] add_ln703_3685_reg_1896;
reg   [10:0] indvar_flatten_reg_281;
reg    ap_block_state1;
reg   [31:0] storemerge_i_i_reg_292;
wire   [31:0] grp_fu_1299_p2;
wire   [31:0] select_ln301_fu_1372_p3;
wire   [31:0] grp_fu_1326_p2;
wire    io_acc_block_signal_op320;
reg    ap_predicate_op320_write_state9;
reg    ap_block_state9;
reg  signed [15:0] grp_fu_303_p0;
reg  signed [10:0] grp_fu_303_p1;
reg  signed [15:0] grp_fu_304_p0;
reg   [9:0] grp_fu_304_p1;
reg  signed [15:0] grp_fu_305_p0;
reg  signed [9:0] grp_fu_305_p1;
reg  signed [15:0] grp_fu_306_p0;
reg  signed [9:0] grp_fu_306_p1;
reg  signed [15:0] grp_fu_307_p0;
reg  signed [10:0] grp_fu_307_p1;
reg  signed [15:0] grp_fu_308_p0;
reg  signed [10:0] grp_fu_308_p1;
wire   [24:0] grp_fu_306_p2;
wire   [25:0] grp_fu_304_p2;
wire   [25:0] grp_fu_303_p2;
wire   [25:0] grp_fu_307_p2;
wire   [25:0] grp_fu_308_p2;
wire   [23:0] grp_fu_746_p1;
wire   [25:0] grp_fu_305_p2;
wire   [15:0] grp_fu_736_p4;
wire   [15:0] grp_fu_726_p4;
wire   [30:0] tmp_fu_844_p4;
wire   [30:0] tmp_48_fu_864_p4;
wire   [0:0] icmp_ln266_5_fu_854_p2;
wire   [0:0] icmp_ln266_6_fu_874_p2;
wire   [0:0] and_ln266_3_fu_886_p2;
wire   [0:0] and_ln266_fu_880_p2;
wire  signed [15:0] sext_ln1118_fu_898_p0;
wire  signed [15:0] sext_ln1118_1504_fu_903_p0;
wire  signed [15:0] sext_ln1118_1505_fu_908_p0;
wire  signed [15:0] sext_ln1118_1506_fu_913_p0;
wire  signed [15:0] sext_ln1118_1507_fu_918_p0;
wire  signed [15:0] sext_ln1118_1508_fu_923_p0;
wire  signed [15:0] sext_ln1118_1514_fu_970_p0;
wire  signed [15:0] sext_ln1118_1515_fu_975_p0;
wire  signed [15:0] sext_ln1118_1516_fu_980_p0;
wire  signed [15:0] sext_ln1118_1517_fu_985_p0;
wire  signed [15:0] sext_ln1118_1518_fu_990_p0;
wire  signed [15:0] sext_ln1118_1519_fu_995_p0;
wire  signed [15:0] sext_ln1118_1525_fu_1042_p0;
wire  signed [15:0] sext_ln1118_1526_fu_1047_p0;
wire  signed [15:0] sext_ln1118_1527_fu_1052_p0;
wire  signed [15:0] sext_ln1118_1528_fu_1057_p0;
wire  signed [15:0] sext_ln1118_1529_fu_1062_p0;
wire  signed [15:0] sext_ln1118_1530_fu_1067_p0;
wire   [23:0] trunc_ln708_s_fu_1198_p1;
wire   [23:0] trunc_ln708_2933_fu_1208_p1;
wire  signed [15:0] sext_ln1118_1509_fu_1228_p0;
wire   [19:0] shl_ln_fu_1233_p3;
wire   [16:0] shl_ln1118_s_fu_1245_p3;
wire  signed [20:0] grp_fu_1257_p0;
wire  signed [20:0] grp_fu_1257_p1;
wire  signed [15:0] sext_ln1118_1513_fu_1263_p0;
wire  signed [15:0] sext_ln1118_1521_fu_1268_p0;
wire  signed [15:0] sext_ln1118_1522_fu_1273_p0;
wire  signed [15:0] sext_ln1118_1524_fu_1278_p0;
wire  signed [15:0] sext_ln1118_1532_fu_1283_p0;
wire   [15:0] trunc_ln708_5_fu_1218_p4;
wire   [20:0] grp_fu_1257_p2;
wire   [31:0] grp_fu_1304_p2;
wire   [31:0] grp_fu_1331_p2;
wire  signed [14:0] sext_ln1118_1531_fu_1401_p1;
wire  signed [14:0] sext_ln1118_1520_fu_1398_p1;
wire   [23:0] trunc_ln708_2938_fu_1438_p1;
wire   [13:0] trunc_ln708_2938_fu_1438_p4;
wire   [24:0] trunc_ln708_2939_fu_1452_p1;
wire   [14:0] trunc_ln708_2939_fu_1452_p4;
wire   [15:0] add_ln703_3667_fu_1473_p2;
wire  signed [15:0] sext_ln708_1169_fu_1428_p1;
wire  signed [15:0] sext_ln708_fu_1422_p1;
wire  signed [15:0] sext_ln708_1173_fu_1469_p1;
wire  signed [15:0] sext_ln708_1172_fu_1466_p1;
wire  signed [15:0] sext_ln708_1170_fu_1435_p1;
wire   [15:0] add_ln703_3670_fu_1490_p2;
wire   [15:0] add_ln703_3669_fu_1484_p2;
wire   [15:0] add_ln703_3671_fu_1496_p2;
wire   [15:0] add_ln703_3668_fu_1479_p2;
wire   [15:0] add_ln703_3672_fu_1502_p2;
wire  signed [14:0] sext_ln1118_1512_fu_1432_p1;
wire  signed [14:0] sext_ln1118_1523_fu_1448_p1;
wire   [14:0] add_ln703_3678_fu_1514_p2;
wire  signed [15:0] sext_ln708_1167_fu_1425_p1;
wire  signed [15:0] sext_ln703_fu_1520_p1;
wire   [15:0] add_ln703_3683_fu_1530_p2;
wire  signed [15:0] sext_ln708_1171_fu_1462_p1;
wire   [24:0] trunc_ln708_2944_fu_1552_p1;
wire   [14:0] trunc_ln708_2944_fu_1552_p4;
wire  signed [15:0] sext_ln708_1168_fu_1545_p1;
wire  signed [15:0] sext_ln708_1174_fu_1548_p1;
wire   [15:0] add_ln703_3677_fu_1566_p2;
wire   [15:0] add_ln703_3680_fu_1572_p2;
wire  signed [15:0] sext_ln708_1175_fu_1562_p1;
wire  signed [15:0] sext_ln703_779_fu_1583_p1;
wire   [15:0] add_ln703_3687_fu_1586_p2;
wire   [15:0] add_ln703_3688_fu_1592_p2;
reg    grp_fu_303_ce;
reg    grp_fu_304_ce;
reg    grp_fu_305_ce;
reg    grp_fu_306_ce;
reg    grp_fu_307_ce;
reg    grp_fu_308_ce;
reg    grp_fu_1257_ce;
reg    grp_fu_1299_ce;
reg    grp_fu_1304_ce;
reg    grp_fu_1326_ce;
reg    grp_fu_1331_ce;
wire    ap_CS_fsm_state10;
reg   [9:0] ap_NS_fsm;
wire    regslice_both_data_V_data_0_V_U_apdone_blk;
wire   [15:0] data_V_data_0_V_TDATA_int;
wire    data_V_data_0_V_TVALID_int;
reg    data_V_data_0_V_TREADY_int;
wire    regslice_both_data_V_data_0_V_U_ack_in;
wire    regslice_both_data_V_data_1_V_U_apdone_blk;
wire   [15:0] data_V_data_1_V_TDATA_int;
wire    data_V_data_1_V_TVALID_int;
reg    data_V_data_1_V_TREADY_int;
wire    regslice_both_data_V_data_1_V_U_ack_in;
wire    regslice_both_data_V_data_2_V_U_apdone_blk;
wire   [15:0] data_V_data_2_V_TDATA_int;
wire    data_V_data_2_V_TVALID_int;
reg    data_V_data_2_V_TREADY_int;
wire    regslice_both_data_V_data_2_V_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 pX_3 = 32'd0;
#0 sX_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 kernel_data_V_1_3 = 16'd0;
#0 kernel_data_V_1_4 = 16'd0;
#0 kernel_data_V_1_5 = 16'd0;
#0 kernel_data_V_1_12 = 16'd0;
#0 kernel_data_V_1_13 = 16'd0;
#0 kernel_data_V_1_14 = 16'd0;
#0 kernel_data_V_1_21 = 16'd0;
#0 kernel_data_V_1_22 = 16'd0;
#0 kernel_data_V_1_23 = 16'd0;
#0 kernel_data_V_1_6 = 16'd0;
#0 kernel_data_V_1_7 = 16'd0;
#0 kernel_data_V_1_8 = 16'd0;
#0 kernel_data_V_1_15 = 16'd0;
#0 kernel_data_V_1_16 = 16'd0;
#0 kernel_data_V_1_17 = 16'd0;
#0 kernel_data_V_1_24 = 16'd0;
#0 kernel_data_V_1_25 = 16'd0;
#0 kernel_data_V_1_26 = 16'd0;
end

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_0_0_ce0),
    .we0(line_buffer_Array_V_1_0_0_we0),
    .d0(data_V_data_0_V_TDATA_int),
    .q0(line_buffer_Array_V_1_0_0_q0)
);

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_1_0_ce0),
    .we0(line_buffer_Array_V_1_1_0_we0),
    .d0(line_buffer_Array_V_1_0_0_q0),
    .q0(line_buffer_Array_V_1_1_0_q0)
);

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_0_1_ce0),
    .we0(line_buffer_Array_V_1_0_1_we0),
    .d0(data_V_data_1_V_TDATA_int),
    .q0(line_buffer_Array_V_1_0_1_q0)
);

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_1_1_ce0),
    .we0(line_buffer_Array_V_1_1_1_we0),
    .d0(line_buffer_Array_V_1_0_1_q0),
    .q0(line_buffer_Array_V_1_1_1_q0)
);

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_0_2_ce0),
    .we0(line_buffer_Array_V_1_0_2_we0),
    .d0(data_V_data_2_V_TDATA_int),
    .q0(line_buffer_Array_V_1_0_2_q0)
);

depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s_line_buffer_bkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd31),
    .ce0(line_buffer_Array_V_1_1_2_ce0),
    .we0(line_buffer_Array_V_1_1_2_we0),
    .d0(line_buffer_Array_V_1_0_2_q0),
    .q0(line_buffer_Array_V_1_1_2_q0)
);

myproject_mul_16s_11s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
myproject_mul_16s_11s_26_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_303_p0),
    .din1(grp_fu_303_p1),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

myproject_mul_16s_10ns_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
myproject_mul_16s_10ns_26_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_304_p0),
    .din1(grp_fu_304_p1),
    .ce(grp_fu_304_ce),
    .dout(grp_fu_304_p2)
);

myproject_mul_16s_10s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
myproject_mul_16s_10s_26_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(grp_fu_305_p1),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

myproject_mul_16s_10s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 25 ))
myproject_mul_16s_10s_25_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_306_p0),
    .din1(grp_fu_306_p1),
    .ce(grp_fu_306_ce),
    .dout(grp_fu_306_p2)
);

myproject_mul_16s_11s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
myproject_mul_16s_11s_26_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_307_p0),
    .din1(grp_fu_307_p1),
    .ce(grp_fu_307_ce),
    .dout(grp_fu_307_p2)
);

myproject_mul_16s_11s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
myproject_mul_16s_11s_26_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_308_p0),
    .din1(grp_fu_308_p1),
    .ce(grp_fu_308_ce),
    .dout(grp_fu_308_p2)
);

myproject_sub_21s_21s_21_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
myproject_sub_21s_21s_21_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1257_p0),
    .din1(grp_fu_1257_p1),
    .ce(grp_fu_1257_ce),
    .dout(grp_fu_1257_p2)
);

myproject_add_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_add_32ns_32ns_32_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pX_3_load_reg_1638),
    .din1(32'd1),
    .ce(grp_fu_1299_ce),
    .dout(grp_fu_1299_p2)
);

myproject_add_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_add_32ns_32ns_32_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sX_3_load_reg_1612),
    .din1(32'd1),
    .ce(grp_fu_1304_ce),
    .dout(grp_fu_1304_p2)
);

myproject_add_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_add_32ns_32ns_32_2_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(pY_3_load_reg_1632),
    .din1(32'd1),
    .ce(grp_fu_1326_ce),
    .dout(grp_fu_1326_p2)
);

myproject_add_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_add_32ns_32ns_32_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sY_3_load_reg_1622),
    .din1(32'd1),
    .ce(grp_fu_1331_ce),
    .dout(grp_fu_1331_p2)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_data_V_data_0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_0_V_TDATA),
    .vld_in(data_V_data_0_V_TVALID),
    .ack_in(regslice_both_data_V_data_0_V_U_ack_in),
    .data_out(data_V_data_0_V_TDATA_int),
    .vld_out(data_V_data_0_V_TVALID_int),
    .ack_out(data_V_data_0_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_0_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_data_V_data_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_1_V_TDATA),
    .vld_in(data_V_data_1_V_TVALID),
    .ack_in(regslice_both_data_V_data_1_V_U_ack_in),
    .data_out(data_V_data_1_V_TDATA_int),
    .vld_out(data_V_data_1_V_TVALID_int),
    .ack_out(data_V_data_1_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_1_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_data_V_data_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_2_V_TDATA),
    .vld_in(data_V_data_2_V_TVALID),
    .ack_in(regslice_both_data_V_data_2_V_U_ack_in),
    .data_out(data_V_data_2_V_TDATA_int),
    .vld_out(data_V_data_2_V_TVALID_int),
    .ack_out(data_V_data_2_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_2_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln63_reg_1603 == 1'd0))) begin
        indvar_flatten_reg_281 <= add_ln63_reg_1607;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_281 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln288_reg_1808 == 1'd0) & (icmp_ln63_reg_1603 == 1'd0))) begin
        pX_3 <= grp_fu_1299_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (icmp_ln288_fu_1294_p2 == 1'd1))) begin
        pX_3 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln288_reg_1808 == 1'd1) & (icmp_ln292_reg_1812 == 1'd0) & (icmp_ln63_reg_1603 == 1'd0))) begin
        pY_3 <= grp_fu_1326_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (icmp_ln292_fu_1321_p2 == 1'd1) & (icmp_ln288_fu_1294_p2 == 1'd1))) begin
        pY_3 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln288_reg_1808 == 1'd0) & (icmp_ln63_reg_1603 == 1'd0))) begin
        sX_3 <= select_ln301_fu_1372_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (icmp_ln288_fu_1294_p2 == 1'd1))) begin
        sX_3 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (icmp_ln292_fu_1321_p2 == 1'd1) & (icmp_ln288_fu_1294_p2 == 1'd1))) begin
        storemerge_i_i_reg_292 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln288_reg_1808 == 1'd1) & (icmp_ln292_reg_1812 == 1'd0) & (icmp_ln63_reg_1603 == 1'd0))) begin
        storemerge_i_i_reg_292 <= select_ln297_fu_1391_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln63_reg_1607 <= add_ln63_fu_772_p2;
        icmp_ln63_reg_1603 <= icmp_ln63_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        add_ln703_3674_reg_1851 <= grp_fu_756_p2;
        add_ln703_reg_1846 <= add_ln703_fu_1360_p2;
        trunc_ln708_11_reg_1826 <= {{grp_fu_304_p2[25:10]}};
        trunc_ln708_2935_reg_1816 <= {{grp_fu_1257_p2[20:10]}};
        trunc_ln708_2936_reg_1821 <= {{grp_fu_306_p2[24:10]}};
        trunc_ln708_2937_reg_1831 <= {{grp_fu_746_p1[23:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        add_ln703_3676_reg_1871 <= add_ln703_3676_fu_1405_p2;
        add_ln703_3686_reg_1876 <= add_ln703_3686_fu_1410_p2;
        trunc_ln708_20_reg_1866 <= {{grp_fu_304_p2[25:10]}};
        trunc_ln708_2940_reg_1861 <= {{grp_fu_306_p2[24:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        add_ln703_3679_reg_1886 <= add_ln703_3679_fu_1524_p2;
        add_ln703_3684_reg_1891 <= add_ln703_3684_fu_1535_p2;
        add_ln703_3685_reg_1896 <= add_ln703_3685_fu_1540_p2;
        tmp_data_0_V_reg_1881 <= tmp_data_0_V_fu_1508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (1'd1 == and_ln266_4_reg_1644))) begin
        add_ln703_3682_reg_1803 <= add_ln703_3682_fu_1288_p2;
        trunc_ln708_2933_reg_1758 <= {{trunc_ln708_2933_fu_1208_p1[23:10]}};
        trunc_ln708_s_reg_1753 <= {{trunc_ln708_s_fu_1198_p1[23:10]}};
        trunc_ln_reg_1748 <= {{grp_fu_306_p2[24:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln63_fu_766_p2 == 1'd0))) begin
        and_ln266_4_reg_1644 <= and_ln266_4_fu_892_p2;
        icmp_ln266_4_reg_1627 <= icmp_ln266_4_fu_834_p2;
        icmp_ln266_reg_1617 <= icmp_ln266_fu_824_p2;
        kernel_data_V_1_3 <= kernel_data_V_1_6;
        kernel_data_V_1_4 <= kernel_data_V_1_7;
        kernel_data_V_1_5 <= kernel_data_V_1_8;
        pX_3_load_reg_1638 <= pX_3;
        pY_3_load_reg_1632 <= pY_3;
        sX_3_load_reg_1612 <= sX_3;
        sY_3_load_reg_1622 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        icmp_ln288_reg_1808 <= icmp_ln288_fu_1294_p2;
        kernel_data_V_1_15 <= line_buffer_Array_V_1_0_0_q0;
        kernel_data_V_1_16 <= line_buffer_Array_V_1_0_1_q0;
        kernel_data_V_1_17 <= line_buffer_Array_V_1_0_2_q0;
        kernel_data_V_1_24 <= data_V_data_0_V_TDATA_int;
        kernel_data_V_1_25 <= data_V_data_1_V_TDATA_int;
        kernel_data_V_1_26 <= data_V_data_2_V_TDATA_int;
        kernel_data_V_1_6 <= line_buffer_Array_V_1_1_0_q0;
        kernel_data_V_1_7 <= line_buffer_Array_V_1_1_1_q0;
        kernel_data_V_1_8 <= line_buffer_Array_V_1_1_2_q0;
        tmp_data_1_V_2_reg_1738 <= data_V_data_1_V_TDATA_int;
        tmp_data_2_V_2_reg_1743 <= data_V_data_2_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (icmp_ln288_fu_1294_p2 == 1'd1))) begin
        icmp_ln292_reg_1812 <= icmp_ln292_fu_1321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_data_V_1_12 <= kernel_data_V_1_15;
        kernel_data_V_1_13 <= kernel_data_V_1_16;
        kernel_data_V_1_14 <= kernel_data_V_1_17;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_data_V_1_21 <= kernel_data_V_1_24;
        kernel_data_V_1_22 <= kernel_data_V_1_25;
        kernel_data_V_1_23 <= kernel_data_V_1_26;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1) & (1'd1 == and_ln266_4_reg_1644)))) begin
        reg_762 <= {{grp_fu_303_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln288_reg_1808 == 1'd1) & (icmp_ln63_reg_1603 == 1'd0))) begin
        sY_3 <= storemerge_i_i_reg_292;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_data_0_V_TDATA_blk_n = data_V_data_0_V_TVALID_int;
    end else begin
        data_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_0_V_TVALID == 1'b1) & (regslice_both_data_V_data_0_V_U_ack_in == 1'b1))) begin
        data_V_data_0_V_TREADY = 1'b1;
    end else begin
        data_V_data_0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        data_V_data_0_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_0_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_data_1_V_TDATA_blk_n = data_V_data_1_V_TVALID_int;
    end else begin
        data_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_1_V_TVALID == 1'b1) & (regslice_both_data_V_data_1_V_U_ack_in == 1'b1))) begin
        data_V_data_1_V_TREADY = 1'b1;
    end else begin
        data_V_data_1_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        data_V_data_1_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_1_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_data_2_V_TDATA_blk_n = data_V_data_2_V_TVALID_int;
    end else begin
        data_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_2_V_TVALID == 1'b1) & (regslice_both_data_V_data_2_V_U_ack_in == 1'b1))) begin
        data_V_data_2_V_TREADY = 1'b1;
    end else begin
        data_V_data_2_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        data_V_data_2_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_2_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_1257_ce = 1'b1;
    end else begin
        grp_fu_1257_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_1299_ce = 1'b1;
    end else begin
        grp_fu_1299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_1304_ce = 1'b1;
    end else begin
        grp_fu_1304_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_1326_ce = 1'b1;
    end else begin
        grp_fu_1326_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_1331_ce = 1'b1;
    end else begin
        grp_fu_1331_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_303_p0 = sext_ln1118_1534_fu_1356_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_303_p0 = sext_ln1118_1522_fu_1273_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_303_p0 = sext_ln1118_1528_fu_1057_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_303_p0 = sext_ln1118_1517_fu_985_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_303_p0 = sext_ln1118_1506_fu_913_p1;
    end else begin
        grp_fu_303_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_303_p1 = 25'd137;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_303_p1 = 24'd16777134;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_303_p1 = 26'd400;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_303_p1 = 26'd423;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_303_p1 = 26'd67108107;
    end else begin
        grp_fu_303_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_304_ce = 1'b1;
    end else begin
        grp_fu_304_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_304_p0 = sext_ln1118_1521_fu_1268_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_304_p0 = sext_ln1118_1527_fu_1052_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_304_p0 = sext_ln1118_1516_fu_980_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_304_p0 = sext_ln1118_1505_fu_908_p1;
    end else begin
        grp_fu_304_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_304_p1 = 26'd437;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_304_p1 = 26'd404;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_304_p1 = 26'd309;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_304_p1 = 26'd420;
    end else begin
        grp_fu_304_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_305_p0 = sext_ln1118_1532_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_305_p0 = sext_ln1118_1530_fu_1067_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_305_p0 = sext_ln1118_1519_fu_995_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_305_p0 = sext_ln1118_1508_fu_923_p1;
    end else begin
        grp_fu_305_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_305_p1 = 24'd16777118;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_305_p1 = 24'd77;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_305_p1 = 24'd123;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_305_p1 = 26'd67108411;
    end else begin
        grp_fu_305_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_306_ce = 1'b1;
    end else begin
        grp_fu_306_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_306_p0 = sext_ln1118_1533_fu_1352_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_306_p0 = sext_ln1118_1509_fu_1228_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_306_p0 = sext_ln1118_1525_fu_1042_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_306_p0 = sext_ln1118_1514_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_306_p0 = sext_ln1118_fu_898_p1;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_306_p1 = 25'd210;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_306_p1 = 25'd33554231;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_306_p1 = 25'd33554226;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_306_p1 = 25'd135;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_306_p1 = 25'd157;
    end else begin
        grp_fu_306_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_307_ce = 1'b1;
    end else begin
        grp_fu_307_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_307_p0 = sext_ln1118_1513_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_307_p0 = sext_ln1118_1526_fu_1047_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_307_p0 = sext_ln1118_1515_fu_975_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_307_p0 = sext_ln1118_1504_fu_903_p1;
    end else begin
        grp_fu_307_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_307_p1 = 26'd67108496;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_307_p1 = 26'd432;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_307_p1 = 26'd387;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_307_p1 = 24'd16777128;
    end else begin
        grp_fu_307_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1)))) begin
        grp_fu_308_ce = 1'b1;
    end else begin
        grp_fu_308_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_308_p0 = sext_ln1118_1524_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_308_p0 = sext_ln1118_1529_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_308_p0 = sext_ln1118_1518_fu_990_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_308_p0 = sext_ln1118_1507_fu_918_p1;
    end else begin
        grp_fu_308_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_308_p1 = 25'd242;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_308_p1 = 26'd67108076;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_308_p1 = 26'd67108485;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_308_p1 = 24'd118;
    end else begin
        grp_fu_308_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_0_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
        line_buffer_Array_V_1_1_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (ap_predicate_op320_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (ap_predicate_op320_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (ap_predicate_op320_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln63_fu_766_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (io_acc_block_signal_op122 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln63_fu_772_p2 = (indvar_flatten_reg_281 + 11'd1);

assign add_ln703_3667_fu_1473_p2 = (reg_762 + grp_fu_706_p4);

assign add_ln703_3668_fu_1479_p2 = (add_ln703_reg_1846 + add_ln703_3667_fu_1473_p2);

assign add_ln703_3669_fu_1484_p2 = ($signed(sext_ln708_1169_fu_1428_p1) + $signed(sext_ln708_fu_1422_p1));

assign add_ln703_3670_fu_1490_p2 = ($signed(sext_ln708_1173_fu_1469_p1) + $signed(sext_ln708_1172_fu_1466_p1));

assign add_ln703_3671_fu_1496_p2 = ($signed(sext_ln708_1170_fu_1435_p1) + $signed(add_ln703_3670_fu_1490_p2));

assign add_ln703_3672_fu_1502_p2 = (add_ln703_3669_fu_1484_p2 + add_ln703_3671_fu_1496_p2);

assign add_ln703_3676_fu_1405_p2 = (add_ln703_3674_reg_1851 + grp_fu_756_p2);

assign add_ln703_3677_fu_1566_p2 = ($signed(sext_ln708_1168_fu_1545_p1) + $signed(sext_ln708_1174_fu_1548_p1));

assign add_ln703_3678_fu_1514_p2 = ($signed(sext_ln1118_1512_fu_1432_p1) + $signed(sext_ln1118_1523_fu_1448_p1));

assign add_ln703_3679_fu_1524_p2 = ($signed(sext_ln708_1167_fu_1425_p1) + $signed(sext_ln703_fu_1520_p1));

assign add_ln703_3680_fu_1572_p2 = (add_ln703_3677_fu_1566_p2 + add_ln703_3679_reg_1886);

assign add_ln703_3682_fu_1288_p2 = (grp_fu_706_p4 + trunc_ln708_5_fu_1218_p4);

assign add_ln703_3683_fu_1530_p2 = (trunc_ln708_11_reg_1826 + grp_fu_726_p4);

assign add_ln703_3684_fu_1535_p2 = (add_ln703_3682_reg_1803 + add_ln703_3683_fu_1530_p2);

assign add_ln703_3685_fu_1540_p2 = ($signed(sext_ln708_1171_fu_1462_p1) + $signed(trunc_ln708_20_reg_1866));

assign add_ln703_3686_fu_1410_p2 = ($signed(sext_ln1118_1531_fu_1401_p1) + $signed(sext_ln1118_1520_fu_1398_p1));

assign add_ln703_3687_fu_1586_p2 = ($signed(sext_ln708_1175_fu_1562_p1) + $signed(sext_ln703_779_fu_1583_p1));

assign add_ln703_3688_fu_1592_p2 = (add_ln703_3685_reg_1896 + add_ln703_3687_fu_1586_p2);

assign add_ln703_fu_1360_p2 = (grp_fu_716_p4 + reg_762);

assign and_ln266_3_fu_886_p2 = (icmp_ln266_6_fu_874_p2 & icmp_ln266_5_fu_854_p2);

assign and_ln266_4_fu_892_p2 = (and_ln266_fu_880_p2 & and_ln266_3_fu_886_p2);

assign and_ln266_fu_880_p2 = (icmp_ln266_fu_824_p2 & icmp_ln266_4_fu_834_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state9 = ((io_acc_block_signal_op320 == 1'b0) & (ap_predicate_op320_write_state9 == 1'b1));
end

always @ (*) begin
    ap_predicate_op320_write_state9 = ((1'd1 == and_ln266_4_reg_1644) & (icmp_ln63_reg_1603 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_1257_p0 = $signed(shl_ln1118_s_fu_1245_p3);

assign grp_fu_1257_p1 = $signed(shl_ln_fu_1233_p3);

assign grp_fu_696_p4 = {{grp_fu_306_p2[24:10]}};

assign grp_fu_706_p4 = {{grp_fu_304_p2[25:10]}};

assign grp_fu_716_p4 = {{grp_fu_303_p2[25:10]}};

assign grp_fu_726_p4 = {{grp_fu_307_p2[25:10]}};

assign grp_fu_736_p4 = {{grp_fu_308_p2[25:10]}};

assign grp_fu_746_p1 = grp_fu_305_p2;

assign grp_fu_746_p4 = {{grp_fu_746_p1[23:10]}};

assign grp_fu_756_p2 = (grp_fu_736_p4 + grp_fu_726_p4);

assign icmp_ln266_4_fu_834_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln266_5_fu_854_p2 = (($signed(tmp_fu_844_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln266_6_fu_874_p2 = (($signed(tmp_48_fu_864_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln266_fu_824_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln288_fu_1294_p2 = ((pX_3_load_reg_1638 == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1321_p2 = ((pY_3_load_reg_1632 == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_766_p2 = ((indvar_flatten_reg_281 == 11'd1024) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op122 = (data_V_data_2_V_TVALID_int & data_V_data_1_V_TVALID_int & data_V_data_0_V_TVALID_int);

assign io_acc_block_signal_op320 = (res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign res_V_data_0_V_din = tmp_data_0_V_reg_1881;

assign res_V_data_1_V_din = (add_ln703_3676_reg_1871 + add_ln703_3680_fu_1572_p2);

assign res_V_data_2_V_din = (add_ln703_3684_reg_1891 + add_ln703_3688_fu_1592_p2);

assign select_ln297_fu_1391_p3 = ((icmp_ln266_4_reg_1627[0:0] === 1'b1) ? 32'd2 : grp_fu_1331_p2);

assign select_ln301_fu_1372_p3 = ((icmp_ln266_reg_1617[0:0] === 1'b1) ? 32'd2 : grp_fu_1304_p2);

assign sext_ln1118_1504_fu_903_p0 = kernel_data_V_1_4;

assign sext_ln1118_1504_fu_903_p1 = sext_ln1118_1504_fu_903_p0;

assign sext_ln1118_1505_fu_908_p0 = kernel_data_V_1_5;

assign sext_ln1118_1505_fu_908_p1 = sext_ln1118_1505_fu_908_p0;

assign sext_ln1118_1506_fu_913_p0 = kernel_data_V_1_6;

assign sext_ln1118_1506_fu_913_p1 = sext_ln1118_1506_fu_913_p0;

assign sext_ln1118_1507_fu_918_p0 = kernel_data_V_1_7;

assign sext_ln1118_1507_fu_918_p1 = sext_ln1118_1507_fu_918_p0;

assign sext_ln1118_1508_fu_923_p0 = kernel_data_V_1_8;

assign sext_ln1118_1508_fu_923_p1 = sext_ln1118_1508_fu_923_p0;

assign sext_ln1118_1509_fu_1228_p0 = line_buffer_Array_V_1_1_0_q0;

assign sext_ln1118_1509_fu_1228_p1 = sext_ln1118_1509_fu_1228_p0;

assign sext_ln1118_1512_fu_1432_p1 = $signed(trunc_ln708_2935_reg_1816);

assign sext_ln1118_1513_fu_1263_p0 = line_buffer_Array_V_1_1_2_q0;

assign sext_ln1118_1513_fu_1263_p1 = sext_ln1118_1513_fu_1263_p0;

assign sext_ln1118_1514_fu_970_p0 = kernel_data_V_1_12;

assign sext_ln1118_1514_fu_970_p1 = sext_ln1118_1514_fu_970_p0;

assign sext_ln1118_1515_fu_975_p0 = kernel_data_V_1_13;

assign sext_ln1118_1515_fu_975_p1 = sext_ln1118_1515_fu_975_p0;

assign sext_ln1118_1516_fu_980_p0 = kernel_data_V_1_14;

assign sext_ln1118_1516_fu_980_p1 = sext_ln1118_1516_fu_980_p0;

assign sext_ln1118_1517_fu_985_p0 = kernel_data_V_1_15;

assign sext_ln1118_1517_fu_985_p1 = sext_ln1118_1517_fu_985_p0;

assign sext_ln1118_1518_fu_990_p0 = kernel_data_V_1_16;

assign sext_ln1118_1518_fu_990_p1 = sext_ln1118_1518_fu_990_p0;

assign sext_ln1118_1519_fu_995_p0 = kernel_data_V_1_17;

assign sext_ln1118_1519_fu_995_p1 = sext_ln1118_1519_fu_995_p0;

assign sext_ln1118_1520_fu_1398_p1 = $signed(trunc_ln708_2937_reg_1831);

assign sext_ln1118_1521_fu_1268_p0 = line_buffer_Array_V_1_0_0_q0;

assign sext_ln1118_1521_fu_1268_p1 = sext_ln1118_1521_fu_1268_p0;

assign sext_ln1118_1522_fu_1273_p0 = line_buffer_Array_V_1_0_1_q0;

assign sext_ln1118_1522_fu_1273_p1 = sext_ln1118_1522_fu_1273_p0;

assign sext_ln1118_1523_fu_1448_p1 = $signed(trunc_ln708_2938_fu_1438_p4);

assign sext_ln1118_1524_fu_1278_p0 = line_buffer_Array_V_1_0_2_q0;

assign sext_ln1118_1524_fu_1278_p1 = sext_ln1118_1524_fu_1278_p0;

assign sext_ln1118_1525_fu_1042_p0 = kernel_data_V_1_21;

assign sext_ln1118_1525_fu_1042_p1 = sext_ln1118_1525_fu_1042_p0;

assign sext_ln1118_1526_fu_1047_p0 = kernel_data_V_1_22;

assign sext_ln1118_1526_fu_1047_p1 = sext_ln1118_1526_fu_1047_p0;

assign sext_ln1118_1527_fu_1052_p0 = kernel_data_V_1_23;

assign sext_ln1118_1527_fu_1052_p1 = sext_ln1118_1527_fu_1052_p0;

assign sext_ln1118_1528_fu_1057_p0 = kernel_data_V_1_24;

assign sext_ln1118_1528_fu_1057_p1 = sext_ln1118_1528_fu_1057_p0;

assign sext_ln1118_1529_fu_1062_p0 = kernel_data_V_1_25;

assign sext_ln1118_1529_fu_1062_p1 = sext_ln1118_1529_fu_1062_p0;

assign sext_ln1118_1530_fu_1067_p0 = kernel_data_V_1_26;

assign sext_ln1118_1530_fu_1067_p1 = sext_ln1118_1530_fu_1067_p0;

assign sext_ln1118_1531_fu_1401_p1 = $signed(grp_fu_746_p4);

assign sext_ln1118_1532_fu_1283_p0 = data_V_data_0_V_TDATA_int;

assign sext_ln1118_1532_fu_1283_p1 = sext_ln1118_1532_fu_1283_p0;

assign sext_ln1118_1533_fu_1352_p1 = tmp_data_1_V_2_reg_1738;

assign sext_ln1118_1534_fu_1356_p1 = tmp_data_2_V_2_reg_1743;

assign sext_ln1118_fu_898_p0 = kernel_data_V_1_3;

assign sext_ln1118_fu_898_p1 = sext_ln1118_fu_898_p0;

assign sext_ln703_779_fu_1583_p1 = $signed(add_ln703_3686_reg_1876);

assign sext_ln703_fu_1520_p1 = $signed(add_ln703_3678_fu_1514_p2);

assign sext_ln708_1167_fu_1425_p1 = $signed(trunc_ln708_s_reg_1753);

assign sext_ln708_1168_fu_1545_p1 = $signed(trunc_ln708_2933_reg_1758);

assign sext_ln708_1169_fu_1428_p1 = $signed(grp_fu_696_p4);

assign sext_ln708_1170_fu_1435_p1 = $signed(trunc_ln708_2936_reg_1821);

assign sext_ln708_1171_fu_1462_p1 = $signed(trunc_ln708_2939_fu_1452_p4);

assign sext_ln708_1172_fu_1466_p1 = $signed(trunc_ln708_2940_reg_1861);

assign sext_ln708_1173_fu_1469_p1 = $signed(grp_fu_746_p4);

assign sext_ln708_1174_fu_1548_p1 = $signed(grp_fu_696_p4);

assign sext_ln708_1175_fu_1562_p1 = $signed(trunc_ln708_2944_fu_1552_p4);

assign sext_ln708_fu_1422_p1 = $signed(trunc_ln_reg_1748);

assign shl_ln1118_s_fu_1245_p3 = {{line_buffer_Array_V_1_1_1_q0}, {1'd0}};

assign shl_ln_fu_1233_p3 = {{line_buffer_Array_V_1_1_1_q0}, {4'd0}};

assign start_out = real_start;

assign tmp_48_fu_864_p4 = {{pX_3[31:1]}};

assign tmp_data_0_V_fu_1508_p2 = (add_ln703_3668_fu_1479_p2 + add_ln703_3672_fu_1502_p2);

assign tmp_fu_844_p4 = {{pY_3[31:1]}};

assign trunc_ln708_2933_fu_1208_p1 = grp_fu_308_p2;

assign trunc_ln708_2938_fu_1438_p1 = grp_fu_303_p2;

assign trunc_ln708_2938_fu_1438_p4 = {{trunc_ln708_2938_fu_1438_p1[23:10]}};

assign trunc_ln708_2939_fu_1452_p1 = grp_fu_308_p2;

assign trunc_ln708_2939_fu_1452_p4 = {{trunc_ln708_2939_fu_1452_p1[24:10]}};

assign trunc_ln708_2944_fu_1552_p1 = grp_fu_303_p2;

assign trunc_ln708_2944_fu_1552_p4 = {{trunc_ln708_2944_fu_1552_p1[24:10]}};

assign trunc_ln708_5_fu_1218_p4 = {{grp_fu_305_p2[25:10]}};

assign trunc_ln708_s_fu_1198_p1 = grp_fu_307_p2;

endmodule //depthwise_conv_2d_cl_array_array_ap_fixed_3u_config2_depthwise_s
