// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_0_V_read,
        in_elem_data_1_V_read,
        in_elem_data_2_V_read,
        in_elem_data_3_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write,
        res_stream_V_data_6_V_din,
        res_stream_V_data_6_V_full_n,
        res_stream_V_data_6_V_write,
        res_stream_V_data_7_V_din,
        res_stream_V_data_7_V_full_n,
        res_stream_V_data_7_V_write,
        res_stream_V_data_0_V_blk_n,
        res_stream_V_data_1_V_blk_n,
        res_stream_V_data_2_V_blk_n,
        res_stream_V_data_3_V_blk_n,
        res_stream_V_data_4_V_blk_n,
        res_stream_V_data_5_V_blk_n,
        res_stream_V_data_6_V_blk_n,
        res_stream_V_data_7_V_blk_n,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_elem_data_0_V_read;
input  [15:0] in_elem_data_1_V_read;
input  [15:0] in_elem_data_2_V_read;
input  [15:0] in_elem_data_3_V_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [15:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [15:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;
output  [15:0] res_stream_V_data_6_V_din;
input   res_stream_V_data_6_V_full_n;
output   res_stream_V_data_6_V_write;
output  [15:0] res_stream_V_data_7_V_din;
input   res_stream_V_data_7_V_full_n;
output   res_stream_V_data_7_V_write;
output   res_stream_V_data_0_V_blk_n;
output   res_stream_V_data_1_V_blk_n;
output   res_stream_V_data_2_V_blk_n;
output   res_stream_V_data_3_V_blk_n;
output   res_stream_V_data_4_V_blk_n;
output   res_stream_V_data_5_V_blk_n;
output   res_stream_V_data_6_V_blk_n;
output   res_stream_V_data_7_V_blk_n;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;
reg res_stream_V_data_6_V_write;
reg res_stream_V_data_7_V_write;
reg res_stream_V_data_0_V_blk_n;
reg res_stream_V_data_1_V_blk_n;
reg res_stream_V_data_2_V_blk_n;
reg res_stream_V_data_3_V_blk_n;
reg res_stream_V_data_4_V_blk_n;
reg res_stream_V_data_5_V_blk_n;
reg res_stream_V_data_6_V_blk_n;
reg res_stream_V_data_7_V_blk_n;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1_4;
reg   [15:0] kernel_data_V_1_6;
reg   [15:0] kernel_data_V_1_7;
reg   [15:0] kernel_data_V_1_8;
reg   [15:0] kernel_data_V_1_10;
reg   [15:0] kernel_data_V_1_11;
reg   [15:0] kernel_data_V_1_17;
reg   [15:0] kernel_data_V_1_18;
reg   [15:0] kernel_data_V_1_19;
reg   [15:0] kernel_data_V_1_20;
reg   [15:0] kernel_data_V_1_21;
reg   [15:0] kernel_data_V_1_22;
reg   [15:0] kernel_data_V_1_23;
reg   [15:0] kernel_data_V_1_28;
reg   [15:0] kernel_data_V_1_29;
reg   [15:0] kernel_data_V_1_30;
reg   [15:0] kernel_data_V_1_31;
reg   [15:0] kernel_data_V_1_32;
reg   [15:0] kernel_data_V_1_33;
reg   [15:0] kernel_data_V_1_34;
reg   [15:0] kernel_data_V_1_35;
reg   [31:0] sX_2;
reg   [31:0] sY_2;
reg   [31:0] pY_2;
reg   [31:0] pX_2;
wire    ap_CS_fsm_state14;
reg   [0:0] and_ln289_2_reg_991;
reg   [31:0] sX_2_load_reg_959;
wire   [0:0] icmp_ln289_fu_364_p2;
reg   [0:0] icmp_ln289_reg_964;
reg   [31:0] sY_2_load_reg_969;
wire   [0:0] icmp_ln289_1_fu_374_p2;
reg   [0:0] icmp_ln289_1_reg_974;
reg   [31:0] pY_2_load_reg_979;
reg   [31:0] pX_2_load_reg_985;
wire   [0:0] and_ln289_2_fu_432_p2;
wire    ap_CS_fsm_state2;
reg   [15:0] ap_port_reg_in_elem_data_0_V_read;
reg   [15:0] ap_port_reg_in_elem_data_1_V_read;
reg   [15:0] ap_port_reg_in_elem_data_2_V_read;
reg   [15:0] ap_port_reg_in_elem_data_3_V_read;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_done;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_idle;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ready;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_7;
reg    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    io_acc_block_signal_op138;
reg    ap_block_state14_ignore_call0;
reg    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_start;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_done;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_idle;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ready;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_0;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_1;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_2;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_3;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_4;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_5;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_6;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_7;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_8;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_9;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_10;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_11;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_12;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_13;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_14;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_15;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_16;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_17;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_18;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_19;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_20;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_21;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_22;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_23;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_24;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_25;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_26;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_27;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_28;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_29;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_30;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_31;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_32;
reg    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ce;
wire   [31:0] select_ln323_fu_939_p3;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_269_p4;
reg    ap_block_state14;
wire   [0:0] icmp_ln313_fu_872_p2;
wire   [0:0] icmp_ln317_fu_918_p2;
reg    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg;
reg   [13:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
wire   [31:0] select_ln328_fu_893_p3;
wire   [31:0] add_ln321_fu_923_p2;
wire   [31:0] add_ln326_fu_877_p2;
wire   [30:0] tmp_fu_384_p4;
wire   [30:0] tmp_46_fu_404_p4;
wire   [0:0] icmp_ln289_2_fu_394_p2;
wire   [0:0] icmp_ln289_3_fu_414_p2;
wire   [0:0] and_ln289_1_fu_426_p2;
wire   [0:0] and_ln289_fu_420_p2;
wire   [31:0] add_ln328_fu_888_p2;
wire   [31:0] add_ln323_fu_934_p2;
reg    ap_condition_392;
reg    ap_condition_567;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 kernel_data_V_1_4 = 16'd0;
#0 kernel_data_V_1_6 = 16'd0;
#0 kernel_data_V_1_7 = 16'd0;
#0 kernel_data_V_1_8 = 16'd0;
#0 kernel_data_V_1_10 = 16'd0;
#0 kernel_data_V_1_11 = 16'd0;
#0 kernel_data_V_1_17 = 16'd0;
#0 kernel_data_V_1_18 = 16'd0;
#0 kernel_data_V_1_19 = 16'd0;
#0 kernel_data_V_1_20 = 16'd0;
#0 kernel_data_V_1_21 = 16'd0;
#0 kernel_data_V_1_22 = 16'd0;
#0 kernel_data_V_1_23 = 16'd0;
#0 kernel_data_V_1_28 = 16'd0;
#0 kernel_data_V_1_29 = 16'd0;
#0 kernel_data_V_1_30 = 16'd0;
#0 kernel_data_V_1_31 = 16'd0;
#0 kernel_data_V_1_32 = 16'd0;
#0 kernel_data_V_1_33 = 16'd0;
#0 kernel_data_V_1_34 = 16'd0;
#0 kernel_data_V_1_35 = 16'd0;
#0 sX_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 pX_2 = 32'd0;
#0 grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg = 1'b0;
end

dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ready),
    .data_0_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_0),
    .data_2_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_1),
    .data_3_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_2),
    .data_4_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_10),
    .data_7_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_12),
    .data_8_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_13),
    .data_9_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_14),
    .data_11_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_16),
    .data_13_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_3),
    .data_14_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_4),
    .data_15_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_5),
    .data_16_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_17),
    .data_17_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_18),
    .data_18_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_19),
    .data_19_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_20),
    .data_20_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_21),
    .data_21_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_22),
    .data_22_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_23),
    .data_23_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_24),
    .data_24_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_6),
    .data_25_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_7),
    .data_26_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_8),
    .data_27_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_9),
    .data_28_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_25),
    .data_29_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_26),
    .data_30_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_27),
    .data_31_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_28),
    .data_32_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_29),
    .data_33_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_30),
    .data_34_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_31),
    .data_35_V_read(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_32),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_7),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ce)
);

shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_start),
    .ap_done(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_done),
    .ap_idle(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_idle),
    .ap_ready(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ready),
    .in_elem_data_0_V_read(ap_port_reg_in_elem_data_0_V_read),
    .in_elem_data_1_V_read(ap_port_reg_in_elem_data_1_V_read),
    .in_elem_data_2_V_read(ap_port_reg_in_elem_data_2_V_read),
    .in_elem_data_3_V_read(ap_port_reg_in_elem_data_3_V_read),
    .kernel_window_4_V_read(kernel_data_V_1_4),
    .kernel_window_6_V_read(kernel_data_V_1_6),
    .kernel_window_7_V_read(kernel_data_V_1_7),
    .kernel_window_8_V_read(kernel_data_V_1_8),
    .kernel_window_10_V_read(kernel_data_V_1_10),
    .kernel_window_11_V_read(kernel_data_V_1_11),
    .kernel_window_17_V_read(kernel_data_V_1_17),
    .kernel_window_18_V_read(kernel_data_V_1_18),
    .kernel_window_19_V_read(kernel_data_V_1_19),
    .kernel_window_20_V_read(kernel_data_V_1_20),
    .kernel_window_21_V_read(kernel_data_V_1_21),
    .kernel_window_22_V_read(kernel_data_V_1_22),
    .kernel_window_23_V_read(kernel_data_V_1_23),
    .kernel_window_28_V_read(kernel_data_V_1_28),
    .kernel_window_29_V_read(kernel_data_V_1_29),
    .kernel_window_30_V_read(kernel_data_V_1_30),
    .kernel_window_31_V_read(kernel_data_V_1_31),
    .kernel_window_32_V_read(kernel_data_V_1_32),
    .kernel_window_33_V_read(kernel_data_V_1_33),
    .kernel_window_34_V_read(kernel_data_V_1_34),
    .kernel_window_35_V_read(kernel_data_V_1_35),
    .ap_return_0(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_0),
    .ap_return_1(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_1),
    .ap_return_2(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_2),
    .ap_return_3(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_3),
    .ap_return_4(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_4),
    .ap_return_5(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_5),
    .ap_return_6(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_6),
    .ap_return_7(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_7),
    .ap_return_8(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_8),
    .ap_return_9(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_9),
    .ap_return_10(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_10),
    .ap_return_11(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_11),
    .ap_return_12(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_12),
    .ap_return_13(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_13),
    .ap_return_14(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_14),
    .ap_return_15(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_15),
    .ap_return_16(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_16),
    .ap_return_17(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_17),
    .ap_return_18(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_18),
    .ap_return_19(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_19),
    .ap_return_20(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_20),
    .ap_return_21(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_21),
    .ap_return_22(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_22),
    .ap_return_23(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_23),
    .ap_return_24(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_24),
    .ap_return_25(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_25),
    .ap_return_26(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_26),
    .ap_return_27(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_27),
    .ap_return_28(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_28),
    .ap_return_29(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_29),
    .ap_return_30(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_30),
    .ap_return_31(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_31),
    .ap_return_32(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_32),
    .ap_ce(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state2) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln289_2_fu_432_p2))) begin
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_392)) begin
        if ((icmp_ln313_fu_872_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln313_fu_872_p2 == 1'd0)) begin
            pX_2 <= add_ln326_fu_877_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_567)) begin
        if ((icmp_ln317_fu_918_p2 == 1'd1)) begin
            pY_2 <= 32'd0;
        end else if ((icmp_ln317_fu_918_p2 == 1'd0)) begin
            pY_2 <= add_ln321_fu_923_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_392)) begin
        if ((icmp_ln313_fu_872_p2 == 1'd1)) begin
            sX_2 <= 32'd0;
        end else if ((icmp_ln313_fu_872_p2 == 1'd0)) begin
            sX_2 <= select_ln328_fu_893_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (1'b1 == ap_ce))) begin
        and_ln289_2_reg_991 <= and_ln289_2_fu_432_p2;
        ap_port_reg_in_elem_data_0_V_read <= in_elem_data_0_V_read;
        ap_port_reg_in_elem_data_1_V_read <= in_elem_data_1_V_read;
        ap_port_reg_in_elem_data_2_V_read <= in_elem_data_2_V_read;
        ap_port_reg_in_elem_data_3_V_read <= in_elem_data_3_V_read;
        icmp_ln289_1_reg_974 <= icmp_ln289_1_fu_374_p2;
        icmp_ln289_reg_964 <= icmp_ln289_fu_364_p2;
        pX_2_load_reg_985 <= pX_2;
        pY_2_load_reg_979 <= pY_2;
        sX_2_load_reg_959 <= sX_2;
        sY_2_load_reg_969 <= sY_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        kernel_data_V_1_10 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_15;
        kernel_data_V_1_11 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_16;
        kernel_data_V_1_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_18;
        kernel_data_V_1_18 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_19;
        kernel_data_V_1_19 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_20;
        kernel_data_V_1_20 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_21;
        kernel_data_V_1_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_22;
        kernel_data_V_1_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_23;
        kernel_data_V_1_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_24;
        kernel_data_V_1_28 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_25;
        kernel_data_V_1_29 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_26;
        kernel_data_V_1_30 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_27;
        kernel_data_V_1_31 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_28;
        kernel_data_V_1_32 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_29;
        kernel_data_V_1_33 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_30;
        kernel_data_V_1_34 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_31;
        kernel_data_V_1_35 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_32;
        kernel_data_V_1_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_10;
        kernel_data_V_1_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_11;
        kernel_data_V_1_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_12;
        kernel_data_V_1_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_return_13;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (icmp_ln313_fu_872_p2 == 1'd1))) begin
        sY_2 <= ap_phi_mux_storemerge_phi_fu_269_p4;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln313_fu_872_p2 == 1'd1))) begin
        if ((icmp_ln317_fu_918_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_269_p4 = 32'd0;
        end else if ((icmp_ln317_fu_918_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_269_p4 = select_ln323_fu_939_p3;
        end else begin
            ap_phi_mux_storemerge_phi_fu_269_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_269_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ce = 1'b1;
    end else begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_start = 1'b1;
    end else begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_311_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14))))) begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n;
    end else begin
        res_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_6_V_write = 1'b1;
    end else begin
        res_stream_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n;
    end else begin
        res_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_991))) begin
        res_stream_V_data_7_V_write = 1'b1;
    end else begin
        res_stream_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln321_fu_923_p2 = (pY_2_load_reg_979 + 32'd1);

assign add_ln323_fu_934_p2 = (sY_2_load_reg_969 + 32'd1);

assign add_ln326_fu_877_p2 = (pX_2_load_reg_985 + 32'd1);

assign add_ln328_fu_888_p2 = (sX_2_load_reg_959 + 32'd1);

assign and_ln289_1_fu_426_p2 = (icmp_ln289_3_fu_414_p2 & icmp_ln289_2_fu_394_p2);

assign and_ln289_2_fu_432_p2 = (and_ln289_fu_420_p2 & and_ln289_1_fu_426_p2);

assign and_ln289_fu_420_p2 = (icmp_ln289_fu_364_p2 & icmp_ln289_1_fu_374_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

always @ (*) begin
    ap_block_state14 = ((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991));
end

always @ (*) begin
    ap_block_state14_ignore_call0 = ((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991));
end

always @ (*) begin
    ap_condition_392 = (~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce));
end

always @ (*) begin
    ap_condition_567 = (~((io_acc_block_signal_op138 == 1'b0) & (1'd1 == and_ln289_2_reg_991)) & (1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce) & (icmp_ln313_fu_872_p2 == 1'd1));
end

assign grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_start_reg;

assign icmp_ln289_1_fu_374_p2 = ((sY_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_2_fu_394_p2 = (($signed(tmp_fu_384_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_3_fu_414_p2 = (($signed(tmp_46_fu_404_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_364_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_872_p2 = ((pX_2_load_reg_985 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_918_p2 = ((pY_2_load_reg_979 == 32'd5) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op138 = (res_stream_V_data_7_V_full_n & res_stream_V_data_6_V_full_n & res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_0;

assign res_stream_V_data_1_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_1;

assign res_stream_V_data_2_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_2;

assign res_stream_V_data_3_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_3;

assign res_stream_V_data_4_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_4;

assign res_stream_V_data_5_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_5;

assign res_stream_V_data_6_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_6;

assign res_stream_V_data_7_V_din = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_276_ap_return_7;

assign select_ln323_fu_939_p3 = ((icmp_ln289_1_reg_974[0:0] === 1'b1) ? 32'd2 : add_ln323_fu_934_p2);

assign select_ln328_fu_893_p3 = ((icmp_ln289_reg_964[0:0] === 1'b1) ? 32'd2 : add_ln328_fu_888_p2);

assign tmp_46_fu_404_p4 = {{pX_2[31:1]}};

assign tmp_fu_384_p4 = {{pY_2[31:1]}};

endmodule //compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s
