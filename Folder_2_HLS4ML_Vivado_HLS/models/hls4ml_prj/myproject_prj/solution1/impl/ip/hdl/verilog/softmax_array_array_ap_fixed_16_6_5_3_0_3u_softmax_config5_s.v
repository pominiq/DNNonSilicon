// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        res_V_data_0_V_TDATA,
        res_V_data_0_V_TVALID,
        res_V_data_0_V_TREADY,
        res_V_data_1_V_TDATA,
        res_V_data_1_V_TVALID,
        res_V_data_1_V_TREADY,
        res_V_data_2_V_TDATA,
        res_V_data_2_V_TVALID,
        res_V_data_2_V_TREADY
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
output  [15:0] res_V_data_0_V_TDATA;
output   res_V_data_0_V_TVALID;
input   res_V_data_0_V_TREADY;
output  [15:0] res_V_data_1_V_TDATA;
output   res_V_data_1_V_TVALID;
input   res_V_data_1_V_TREADY;
output  [15:0] res_V_data_2_V_TDATA;
output   res_V_data_2_V_TVALID;
input   res_V_data_2_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_state7;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n;
reg    data_V_data_1_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n;
reg    data_V_data_2_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n;
reg    res_V_data_0_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n;
reg    res_V_data_1_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n;
reg    res_V_data_2_V_TDATA_blk_n;
reg    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_start;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_done;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_idle;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_ready;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_read;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TREADY;
reg    ap_block_state1_ignore_call6;
wire    ap_CS_fsm_state8;
wire    regslice_both_res_V_data_0_V_U_apdone_blk;
wire    regslice_both_res_V_data_1_V_U_apdone_blk;
wire    regslice_both_res_V_data_2_V_U_apdone_blk;
reg    ap_block_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_block_state7;
wire    res_V_data_0_V_TREADY_int;
wire    regslice_both_res_V_data_0_V_U_vld_out;
wire    res_V_data_1_V_TREADY_int;
wire    regslice_both_res_V_data_1_V_U_vld_out;
wire    res_V_data_2_V_TREADY_int;
wire    regslice_both_res_V_data_2_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_start),
    .ap_done(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_done),
    .ap_idle(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_idle),
    .ap_ready(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_ready),
    .data_V_data_0_V_dout(data_V_data_0_V_dout),
    .data_V_data_0_V_empty_n(data_V_data_0_V_empty_n),
    .data_V_data_0_V_read(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_read),
    .data_V_data_1_V_dout(data_V_data_1_V_dout),
    .data_V_data_1_V_empty_n(data_V_data_1_V_empty_n),
    .data_V_data_1_V_read(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_read),
    .data_V_data_2_V_dout(data_V_data_2_V_dout),
    .data_V_data_2_V_empty_n(data_V_data_2_V_empty_n),
    .data_V_data_2_V_read(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_read),
    .res_V_data_0_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA),
    .res_V_data_0_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TVALID),
    .res_V_data_0_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TREADY),
    .res_V_data_1_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA),
    .res_V_data_1_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TVALID),
    .res_V_data_1_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TREADY),
    .res_V_data_2_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA),
    .res_V_data_2_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TVALID),
    .res_V_data_2_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TREADY),
    .data_V_data_0_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n),
    .data_V_data_1_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n),
    .data_V_data_2_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n),
    .res_V_data_0_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n),
    .res_V_data_1_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n),
    .res_V_data_2_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_V_data_0_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA),
    .vld_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TVALID),
    .ack_in(res_V_data_0_V_TREADY_int),
    .data_out(res_V_data_0_V_TDATA),
    .vld_out(regslice_both_res_V_data_0_V_U_vld_out),
    .ack_out(res_V_data_0_V_TREADY),
    .apdone_blk(regslice_both_res_V_data_0_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_V_data_1_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA),
    .vld_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TVALID),
    .ack_in(res_V_data_1_V_TREADY_int),
    .data_out(res_V_data_1_V_TDATA),
    .vld_out(regslice_both_res_V_data_1_V_U_vld_out),
    .ack_out(res_V_data_1_V_TREADY),
    .apdone_blk(regslice_both_res_V_data_1_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_res_V_data_2_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA),
    .vld_in(grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TVALID),
    .ack_in(res_V_data_2_V_TREADY_int),
    .data_out(res_V_data_2_V_TDATA),
    .vld_out(regslice_both_res_V_data_2_V_U_vld_out),
    .ack_out(res_V_data_2_V_TREADY),
    .apdone_blk(regslice_both_res_V_data_2_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_res_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (*) begin
    if ((~((regslice_both_res_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_0_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_0_V_read = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_read;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_1_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_1_V_read = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_read;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_2_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_2_V_read = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_read;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_start = 1'b1;
    end else begin
        grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_0_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n;
    end else begin
        res_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_1_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n;
    end else begin
        res_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_2_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n;
    end else begin
        res_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if ((~((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((regslice_both_res_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_0_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call6 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state7 = ((grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_data_V_data_0_V_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((regslice_both_res_V_data_2_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_1_V_U_apdone_blk == 1'b1) | (regslice_both_res_V_data_0_V_U_apdone_blk == 1'b1));
end

assign grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_0_V_TREADY = (res_V_data_0_V_TREADY_int & ap_CS_fsm_state7);

assign grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_1_V_TREADY = (res_V_data_1_V_TREADY_int & ap_CS_fsm_state7);

assign grp_softmax_stable_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s_fu_72_res_V_data_2_V_TREADY = (res_V_data_2_V_TREADY_int & ap_CS_fsm_state7);

assign res_V_data_0_V_TVALID = regslice_both_res_V_data_0_V_U_vld_out;

assign res_V_data_1_V_TVALID = regslice_both_res_V_data_1_V_U_vld_out;

assign res_V_data_2_V_TVALID = regslice_both_res_V_data_2_V_U_vld_out;

endmodule //softmax_array_array_ap_fixed_16_6_5_3_0_3u_softmax_config5_s
