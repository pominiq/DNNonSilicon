

================================================================
== Vivado HLS Report for 'compute_global_pool_array_array_ap_fixed_16_6_5_3_0_8u_config6_s'
================================================================
* Date:           Tue Dec 19 17:43:21 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 25.00 ns | 2.077 ns |   3.12 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |        0|        0|   0 ns   |   0 ns   |    1|    1| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.07>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%data_window_7_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_7_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 2 'read' 'data_window_7_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%data_window_6_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_6_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 3 'read' 'data_window_6_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%data_window_5_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_5_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 4 'read' 'data_window_5_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%data_window_4_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_4_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 5 'read' 'data_window_4_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%data_window_3_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_3_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 6 'read' 'data_window_3_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%data_window_2_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_2_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 7 'read' 'data_window_2_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%data_window_1_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_1_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 8 'read' 'data_window_1_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%data_window_0_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %data_window_0_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 9 'read' 'data_window_0_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%in_elem_data_7_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_7_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 10 'read' 'in_elem_data_7_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%in_elem_data_6_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_6_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 11 'read' 'in_elem_data_6_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%in_elem_data_5_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_5_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 12 'read' 'in_elem_data_5_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%in_elem_data_4_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_4_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 13 'read' 'in_elem_data_4_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%in_elem_data_3_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_3_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 14 'read' 'in_elem_data_3_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%in_elem_data_2_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_2_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 15 'read' 'in_elem_data_2_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%in_elem_data_1_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_1_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 16 'read' 'in_elem_data_1_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%in_elem_data_0_V_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_elem_data_0_V_read)" [firmware/nnet_utils/nnet_pooling_stream.h:474]   --->   Operation 17 'read' 'in_elem_data_0_V_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.07ns)   --->   "%add_ln703 = add i16 %in_elem_data_0_V_read_1, %data_window_0_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 18 'add' 'add_ln703' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (2.07ns)   --->   "%add_ln703_212 = add i16 %in_elem_data_1_V_read_1, %data_window_1_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 19 'add' 'add_ln703_212' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (2.07ns)   --->   "%add_ln703_213 = add i16 %in_elem_data_2_V_read_1, %data_window_2_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 20 'add' 'add_ln703_213' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (2.07ns)   --->   "%add_ln703_214 = add i16 %in_elem_data_3_V_read_1, %data_window_3_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 21 'add' 'add_ln703_214' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (2.07ns)   --->   "%add_ln703_215 = add i16 %in_elem_data_4_V_read_1, %data_window_4_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 22 'add' 'add_ln703_215' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (2.07ns)   --->   "%add_ln703_216 = add i16 %in_elem_data_5_V_read_1, %data_window_5_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 23 'add' 'add_ln703_216' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (2.07ns)   --->   "%add_ln703_217 = add i16 %in_elem_data_6_V_read_1, %data_window_6_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 24 'add' 'add_ln703_217' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (2.07ns)   --->   "%add_ln703_218 = add i16 %in_elem_data_7_V_read_1, %data_window_7_V_read_1" [firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487]   --->   Operation 25 'add' 'add_ln703_218' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } undef, i16 %add_ln703, 0" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 26 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv, i16 %add_ln703_212, 1" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 27 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_1, i16 %add_ln703_213, 2" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 28 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_2, i16 %add_ln703_214, 3" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 29 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_3, i16 %add_ln703_215, 4" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 30 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_4, i16 %add_ln703_216, 5" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 31 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_5, i16 %add_ln703_217, 6" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 32 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_6, i16 %add_ln703_218, 7" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 33 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "ret { i16, i16, i16, i16, i16, i16, i16, i16 } %mrv_7" [firmware/nnet_utils/nnet_pooling_stream.h:490]   --->   Operation 34 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 25ns, clock uncertainty: 3.12ns.

 <State 1>: 2.08ns
The critical path consists of the following:
	wire read on port 'data_window_7_V_read' (firmware/nnet_utils/nnet_pooling_stream.h:474) [17]  (0 ns)
	'add' operation ('data_window[7].V', firmware/nnet_utils/nnet_pooling_stream.h:469->firmware/nnet_utils/nnet_pooling_stream.h:487) [40]  (2.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
