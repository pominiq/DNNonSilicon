// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_HH_
#define _reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mux_83_18_1_1.h"

namespace ap_rtl {

struct reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<17> > x_0_V;
    sc_in< sc_lv<17> > x_1_V;
    sc_in< sc_lv<17> > x_2_V;
    sc_in< sc_lv<17> > x_3_V;
    sc_in< sc_lv<17> > x_4_V;
    sc_in< sc_lv<17> > x_5_V;
    sc_in< sc_lv<17> > x_6_V;
    sc_in< sc_lv<17> > x_7_V;
    sc_in< sc_lv<5> > x_V_offset;
    sc_out< sc_lv<18> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s(sc_module_name name);
    SC_HAS_PROCESS(reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s);

    ~reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s();

    sc_trace_file* mVcdFile;

    myproject_mux_83_18_1_1<1,1,18,18,18,18,18,18,18,18,3,18>* myproject_mux_83_18_1_1_U165;
    myproject_mux_83_18_1_1<1,1,18,18,18,18,18,18,18,18,3,18>* myproject_mux_83_18_1_1_U166;
    myproject_mux_83_18_1_1<1,1,18,18,18,18,18,18,18,18,3,18>* myproject_mux_83_18_1_1_U167;
    myproject_mux_83_18_1_1<1,1,18,18,18,18,18,18,18,18,3,18>* myproject_mux_83_18_1_1_U168;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<18> > p_Val2_20_fu_266_p3;
    sc_signal< sc_lv<18> > p_Val2_20_reg_506;
    sc_signal< sc_lv<18> > p_Val2_21_fu_412_p3;
    sc_signal< sc_lv<18> > p_Val2_21_reg_512;
    sc_signal< sc_lv<18> > zext_ln43_fu_102_p1;
    sc_signal< sc_lv<18> > zext_ln43_1_fu_106_p1;
    sc_signal< sc_lv<18> > zext_ln43_2_fu_110_p1;
    sc_signal< sc_lv<18> > zext_ln43_3_fu_114_p1;
    sc_signal< sc_lv<18> > zext_ln43_4_fu_118_p1;
    sc_signal< sc_lv<18> > zext_ln43_5_fu_122_p1;
    sc_signal< sc_lv<18> > zext_ln43_6_fu_126_p1;
    sc_signal< sc_lv<18> > zext_ln43_7_fu_130_p1;
    sc_signal< sc_lv<3> > empty_fu_98_p1;
    sc_signal< sc_lv<3> > p_Val2_14_fu_162_p9;
    sc_signal< sc_lv<18> > p_Val2_s_fu_134_p10;
    sc_signal< sc_lv<18> > p_Val2_14_fu_162_p10;
    sc_signal< sc_lv<19> > rhs_V_1_fu_188_p1;
    sc_signal< sc_lv<19> > lhs_V_1_fu_184_p1;
    sc_signal< sc_lv<19> > ret_V_fu_192_p2;
    sc_signal< sc_lv<18> > p_Val2_16_fu_206_p2;
    sc_signal< sc_lv<1> > p_Result_13_fu_212_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_198_p3;
    sc_signal< sc_lv<1> > xor_ln786_9_fu_220_p2;
    sc_signal< sc_lv<1> > xor_ln340_19_fu_238_p2;
    sc_signal< sc_lv<1> > xor_ln340_18_fu_232_p2;
    sc_signal< sc_lv<1> > underflow_fu_226_p2;
    sc_signal< sc_lv<1> > or_ln340_9_fu_244_p2;
    sc_signal< sc_lv<18> > select_ln340_18_fu_250_p3;
    sc_signal< sc_lv<18> > select_ln388_9_fu_258_p3;
    sc_signal< sc_lv<3> > p_Val2_17_fu_280_p9;
    sc_signal< sc_lv<3> > p_Val2_1_fu_308_p9;
    sc_signal< sc_lv<18> > p_Val2_17_fu_280_p10;
    sc_signal< sc_lv<18> > p_Val2_1_fu_308_p10;
    sc_signal< sc_lv<19> > rhs_V_2_fu_334_p1;
    sc_signal< sc_lv<19> > lhs_V_2_fu_330_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_338_p2;
    sc_signal< sc_lv<18> > p_Val2_19_fu_352_p2;
    sc_signal< sc_lv<1> > p_Result_15_fu_358_p3;
    sc_signal< sc_lv<1> > p_Result_14_fu_344_p3;
    sc_signal< sc_lv<1> > xor_ln786_10_fu_366_p2;
    sc_signal< sc_lv<1> > xor_ln340_21_fu_384_p2;
    sc_signal< sc_lv<1> > xor_ln340_20_fu_378_p2;
    sc_signal< sc_lv<1> > underflow_1_fu_372_p2;
    sc_signal< sc_lv<1> > or_ln340_10_fu_390_p2;
    sc_signal< sc_lv<18> > select_ln340_20_fu_396_p3;
    sc_signal< sc_lv<18> > select_ln388_10_fu_404_p3;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<19> > lhs_V_fu_420_p1;
    sc_signal< sc_lv<19> > rhs_V_fu_423_p1;
    sc_signal< sc_lv<19> > ret_V_2_fu_426_p2;
    sc_signal< sc_lv<18> > p_Val2_23_fu_440_p2;
    sc_signal< sc_lv<1> > p_Result_17_fu_444_p3;
    sc_signal< sc_lv<1> > p_Result_16_fu_432_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_452_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_470_p2;
    sc_signal< sc_lv<1> > xor_ln340_22_fu_464_p2;
    sc_signal< sc_lv<1> > underflow_2_fu_458_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_476_p2;
    sc_signal< sc_lv<18> > select_ln340_fu_482_p3;
    sc_signal< sc_lv<18> > select_ln388_fu_490_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<18> ap_const_lv18_1FFFF;
    static const sc_lv<18> ap_const_lv18_20000;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_empty_fu_98_p1();
    void thread_lhs_V_1_fu_184_p1();
    void thread_lhs_V_2_fu_330_p1();
    void thread_lhs_V_fu_420_p1();
    void thread_or_ln340_10_fu_390_p2();
    void thread_or_ln340_9_fu_244_p2();
    void thread_or_ln340_fu_476_p2();
    void thread_p_Result_13_fu_212_p3();
    void thread_p_Result_14_fu_344_p3();
    void thread_p_Result_15_fu_358_p3();
    void thread_p_Result_16_fu_432_p3();
    void thread_p_Result_17_fu_444_p3();
    void thread_p_Result_s_fu_198_p3();
    void thread_p_Val2_14_fu_162_p9();
    void thread_p_Val2_16_fu_206_p2();
    void thread_p_Val2_17_fu_280_p9();
    void thread_p_Val2_19_fu_352_p2();
    void thread_p_Val2_1_fu_308_p9();
    void thread_p_Val2_20_fu_266_p3();
    void thread_p_Val2_21_fu_412_p3();
    void thread_p_Val2_23_fu_440_p2();
    void thread_ret_V_1_fu_338_p2();
    void thread_ret_V_2_fu_426_p2();
    void thread_ret_V_fu_192_p2();
    void thread_rhs_V_1_fu_188_p1();
    void thread_rhs_V_2_fu_334_p1();
    void thread_rhs_V_fu_423_p1();
    void thread_select_ln340_18_fu_250_p3();
    void thread_select_ln340_20_fu_396_p3();
    void thread_select_ln340_fu_482_p3();
    void thread_select_ln388_10_fu_404_p3();
    void thread_select_ln388_9_fu_258_p3();
    void thread_select_ln388_fu_490_p3();
    void thread_underflow_1_fu_372_p2();
    void thread_underflow_2_fu_458_p2();
    void thread_underflow_fu_226_p2();
    void thread_xor_ln340_18_fu_232_p2();
    void thread_xor_ln340_19_fu_238_p2();
    void thread_xor_ln340_20_fu_378_p2();
    void thread_xor_ln340_21_fu_384_p2();
    void thread_xor_ln340_22_fu_464_p2();
    void thread_xor_ln340_fu_470_p2();
    void thread_xor_ln786_10_fu_366_p2();
    void thread_xor_ln786_9_fu_220_p2();
    void thread_xor_ln786_fu_452_p2();
    void thread_zext_ln43_1_fu_106_p1();
    void thread_zext_ln43_2_fu_110_p1();
    void thread_zext_ln43_3_fu_114_p1();
    void thread_zext_ln43_4_fu_118_p1();
    void thread_zext_ln43_5_fu_122_p1();
    void thread_zext_ln43_6_fu_126_p1();
    void thread_zext_ln43_7_fu_130_p1();
    void thread_zext_ln43_fu_102_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
