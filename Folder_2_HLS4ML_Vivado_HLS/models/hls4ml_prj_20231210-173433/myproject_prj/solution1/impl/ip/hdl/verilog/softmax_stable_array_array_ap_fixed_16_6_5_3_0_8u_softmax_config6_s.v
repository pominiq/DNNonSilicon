// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state29 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] exp_table2_address0;
reg    exp_table2_ce0;
wire   [16:0] exp_table2_q0;
wire   [9:0] invert_table3_address0;
reg    invert_table3_ce0;
wire   [17:0] invert_table3_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln196_reg_1641;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln196_reg_1641_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [4:0] i_0_reg_474;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_state26_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln196_fu_542_p2;
reg   [0:0] icmp_ln196_reg_1641_pp0_iter1_reg;
reg   [0:0] icmp_ln196_reg_1641_pp0_iter2_reg;
wire   [4:0] i_fu_548_p2;
reg   [4:0] i_reg_1645;
reg  signed [15:0] data_array_0_V_reg_1650;
wire    io_acc_block_signal_op60;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state19_pp0_stage1_iter2;
wire    ap_block_state27_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg  signed [15:0] data_array_1_V_reg_1656;
reg  signed [15:0] data_array_2_V_reg_1662;
reg  signed [15:0] data_array_3_V_reg_1668;
reg  signed [15:0] data_array_4_V_reg_1674;
reg  signed [15:0] data_array_5_V_reg_1680;
reg  signed [15:0] data_array_6_V_reg_1686;
reg  signed [15:0] data_array_7_V_reg_1692;
wire   [0:0] icmp_ln1496_fu_586_p2;
reg   [0:0] icmp_ln1496_reg_1698;
wire   [0:0] icmp_ln1496_1_fu_592_p2;
reg   [0:0] icmp_ln1496_1_reg_1703;
wire   [0:0] icmp_ln1496_3_fu_598_p2;
reg   [0:0] icmp_ln1496_3_reg_1708;
wire   [0:0] icmp_ln1496_4_fu_604_p2;
reg   [0:0] icmp_ln1496_4_reg_1713;
wire   [15:0] x_max_V_fu_664_p3;
reg   [15:0] x_max_V_reg_1718;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state20_pp0_stage2_iter2;
wire    io_acc_block_signal_op303;
reg    ap_block_state28_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state21_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] y_V_1_fu_1180_p3;
reg   [9:0] y_V_1_reg_1728;
wire   [9:0] y_V_2_fu_1214_p3;
reg   [9:0] y_V_2_reg_1733;
wire   [9:0] y_V_3_fu_1248_p3;
reg   [9:0] y_V_3_reg_1738;
wire   [9:0] y_V_4_fu_1282_p3;
reg   [9:0] y_V_4_reg_1743;
wire   [9:0] y_V_5_fu_1316_p3;
reg   [9:0] y_V_5_reg_1748;
wire   [9:0] y_V_6_fu_1350_p3;
reg   [9:0] y_V_6_reg_1753;
wire   [9:0] y_V_7_fu_1384_p3;
reg   [9:0] y_V_7_reg_1758;
reg   [16:0] exp_res_0_V_1_reg_1763;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state22_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
reg   [16:0] exp_res_0_V_1_reg_1763_pp0_iter1_reg;
reg   [16:0] exp_res_1_V_1_reg_1774;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state23_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
reg   [16:0] exp_res_1_V_1_reg_1774_pp0_iter1_reg;
reg   [16:0] exp_res_2_V_1_reg_1785;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state24_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
reg   [16:0] exp_res_2_V_1_reg_1785_pp0_iter1_reg;
reg   [16:0] exp_res_3_V_1_reg_1796;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state25_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
reg   [16:0] exp_res_3_V_1_reg_1796_pp0_iter1_reg;
reg   [16:0] exp_res_4_V_1_reg_1807;
reg    ap_enable_reg_pp0_iter1;
reg   [16:0] exp_res_4_V_1_reg_1807_pp0_iter2_reg;
reg   [16:0] exp_res_5_V_1_reg_1817;
reg   [16:0] exp_res_5_V_1_reg_1817_pp0_iter2_reg;
reg   [16:0] exp_res_6_V_1_reg_1827;
reg   [16:0] exp_res_6_V_1_reg_1827_pp0_iter2_reg;
reg   [16:0] exp_res_7_V_1_reg_1837;
reg   [16:0] exp_res_7_V_1_reg_1837_pp0_iter2_reg;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return;
reg  signed [17:0] p_Val2_9_reg_1842;
reg  signed [17:0] p_Val2_1_reg_1848;
reg   [17:0] inv_exp_sum_V_reg_1859;
wire  signed [25:0] sext_ln241_fu_1557_p1;
reg  signed [25:0] sext_ln241_reg_1864;
reg   [15:0] tmp_data_0_V_reg_1869;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] tmp_data_1_V_reg_1874;
reg   [15:0] tmp_data_2_V_reg_1879;
reg   [15:0] tmp_data_3_V_reg_1884;
reg   [15:0] tmp_data_4_V_reg_1889;
reg   [15:0] tmp_data_5_V_reg_1894;
reg   [15:0] tmp_data_6_V_reg_1899;
reg   [15:0] tmp_data_7_V_reg_1904;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_done;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_idle;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready;
reg   [4:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce;
wire    ap_block_state6_pp0_stage4_iter0_ignore_call163;
wire    ap_block_state14_pp0_stage4_iter1_ignore_call163;
wire    ap_block_state22_pp0_stage4_iter2_ignore_call163;
wire    ap_block_pp0_stage4_11001_ignoreCallOp228;
wire    ap_block_state7_pp0_stage5_iter0_ignore_call163;
wire    ap_block_state15_pp0_stage5_iter1_ignore_call163;
wire    ap_block_state23_pp0_stage5_iter2_ignore_call163;
wire    ap_block_pp0_stage5_11001_ignoreCallOp229;
wire    ap_block_state8_pp0_stage6_iter0_ignore_call164;
wire    ap_block_state16_pp0_stage6_iter1_ignore_call164;
wire    ap_block_state24_pp0_stage6_iter2_ignore_call164;
wire    ap_block_pp0_stage6_11001_ignoreCallOp230;
wire    ap_block_state9_pp0_stage7_iter0_ignore_call164;
wire    ap_block_state17_pp0_stage7_iter1_ignore_call164;
wire    ap_block_state25_pp0_stage7_iter2_ignore_call164;
wire    ap_block_pp0_stage7_11001_ignoreCallOp231;
reg   [4:0] ap_phi_mux_i_0_phi_fu_478_p4;
wire    ap_block_pp0_stage0;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg;
reg   [16:0] exp_res_0_V_fu_340;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [16:0] exp_res_1_V_fu_336;
reg   [16:0] exp_res_2_V_fu_332;
reg   [16:0] exp_res_3_V_fu_328;
reg   [16:0] exp_res_4_V_fu_324;
reg   [16:0] exp_res_5_V_fu_320;
reg   [16:0] exp_res_6_V_fu_316;
reg   [16:0] exp_res_7_V_fu_312;
wire   [63:0] zext_ln225_fu_1149_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln225_1_fu_1392_p1;
wire   [63:0] zext_ln225_2_fu_1396_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln225_3_fu_1400_p1;
wire   [63:0] zext_ln225_4_fu_1404_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln225_5_fu_1429_p1;
wire   [63:0] zext_ln225_6_fu_1438_p1;
wire   [63:0] zext_ln225_7_fu_1447_p1;
wire   [63:0] zext_ln235_fu_1552_p1;
reg    ap_block_pp0_stage2_01001;
reg   [16:0] grp_fu_485_p0;
wire   [25:0] zext_ln1118_fu_1561_p1;
wire   [25:0] zext_ln1118_1_fu_1565_p1;
wire   [25:0] zext_ln1118_2_fu_1569_p1;
wire   [25:0] zext_ln1118_3_fu_1573_p1;
wire   [25:0] zext_ln1118_4_fu_1577_p1;
wire   [25:0] zext_ln1118_5_fu_1581_p1;
wire   [25:0] zext_ln1118_6_fu_1585_p1;
wire   [25:0] zext_ln1118_7_fu_1589_p1;
reg  signed [17:0] grp_fu_485_p1;
wire   [25:0] grp_fu_485_p2;
wire  signed [15:0] icmp_ln1496_fu_586_p0;
wire  signed [15:0] icmp_ln1496_fu_586_p1;
wire  signed [15:0] icmp_ln1496_1_fu_592_p0;
wire  signed [15:0] icmp_ln1496_1_fu_592_p1;
wire  signed [15:0] icmp_ln1496_3_fu_598_p0;
wire  signed [15:0] icmp_ln1496_3_fu_598_p1;
wire  signed [15:0] icmp_ln1496_4_fu_604_p0;
wire  signed [15:0] icmp_ln1496_4_fu_604_p1;
wire   [15:0] select_ln65_fu_610_p3;
wire   [15:0] select_ln65_1_fu_615_p3;
wire   [0:0] icmp_ln1496_2_fu_620_p2;
wire   [15:0] select_ln65_3_fu_634_p3;
wire   [15:0] select_ln65_4_fu_639_p3;
wire   [0:0] icmp_ln1496_5_fu_644_p2;
wire   [15:0] select_ln65_2_fu_626_p3;
wire   [15:0] select_ln65_5_fu_650_p3;
wire   [0:0] icmp_ln1496_6_fu_658_p2;
wire  signed [16:0] sext_ln703_fu_672_p1;
wire  signed [16:0] sext_ln703_1_fu_675_p1;
wire   [16:0] sub_ln1193_fu_678_p2;
wire   [0:0] tmp_32_fu_692_p3;
wire   [0:0] tmp_31_fu_684_p3;
wire   [0:0] xor_ln786_fu_700_p2;
wire   [0:0] xor_ln340_fu_718_p2;
wire  signed [16:0] sext_ln703_2_fu_730_p1;
wire   [16:0] sub_ln1193_1_fu_733_p2;
wire   [0:0] tmp_34_fu_747_p3;
wire   [0:0] tmp_33_fu_739_p3;
wire   [0:0] xor_ln786_1_fu_755_p2;
wire   [0:0] xor_ln340_1_fu_773_p2;
wire  signed [16:0] sext_ln703_3_fu_785_p1;
wire   [16:0] sub_ln1193_2_fu_788_p2;
wire   [0:0] tmp_36_fu_802_p3;
wire   [0:0] tmp_35_fu_794_p3;
wire   [0:0] xor_ln786_2_fu_810_p2;
wire   [0:0] xor_ln340_2_fu_828_p2;
wire  signed [16:0] sext_ln703_4_fu_840_p1;
wire   [16:0] sub_ln1193_3_fu_843_p2;
wire   [0:0] tmp_38_fu_857_p3;
wire   [0:0] tmp_37_fu_849_p3;
wire   [0:0] xor_ln786_3_fu_865_p2;
wire   [0:0] xor_ln340_3_fu_883_p2;
wire  signed [16:0] sext_ln703_5_fu_895_p1;
wire   [16:0] sub_ln1193_4_fu_898_p2;
wire   [0:0] tmp_40_fu_912_p3;
wire   [0:0] tmp_39_fu_904_p3;
wire   [0:0] xor_ln786_4_fu_920_p2;
wire   [0:0] xor_ln340_4_fu_938_p2;
wire  signed [16:0] sext_ln703_6_fu_950_p1;
wire   [16:0] sub_ln1193_5_fu_953_p2;
wire   [0:0] tmp_42_fu_967_p3;
wire   [0:0] tmp_41_fu_959_p3;
wire   [0:0] xor_ln786_5_fu_975_p2;
wire   [0:0] xor_ln340_5_fu_993_p2;
wire  signed [16:0] sext_ln703_7_fu_1005_p1;
wire   [16:0] sub_ln1193_6_fu_1008_p2;
wire   [0:0] tmp_44_fu_1022_p3;
wire   [0:0] tmp_43_fu_1014_p3;
wire   [0:0] xor_ln786_6_fu_1030_p2;
wire   [0:0] xor_ln340_6_fu_1048_p2;
wire  signed [16:0] sext_ln703_8_fu_1060_p1;
wire   [16:0] sub_ln1193_7_fu_1063_p2;
wire   [0:0] tmp_46_fu_1077_p3;
wire   [0:0] tmp_45_fu_1069_p3;
wire   [0:0] xor_ln786_7_fu_1085_p2;
wire   [0:0] xor_ln340_7_fu_1103_p2;
wire   [0:0] xor_ln340_9_fu_712_p2;
wire   [9:0] tmp_fu_1115_p4;
wire   [0:0] and_ln786_fu_706_p2;
wire   [0:0] or_ln340_fu_724_p2;
wire   [9:0] select_ln340_fu_1125_p3;
wire   [9:0] select_ln388_fu_1133_p3;
wire   [9:0] y_V_fu_1141_p3;
wire   [0:0] xor_ln340_10_fu_767_p2;
wire   [9:0] tmp_2_fu_1154_p4;
wire   [0:0] and_ln786_1_fu_761_p2;
wire   [0:0] or_ln340_1_fu_779_p2;
wire   [9:0] select_ln340_2_fu_1164_p3;
wire   [9:0] select_ln388_1_fu_1172_p3;
wire   [0:0] xor_ln340_11_fu_822_p2;
wire   [9:0] tmp_4_fu_1188_p4;
wire   [0:0] and_ln786_2_fu_816_p2;
wire   [0:0] or_ln340_2_fu_834_p2;
wire   [9:0] select_ln340_4_fu_1198_p3;
wire   [9:0] select_ln388_2_fu_1206_p3;
wire   [0:0] xor_ln340_12_fu_877_p2;
wire   [9:0] tmp_6_fu_1222_p4;
wire   [0:0] and_ln786_3_fu_871_p2;
wire   [0:0] or_ln340_3_fu_889_p2;
wire   [9:0] select_ln340_6_fu_1232_p3;
wire   [9:0] select_ln388_3_fu_1240_p3;
wire   [0:0] xor_ln340_13_fu_932_p2;
wire   [9:0] tmp_8_fu_1256_p4;
wire   [0:0] and_ln786_4_fu_926_p2;
wire   [0:0] or_ln340_4_fu_944_p2;
wire   [9:0] select_ln340_8_fu_1266_p3;
wire   [9:0] select_ln388_4_fu_1274_p3;
wire   [0:0] xor_ln340_14_fu_987_p2;
wire   [9:0] tmp_10_fu_1290_p4;
wire   [0:0] and_ln786_5_fu_981_p2;
wire   [0:0] or_ln340_5_fu_999_p2;
wire   [9:0] select_ln340_10_fu_1300_p3;
wire   [9:0] select_ln388_5_fu_1308_p3;
wire   [0:0] xor_ln340_15_fu_1042_p2;
wire   [9:0] tmp_12_fu_1324_p4;
wire   [0:0] and_ln786_6_fu_1036_p2;
wire   [0:0] or_ln340_6_fu_1054_p2;
wire   [9:0] select_ln340_12_fu_1334_p3;
wire   [9:0] select_ln388_6_fu_1342_p3;
wire   [0:0] xor_ln340_16_fu_1097_p2;
wire   [9:0] tmp_14_fu_1358_p4;
wire   [0:0] and_ln786_7_fu_1091_p2;
wire   [0:0] or_ln340_7_fu_1109_p2;
wire   [9:0] select_ln340_14_fu_1368_p3;
wire   [9:0] select_ln388_7_fu_1376_p3;
wire  signed [18:0] rhs_V_fu_1459_p1;
wire  signed [18:0] lhs_V_fu_1456_p1;
wire   [18:0] ret_V_fu_1462_p2;
wire   [17:0] p_Val2_12_fu_1476_p2;
wire   [0:0] p_Result_12_fu_1480_p3;
wire   [0:0] p_Result_s_fu_1468_p3;
wire   [0:0] xor_ln786_8_fu_1488_p2;
wire   [0:0] xor_ln340_8_fu_1506_p2;
wire   [0:0] xor_ln340_17_fu_1500_p2;
wire   [9:0] tmp_16_fu_1518_p4;
wire   [0:0] underflow_fu_1494_p2;
wire   [0:0] or_ln340_8_fu_1512_p2;
wire   [9:0] select_ln340_16_fu_1528_p3;
wire   [9:0] select_ln388_8_fu_1536_p3;
wire   [9:0] y_V_8_fu_1544_p3;
wire    ap_CS_fsm_state29;
reg   [9:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg = 1'b0;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table2 #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table2_address0),
    .ce0(exp_table2_ce0),
    .q0(exp_table2_q0)
);

softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_invert_taxdS #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table3_address0),
    .ce0(invert_table3_ce0),
    .q0(invert_table3_q0)
);

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start),
    .ap_done(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_done),
    .ap_idle(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready),
    .x_0_V(exp_res_0_V_fu_340),
    .x_1_V(exp_res_1_V_fu_336),
    .x_2_V(exp_res_2_V_fu_332),
    .x_3_V(exp_res_3_V_fu_328),
    .x_4_V(exp_res_4_V_fu_324),
    .x_5_V(exp_res_5_V_fu_320),
    .x_6_V(exp_res_6_V_fu_316),
    .x_7_V(exp_res_7_V_fu_312),
    .x_V_offset(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0)))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1641 == 1'd0))) begin
        i_0_reg_474 <= i_reg_1645;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_474 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_array_0_V_reg_1650 <= data_V_data_0_V_dout;
        data_array_1_V_reg_1656 <= data_V_data_1_V_dout;
        data_array_2_V_reg_1662 <= data_V_data_2_V_dout;
        data_array_3_V_reg_1668 <= data_V_data_3_V_dout;
        data_array_4_V_reg_1674 <= data_V_data_4_V_dout;
        data_array_5_V_reg_1680 <= data_V_data_5_V_dout;
        data_array_6_V_reg_1686 <= data_V_data_6_V_dout;
        data_array_7_V_reg_1692 <= data_V_data_7_V_dout;
        icmp_ln1496_1_reg_1703 <= icmp_ln1496_1_fu_592_p2;
        icmp_ln1496_3_reg_1708 <= icmp_ln1496_3_fu_598_p2;
        icmp_ln1496_4_reg_1713 <= icmp_ln1496_4_fu_604_p2;
        icmp_ln1496_reg_1698 <= icmp_ln1496_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        exp_res_0_V_1_reg_1763 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_0_V_1_reg_1763_pp0_iter1_reg <= exp_res_0_V_1_reg_1763;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1641 == 1'd0))) begin
        exp_res_0_V_fu_340 <= exp_res_0_V_1_reg_1763;
        exp_res_1_V_fu_336 <= exp_res_1_V_1_reg_1774;
        exp_res_2_V_fu_332 <= exp_res_2_V_1_reg_1785;
        exp_res_3_V_fu_328 <= exp_res_3_V_1_reg_1796;
        exp_res_4_V_1_reg_1807 <= exp_table2_q0;
        exp_res_4_V_fu_324 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        exp_res_1_V_1_reg_1774 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        exp_res_1_V_1_reg_1774_pp0_iter1_reg <= exp_res_1_V_1_reg_1774;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        exp_res_2_V_1_reg_1785 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        exp_res_2_V_1_reg_1785_pp0_iter1_reg <= exp_res_2_V_1_reg_1785;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        exp_res_3_V_1_reg_1796 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        exp_res_3_V_1_reg_1796_pp0_iter1_reg <= exp_res_3_V_1_reg_1796;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_4_V_1_reg_1807_pp0_iter2_reg <= exp_res_4_V_1_reg_1807;
        icmp_ln196_reg_1641 <= icmp_ln196_fu_542_p2;
        icmp_ln196_reg_1641_pp0_iter1_reg <= icmp_ln196_reg_1641;
        icmp_ln196_reg_1641_pp0_iter2_reg <= icmp_ln196_reg_1641_pp0_iter1_reg;
        icmp_ln196_reg_1641_pp0_iter3_reg <= icmp_ln196_reg_1641_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        exp_res_5_V_1_reg_1817 <= exp_table2_q0;
        exp_res_5_V_fu_320 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_5_V_1_reg_1817_pp0_iter2_reg <= exp_res_5_V_1_reg_1817;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        exp_res_6_V_1_reg_1827 <= exp_table2_q0;
        exp_res_6_V_fu_316 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_6_V_1_reg_1827_pp0_iter2_reg <= exp_res_6_V_1_reg_1827;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        exp_res_7_V_1_reg_1837 <= exp_table2_q0;
        exp_res_7_V_fu_312 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_7_V_1_reg_1837_pp0_iter2_reg <= exp_res_7_V_1_reg_1837;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_1645 <= i_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        inv_exp_sum_V_reg_1859 <= invert_table3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        p_Val2_1_reg_1848 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        p_Val2_9_reg_1842 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        sext_ln241_reg_1864 <= sext_ln241_fu_1557_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_0_V_reg_1869 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_1_V_reg_1874 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_2_V_reg_1879 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_3_V_reg_1884 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_4_V_reg_1889 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_5_V_reg_1894 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1641_pp0_iter2_reg == 1'd0))) begin
        tmp_data_6_V_reg_1899 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        tmp_data_7_V_reg_1904 <= {{grp_fu_485_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641 == 1'd0))) begin
        x_max_V_reg_1718 <= x_max_V_fu_664_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1641 == 1'd0))) begin
        y_V_1_reg_1728 <= y_V_1_fu_1180_p3;
        y_V_2_reg_1733 <= y_V_2_fu_1214_p3;
        y_V_3_reg_1738 <= y_V_3_fu_1248_p3;
        y_V_4_reg_1743 <= y_V_4_fu_1282_p3;
        y_V_5_reg_1748 <= y_V_5_fu_1316_p3;
        y_V_6_reg_1753 <= y_V_6_fu_1350_p3;
        y_V_7_reg_1758 <= y_V_7_fu_1384_p3;
    end
end

always @ (*) begin
    if ((icmp_ln196_fu_542_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln196_reg_1641 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_478_p4 = i_reg_1645;
    end else begin
        ap_phi_mux_i_0_phi_fu_478_p4 = i_0_reg_474;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1641 == 1'd0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        exp_table2_address0 = zext_ln225_7_fu_1447_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        exp_table2_address0 = zext_ln225_6_fu_1438_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table2_address0 = zext_ln225_5_fu_1429_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table2_address0 = zext_ln225_4_fu_1404_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table2_address0 = zext_ln225_3_fu_1400_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table2_address0 = zext_ln225_2_fu_1396_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table2_address0 = zext_ln225_1_fu_1392_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table2_address0 = zext_ln225_fu_1149_p1;
    end else begin
        exp_table2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        exp_table2_ce0 = 1'b1;
    end else begin
        exp_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_485_p0 = zext_ln1118_7_fu_1589_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_485_p0 = zext_ln1118_6_fu_1585_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_485_p0 = zext_ln1118_5_fu_1581_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_485_p0 = zext_ln1118_4_fu_1577_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_485_p0 = zext_ln1118_3_fu_1573_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_485_p0 = zext_ln1118_2_fu_1569_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_485_p0 = zext_ln1118_1_fu_1565_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_485_p0 = zext_ln1118_fu_1561_p1;
    end else begin
        grp_fu_485_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_485_p1 = sext_ln241_reg_1864;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_485_p1 = sext_ln241_fu_1557_p1;
    end else begin
        grp_fu_485_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp231) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp230) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp229) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp228) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln196_reg_1641_pp0_iter1_reg == 1'd0))) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset = 5'd4;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset = 5'd0;
        end else begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset = 'bx;
        end
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        invert_table3_ce0 = 1'b1;
    end else begin
        invert_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_fu_542_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_fu_542_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln786_1_fu_761_p2 = (xor_ln786_1_fu_755_p2 & tmp_33_fu_739_p3);

assign and_ln786_2_fu_816_p2 = (xor_ln786_2_fu_810_p2 & tmp_35_fu_794_p3);

assign and_ln786_3_fu_871_p2 = (xor_ln786_3_fu_865_p2 & tmp_37_fu_849_p3);

assign and_ln786_4_fu_926_p2 = (xor_ln786_4_fu_920_p2 & tmp_39_fu_904_p3);

assign and_ln786_5_fu_981_p2 = (xor_ln786_5_fu_975_p2 & tmp_41_fu_959_p3);

assign and_ln786_6_fu_1036_p2 = (xor_ln786_6_fu_1030_p2 & tmp_43_fu_1014_p3);

assign and_ln786_7_fu_1091_p2 = (xor_ln786_7_fu_1085_p2 & tmp_45_fu_1069_p3);

assign and_ln786_fu_706_p2 = (xor_ln786_fu_700_p2 & tmp_31_fu_684_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((io_acc_block_signal_op60 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((io_acc_block_signal_op60 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1641 == 1'd0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((io_acc_block_signal_op303 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((io_acc_block_signal_op303 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((io_acc_block_signal_op303 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp228 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp229 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp230 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp231 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter2_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter2_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter2_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter2_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_pp0_stage2_iter3 = ((io_acc_block_signal_op303 == 1'b0) & (icmp_ln196_reg_1641_pp0_iter3_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((io_acc_block_signal_op60 == 1'b0) & (icmp_ln196_reg_1641 == 1'd0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_485_p2 = ($signed({{1'b0}, {grp_fu_485_p0}}) * $signed(grp_fu_485_p1));

assign grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg;

assign i_fu_548_p2 = (ap_phi_mux_i_0_phi_fu_478_p4 + 5'd1);

assign icmp_ln1496_1_fu_592_p0 = data_V_data_2_V_dout;

assign icmp_ln1496_1_fu_592_p1 = data_V_data_3_V_dout;

assign icmp_ln1496_1_fu_592_p2 = (($signed(icmp_ln1496_1_fu_592_p0) < $signed(icmp_ln1496_1_fu_592_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_620_p2 = (($signed(select_ln65_fu_610_p3) < $signed(select_ln65_1_fu_615_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_598_p0 = data_V_data_4_V_dout;

assign icmp_ln1496_3_fu_598_p1 = data_V_data_5_V_dout;

assign icmp_ln1496_3_fu_598_p2 = (($signed(icmp_ln1496_3_fu_598_p0) < $signed(icmp_ln1496_3_fu_598_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_604_p0 = data_V_data_6_V_dout;

assign icmp_ln1496_4_fu_604_p1 = data_V_data_7_V_dout;

assign icmp_ln1496_4_fu_604_p2 = (($signed(icmp_ln1496_4_fu_604_p0) < $signed(icmp_ln1496_4_fu_604_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_644_p2 = (($signed(select_ln65_3_fu_634_p3) < $signed(select_ln65_4_fu_639_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_658_p2 = (($signed(select_ln65_2_fu_626_p3) < $signed(select_ln65_5_fu_650_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_586_p0 = data_V_data_0_V_dout;

assign icmp_ln1496_fu_586_p1 = data_V_data_1_V_dout;

assign icmp_ln1496_fu_586_p2 = (($signed(icmp_ln1496_fu_586_p0) < $signed(icmp_ln1496_fu_586_p1)) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_542_p2 = ((ap_phi_mux_i_0_phi_fu_478_p4 == 5'd16) ? 1'b1 : 1'b0);

assign invert_table3_address0 = zext_ln235_fu_1552_p1;

assign io_acc_block_signal_op303 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op60 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_fu_1456_p1 = p_Val2_9_reg_1842;

assign or_ln340_1_fu_779_p2 = (xor_ln340_1_fu_773_p2 | tmp_34_fu_747_p3);

assign or_ln340_2_fu_834_p2 = (xor_ln340_2_fu_828_p2 | tmp_36_fu_802_p3);

assign or_ln340_3_fu_889_p2 = (xor_ln340_3_fu_883_p2 | tmp_38_fu_857_p3);

assign or_ln340_4_fu_944_p2 = (xor_ln340_4_fu_938_p2 | tmp_40_fu_912_p3);

assign or_ln340_5_fu_999_p2 = (xor_ln340_5_fu_993_p2 | tmp_42_fu_967_p3);

assign or_ln340_6_fu_1054_p2 = (xor_ln340_6_fu_1048_p2 | tmp_44_fu_1022_p3);

assign or_ln340_7_fu_1109_p2 = (xor_ln340_7_fu_1103_p2 | tmp_46_fu_1077_p3);

assign or_ln340_8_fu_1512_p2 = (xor_ln340_8_fu_1506_p2 | p_Result_12_fu_1480_p3);

assign or_ln340_fu_724_p2 = (xor_ln340_fu_718_p2 | tmp_32_fu_692_p3);

assign p_Result_12_fu_1480_p3 = p_Val2_12_fu_1476_p2[32'd17];

assign p_Result_s_fu_1468_p3 = ret_V_fu_1462_p2[32'd18];

assign p_Val2_12_fu_1476_p2 = ($signed(p_Val2_9_reg_1842) + $signed(p_Val2_1_reg_1848));

assign res_V_data_0_V_din = tmp_data_0_V_reg_1869;

assign res_V_data_1_V_din = tmp_data_1_V_reg_1874;

assign res_V_data_2_V_din = tmp_data_2_V_reg_1879;

assign res_V_data_3_V_din = tmp_data_3_V_reg_1884;

assign res_V_data_4_V_din = tmp_data_4_V_reg_1889;

assign res_V_data_5_V_din = tmp_data_5_V_reg_1894;

assign res_V_data_6_V_din = tmp_data_6_V_reg_1899;

assign res_V_data_7_V_din = tmp_data_7_V_reg_1904;

assign ret_V_fu_1462_p2 = ($signed(rhs_V_fu_1459_p1) + $signed(lhs_V_fu_1456_p1));

assign rhs_V_fu_1459_p1 = p_Val2_1_reg_1848;

assign select_ln340_10_fu_1300_p3 = ((xor_ln340_14_fu_987_p2[0:0] === 1'b1) ? 10'd511 : tmp_10_fu_1290_p4);

assign select_ln340_12_fu_1334_p3 = ((xor_ln340_15_fu_1042_p2[0:0] === 1'b1) ? 10'd511 : tmp_12_fu_1324_p4);

assign select_ln340_14_fu_1368_p3 = ((xor_ln340_16_fu_1097_p2[0:0] === 1'b1) ? 10'd511 : tmp_14_fu_1358_p4);

assign select_ln340_16_fu_1528_p3 = ((xor_ln340_17_fu_1500_p2[0:0] === 1'b1) ? 10'd511 : tmp_16_fu_1518_p4);

assign select_ln340_2_fu_1164_p3 = ((xor_ln340_10_fu_767_p2[0:0] === 1'b1) ? 10'd511 : tmp_2_fu_1154_p4);

assign select_ln340_4_fu_1198_p3 = ((xor_ln340_11_fu_822_p2[0:0] === 1'b1) ? 10'd511 : tmp_4_fu_1188_p4);

assign select_ln340_6_fu_1232_p3 = ((xor_ln340_12_fu_877_p2[0:0] === 1'b1) ? 10'd511 : tmp_6_fu_1222_p4);

assign select_ln340_8_fu_1266_p3 = ((xor_ln340_13_fu_932_p2[0:0] === 1'b1) ? 10'd511 : tmp_8_fu_1256_p4);

assign select_ln340_fu_1125_p3 = ((xor_ln340_9_fu_712_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_1115_p4);

assign select_ln388_1_fu_1172_p3 = ((and_ln786_1_fu_761_p2[0:0] === 1'b1) ? 10'd512 : tmp_2_fu_1154_p4);

assign select_ln388_2_fu_1206_p3 = ((and_ln786_2_fu_816_p2[0:0] === 1'b1) ? 10'd512 : tmp_4_fu_1188_p4);

assign select_ln388_3_fu_1240_p3 = ((and_ln786_3_fu_871_p2[0:0] === 1'b1) ? 10'd512 : tmp_6_fu_1222_p4);

assign select_ln388_4_fu_1274_p3 = ((and_ln786_4_fu_926_p2[0:0] === 1'b1) ? 10'd512 : tmp_8_fu_1256_p4);

assign select_ln388_5_fu_1308_p3 = ((and_ln786_5_fu_981_p2[0:0] === 1'b1) ? 10'd512 : tmp_10_fu_1290_p4);

assign select_ln388_6_fu_1342_p3 = ((and_ln786_6_fu_1036_p2[0:0] === 1'b1) ? 10'd512 : tmp_12_fu_1324_p4);

assign select_ln388_7_fu_1376_p3 = ((and_ln786_7_fu_1091_p2[0:0] === 1'b1) ? 10'd512 : tmp_14_fu_1358_p4);

assign select_ln388_8_fu_1536_p3 = ((underflow_fu_1494_p2[0:0] === 1'b1) ? 10'd512 : tmp_16_fu_1518_p4);

assign select_ln388_fu_1133_p3 = ((and_ln786_fu_706_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_1115_p4);

assign select_ln65_1_fu_615_p3 = ((icmp_ln1496_1_reg_1703[0:0] === 1'b1) ? data_array_3_V_reg_1668 : data_array_2_V_reg_1662);

assign select_ln65_2_fu_626_p3 = ((icmp_ln1496_2_fu_620_p2[0:0] === 1'b1) ? select_ln65_1_fu_615_p3 : select_ln65_fu_610_p3);

assign select_ln65_3_fu_634_p3 = ((icmp_ln1496_3_reg_1708[0:0] === 1'b1) ? data_array_5_V_reg_1680 : data_array_4_V_reg_1674);

assign select_ln65_4_fu_639_p3 = ((icmp_ln1496_4_reg_1713[0:0] === 1'b1) ? data_array_7_V_reg_1692 : data_array_6_V_reg_1686);

assign select_ln65_5_fu_650_p3 = ((icmp_ln1496_5_fu_644_p2[0:0] === 1'b1) ? select_ln65_4_fu_639_p3 : select_ln65_3_fu_634_p3);

assign select_ln65_fu_610_p3 = ((icmp_ln1496_reg_1698[0:0] === 1'b1) ? data_array_1_V_reg_1656 : data_array_0_V_reg_1650);

assign sext_ln241_fu_1557_p1 = $signed(inv_exp_sum_V_reg_1859);

assign sext_ln703_1_fu_675_p1 = $signed(x_max_V_reg_1718);

assign sext_ln703_2_fu_730_p1 = data_array_1_V_reg_1656;

assign sext_ln703_3_fu_785_p1 = data_array_2_V_reg_1662;

assign sext_ln703_4_fu_840_p1 = data_array_3_V_reg_1668;

assign sext_ln703_5_fu_895_p1 = data_array_4_V_reg_1674;

assign sext_ln703_6_fu_950_p1 = data_array_5_V_reg_1680;

assign sext_ln703_7_fu_1005_p1 = data_array_6_V_reg_1686;

assign sext_ln703_8_fu_1060_p1 = data_array_7_V_reg_1692;

assign sext_ln703_fu_672_p1 = data_array_0_V_reg_1650;

assign sub_ln1193_1_fu_733_p2 = ($signed(sext_ln703_2_fu_730_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_2_fu_788_p2 = ($signed(sext_ln703_3_fu_785_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_3_fu_843_p2 = ($signed(sext_ln703_4_fu_840_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_4_fu_898_p2 = ($signed(sext_ln703_5_fu_895_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_5_fu_953_p2 = ($signed(sext_ln703_6_fu_950_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_6_fu_1008_p2 = ($signed(sext_ln703_7_fu_1005_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_7_fu_1063_p2 = ($signed(sext_ln703_8_fu_1060_p1) - $signed(sext_ln703_1_fu_675_p1));

assign sub_ln1193_fu_678_p2 = ($signed(sext_ln703_fu_672_p1) - $signed(sext_ln703_1_fu_675_p1));

assign tmp_10_fu_1290_p4 = {{sub_ln1193_5_fu_953_p2[15:6]}};

assign tmp_12_fu_1324_p4 = {{sub_ln1193_6_fu_1008_p2[15:6]}};

assign tmp_14_fu_1358_p4 = {{sub_ln1193_7_fu_1063_p2[15:6]}};

assign tmp_16_fu_1518_p4 = {{p_Val2_12_fu_1476_p2[17:8]}};

assign tmp_2_fu_1154_p4 = {{sub_ln1193_1_fu_733_p2[15:6]}};

assign tmp_31_fu_684_p3 = sub_ln1193_fu_678_p2[32'd16];

assign tmp_32_fu_692_p3 = sub_ln1193_fu_678_p2[32'd15];

assign tmp_33_fu_739_p3 = sub_ln1193_1_fu_733_p2[32'd16];

assign tmp_34_fu_747_p3 = sub_ln1193_1_fu_733_p2[32'd15];

assign tmp_35_fu_794_p3 = sub_ln1193_2_fu_788_p2[32'd16];

assign tmp_36_fu_802_p3 = sub_ln1193_2_fu_788_p2[32'd15];

assign tmp_37_fu_849_p3 = sub_ln1193_3_fu_843_p2[32'd16];

assign tmp_38_fu_857_p3 = sub_ln1193_3_fu_843_p2[32'd15];

assign tmp_39_fu_904_p3 = sub_ln1193_4_fu_898_p2[32'd16];

assign tmp_40_fu_912_p3 = sub_ln1193_4_fu_898_p2[32'd15];

assign tmp_41_fu_959_p3 = sub_ln1193_5_fu_953_p2[32'd16];

assign tmp_42_fu_967_p3 = sub_ln1193_5_fu_953_p2[32'd15];

assign tmp_43_fu_1014_p3 = sub_ln1193_6_fu_1008_p2[32'd16];

assign tmp_44_fu_1022_p3 = sub_ln1193_6_fu_1008_p2[32'd15];

assign tmp_45_fu_1069_p3 = sub_ln1193_7_fu_1063_p2[32'd16];

assign tmp_46_fu_1077_p3 = sub_ln1193_7_fu_1063_p2[32'd15];

assign tmp_4_fu_1188_p4 = {{sub_ln1193_2_fu_788_p2[15:6]}};

assign tmp_6_fu_1222_p4 = {{sub_ln1193_3_fu_843_p2[15:6]}};

assign tmp_8_fu_1256_p4 = {{sub_ln1193_4_fu_898_p2[15:6]}};

assign tmp_fu_1115_p4 = {{sub_ln1193_fu_678_p2[15:6]}};

assign underflow_fu_1494_p2 = (xor_ln786_8_fu_1488_p2 & p_Result_s_fu_1468_p3);

assign x_max_V_fu_664_p3 = ((icmp_ln1496_6_fu_658_p2[0:0] === 1'b1) ? select_ln65_5_fu_650_p3 : select_ln65_2_fu_626_p3);

assign xor_ln340_10_fu_767_p2 = (tmp_34_fu_747_p3 ^ tmp_33_fu_739_p3);

assign xor_ln340_11_fu_822_p2 = (tmp_36_fu_802_p3 ^ tmp_35_fu_794_p3);

assign xor_ln340_12_fu_877_p2 = (tmp_38_fu_857_p3 ^ tmp_37_fu_849_p3);

assign xor_ln340_13_fu_932_p2 = (tmp_40_fu_912_p3 ^ tmp_39_fu_904_p3);

assign xor_ln340_14_fu_987_p2 = (tmp_42_fu_967_p3 ^ tmp_41_fu_959_p3);

assign xor_ln340_15_fu_1042_p2 = (tmp_44_fu_1022_p3 ^ tmp_43_fu_1014_p3);

assign xor_ln340_16_fu_1097_p2 = (tmp_46_fu_1077_p3 ^ tmp_45_fu_1069_p3);

assign xor_ln340_17_fu_1500_p2 = (p_Result_s_fu_1468_p3 ^ p_Result_12_fu_1480_p3);

assign xor_ln340_1_fu_773_p2 = (tmp_33_fu_739_p3 ^ 1'd1);

assign xor_ln340_2_fu_828_p2 = (tmp_35_fu_794_p3 ^ 1'd1);

assign xor_ln340_3_fu_883_p2 = (tmp_37_fu_849_p3 ^ 1'd1);

assign xor_ln340_4_fu_938_p2 = (tmp_39_fu_904_p3 ^ 1'd1);

assign xor_ln340_5_fu_993_p2 = (tmp_41_fu_959_p3 ^ 1'd1);

assign xor_ln340_6_fu_1048_p2 = (tmp_43_fu_1014_p3 ^ 1'd1);

assign xor_ln340_7_fu_1103_p2 = (tmp_45_fu_1069_p3 ^ 1'd1);

assign xor_ln340_8_fu_1506_p2 = (p_Result_s_fu_1468_p3 ^ 1'd1);

assign xor_ln340_9_fu_712_p2 = (tmp_32_fu_692_p3 ^ tmp_31_fu_684_p3);

assign xor_ln340_fu_718_p2 = (tmp_31_fu_684_p3 ^ 1'd1);

assign xor_ln786_1_fu_755_p2 = (tmp_34_fu_747_p3 ^ 1'd1);

assign xor_ln786_2_fu_810_p2 = (tmp_36_fu_802_p3 ^ 1'd1);

assign xor_ln786_3_fu_865_p2 = (tmp_38_fu_857_p3 ^ 1'd1);

assign xor_ln786_4_fu_920_p2 = (tmp_40_fu_912_p3 ^ 1'd1);

assign xor_ln786_5_fu_975_p2 = (tmp_42_fu_967_p3 ^ 1'd1);

assign xor_ln786_6_fu_1030_p2 = (tmp_44_fu_1022_p3 ^ 1'd1);

assign xor_ln786_7_fu_1085_p2 = (tmp_46_fu_1077_p3 ^ 1'd1);

assign xor_ln786_8_fu_1488_p2 = (p_Result_12_fu_1480_p3 ^ 1'd1);

assign xor_ln786_fu_700_p2 = (tmp_32_fu_692_p3 ^ 1'd1);

assign y_V_1_fu_1180_p3 = ((or_ln340_1_fu_779_p2[0:0] === 1'b1) ? select_ln340_2_fu_1164_p3 : select_ln388_1_fu_1172_p3);

assign y_V_2_fu_1214_p3 = ((or_ln340_2_fu_834_p2[0:0] === 1'b1) ? select_ln340_4_fu_1198_p3 : select_ln388_2_fu_1206_p3);

assign y_V_3_fu_1248_p3 = ((or_ln340_3_fu_889_p2[0:0] === 1'b1) ? select_ln340_6_fu_1232_p3 : select_ln388_3_fu_1240_p3);

assign y_V_4_fu_1282_p3 = ((or_ln340_4_fu_944_p2[0:0] === 1'b1) ? select_ln340_8_fu_1266_p3 : select_ln388_4_fu_1274_p3);

assign y_V_5_fu_1316_p3 = ((or_ln340_5_fu_999_p2[0:0] === 1'b1) ? select_ln340_10_fu_1300_p3 : select_ln388_5_fu_1308_p3);

assign y_V_6_fu_1350_p3 = ((or_ln340_6_fu_1054_p2[0:0] === 1'b1) ? select_ln340_12_fu_1334_p3 : select_ln388_6_fu_1342_p3);

assign y_V_7_fu_1384_p3 = ((or_ln340_7_fu_1109_p2[0:0] === 1'b1) ? select_ln340_14_fu_1368_p3 : select_ln388_7_fu_1376_p3);

assign y_V_8_fu_1544_p3 = ((or_ln340_8_fu_1512_p2[0:0] === 1'b1) ? select_ln340_16_fu_1528_p3 : select_ln388_8_fu_1536_p3);

assign y_V_fu_1141_p3 = ((or_ln340_fu_724_p2[0:0] === 1'b1) ? select_ln340_fu_1125_p3 : select_ln388_fu_1133_p3);

assign zext_ln1118_1_fu_1565_p1 = exp_res_1_V_1_reg_1774_pp0_iter1_reg;

assign zext_ln1118_2_fu_1569_p1 = exp_res_2_V_1_reg_1785_pp0_iter1_reg;

assign zext_ln1118_3_fu_1573_p1 = exp_res_3_V_1_reg_1796_pp0_iter1_reg;

assign zext_ln1118_4_fu_1577_p1 = exp_res_4_V_1_reg_1807_pp0_iter2_reg;

assign zext_ln1118_5_fu_1581_p1 = exp_res_5_V_1_reg_1817_pp0_iter2_reg;

assign zext_ln1118_6_fu_1585_p1 = exp_res_6_V_1_reg_1827_pp0_iter2_reg;

assign zext_ln1118_7_fu_1589_p1 = exp_res_7_V_1_reg_1837_pp0_iter2_reg;

assign zext_ln1118_fu_1561_p1 = exp_res_0_V_1_reg_1763_pp0_iter1_reg;

assign zext_ln225_1_fu_1392_p1 = y_V_1_reg_1728;

assign zext_ln225_2_fu_1396_p1 = y_V_2_reg_1733;

assign zext_ln225_3_fu_1400_p1 = y_V_3_reg_1738;

assign zext_ln225_4_fu_1404_p1 = y_V_4_reg_1743;

assign zext_ln225_5_fu_1429_p1 = y_V_5_reg_1748;

assign zext_ln225_6_fu_1438_p1 = y_V_6_reg_1753;

assign zext_ln225_7_fu_1447_p1 = y_V_7_reg_1758;

assign zext_ln225_fu_1149_p1 = y_V_fu_1141_p3;

assign zext_ln235_fu_1552_p1 = y_V_8_fu_1544_p3;

endmodule //softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s
