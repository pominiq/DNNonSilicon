// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_elem_data_0_V_read,
        in_elem_data_1_V_read,
        in_elem_data_2_V_read,
        in_elem_data_3_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write,
        res_stream_V_data_6_V_din,
        res_stream_V_data_6_V_full_n,
        res_stream_V_data_6_V_write,
        res_stream_V_data_7_V_din,
        res_stream_V_data_7_V_full_n,
        res_stream_V_data_7_V_write,
        res_stream_V_data_0_V_blk_n,
        res_stream_V_data_1_V_blk_n,
        res_stream_V_data_2_V_blk_n,
        res_stream_V_data_3_V_blk_n,
        res_stream_V_data_4_V_blk_n,
        res_stream_V_data_5_V_blk_n,
        res_stream_V_data_6_V_blk_n,
        res_stream_V_data_7_V_blk_n,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_state8 = 53'd128;
parameter    ap_ST_fsm_state9 = 53'd256;
parameter    ap_ST_fsm_state10 = 53'd512;
parameter    ap_ST_fsm_state11 = 53'd1024;
parameter    ap_ST_fsm_state12 = 53'd2048;
parameter    ap_ST_fsm_state13 = 53'd4096;
parameter    ap_ST_fsm_state14 = 53'd8192;
parameter    ap_ST_fsm_state15 = 53'd16384;
parameter    ap_ST_fsm_state16 = 53'd32768;
parameter    ap_ST_fsm_state17 = 53'd65536;
parameter    ap_ST_fsm_state18 = 53'd131072;
parameter    ap_ST_fsm_state19 = 53'd262144;
parameter    ap_ST_fsm_state20 = 53'd524288;
parameter    ap_ST_fsm_state21 = 53'd1048576;
parameter    ap_ST_fsm_state22 = 53'd2097152;
parameter    ap_ST_fsm_state23 = 53'd4194304;
parameter    ap_ST_fsm_state24 = 53'd8388608;
parameter    ap_ST_fsm_state25 = 53'd16777216;
parameter    ap_ST_fsm_state26 = 53'd33554432;
parameter    ap_ST_fsm_state27 = 53'd67108864;
parameter    ap_ST_fsm_state28 = 53'd134217728;
parameter    ap_ST_fsm_state29 = 53'd268435456;
parameter    ap_ST_fsm_state30 = 53'd536870912;
parameter    ap_ST_fsm_state31 = 53'd1073741824;
parameter    ap_ST_fsm_state32 = 53'd2147483648;
parameter    ap_ST_fsm_state33 = 53'd4294967296;
parameter    ap_ST_fsm_state34 = 53'd8589934592;
parameter    ap_ST_fsm_state35 = 53'd17179869184;
parameter    ap_ST_fsm_state36 = 53'd34359738368;
parameter    ap_ST_fsm_state37 = 53'd68719476736;
parameter    ap_ST_fsm_state38 = 53'd137438953472;
parameter    ap_ST_fsm_state39 = 53'd274877906944;
parameter    ap_ST_fsm_state40 = 53'd549755813888;
parameter    ap_ST_fsm_state41 = 53'd1099511627776;
parameter    ap_ST_fsm_state42 = 53'd2199023255552;
parameter    ap_ST_fsm_state43 = 53'd4398046511104;
parameter    ap_ST_fsm_state44 = 53'd8796093022208;
parameter    ap_ST_fsm_state45 = 53'd17592186044416;
parameter    ap_ST_fsm_state46 = 53'd35184372088832;
parameter    ap_ST_fsm_state47 = 53'd70368744177664;
parameter    ap_ST_fsm_state48 = 53'd140737488355328;
parameter    ap_ST_fsm_state49 = 53'd281474976710656;
parameter    ap_ST_fsm_state50 = 53'd562949953421312;
parameter    ap_ST_fsm_state51 = 53'd1125899906842624;
parameter    ap_ST_fsm_state52 = 53'd2251799813685248;
parameter    ap_ST_fsm_state53 = 53'd4503599627370496;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_elem_data_0_V_read;
input  [15:0] in_elem_data_1_V_read;
input  [15:0] in_elem_data_2_V_read;
input  [15:0] in_elem_data_3_V_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [15:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [15:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;
output  [15:0] res_stream_V_data_6_V_din;
input   res_stream_V_data_6_V_full_n;
output   res_stream_V_data_6_V_write;
output  [15:0] res_stream_V_data_7_V_din;
input   res_stream_V_data_7_V_full_n;
output   res_stream_V_data_7_V_write;
output   res_stream_V_data_0_V_blk_n;
output   res_stream_V_data_1_V_blk_n;
output   res_stream_V_data_2_V_blk_n;
output   res_stream_V_data_3_V_blk_n;
output   res_stream_V_data_4_V_blk_n;
output   res_stream_V_data_5_V_blk_n;
output   res_stream_V_data_6_V_blk_n;
output   res_stream_V_data_7_V_blk_n;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;
reg res_stream_V_data_6_V_write;
reg res_stream_V_data_7_V_write;
reg res_stream_V_data_0_V_blk_n;
reg res_stream_V_data_1_V_blk_n;
reg res_stream_V_data_2_V_blk_n;
reg res_stream_V_data_3_V_blk_n;
reg res_stream_V_data_4_V_blk_n;
reg res_stream_V_data_5_V_blk_n;
reg res_stream_V_data_6_V_blk_n;
reg res_stream_V_data_7_V_blk_n;

(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1_4;
reg   [15:0] kernel_data_V_1_5;
reg   [15:0] kernel_data_V_1_6;
reg   [15:0] kernel_data_V_1_7;
reg   [15:0] kernel_data_V_1_8;
reg   [15:0] kernel_data_V_1_9;
reg   [15:0] kernel_data_V_1_10;
reg   [15:0] kernel_data_V_1_11;
reg   [15:0] kernel_data_V_1_16;
reg   [15:0] kernel_data_V_1_17;
reg   [15:0] kernel_data_V_1_18;
reg   [15:0] kernel_data_V_1_19;
reg   [15:0] kernel_data_V_1_20;
reg   [15:0] kernel_data_V_1_21;
reg   [15:0] kernel_data_V_1_22;
reg   [15:0] kernel_data_V_1_23;
reg   [15:0] kernel_data_V_1_28;
reg   [15:0] kernel_data_V_1_29;
reg   [15:0] kernel_data_V_1_30;
reg   [15:0] kernel_data_V_1_31;
reg   [15:0] kernel_data_V_1_32;
reg   [15:0] kernel_data_V_1_33;
reg   [15:0] kernel_data_V_1_34;
reg   [15:0] kernel_data_V_1_35;
reg   [31:0] sX_2;
reg   [31:0] sY_2;
reg   [31:0] pY_2;
reg   [31:0] pX_2;
wire    ap_CS_fsm_state53;
reg   [0:0] and_ln289_2_reg_1191;
reg   [15:0] kernel_data_V_1_27_ret_reg_979;
reg   [15:0] kernel_data_V_1_26_ret_reg_984;
reg   [15:0] kernel_data_V_1_25_ret_reg_989;
reg   [15:0] kernel_data_V_1_24_ret_reg_994;
reg   [15:0] kernel_data_V_1_15_ret_reg_999;
reg   [15:0] kernel_data_V_1_14_ret_reg_1004;
reg   [15:0] kernel_data_V_1_13_ret_reg_1009;
reg   [15:0] kernel_data_V_1_12_ret_reg_1014;
reg   [15:0] kernel_data_V_1_3_ret_reg_1019;
reg   [15:0] kernel_data_V_1_2_ret_reg_1024;
reg   [15:0] kernel_data_V_1_1_ret_reg_1029;
reg   [15:0] kernel_data_V_1_0_ret_reg_1034;
reg   [15:0] kernel_data_V_1_4_ret_reg_1039;
reg   [15:0] kernel_data_V_1_5_ret_reg_1044;
reg   [15:0] kernel_data_V_1_6_ret_reg_1049;
reg   [15:0] kernel_data_V_1_7_ret_reg_1054;
reg   [15:0] kernel_data_V_1_8_ret_reg_1059;
reg   [15:0] kernel_data_V_1_9_ret_reg_1064;
reg   [15:0] kernel_data_V_1_10_ret_reg_1069;
reg   [15:0] kernel_data_V_1_11_ret_reg_1074;
reg   [15:0] kernel_data_V_1_16_ret_reg_1079;
reg   [15:0] kernel_data_V_1_17_ret_reg_1084;
reg   [15:0] kernel_data_V_1_18_ret_reg_1089;
reg   [15:0] kernel_data_V_1_19_ret_reg_1094;
reg   [15:0] kernel_data_V_1_20_ret_reg_1099;
reg   [15:0] kernel_data_V_1_21_ret_reg_1104;
reg   [15:0] kernel_data_V_1_22_ret_reg_1109;
reg   [15:0] kernel_data_V_1_23_ret_reg_1114;
reg   [15:0] kernel_data_V_1_28_ret_reg_1119;
reg   [15:0] kernel_data_V_1_29_ret_reg_1124;
reg   [15:0] kernel_data_V_1_30_ret_reg_1129;
reg   [15:0] kernel_data_V_1_31_ret_reg_1134;
reg   [15:0] kernel_data_V_1_32_ret_reg_1139;
reg   [15:0] kernel_data_V_1_33_ret_reg_1144;
reg   [15:0] kernel_data_V_1_34_ret_reg_1149;
reg   [15:0] kernel_data_V_1_35_ret_reg_1154;
reg   [31:0] sX_2_load_reg_1159;
wire   [0:0] icmp_ln289_fu_786_p2;
reg   [0:0] icmp_ln289_reg_1164;
reg   [31:0] sY_2_load_reg_1169;
wire   [0:0] icmp_ln289_1_fu_796_p2;
reg   [0:0] icmp_ln289_1_reg_1174;
reg   [31:0] pY_2_load_reg_1179;
reg   [31:0] pX_2_load_reg_1185;
wire   [0:0] and_ln289_2_fu_854_p2;
reg   [15:0] tmp_data_0_V_reg_1195;
wire    ap_CS_fsm_state52;
reg   [15:0] tmp_data_1_V_reg_1200;
reg   [15:0] tmp_data_2_V_reg_1205;
reg   [15:0] tmp_data_3_V_reg_1210;
reg   [15:0] tmp_data_4_V_reg_1215;
reg   [15:0] tmp_data_5_V_reg_1220;
reg   [15:0] tmp_data_6_V_reg_1225;
reg   [15:0] tmp_data_7_V_reg_1230;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_done;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_idle;
wire    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6;
wire   [15:0] grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7;
reg    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
reg    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_done;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_idle;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ready;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35;
reg    call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce;
wire   [31:0] select_ln323_fu_959_p3;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_275_p4;
wire    io_acc_block_signal_op224;
reg    ap_block_state53;
wire   [0:0] icmp_ln313_fu_892_p2;
wire   [0:0] icmp_ln317_fu_938_p2;
reg    grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg;
reg   [52:0] ap_NS_fsm;
wire    ap_NS_fsm_state2;
wire   [31:0] select_ln328_fu_913_p3;
wire   [31:0] add_ln321_fu_943_p2;
wire   [31:0] add_ln326_fu_897_p2;
wire   [30:0] tmp_fu_806_p4;
wire   [30:0] tmp_55_fu_826_p4;
wire   [0:0] icmp_ln289_2_fu_816_p2;
wire   [0:0] icmp_ln289_3_fu_836_p2;
wire   [0:0] and_ln289_1_fu_848_p2;
wire   [0:0] and_ln289_fu_842_p2;
wire   [31:0] add_ln328_fu_908_p2;
wire   [31:0] add_ln323_fu_954_p2;
reg    ap_condition_704;
reg    ap_condition_881;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 kernel_data_V_1_4 = 16'd0;
#0 kernel_data_V_1_5 = 16'd0;
#0 kernel_data_V_1_6 = 16'd0;
#0 kernel_data_V_1_7 = 16'd0;
#0 kernel_data_V_1_8 = 16'd0;
#0 kernel_data_V_1_9 = 16'd0;
#0 kernel_data_V_1_10 = 16'd0;
#0 kernel_data_V_1_11 = 16'd0;
#0 kernel_data_V_1_16 = 16'd0;
#0 kernel_data_V_1_17 = 16'd0;
#0 kernel_data_V_1_18 = 16'd0;
#0 kernel_data_V_1_19 = 16'd0;
#0 kernel_data_V_1_20 = 16'd0;
#0 kernel_data_V_1_21 = 16'd0;
#0 kernel_data_V_1_22 = 16'd0;
#0 kernel_data_V_1_23 = 16'd0;
#0 kernel_data_V_1_28 = 16'd0;
#0 kernel_data_V_1_29 = 16'd0;
#0 kernel_data_V_1_30 = 16'd0;
#0 kernel_data_V_1_31 = 16'd0;
#0 kernel_data_V_1_32 = 16'd0;
#0 kernel_data_V_1_33 = 16'd0;
#0 kernel_data_V_1_34 = 16'd0;
#0 kernel_data_V_1_35 = 16'd0;
#0 sX_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 pX_2 = 32'd0;
#0 grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg = 1'b0;
end

dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0 grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start),
    .ap_done(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_done),
    .ap_idle(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_idle),
    .ap_ready(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready),
    .data_0_V_read(kernel_data_V_1_0_ret_reg_1034),
    .data_1_V_read(kernel_data_V_1_1_ret_reg_1029),
    .data_2_V_read(kernel_data_V_1_2_ret_reg_1024),
    .data_3_V_read(kernel_data_V_1_3_ret_reg_1019),
    .data_4_V_read(kernel_data_V_1_4_ret_reg_1039),
    .data_5_V_read(kernel_data_V_1_5_ret_reg_1044),
    .data_6_V_read(kernel_data_V_1_6_ret_reg_1049),
    .data_7_V_read(kernel_data_V_1_7_ret_reg_1054),
    .data_8_V_read(kernel_data_V_1_8_ret_reg_1059),
    .data_9_V_read(kernel_data_V_1_9_ret_reg_1064),
    .data_10_V_read(kernel_data_V_1_10_ret_reg_1069),
    .data_11_V_read(kernel_data_V_1_11_ret_reg_1074),
    .data_12_V_read(kernel_data_V_1_12_ret_reg_1014),
    .data_13_V_read(kernel_data_V_1_13_ret_reg_1009),
    .data_14_V_read(kernel_data_V_1_14_ret_reg_1004),
    .data_15_V_read(kernel_data_V_1_15_ret_reg_999),
    .data_16_V_read(kernel_data_V_1_16_ret_reg_1079),
    .data_17_V_read(kernel_data_V_1_17_ret_reg_1084),
    .data_18_V_read(kernel_data_V_1_18_ret_reg_1089),
    .data_19_V_read(kernel_data_V_1_19_ret_reg_1094),
    .data_20_V_read(kernel_data_V_1_20_ret_reg_1099),
    .data_21_V_read(kernel_data_V_1_21_ret_reg_1104),
    .data_22_V_read(kernel_data_V_1_22_ret_reg_1109),
    .data_23_V_read(kernel_data_V_1_23_ret_reg_1114),
    .data_24_V_read(kernel_data_V_1_24_ret_reg_994),
    .data_25_V_read(kernel_data_V_1_25_ret_reg_989),
    .data_26_V_read(kernel_data_V_1_26_ret_reg_984),
    .data_27_V_read(kernel_data_V_1_27_ret_reg_979),
    .data_28_V_read(kernel_data_V_1_28_ret_reg_1119),
    .data_29_V_read(kernel_data_V_1_29_ret_reg_1124),
    .data_30_V_read(kernel_data_V_1_30_ret_reg_1129),
    .data_31_V_read(kernel_data_V_1_31_ret_reg_1134),
    .data_32_V_read(kernel_data_V_1_32_ret_reg_1139),
    .data_33_V_read(kernel_data_V_1_33_ret_reg_1144),
    .data_34_V_read(kernel_data_V_1_34_ret_reg_1149),
    .data_35_V_read(kernel_data_V_1_35_ret_reg_1154),
    .ap_return_0(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3),
    .ap_return_4(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4),
    .ap_return_5(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5),
    .ap_return_6(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6),
    .ap_return_7(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7),
    .ap_ce(grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce)
);

shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start),
    .ap_done(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_done),
    .ap_idle(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_idle),
    .ap_ready(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ready),
    .in_elem_data_0_V_read(in_elem_data_0_V_read),
    .in_elem_data_1_V_read(in_elem_data_1_V_read),
    .in_elem_data_2_V_read(in_elem_data_2_V_read),
    .in_elem_data_3_V_read(in_elem_data_3_V_read),
    .kernel_window_4_V_read(kernel_data_V_1_4),
    .kernel_window_5_V_read(kernel_data_V_1_5),
    .kernel_window_6_V_read(kernel_data_V_1_6),
    .kernel_window_7_V_read(kernel_data_V_1_7),
    .kernel_window_8_V_read(kernel_data_V_1_8),
    .kernel_window_9_V_read(kernel_data_V_1_9),
    .kernel_window_10_V_read(kernel_data_V_1_10),
    .kernel_window_11_V_read(kernel_data_V_1_11),
    .kernel_window_16_V_read(kernel_data_V_1_16),
    .kernel_window_17_V_read(kernel_data_V_1_17),
    .kernel_window_18_V_read(kernel_data_V_1_18),
    .kernel_window_19_V_read(kernel_data_V_1_19),
    .kernel_window_20_V_read(kernel_data_V_1_20),
    .kernel_window_21_V_read(kernel_data_V_1_21),
    .kernel_window_22_V_read(kernel_data_V_1_22),
    .kernel_window_23_V_read(kernel_data_V_1_23),
    .kernel_window_28_V_read(kernel_data_V_1_28),
    .kernel_window_29_V_read(kernel_data_V_1_29),
    .kernel_window_30_V_read(kernel_data_V_1_30),
    .kernel_window_31_V_read(kernel_data_V_1_31),
    .kernel_window_32_V_read(kernel_data_V_1_32),
    .kernel_window_33_V_read(kernel_data_V_1_33),
    .kernel_window_34_V_read(kernel_data_V_1_34),
    .kernel_window_35_V_read(kernel_data_V_1_35),
    .ap_return_0(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0),
    .ap_return_1(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1),
    .ap_return_2(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2),
    .ap_return_3(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3),
    .ap_return_4(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4),
    .ap_return_5(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5),
    .ap_return_6(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6),
    .ap_return_7(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7),
    .ap_return_8(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8),
    .ap_return_9(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9),
    .ap_return_10(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10),
    .ap_return_11(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11),
    .ap_return_12(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12),
    .ap_return_13(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13),
    .ap_return_14(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14),
    .ap_return_15(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15),
    .ap_return_16(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16),
    .ap_return_17(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17),
    .ap_return_18(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18),
    .ap_return_19(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19),
    .ap_return_20(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20),
    .ap_return_21(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21),
    .ap_return_22(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22),
    .ap_return_23(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23),
    .ap_return_24(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24),
    .ap_return_25(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25),
    .ap_return_26(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26),
    .ap_return_27(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27),
    .ap_return_28(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28),
    .ap_return_29(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29),
    .ap_return_30(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30),
    .ap_return_31(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31),
    .ap_return_32(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32),
    .ap_return_33(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33),
    .ap_return_34(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34),
    .ap_return_35(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35),
    .ap_ce(call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state2) & (1'b1 == ap_CS_fsm_state1) & (1'd1 == and_ln289_2_fu_854_p2))) begin
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ready == 1'b1)) begin
            grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_704)) begin
        if ((icmp_ln313_fu_892_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln313_fu_892_p2 == 1'd0)) begin
            pX_2 <= add_ln326_fu_897_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_881)) begin
        if ((icmp_ln317_fu_938_p2 == 1'd1)) begin
            pY_2 <= 32'd0;
        end else if ((icmp_ln317_fu_938_p2 == 1'd0)) begin
            pY_2 <= add_ln321_fu_943_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_704)) begin
        if ((icmp_ln313_fu_892_p2 == 1'd1)) begin
            sX_2 <= 32'd0;
        end else if ((icmp_ln313_fu_892_p2 == 1'd0)) begin
            sX_2 <= select_ln328_fu_913_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_ce))) begin
        and_ln289_2_reg_1191 <= and_ln289_2_fu_854_p2;
        icmp_ln289_1_reg_1174 <= icmp_ln289_1_fu_796_p2;
        icmp_ln289_reg_1164 <= icmp_ln289_fu_786_p2;
        kernel_data_V_1_0_ret_reg_1034 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_0;
        kernel_data_V_1_10 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18;
        kernel_data_V_1_10_ret_reg_1069 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_18;
        kernel_data_V_1_11 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19;
        kernel_data_V_1_11_ret_reg_1074 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_19;
        kernel_data_V_1_12_ret_reg_1014 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_4;
        kernel_data_V_1_13_ret_reg_1009 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_5;
        kernel_data_V_1_14_ret_reg_1004 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_6;
        kernel_data_V_1_15_ret_reg_999 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_7;
        kernel_data_V_1_16 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20;
        kernel_data_V_1_16_ret_reg_1079 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_20;
        kernel_data_V_1_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21;
        kernel_data_V_1_17_ret_reg_1084 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_21;
        kernel_data_V_1_18 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22;
        kernel_data_V_1_18_ret_reg_1089 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_22;
        kernel_data_V_1_19 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23;
        kernel_data_V_1_19_ret_reg_1094 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_23;
        kernel_data_V_1_1_ret_reg_1029 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_1;
        kernel_data_V_1_20 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24;
        kernel_data_V_1_20_ret_reg_1099 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_24;
        kernel_data_V_1_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25;
        kernel_data_V_1_21_ret_reg_1104 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_25;
        kernel_data_V_1_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26;
        kernel_data_V_1_22_ret_reg_1109 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_26;
        kernel_data_V_1_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27;
        kernel_data_V_1_23_ret_reg_1114 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_27;
        kernel_data_V_1_24_ret_reg_994 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_8;
        kernel_data_V_1_25_ret_reg_989 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_9;
        kernel_data_V_1_26_ret_reg_984 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_10;
        kernel_data_V_1_27_ret_reg_979 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_11;
        kernel_data_V_1_28 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28;
        kernel_data_V_1_28_ret_reg_1119 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_28;
        kernel_data_V_1_29 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29;
        kernel_data_V_1_29_ret_reg_1124 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_29;
        kernel_data_V_1_2_ret_reg_1024 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_2;
        kernel_data_V_1_30 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30;
        kernel_data_V_1_30_ret_reg_1129 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_30;
        kernel_data_V_1_31 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31;
        kernel_data_V_1_31_ret_reg_1134 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_31;
        kernel_data_V_1_32 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32;
        kernel_data_V_1_32_ret_reg_1139 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_32;
        kernel_data_V_1_33 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33;
        kernel_data_V_1_33_ret_reg_1144 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_33;
        kernel_data_V_1_34 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34;
        kernel_data_V_1_34_ret_reg_1149 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_34;
        kernel_data_V_1_35 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35;
        kernel_data_V_1_35_ret_reg_1154 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_35;
        kernel_data_V_1_3_ret_reg_1019 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_3;
        kernel_data_V_1_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12;
        kernel_data_V_1_4_ret_reg_1039 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_12;
        kernel_data_V_1_5 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13;
        kernel_data_V_1_5_ret_reg_1044 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_13;
        kernel_data_V_1_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14;
        kernel_data_V_1_6_ret_reg_1049 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_14;
        kernel_data_V_1_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15;
        kernel_data_V_1_7_ret_reg_1054 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_15;
        kernel_data_V_1_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16;
        kernel_data_V_1_8_ret_reg_1059 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_16;
        kernel_data_V_1_9 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17;
        kernel_data_V_1_9_ret_reg_1064 <= call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_return_17;
        pX_2_load_reg_1185 <= pX_2;
        pY_2_load_reg_1179 <= pY_2;
        sX_2_load_reg_1159 <= sX_2;
        sY_2_load_reg_1169 <= sY_2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (icmp_ln313_fu_892_p2 == 1'd1))) begin
        sY_2 <= ap_phi_mux_storemerge_phi_fu_275_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        tmp_data_0_V_reg_1195 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_0;
        tmp_data_1_V_reg_1200 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_1;
        tmp_data_2_V_reg_1205 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_2;
        tmp_data_3_V_reg_1210 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_3;
        tmp_data_4_V_reg_1215 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_4;
        tmp_data_5_V_reg_1220 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_5;
        tmp_data_6_V_reg_1225 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_6;
        tmp_data_7_V_reg_1230 <= grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_return_7;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (icmp_ln313_fu_892_p2 == 1'd1))) begin
        if ((icmp_ln317_fu_938_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_275_p4 = 32'd0;
        end else if ((icmp_ln317_fu_938_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_275_p4 = select_ln323_fu_959_p3;
        end else begin
            ap_phi_mux_storemerge_phi_fu_275_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_275_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_ce))) begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce = 1'b1;
    end else begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_ce))) begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start = 1'b1;
    end else begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_6_5_3_0_4u_config5_s_fu_322_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state52)))) begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n;
    end else begin
        res_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_6_V_write = 1'b1;
    end else begin
        res_stream_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n;
    end else begin
        res_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (1'd1 == and_ln289_2_reg_1191))) begin
        res_stream_V_data_7_V_write = 1'b1;
    end else begin
        res_stream_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if ((~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln321_fu_943_p2 = (pY_2_load_reg_1179 + 32'd1);

assign add_ln323_fu_954_p2 = (sY_2_load_reg_1169 + 32'd1);

assign add_ln326_fu_897_p2 = (pX_2_load_reg_1185 + 32'd1);

assign add_ln328_fu_908_p2 = (sX_2_load_reg_1159 + 32'd1);

assign and_ln289_1_fu_848_p2 = (icmp_ln289_3_fu_836_p2 & icmp_ln289_2_fu_816_p2);

assign and_ln289_2_fu_854_p2 = (and_ln289_fu_842_p2 & and_ln289_1_fu_848_p2);

assign and_ln289_fu_842_p2 = (icmp_ln289_fu_786_p2 & icmp_ln289_1_fu_796_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state2 = ap_NS_fsm[32'd1];

always @ (*) begin
    ap_block_state53 = ((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191));
end

always @ (*) begin
    ap_condition_704 = (~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce));
end

always @ (*) begin
    ap_condition_881 = (~((io_acc_block_signal_op224 == 1'b0) & (1'd1 == and_ln289_2_reg_1191)) & (1'b1 == ap_CS_fsm_state53) & (1'b1 == ap_ce) & (icmp_ln313_fu_892_p2 == 1'd1));
end

assign grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start = grp_dense_latency_ap_fixed_ap_fixed_config5_mult_0_0_0_0_0_0_0_0_0_fu_282_ap_start_reg;

assign icmp_ln289_1_fu_796_p2 = ((sY_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_2_fu_816_p2 = (($signed(tmp_fu_806_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_3_fu_836_p2 = (($signed(tmp_55_fu_826_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_786_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_892_p2 = ((pX_2_load_reg_1185 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_938_p2 = ((pY_2_load_reg_1179 == 32'd5) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op224 = (res_stream_V_data_7_V_full_n & res_stream_V_data_6_V_full_n & res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = tmp_data_0_V_reg_1195;

assign res_stream_V_data_1_V_din = tmp_data_1_V_reg_1200;

assign res_stream_V_data_2_V_din = tmp_data_2_V_reg_1205;

assign res_stream_V_data_3_V_din = tmp_data_3_V_reg_1210;

assign res_stream_V_data_4_V_din = tmp_data_4_V_reg_1215;

assign res_stream_V_data_5_V_din = tmp_data_5_V_reg_1220;

assign res_stream_V_data_6_V_din = tmp_data_6_V_reg_1225;

assign res_stream_V_data_7_V_din = tmp_data_7_V_reg_1230;

assign select_ln323_fu_959_p3 = ((icmp_ln289_1_reg_1174[0:0] === 1'b1) ? 32'd2 : add_ln323_fu_954_p2);

assign select_ln328_fu_913_p3 = ((icmp_ln289_reg_1164[0:0] === 1'b1) ? 32'd2 : add_ln328_fu_908_p2);

assign tmp_55_fu_826_p4 = {{pX_2[31:1]}};

assign tmp_fu_806_p4 = {{pY_2[31:1]}};

endmodule //compute_output_buffer_2d_array_array_ap_fixed_16_6_5_3_0_8u_config5_s
