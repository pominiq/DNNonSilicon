-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table2_ce0 : STD_LOGIC;
    signal exp_table2_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table3_ce0 : STD_LOGIC;
    signal invert_table3_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln196_reg_1641 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal icmp_ln196_reg_1641_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal i_0_reg_474 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln196_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_1641_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_1641_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_548_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1645 : STD_LOGIC_VECTOR (4 downto 0);
    signal data_array_0_V_reg_1650 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op60 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal data_array_1_V_reg_1656 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1662 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1668 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1674 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1680 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1686 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1692 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_1698 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_1703 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_664_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_reg_1718 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal io_acc_block_signal_op303 : STD_LOGIC;
    signal ap_block_state28_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal y_V_1_fu_1180_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_reg_1728 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_fu_1214_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_1733 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1248_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_1738 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1282_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_1743 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1316_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_1748 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1350_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_1753 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1384_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_1758 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_1_reg_1763 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal exp_res_0_V_1_reg_1763_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_1774 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal exp_res_1_V_1_reg_1774_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_1785 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal exp_res_2_V_1_reg_1785_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_1796 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal exp_res_3_V_1_reg_1796_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_1807 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exp_res_4_V_1_reg_1807_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_1817 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_1817_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_1827 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_1827_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_1837 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_1837_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_reg_1842 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_reg_1848 : STD_LOGIC_VECTOR (17 downto 0);
    signal inv_exp_sum_V_reg_1859 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_1557_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln241_reg_1864 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_1869 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_data_1_V_reg_1874 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_1879 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_1884 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_1889 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_1894 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_1899 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_1904 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_done : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_idle : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce : STD_LOGIC;
    signal ap_block_state6_pp0_stage4_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp228 : BOOLEAN;
    signal ap_block_state7_pp0_stage5_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage5_11001_ignoreCallOp229 : BOOLEAN;
    signal ap_block_state8_pp0_stage6_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage6_11001_ignoreCallOp230 : BOOLEAN;
    signal ap_block_state9_pp0_stage7_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage7_11001_ignoreCallOp231 : BOOLEAN;
    signal ap_phi_mux_i_0_phi_fu_478_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg : STD_LOGIC := '0';
    signal exp_res_0_V_fu_340 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal exp_res_1_V_fu_336 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_fu_332 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_fu_328 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_fu_324 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_fu_320 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_fu_316 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_fu_312 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln225_1_fu_1392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln225_3_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln225_5_fu_1429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_1552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_485_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_fu_1561_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_1_fu_1565_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_2_fu_1569_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_3_fu_1573_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_4_fu_1577_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_5_fu_1581_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_6_fu_1585_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_7_fu_1589_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_485_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_485_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln1496_fu_586_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_586_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_592_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_592_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_598_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_598_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_604_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_604_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_610_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_615_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_634_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_639_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_626_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_650_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_fu_672_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_675_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_678_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_32_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_730_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_733_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_fu_747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_785_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_788_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_794_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_840_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_843_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_857_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_895_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_898_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_950_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_953_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_42_fu_967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1005_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1008_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_44_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1060_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1063_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_1077_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1069_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1115_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1125_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1133_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_1141_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_10_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1154_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1164_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1172_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1188_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1198_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1206_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1222_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1232_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1240_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1256_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1266_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1274_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1290_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1300_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1308_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1324_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1334_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1342_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1358_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1368_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1376_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_fu_1459_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_fu_1456_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_1462_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_12_fu_1476_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_12_fu_1480_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_17_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1518_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1528_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1536_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1544_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_0_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_1_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_2_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_3_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_4_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_5_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_6_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_7_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_V_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_invert_taxdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table2_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table2
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table2_address0,
        ce0 => exp_table2_ce0,
        q0 => exp_table2_q0);

    invert_table3_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_invert_taxdS
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table3_address0,
        ce0 => invert_table3_ce0,
        q0 => invert_table3_q0);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start,
        ap_done => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_done,
        ap_idle => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_idle,
        ap_ready => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready,
        x_0_V => exp_res_0_V_fu_340,
        x_1_V => exp_res_1_V_fu_336,
        x_2_V => exp_res_2_V_fu_332,
        x_3_V => exp_res_3_V_fu_328,
        x_4_V => exp_res_4_V_fu_324,
        x_5_V => exp_res_5_V_fu_320,
        x_6_V => exp_res_6_V_fu_316,
        x_7_V => exp_res_7_V_fu_312,
        x_V_offset => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0)))) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
                i_0_reg_474 <= i_reg_1645;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_474 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                data_array_0_V_reg_1650 <= data_V_data_0_V_dout;
                data_array_1_V_reg_1656 <= data_V_data_1_V_dout;
                data_array_2_V_reg_1662 <= data_V_data_2_V_dout;
                data_array_3_V_reg_1668 <= data_V_data_3_V_dout;
                data_array_4_V_reg_1674 <= data_V_data_4_V_dout;
                data_array_5_V_reg_1680 <= data_V_data_5_V_dout;
                data_array_6_V_reg_1686 <= data_V_data_6_V_dout;
                data_array_7_V_reg_1692 <= data_V_data_7_V_dout;
                icmp_ln1496_1_reg_1703 <= icmp_ln1496_1_fu_592_p2;
                icmp_ln1496_3_reg_1708 <= icmp_ln1496_3_fu_598_p2;
                icmp_ln1496_4_reg_1713 <= icmp_ln1496_4_fu_604_p2;
                icmp_ln1496_reg_1698 <= icmp_ln1496_fu_586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                exp_res_0_V_1_reg_1763 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                exp_res_0_V_1_reg_1763_pp0_iter1_reg <= exp_res_0_V_1_reg_1763;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                exp_res_0_V_fu_340 <= exp_res_0_V_1_reg_1763;
                exp_res_1_V_fu_336 <= exp_res_1_V_1_reg_1774;
                exp_res_2_V_fu_332 <= exp_res_2_V_1_reg_1785;
                exp_res_3_V_fu_328 <= exp_res_3_V_1_reg_1796;
                exp_res_4_V_1_reg_1807 <= exp_table2_q0;
                exp_res_4_V_fu_324 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                exp_res_1_V_1_reg_1774 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                exp_res_1_V_1_reg_1774_pp0_iter1_reg <= exp_res_1_V_1_reg_1774;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                exp_res_2_V_1_reg_1785 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                exp_res_2_V_1_reg_1785_pp0_iter1_reg <= exp_res_2_V_1_reg_1785;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                exp_res_3_V_1_reg_1796 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                exp_res_3_V_1_reg_1796_pp0_iter1_reg <= exp_res_3_V_1_reg_1796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_4_V_1_reg_1807_pp0_iter2_reg <= exp_res_4_V_1_reg_1807;
                icmp_ln196_reg_1641 <= icmp_ln196_fu_542_p2;
                icmp_ln196_reg_1641_pp0_iter1_reg <= icmp_ln196_reg_1641;
                icmp_ln196_reg_1641_pp0_iter2_reg <= icmp_ln196_reg_1641_pp0_iter1_reg;
                icmp_ln196_reg_1641_pp0_iter3_reg <= icmp_ln196_reg_1641_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_5_V_1_reg_1817 <= exp_table2_q0;
                exp_res_5_V_fu_320 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_5_V_1_reg_1817_pp0_iter2_reg <= exp_res_5_V_1_reg_1817;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_6_V_1_reg_1827 <= exp_table2_q0;
                exp_res_6_V_fu_316 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_6_V_1_reg_1827_pp0_iter2_reg <= exp_res_6_V_1_reg_1827;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_7_V_1_reg_1837 <= exp_table2_q0;
                exp_res_7_V_fu_312 <= exp_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_7_V_1_reg_1837_pp0_iter2_reg <= exp_res_7_V_1_reg_1837;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1645 <= i_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                inv_exp_sum_V_reg_1859 <= invert_table3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Val2_1_reg_1848 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Val2_9_reg_1842 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                sext_ln241_reg_1864 <= sext_ln241_fu_1557_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1869 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_1_V_reg_1874 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_2_V_reg_1879 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_3_V_reg_1884 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_4_V_reg_1889 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_5_V_reg_1894 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1641_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_6_V_reg_1899 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_data_7_V_reg_1904 <= grp_fu_485_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                x_max_V_reg_1718 <= x_max_V_fu_664_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then
                y_V_1_reg_1728 <= y_V_1_fu_1180_p3;
                y_V_2_reg_1733 <= y_V_2_fu_1214_p3;
                y_V_3_reg_1738 <= y_V_3_fu_1248_p3;
                y_V_4_reg_1743 <= y_V_4_fu_1282_p3;
                y_V_5_reg_1748 <= y_V_5_fu_1316_p3;
                y_V_6_reg_1753 <= y_V_6_fu_1350_p3;
                y_V_7_reg_1758 <= y_V_7_fu_1384_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_fu_542_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_fu_542_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_fu_542_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    and_ln786_1_fu_761_p2 <= (xor_ln786_1_fu_755_p2 and tmp_33_fu_739_p3);
    and_ln786_2_fu_816_p2 <= (xor_ln786_2_fu_810_p2 and tmp_35_fu_794_p3);
    and_ln786_3_fu_871_p2 <= (xor_ln786_3_fu_865_p2 and tmp_37_fu_849_p3);
    and_ln786_4_fu_926_p2 <= (xor_ln786_4_fu_920_p2 and tmp_39_fu_904_p3);
    and_ln786_5_fu_981_p2 <= (xor_ln786_5_fu_975_p2 and tmp_41_fu_959_p3);
    and_ln786_6_fu_1036_p2 <= (xor_ln786_6_fu_1030_p2 and tmp_43_fu_1014_p3);
    and_ln786_7_fu_1091_p2 <= (xor_ln786_7_fu_1085_p2 and tmp_45_fu_1069_p3);
    and_ln786_fu_706_p2 <= (xor_ln786_fu_700_p2 and tmp_31_fu_684_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state29 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, io_acc_block_signal_op60)
    begin
                ap_block_pp0_stage1_11001 <= ((io_acc_block_signal_op60 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, io_acc_block_signal_op60)
    begin
                ap_block_pp0_stage1_subdone <= ((io_acc_block_signal_op60 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1641 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage2_01001 <= ((io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage2_11001 <= ((io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, io_acc_block_signal_op303)
    begin
                ap_block_pp0_stage2_subdone <= ((io_acc_block_signal_op303 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001_ignoreCallOp229 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001_ignoreCallOp230 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001_ignoreCallOp231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state28_pp0_stage2_iter3_assign_proc : process(icmp_ln196_reg_1641_pp0_iter3_reg, io_acc_block_signal_op303)
    begin
                ap_block_state28_pp0_stage2_iter3 <= ((io_acc_block_signal_op303 = ap_const_logic_0) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln196_reg_1641, io_acc_block_signal_op60)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((io_acc_block_signal_op60 = ap_const_logic_0) and (icmp_ln196_reg_1641 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln196_fu_542_p2)
    begin
        if ((icmp_ln196_fu_542_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_478_p4_assign_proc : process(icmp_ln196_reg_1641, i_0_reg_474, ap_CS_fsm_pp0_stage0, i_reg_1645, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            ap_phi_mux_i_0_phi_fu_478_p4 <= i_reg_1645;
        else 
            ap_phi_mux_i_0_phi_fu_478_p4 <= i_0_reg_474;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1641)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1641, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1641 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage6, zext_ln225_fu_1149_p1, ap_block_pp0_stage3, zext_ln225_1_fu_1392_p1, zext_ln225_2_fu_1396_p1, ap_block_pp0_stage5, zext_ln225_3_fu_1400_p1, zext_ln225_4_fu_1404_p1, ap_block_pp0_stage7, zext_ln225_5_fu_1429_p1, zext_ln225_6_fu_1438_p1, zext_ln225_7_fu_1447_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            exp_table2_address0 <= zext_ln225_7_fu_1447_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            exp_table2_address0 <= zext_ln225_6_fu_1438_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table2_address0 <= zext_ln225_5_fu_1429_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table2_address0 <= zext_ln225_4_fu_1404_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table2_address0 <= zext_ln225_3_fu_1400_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table2_address0 <= zext_ln225_2_fu_1396_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table2_address0 <= zext_ln225_1_fu_1392_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table2_address0 <= zext_ln225_fu_1149_p1(10 - 1 downto 0);
        else 
            exp_table2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            exp_table2_ce0 <= ap_const_logic_1;
        else 
            exp_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_485_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage5, ap_block_pp0_stage7, zext_ln1118_fu_1561_p1, zext_ln1118_1_fu_1565_p1, zext_ln1118_2_fu_1569_p1, zext_ln1118_3_fu_1573_p1, zext_ln1118_4_fu_1577_p1, zext_ln1118_5_fu_1581_p1, zext_ln1118_6_fu_1585_p1, zext_ln1118_7_fu_1589_p1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_485_p0 <= zext_ln1118_7_fu_1589_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_485_p0 <= zext_ln1118_6_fu_1585_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_485_p0 <= zext_ln1118_5_fu_1581_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_485_p0 <= zext_ln1118_4_fu_1577_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_485_p0 <= zext_ln1118_3_fu_1573_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_485_p0 <= zext_ln1118_2_fu_1569_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_485_p0 <= zext_ln1118_1_fu_1565_p1(17 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_485_p0 <= zext_ln1118_fu_1561_p1(17 - 1 downto 0);
        else 
            grp_fu_485_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_485_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, sext_ln241_fu_1557_p1, sext_ln241_reg_1864, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage5, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_485_p1 <= sext_ln241_reg_1864(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_485_p1 <= sext_ln241_fu_1557_p1(18 - 1 downto 0);
        else 
            grp_fu_485_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_485_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_485_p0) * signed(grp_fu_485_p1))), 26));

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage4_11001_ignoreCallOp228, ap_block_pp0_stage5_11001_ignoreCallOp229, ap_block_pp0_stage6_11001_ignoreCallOp230, ap_block_pp0_stage7_11001_ignoreCallOp231)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001_ignoreCallOp231) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp230) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp228) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_ap_start_reg;

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset_assign_proc : process(icmp_ln196_reg_1641_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln196_reg_1641_pp0_iter1_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset <= ap_const_lv5_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset <= ap_const_lv5_0;
            else 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset <= "XXXXX";
            end if;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_517_x_V_offset <= "XXXXX";
        end if; 
    end process;

    i_fu_548_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_478_p4) + unsigned(ap_const_lv5_1));
    icmp_ln1496_1_fu_592_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_1_fu_592_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_1_fu_592_p2 <= "1" when (signed(icmp_ln1496_1_fu_592_p0) < signed(icmp_ln1496_1_fu_592_p1)) else "0";
    icmp_ln1496_2_fu_620_p2 <= "1" when (signed(select_ln65_fu_610_p3) < signed(select_ln65_1_fu_615_p3)) else "0";
    icmp_ln1496_3_fu_598_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_3_fu_598_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_3_fu_598_p2 <= "1" when (signed(icmp_ln1496_3_fu_598_p0) < signed(icmp_ln1496_3_fu_598_p1)) else "0";
    icmp_ln1496_4_fu_604_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_4_fu_604_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_4_fu_604_p2 <= "1" when (signed(icmp_ln1496_4_fu_604_p0) < signed(icmp_ln1496_4_fu_604_p1)) else "0";
    icmp_ln1496_5_fu_644_p2 <= "1" when (signed(select_ln65_3_fu_634_p3) < signed(select_ln65_4_fu_639_p3)) else "0";
    icmp_ln1496_6_fu_658_p2 <= "1" when (signed(select_ln65_2_fu_626_p3) < signed(select_ln65_5_fu_650_p3)) else "0";
    icmp_ln1496_fu_586_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_586_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_586_p2 <= "1" when (signed(icmp_ln1496_fu_586_p0) < signed(icmp_ln1496_fu_586_p1)) else "0";
    icmp_ln196_fu_542_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_478_p4 = ap_const_lv5_10) else "0";
    invert_table3_address0 <= zext_ln235_fu_1552_p1(10 - 1 downto 0);

    invert_table3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            invert_table3_ce0 <= ap_const_logic_1;
        else 
            invert_table3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op303 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op60 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
        lhs_V_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1842),19));

    or_ln340_1_fu_779_p2 <= (xor_ln340_1_fu_773_p2 or tmp_34_fu_747_p3);
    or_ln340_2_fu_834_p2 <= (xor_ln340_2_fu_828_p2 or tmp_36_fu_802_p3);
    or_ln340_3_fu_889_p2 <= (xor_ln340_3_fu_883_p2 or tmp_38_fu_857_p3);
    or_ln340_4_fu_944_p2 <= (xor_ln340_4_fu_938_p2 or tmp_40_fu_912_p3);
    or_ln340_5_fu_999_p2 <= (xor_ln340_5_fu_993_p2 or tmp_42_fu_967_p3);
    or_ln340_6_fu_1054_p2 <= (xor_ln340_6_fu_1048_p2 or tmp_44_fu_1022_p3);
    or_ln340_7_fu_1109_p2 <= (xor_ln340_7_fu_1103_p2 or tmp_46_fu_1077_p3);
    or_ln340_8_fu_1512_p2 <= (xor_ln340_8_fu_1506_p2 or p_Result_12_fu_1480_p3);
    or_ln340_fu_724_p2 <= (xor_ln340_fu_718_p2 or tmp_32_fu_692_p3);
    p_Result_12_fu_1480_p3 <= p_Val2_12_fu_1476_p2(17 downto 17);
    p_Result_s_fu_1468_p3 <= ret_V_fu_1462_p2(18 downto 18);
    p_Val2_12_fu_1476_p2 <= std_logic_vector(signed(p_Val2_9_reg_1842) + signed(p_Val2_1_reg_1848));

    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1869;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1874;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1879;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1884;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_1889;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_1894;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_1899;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_1641_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_1904;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_1641_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1641_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_1462_p2 <= std_logic_vector(signed(rhs_V_fu_1459_p1) + signed(lhs_V_fu_1456_p1));
        rhs_V_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1848),19));

    select_ln340_10_fu_1300_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_987_p2(0) = '1') else 
        tmp_10_fu_1290_p4;
    select_ln340_12_fu_1334_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1042_p2(0) = '1') else 
        tmp_12_fu_1324_p4;
    select_ln340_14_fu_1368_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1097_p2(0) = '1') else 
        tmp_14_fu_1358_p4;
    select_ln340_16_fu_1528_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1500_p2(0) = '1') else 
        tmp_16_fu_1518_p4;
    select_ln340_2_fu_1164_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_767_p2(0) = '1') else 
        tmp_2_fu_1154_p4;
    select_ln340_4_fu_1198_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_822_p2(0) = '1') else 
        tmp_4_fu_1188_p4;
    select_ln340_6_fu_1232_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_877_p2(0) = '1') else 
        tmp_6_fu_1222_p4;
    select_ln340_8_fu_1266_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_932_p2(0) = '1') else 
        tmp_8_fu_1256_p4;
    select_ln340_fu_1125_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_9_fu_712_p2(0) = '1') else 
        tmp_fu_1115_p4;
    select_ln388_1_fu_1172_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_761_p2(0) = '1') else 
        tmp_2_fu_1154_p4;
    select_ln388_2_fu_1206_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_816_p2(0) = '1') else 
        tmp_4_fu_1188_p4;
    select_ln388_3_fu_1240_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_871_p2(0) = '1') else 
        tmp_6_fu_1222_p4;
    select_ln388_4_fu_1274_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_926_p2(0) = '1') else 
        tmp_8_fu_1256_p4;
    select_ln388_5_fu_1308_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_981_p2(0) = '1') else 
        tmp_10_fu_1290_p4;
    select_ln388_6_fu_1342_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1036_p2(0) = '1') else 
        tmp_12_fu_1324_p4;
    select_ln388_7_fu_1376_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1091_p2(0) = '1') else 
        tmp_14_fu_1358_p4;
    select_ln388_8_fu_1536_p3 <= 
        ap_const_lv10_200 when (underflow_fu_1494_p2(0) = '1') else 
        tmp_16_fu_1518_p4;
    select_ln388_fu_1133_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_706_p2(0) = '1') else 
        tmp_fu_1115_p4;
    select_ln65_1_fu_615_p3 <= 
        data_array_3_V_reg_1668 when (icmp_ln1496_1_reg_1703(0) = '1') else 
        data_array_2_V_reg_1662;
    select_ln65_2_fu_626_p3 <= 
        select_ln65_1_fu_615_p3 when (icmp_ln1496_2_fu_620_p2(0) = '1') else 
        select_ln65_fu_610_p3;
    select_ln65_3_fu_634_p3 <= 
        data_array_5_V_reg_1680 when (icmp_ln1496_3_reg_1708(0) = '1') else 
        data_array_4_V_reg_1674;
    select_ln65_4_fu_639_p3 <= 
        data_array_7_V_reg_1692 when (icmp_ln1496_4_reg_1713(0) = '1') else 
        data_array_6_V_reg_1686;
    select_ln65_5_fu_650_p3 <= 
        select_ln65_4_fu_639_p3 when (icmp_ln1496_5_fu_644_p2(0) = '1') else 
        select_ln65_3_fu_634_p3;
    select_ln65_fu_610_p3 <= 
        data_array_1_V_reg_1656 when (icmp_ln1496_reg_1698(0) = '1') else 
        data_array_0_V_reg_1650;
        sext_ln241_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_1859),26));

        sext_ln703_1_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_reg_1718),17));

        sext_ln703_2_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_1656),17));

        sext_ln703_3_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_1662),17));

        sext_ln703_4_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_1668),17));

        sext_ln703_5_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_1674),17));

        sext_ln703_6_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_1680),17));

        sext_ln703_7_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_1686),17));

        sext_ln703_8_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_1692),17));

        sext_ln703_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_1650),17));

    sub_ln1193_1_fu_733_p2 <= std_logic_vector(signed(sext_ln703_2_fu_730_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_2_fu_788_p2 <= std_logic_vector(signed(sext_ln703_3_fu_785_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_3_fu_843_p2 <= std_logic_vector(signed(sext_ln703_4_fu_840_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_4_fu_898_p2 <= std_logic_vector(signed(sext_ln703_5_fu_895_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_5_fu_953_p2 <= std_logic_vector(signed(sext_ln703_6_fu_950_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_6_fu_1008_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1005_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_7_fu_1063_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1060_p1) - signed(sext_ln703_1_fu_675_p1));
    sub_ln1193_fu_678_p2 <= std_logic_vector(signed(sext_ln703_fu_672_p1) - signed(sext_ln703_1_fu_675_p1));
    tmp_10_fu_1290_p4 <= sub_ln1193_5_fu_953_p2(15 downto 6);
    tmp_12_fu_1324_p4 <= sub_ln1193_6_fu_1008_p2(15 downto 6);
    tmp_14_fu_1358_p4 <= sub_ln1193_7_fu_1063_p2(15 downto 6);
    tmp_16_fu_1518_p4 <= p_Val2_12_fu_1476_p2(17 downto 8);
    tmp_2_fu_1154_p4 <= sub_ln1193_1_fu_733_p2(15 downto 6);
    tmp_31_fu_684_p3 <= sub_ln1193_fu_678_p2(16 downto 16);
    tmp_32_fu_692_p3 <= sub_ln1193_fu_678_p2(15 downto 15);
    tmp_33_fu_739_p3 <= sub_ln1193_1_fu_733_p2(16 downto 16);
    tmp_34_fu_747_p3 <= sub_ln1193_1_fu_733_p2(15 downto 15);
    tmp_35_fu_794_p3 <= sub_ln1193_2_fu_788_p2(16 downto 16);
    tmp_36_fu_802_p3 <= sub_ln1193_2_fu_788_p2(15 downto 15);
    tmp_37_fu_849_p3 <= sub_ln1193_3_fu_843_p2(16 downto 16);
    tmp_38_fu_857_p3 <= sub_ln1193_3_fu_843_p2(15 downto 15);
    tmp_39_fu_904_p3 <= sub_ln1193_4_fu_898_p2(16 downto 16);
    tmp_40_fu_912_p3 <= sub_ln1193_4_fu_898_p2(15 downto 15);
    tmp_41_fu_959_p3 <= sub_ln1193_5_fu_953_p2(16 downto 16);
    tmp_42_fu_967_p3 <= sub_ln1193_5_fu_953_p2(15 downto 15);
    tmp_43_fu_1014_p3 <= sub_ln1193_6_fu_1008_p2(16 downto 16);
    tmp_44_fu_1022_p3 <= sub_ln1193_6_fu_1008_p2(15 downto 15);
    tmp_45_fu_1069_p3 <= sub_ln1193_7_fu_1063_p2(16 downto 16);
    tmp_46_fu_1077_p3 <= sub_ln1193_7_fu_1063_p2(15 downto 15);
    tmp_4_fu_1188_p4 <= sub_ln1193_2_fu_788_p2(15 downto 6);
    tmp_6_fu_1222_p4 <= sub_ln1193_3_fu_843_p2(15 downto 6);
    tmp_8_fu_1256_p4 <= sub_ln1193_4_fu_898_p2(15 downto 6);
    tmp_fu_1115_p4 <= sub_ln1193_fu_678_p2(15 downto 6);
    underflow_fu_1494_p2 <= (xor_ln786_8_fu_1488_p2 and p_Result_s_fu_1468_p3);
    x_max_V_fu_664_p3 <= 
        select_ln65_5_fu_650_p3 when (icmp_ln1496_6_fu_658_p2(0) = '1') else 
        select_ln65_2_fu_626_p3;
    xor_ln340_10_fu_767_p2 <= (tmp_34_fu_747_p3 xor tmp_33_fu_739_p3);
    xor_ln340_11_fu_822_p2 <= (tmp_36_fu_802_p3 xor tmp_35_fu_794_p3);
    xor_ln340_12_fu_877_p2 <= (tmp_38_fu_857_p3 xor tmp_37_fu_849_p3);
    xor_ln340_13_fu_932_p2 <= (tmp_40_fu_912_p3 xor tmp_39_fu_904_p3);
    xor_ln340_14_fu_987_p2 <= (tmp_42_fu_967_p3 xor tmp_41_fu_959_p3);
    xor_ln340_15_fu_1042_p2 <= (tmp_44_fu_1022_p3 xor tmp_43_fu_1014_p3);
    xor_ln340_16_fu_1097_p2 <= (tmp_46_fu_1077_p3 xor tmp_45_fu_1069_p3);
    xor_ln340_17_fu_1500_p2 <= (p_Result_s_fu_1468_p3 xor p_Result_12_fu_1480_p3);
    xor_ln340_1_fu_773_p2 <= (tmp_33_fu_739_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_828_p2 <= (tmp_35_fu_794_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_883_p2 <= (tmp_37_fu_849_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_938_p2 <= (tmp_39_fu_904_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_993_p2 <= (tmp_41_fu_959_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1048_p2 <= (tmp_43_fu_1014_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1103_p2 <= (tmp_45_fu_1069_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1506_p2 <= (p_Result_s_fu_1468_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_712_p2 <= (tmp_32_fu_692_p3 xor tmp_31_fu_684_p3);
    xor_ln340_fu_718_p2 <= (tmp_31_fu_684_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_755_p2 <= (tmp_34_fu_747_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_810_p2 <= (tmp_36_fu_802_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_865_p2 <= (tmp_38_fu_857_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_920_p2 <= (tmp_40_fu_912_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_975_p2 <= (tmp_42_fu_967_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1030_p2 <= (tmp_44_fu_1022_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1085_p2 <= (tmp_46_fu_1077_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1488_p2 <= (p_Result_12_fu_1480_p3 xor ap_const_lv1_1);
    xor_ln786_fu_700_p2 <= (tmp_32_fu_692_p3 xor ap_const_lv1_1);
    y_V_1_fu_1180_p3 <= 
        select_ln340_2_fu_1164_p3 when (or_ln340_1_fu_779_p2(0) = '1') else 
        select_ln388_1_fu_1172_p3;
    y_V_2_fu_1214_p3 <= 
        select_ln340_4_fu_1198_p3 when (or_ln340_2_fu_834_p2(0) = '1') else 
        select_ln388_2_fu_1206_p3;
    y_V_3_fu_1248_p3 <= 
        select_ln340_6_fu_1232_p3 when (or_ln340_3_fu_889_p2(0) = '1') else 
        select_ln388_3_fu_1240_p3;
    y_V_4_fu_1282_p3 <= 
        select_ln340_8_fu_1266_p3 when (or_ln340_4_fu_944_p2(0) = '1') else 
        select_ln388_4_fu_1274_p3;
    y_V_5_fu_1316_p3 <= 
        select_ln340_10_fu_1300_p3 when (or_ln340_5_fu_999_p2(0) = '1') else 
        select_ln388_5_fu_1308_p3;
    y_V_6_fu_1350_p3 <= 
        select_ln340_12_fu_1334_p3 when (or_ln340_6_fu_1054_p2(0) = '1') else 
        select_ln388_6_fu_1342_p3;
    y_V_7_fu_1384_p3 <= 
        select_ln340_14_fu_1368_p3 when (or_ln340_7_fu_1109_p2(0) = '1') else 
        select_ln388_7_fu_1376_p3;
    y_V_8_fu_1544_p3 <= 
        select_ln340_16_fu_1528_p3 when (or_ln340_8_fu_1512_p2(0) = '1') else 
        select_ln388_8_fu_1536_p3;
    y_V_fu_1141_p3 <= 
        select_ln340_fu_1125_p3 when (or_ln340_fu_724_p2(0) = '1') else 
        select_ln388_fu_1133_p3;
    zext_ln1118_1_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_1_reg_1774_pp0_iter1_reg),26));
    zext_ln1118_2_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_1_reg_1785_pp0_iter1_reg),26));
    zext_ln1118_3_fu_1573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_1_reg_1796_pp0_iter1_reg),26));
    zext_ln1118_4_fu_1577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_1_reg_1807_pp0_iter2_reg),26));
    zext_ln1118_5_fu_1581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_1_reg_1817_pp0_iter2_reg),26));
    zext_ln1118_6_fu_1585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_V_1_reg_1827_pp0_iter2_reg),26));
    zext_ln1118_7_fu_1589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_V_1_reg_1837_pp0_iter2_reg),26));
    zext_ln1118_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_1_reg_1763_pp0_iter1_reg),26));
    zext_ln225_1_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_reg_1728),64));
    zext_ln225_2_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_1733),64));
    zext_ln225_3_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_1738),64));
    zext_ln225_4_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_1743),64));
    zext_ln225_5_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_1748),64));
    zext_ln225_6_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_1753),64));
    zext_ln225_7_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_1758),64));
    zext_ln225_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_fu_1141_p3),64));
    zext_ln235_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_fu_1544_p3),64));
end behav;
