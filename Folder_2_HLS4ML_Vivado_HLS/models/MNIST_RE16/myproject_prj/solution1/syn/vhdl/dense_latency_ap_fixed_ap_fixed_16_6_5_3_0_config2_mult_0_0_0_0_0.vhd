-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config2_mult_0_0_0_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv26_3FFFED2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011010010";
    constant ap_const_lv26_2DA : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011011010";
    constant ap_const_lv26_405 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000101";
    constant ap_const_lv26_3FFFCF8 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011111000";
    constant ap_const_lv26_1D2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111010010";
    constant ap_const_lv24_FFFFA3 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110100011";
    constant ap_const_lv23_7FFFC7 : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111000111";
    constant ap_const_lv26_3A1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110100001";
    constant ap_const_lv26_3FFFD2F : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100101111";
    constant ap_const_lv26_3A2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110100010";
    constant ap_const_lv26_54B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010101001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv26_3FFFD32 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100110010";
    constant ap_const_lv26_4B3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010110011";
    constant ap_const_lv26_3FFFE96 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010010110";
    constant ap_const_lv26_3FFFC39 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000111001";
    constant ap_const_lv26_389 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110001001";
    constant ap_const_lv26_3FFFD8B : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110001011";
    constant ap_const_lv26_3FFFE1C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000011100";
    constant ap_const_lv26_3C5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001111000101";
    constant ap_const_lv26_3BC : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110111100";
    constant ap_const_lv26_229 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000101001";
    constant ap_const_lv26_40C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000001100";
    constant ap_const_lv26_3FFFB84 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101110000100";
    constant ap_const_lv26_3FFFC38 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000111000";
    constant ap_const_lv26_1F6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111110110";
    constant ap_const_lv23_33 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000110011";
    constant ap_const_lv26_21F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000011111";
    constant ap_const_lv26_4E5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010011100101";
    constant ap_const_lv26_23C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000111100";
    constant ap_const_lv25_EC : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011101100";
    constant ap_const_lv26_3FFFEAD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010101101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv15_7DAE : STD_LOGIC_VECTOR (14 downto 0) := "111110110101110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv12_FD8 : STD_LOGIC_VECTOR (11 downto 0) := "111111011000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv11_7F8 : STD_LOGIC_VECTOR (10 downto 0) := "11111111000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_483_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_513 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_493_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_517 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_503_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_521 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal reg_525 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sext_ln1116_cast_fu_535_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_cast_reg_1114 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_76_cast_fu_546_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_76_cast_reg_1119 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_reg_1124 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_fu_586_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_1129 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_327_fu_592_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_327_reg_1134 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_77_cast_fu_598_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_77_cast_reg_1139 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_161_reg_1145 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_345_fu_604_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_345_reg_1150 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_163_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_78_cast7_fu_610_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_78_cast7_reg_1160 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_164_reg_1166 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_336_fu_655_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_336_reg_1171 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_V_read_2_reg_1176 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_324_fu_733_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_324_reg_1182 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_347_fu_745_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_347_reg_1187 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_2_reg_1192 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_80_cast_fu_775_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_80_cast_reg_1199 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_329_fu_780_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_329_reg_1204 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_342_fu_791_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_342_reg_1209 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_46_reg_1214 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1116_81_cast_fu_859_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_81_cast_reg_1219 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_320_fu_920_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_320_reg_1225 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_351_fu_936_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_351_reg_1230 : STD_LOGIC_VECTOR (13 downto 0);
    signal data_7_V_read_2_reg_1235 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_82_cast_fu_942_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_82_cast_reg_1240 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_338_fu_953_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_338_reg_1246 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_181_reg_1251 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1116_83_cast_fu_976_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_83_cast_reg_1256 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln703_326_fu_996_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_326_reg_1261 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_fu_1034_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_1266 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_1059_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_reg_1271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_1_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_4_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_5_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_6_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_7_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_data_8_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_226_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_79_cast6_fu_753_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_80_cast4_fu_797_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_226_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_227_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_79_cast5_fu_757_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_79_cast_fu_664_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_82_cast1_fu_959_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_227_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_226_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_228_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_76_cast8_cast51_fu_542_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_76_cast_fu_546_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_552_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_552_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_fu_560_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_fu_564_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_76_cast8_cast51_fu_542_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_34_fu_570_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_78_cast7_fu_610_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_s_fu_615_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_s_fu_615_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_56_fu_627_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_56_fu_627_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_174_fu_623_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_175_fu_635_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_35_fu_639_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_79_cast_fu_664_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_168_fu_669_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_168_fu_669_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_57_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_57_fu_683_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_58_fu_695_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_58_fu_695_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_179_fu_691_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_180_fu_703_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1118_fu_707_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_176_fu_661_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_323_fu_723_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_fu_729_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_177_fu_679_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_171_fu_713_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_346_fu_739_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_170_fu_761_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_170_fu_761_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1116_80_cast_fu_775_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_529_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_178_fu_771_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_341_fu_785_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_173_fu_750_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_59_fu_801_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_181_fu_808_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1118_60_fu_818_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_36_fu_812_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_182_fu_825_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_37_fu_829_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln708_174_fu_845_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_174_fu_845_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1116_81_cast_fu_859_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_61_fu_864_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_61_fu_864_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_184_fu_872_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_62_fu_882_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_62_fu_882_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1118_38_fu_876_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_185_fu_890_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_39_fu_894_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_47_fu_900_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_319_fu_914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_cast_cast_fu_910_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_350_fu_926_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_71_fu_932_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast43_fu_855_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1116_82_cast_fu_942_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_337_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_181_fu_963_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_68_fu_987_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_325_fu_990_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_321_fu_983_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_183_fu_973_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_332_fu_1012_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_69_fu_1018_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_333_fu_1022_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_331_fu_1006_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_334_fu_1028_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_330_fu_1002_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_70_fu_1050_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_340_fu_1044_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_343_fu_1053_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_339_fu_1040_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_6_fu_1065_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_72_fu_1078_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_349_fu_1072_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_352_fu_1081_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_348_fu_1068_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_1087_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                acc_1_V_reg_1266 <= acc_1_V_fu_1034_p2;
                acc_2_V_reg_1271 <= acc_2_V_fu_1059_p2;
                add_ln703_326_reg_1261 <= add_ln703_326_fu_996_p2;
                sext_ln1116_83_cast_reg_1256 <= sext_ln1116_83_cast_fu_976_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln703_320_reg_1225 <= add_ln703_320_fu_920_p2;
                add_ln703_351_reg_1230 <= add_ln703_351_fu_936_p2;
                sext_ln1116_81_cast_reg_1219 <= sext_ln1116_81_cast_fu_859_p1;
                tmp_46_reg_1214 <= sub_ln1118_37_fu_829_p2(19 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln703_324_reg_1182 <= add_ln703_324_fu_733_p2;
                add_ln703_347_reg_1187 <= add_ln703_347_fu_745_p2;
                data_4_V_read_2_reg_1176 <= ap_port_reg_data_4_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln703_327_reg_1134 <= add_ln703_327_fu_592_p2;
                add_ln703_reg_1129 <= add_ln703_fu_586_p2;
                sext_ln1116_76_cast_reg_1119 <= sext_ln1116_76_cast_fu_546_p1;
                tmp_reg_1124 <= sub_ln1118_34_fu_570_p2(22 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln703_329_reg_1204 <= add_ln703_329_fu_780_p2;
                add_ln703_342_reg_1209 <= add_ln703_342_fu_791_p2;
                data_5_V_read_2_reg_1192 <= ap_port_reg_data_5_V_read;
                sext_ln1116_80_cast_reg_1199 <= sext_ln1116_80_cast_fu_775_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                add_ln703_336_reg_1171 <= add_ln703_336_fu_655_p2;
                sext_ln1116_78_cast7_reg_1160 <= sext_ln1116_78_cast7_fu_610_p1;
                trunc_ln708_163_reg_1155 <= grp_fu_226_p2(25 downto 10);
                trunc_ln708_164_reg_1166 <= sub_ln1118_35_fu_639_p2(21 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                add_ln703_338_reg_1246 <= add_ln703_338_fu_953_p2;
                data_7_V_read_2_reg_1235 <= ap_port_reg_data_7_V_read;
                sext_ln1116_82_cast_reg_1240 <= sext_ln1116_82_cast_fu_942_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln703_345_reg_1150 <= add_ln703_345_fu_604_p2;
                sext_ln1116_77_cast_reg_1139 <= sext_ln1116_77_cast_fu_598_p1;
                trunc_ln708_161_reg_1145 <= grp_fu_228_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                ap_port_reg_data_1_V_read <= data_1_V_read;
                ap_port_reg_data_2_V_read <= data_2_V_read;
                ap_port_reg_data_3_V_read <= data_3_V_read;
                ap_port_reg_data_4_V_read <= data_4_V_read;
                ap_port_reg_data_5_V_read <= data_5_V_read;
                ap_port_reg_data_6_V_read <= data_6_V_read;
                ap_port_reg_data_7_V_read <= data_7_V_read;
                ap_port_reg_data_8_V_read <= data_8_V_read;
                sext_ln1116_cast_reg_1114 <= sext_ln1116_cast_fu_535_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_513 <= grp_fu_227_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_517 <= grp_fu_226_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then
                reg_521 <= grp_fu_228_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_525 <= grp_fu_227_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                trunc_ln708_181_reg_1251 <= trunc_ln708_181_fu_963_p1(24 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    acc_1_V_fu_1034_p2 <= std_logic_vector(unsigned(add_ln703_334_fu_1028_p2) + unsigned(add_ln703_330_fu_1002_p2));
    acc_2_V_fu_1059_p2 <= std_logic_vector(unsigned(add_ln703_343_fu_1053_p2) + unsigned(add_ln703_339_fu_1040_p2));
    acc_3_V_fu_1087_p2 <= std_logic_vector(unsigned(add_ln703_352_fu_1081_p2) + unsigned(add_ln703_348_fu_1068_p2));
    add_ln1118_fu_707_p2 <= std_logic_vector(signed(sext_ln1118_179_fu_691_p1) + signed(sext_ln1118_180_fu_703_p1));
    add_ln703_319_fu_914_p2 <= std_logic_vector(unsigned(reg_521) + unsigned(grp_fu_503_p4));
    add_ln703_320_fu_920_p2 <= std_logic_vector(unsigned(add_ln703_319_fu_914_p2) + unsigned(reg_517));
    add_ln703_321_fu_983_p2 <= std_logic_vector(unsigned(add_ln703_320_reg_1225) + unsigned(add_ln703_reg_1129));
    add_ln703_323_fu_723_p2 <= std_logic_vector(signed(sext_ln1118_176_fu_661_p1) + signed(ap_const_lv13_3));
    add_ln703_324_fu_733_p2 <= std_logic_vector(signed(sext_ln703_fu_729_p1) + signed(sext_ln1118_177_fu_679_p1));
    add_ln703_325_fu_990_p2 <= std_logic_vector(signed(sext_ln703_68_fu_987_p1) + signed(grp_fu_529_p2));
    add_ln703_326_fu_996_p2 <= std_logic_vector(unsigned(add_ln703_325_fu_990_p2) + unsigned(add_ln703_321_fu_983_p2));
    add_ln703_327_fu_592_p2 <= std_logic_vector(unsigned(reg_517) + unsigned(grp_fu_503_p4));
    add_ln703_329_fu_780_p2 <= std_logic_vector(unsigned(grp_fu_529_p2) + unsigned(trunc_ln708_161_reg_1145));
    add_ln703_330_fu_1002_p2 <= std_logic_vector(unsigned(add_ln703_329_reg_1204) + unsigned(add_ln703_327_reg_1134));
    add_ln703_331_fu_1006_p2 <= std_logic_vector(unsigned(reg_513) + unsigned(reg_525));
    add_ln703_332_fu_1012_p2 <= std_logic_vector(signed(sext_ln1118_183_fu_973_p1) + signed(ap_const_lv11_7F8));
    add_ln703_333_fu_1022_p2 <= std_logic_vector(signed(sext_ln703_69_fu_1018_p1) + signed(grp_fu_493_p4));
    add_ln703_334_fu_1028_p2 <= std_logic_vector(unsigned(add_ln703_333_fu_1022_p2) + unsigned(add_ln703_331_fu_1006_p2));
    add_ln703_336_fu_655_p2 <= std_logic_vector(unsigned(reg_521) + unsigned(grp_fu_483_p4));
    add_ln703_337_fu_947_p2 <= std_logic_vector(unsigned(reg_525) + unsigned(grp_fu_493_p4));
    add_ln703_338_fu_953_p2 <= std_logic_vector(unsigned(add_ln703_337_fu_947_p2) + unsigned(reg_513));
    add_ln703_339_fu_1040_p2 <= std_logic_vector(unsigned(add_ln703_338_reg_1246) + unsigned(add_ln703_336_reg_1171));
    add_ln703_340_fu_1044_p2 <= std_logic_vector(unsigned(reg_517) + unsigned(grp_fu_503_p4));
    add_ln703_341_fu_785_p2 <= std_logic_vector(signed(sext_ln1118_178_fu_771_p1) + signed(ap_const_lv15_7DAE));
    add_ln703_342_fu_791_p2 <= std_logic_vector(unsigned(add_ln703_341_fu_785_p2) + unsigned(sext_ln1118_173_fu_750_p1));
    add_ln703_343_fu_1053_p2 <= std_logic_vector(signed(sext_ln703_70_fu_1050_p1) + signed(add_ln703_340_fu_1044_p2));
    add_ln703_345_fu_604_p2 <= std_logic_vector(unsigned(reg_513) + unsigned(grp_fu_483_p4));
    add_ln703_346_fu_739_p2 <= std_logic_vector(unsigned(grp_fu_493_p4) + unsigned(trunc_ln708_171_fu_713_p4));
    add_ln703_347_fu_745_p2 <= std_logic_vector(unsigned(add_ln703_346_fu_739_p2) + unsigned(trunc_ln708_163_reg_1155));
    add_ln703_348_fu_1068_p2 <= std_logic_vector(unsigned(add_ln703_347_reg_1187) + unsigned(add_ln703_345_reg_1150));
    add_ln703_349_fu_1072_p2 <= std_logic_vector(unsigned(grp_fu_493_p4) + unsigned(sext_ln708_6_fu_1065_p1));
    add_ln703_350_fu_926_p2 <= std_logic_vector(signed(p_cast_cast_fu_910_p1) + signed(ap_const_lv12_FD8));
    add_ln703_351_fu_936_p2 <= std_logic_vector(signed(sext_ln703_71_fu_932_p1) + signed(p_cast43_fu_855_p1));
    add_ln703_352_fu_1081_p2 <= std_logic_vector(signed(sext_ln703_72_fu_1078_p1) + signed(add_ln703_349_fu_1072_p2));
    add_ln703_fu_586_p2 <= std_logic_vector(unsigned(reg_513) + unsigned(grp_fu_493_p4));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= add_ln703_326_reg_1261;
    ap_return_1 <= acc_1_V_reg_1266;
    ap_return_2 <= acc_2_V_reg_1271;
    ap_return_3 <= acc_3_V_fu_1087_p2;

    grp_fu_226_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, sext_ln1116_cast_fu_535_p1, sext_ln1116_76_cast_fu_546_p1, sext_ln1116_77_cast_fu_598_p1, sext_ln1116_77_cast_reg_1139, sext_ln1116_78_cast7_reg_1160, sext_ln1116_81_cast_reg_1219, sext_ln1116_82_cast_reg_1240, sext_ln1116_83_cast_fu_976_p1, sext_ln1116_83_cast_reg_1256, ap_CS_fsm_state10, sext_ln1116_79_cast6_fu_753_p1, sext_ln1116_80_cast4_fu_797_p1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_226_p0 <= sext_ln1116_83_cast_reg_1256(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_226_p0 <= sext_ln1116_83_cast_fu_976_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_226_p0 <= sext_ln1116_82_cast_reg_1240(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_226_p0 <= sext_ln1116_81_cast_reg_1219(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_226_p0 <= sext_ln1116_80_cast4_fu_797_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_p0 <= sext_ln1116_79_cast6_fu_753_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_226_p0 <= sext_ln1116_78_cast7_reg_1160(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_226_p0 <= sext_ln1116_77_cast_reg_1139(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_226_p0 <= sext_ln1116_77_cast_fu_598_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_226_p0 <= sext_ln1116_76_cast_fu_546_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_226_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_226_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_226_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_226_p1 <= ap_const_lv26_54B(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_226_p1 <= ap_const_lv26_3A2(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_226_p1 <= ap_const_lv26_3FFFD2F(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_226_p1 <= ap_const_lv26_3A1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_226_p1 <= ap_const_lv23_7FFFC7(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_226_p1 <= ap_const_lv24_FFFFA3(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_226_p1 <= ap_const_lv26_1D2(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_226_p1 <= ap_const_lv26_3FFFCF8(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_226_p1 <= ap_const_lv26_405(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_226_p1 <= ap_const_lv26_2DA(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_226_p1 <= ap_const_lv26_3FFFED2(13 - 1 downto 0);
        else 
            grp_fu_226_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_226_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_226_p0) * signed(grp_fu_226_p1))), 26));

    grp_fu_227_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, sext_ln1116_cast_fu_535_p1, sext_ln1116_cast_reg_1114, sext_ln1116_76_cast_reg_1119, sext_ln1116_77_cast_reg_1139, sext_ln1116_78_cast7_reg_1160, sext_ln1116_80_cast_reg_1199, sext_ln1116_81_cast_reg_1219, sext_ln1116_82_cast_reg_1240, sext_ln1116_83_cast_fu_976_p1, ap_CS_fsm_state10, sext_ln1116_79_cast5_fu_757_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_227_p0 <= sext_ln1116_83_cast_fu_976_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_227_p0 <= sext_ln1116_82_cast_reg_1240(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_227_p0 <= sext_ln1116_81_cast_reg_1219(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_227_p0 <= sext_ln1116_80_cast_reg_1199(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_227_p0 <= sext_ln1116_79_cast5_fu_757_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_227_p0 <= sext_ln1116_78_cast7_reg_1160(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_227_p0 <= sext_ln1116_77_cast_reg_1139(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_227_p0 <= sext_ln1116_76_cast_reg_1119(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_227_p0 <= sext_ln1116_cast_reg_1114(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_227_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_227_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_227_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_227_p1 <= ap_const_lv26_229(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_227_p1 <= ap_const_lv26_3BC(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_227_p1 <= ap_const_lv26_3C5(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_227_p1 <= ap_const_lv26_3FFFE1C(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_227_p1 <= ap_const_lv26_3FFFD8B(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_227_p1 <= ap_const_lv26_389(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_227_p1 <= ap_const_lv26_3FFFC39(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_227_p1 <= ap_const_lv26_3FFFE96(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_227_p1 <= ap_const_lv26_4B3(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_227_p1 <= ap_const_lv26_3FFFD32(13 - 1 downto 0);
        else 
            grp_fu_227_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_227_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_227_p0) * signed(grp_fu_227_p1))), 26));

    grp_fu_228_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, sext_ln1116_cast_fu_535_p1, sext_ln1116_76_cast_fu_546_p1, sext_ln1116_77_cast_fu_598_p1, sext_ln1116_78_cast7_fu_610_p1, sext_ln1116_80_cast_fu_775_p1, sext_ln1116_81_cast_fu_859_p1, sext_ln1116_82_cast_fu_942_p1, sext_ln1116_83_cast_fu_976_p1, ap_CS_fsm_state10, sext_ln1116_79_cast_fu_664_p1, sext_ln1116_82_cast1_fu_959_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_228_p0 <= sext_ln1116_83_cast_fu_976_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_228_p0 <= sext_ln1116_82_cast1_fu_959_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_228_p0 <= sext_ln1116_82_cast_fu_942_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_228_p0 <= sext_ln1116_81_cast_fu_859_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_228_p0 <= sext_ln1116_80_cast_fu_775_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_228_p0 <= sext_ln1116_79_cast_fu_664_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_228_p0 <= sext_ln1116_78_cast7_fu_610_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_228_p0 <= sext_ln1116_77_cast_fu_598_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_228_p0 <= sext_ln1116_76_cast_fu_546_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_228_p0 <= sext_ln1116_cast_fu_535_p1(16 - 1 downto 0);
        else 
            grp_fu_228_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_228_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_228_p1 <= ap_const_lv26_3FFFEAD(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_228_p1 <= ap_const_lv25_EC(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_228_p1 <= ap_const_lv26_23C(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_228_p1 <= ap_const_lv26_4E5(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_228_p1 <= ap_const_lv26_21F(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_228_p1 <= ap_const_lv23_33(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_228_p1 <= ap_const_lv26_1F6(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_228_p1 <= ap_const_lv26_3FFFC38(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_228_p1 <= ap_const_lv26_3FFFB84(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_228_p1 <= ap_const_lv26_40C(13 - 1 downto 0);
        else 
            grp_fu_228_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_228_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_228_p0) * signed(grp_fu_228_p1))), 26));
    grp_fu_483_p4 <= grp_fu_227_p2(25 downto 10);
    grp_fu_493_p4 <= grp_fu_226_p2(25 downto 10);
    grp_fu_503_p4 <= grp_fu_228_p2(25 downto 10);
    grp_fu_529_p2 <= std_logic_vector(unsigned(reg_521) + unsigned(grp_fu_483_p4));
        p_cast43_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_174_fu_845_p4),14));

        p_cast_cast_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_47_fu_900_p4),12));

    sext_ln1116_76_cast8_cast51_fu_542_p0 <= ap_port_reg_data_1_V_read;
        sext_ln1116_76_cast8_cast51_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_76_cast8_cast51_fu_542_p0),23));

    sext_ln1116_76_cast_fu_546_p0 <= ap_port_reg_data_1_V_read;
        sext_ln1116_76_cast_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_76_cast_fu_546_p0),26));

        sext_ln1116_77_cast_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_2_V_read),26));

    sext_ln1116_78_cast7_fu_610_p0 <= ap_port_reg_data_3_V_read;
        sext_ln1116_78_cast7_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_78_cast7_fu_610_p0),26));

        sext_ln1116_79_cast5_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_4_V_read_2_reg_1176),26));

        sext_ln1116_79_cast6_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_4_V_read_2_reg_1176),24));

    sext_ln1116_79_cast_fu_664_p0 <= ap_port_reg_data_4_V_read;
        sext_ln1116_79_cast_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_79_cast_fu_664_p0),23));

        sext_ln1116_80_cast4_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_5_V_read_2_reg_1192),23));

    sext_ln1116_80_cast_fu_775_p0 <= ap_port_reg_data_5_V_read;
        sext_ln1116_80_cast_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_80_cast_fu_775_p0),26));

    sext_ln1116_81_cast_fu_859_p0 <= ap_port_reg_data_6_V_read;
        sext_ln1116_81_cast_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_81_cast_fu_859_p0),26));

        sext_ln1116_82_cast1_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_7_V_read_2_reg_1235),25));

    sext_ln1116_82_cast_fu_942_p0 <= ap_port_reg_data_7_V_read;
        sext_ln1116_82_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_82_cast_fu_942_p0),26));

        sext_ln1116_83_cast_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_data_8_V_read),26));

        sext_ln1116_cast_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_0_V_read),26));

        sext_ln1118_173_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_1124),15));

        sext_ln1118_174_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_615_p3),22));

        sext_ln1118_175_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_56_fu_627_p3),22));

        sext_ln1118_176_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_164_reg_1166),13));

        sext_ln1118_177_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_168_fu_669_p4),14));

        sext_ln1118_178_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_170_fu_761_p4),15));

        sext_ln1118_179_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_57_fu_683_p3),26));

        sext_ln1118_180_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_58_fu_695_p3),26));

        sext_ln1118_181_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_59_fu_801_p3),20));

        sext_ln1118_182_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_60_fu_818_p3),20));

        sext_ln1118_183_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_reg_1214),11));

        sext_ln1118_184_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_61_fu_864_p3),21));

        sext_ln1118_185_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_62_fu_882_p3),21));

        sext_ln1118_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_552_p3),23));

        sext_ln703_68_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_324_reg_1182),16));

        sext_ln703_69_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_332_fu_1012_p2),16));

        sext_ln703_70_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_342_reg_1209),16));

        sext_ln703_71_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_350_fu_926_p2),14));

        sext_ln703_72_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_351_reg_1230),16));

        sext_ln703_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_323_fu_723_p2),14));

        sext_ln708_6_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_181_reg_1251),16));

    shl_ln1118_56_fu_627_p1 <= ap_port_reg_data_3_V_read;
    shl_ln1118_56_fu_627_p3 <= (shl_ln1118_56_fu_627_p1 & ap_const_lv1_0);
    shl_ln1118_57_fu_683_p1 <= ap_port_reg_data_4_V_read;
    shl_ln1118_57_fu_683_p3 <= (shl_ln1118_57_fu_683_p1 & ap_const_lv9_0);
    shl_ln1118_58_fu_695_p1 <= ap_port_reg_data_4_V_read;
    shl_ln1118_58_fu_695_p3 <= (shl_ln1118_58_fu_695_p1 & ap_const_lv4_0);
    shl_ln1118_59_fu_801_p3 <= (data_5_V_read_2_reg_1192 & ap_const_lv3_0);
    shl_ln1118_60_fu_818_p3 <= (data_5_V_read_2_reg_1192 & ap_const_lv1_0);
    shl_ln1118_61_fu_864_p1 <= ap_port_reg_data_6_V_read;
    shl_ln1118_61_fu_864_p3 <= (shl_ln1118_61_fu_864_p1 & ap_const_lv4_0);
    shl_ln1118_62_fu_882_p1 <= ap_port_reg_data_6_V_read;
    shl_ln1118_62_fu_882_p3 <= (shl_ln1118_62_fu_882_p1 & ap_const_lv2_0);
    shl_ln1118_s_fu_615_p1 <= ap_port_reg_data_3_V_read;
    shl_ln1118_s_fu_615_p3 <= (shl_ln1118_s_fu_615_p1 & ap_const_lv5_0);
    shl_ln_fu_552_p1 <= ap_port_reg_data_1_V_read;
    shl_ln_fu_552_p3 <= (shl_ln_fu_552_p1 & ap_const_lv6_0);
    sub_ln1118_34_fu_570_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_564_p2) - unsigned(sext_ln1116_76_cast8_cast51_fu_542_p1));
    sub_ln1118_35_fu_639_p2 <= std_logic_vector(signed(sext_ln1118_174_fu_623_p1) - signed(sext_ln1118_175_fu_635_p1));
    sub_ln1118_36_fu_812_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(sext_ln1118_181_fu_808_p1));
    sub_ln1118_37_fu_829_p2 <= std_logic_vector(unsigned(sub_ln1118_36_fu_812_p2) - unsigned(sext_ln1118_182_fu_825_p1));
    sub_ln1118_38_fu_876_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(sext_ln1118_184_fu_872_p1));
    sub_ln1118_39_fu_894_p2 <= std_logic_vector(unsigned(sub_ln1118_38_fu_876_p2) - unsigned(sext_ln1118_185_fu_890_p1));
    sub_ln1118_fu_564_p2 <= std_logic_vector(unsigned(ap_const_lv23_0) - unsigned(sext_ln1118_fu_560_p1));
    tmp_47_fu_900_p4 <= sub_ln1118_39_fu_894_p2(20 downto 10);
    trunc_ln708_168_fu_669_p1 <= grp_fu_228_p2(23 - 1 downto 0);
    trunc_ln708_168_fu_669_p4 <= trunc_ln708_168_fu_669_p1(22 downto 10);
    trunc_ln708_170_fu_761_p1 <= grp_fu_226_p2(24 - 1 downto 0);
    trunc_ln708_170_fu_761_p4 <= trunc_ln708_170_fu_761_p1(23 downto 10);
    trunc_ln708_171_fu_713_p4 <= add_ln1118_fu_707_p2(25 downto 10);
    trunc_ln708_174_fu_845_p1 <= grp_fu_226_p2(23 - 1 downto 0);
    trunc_ln708_174_fu_845_p4 <= trunc_ln708_174_fu_845_p1(22 downto 10);
    trunc_ln708_181_fu_963_p1 <= grp_fu_228_p2(25 - 1 downto 0);
end behav;
