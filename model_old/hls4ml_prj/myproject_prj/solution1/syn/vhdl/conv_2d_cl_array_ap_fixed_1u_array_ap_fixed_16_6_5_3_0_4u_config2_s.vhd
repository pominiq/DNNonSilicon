-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_TVALID : IN STD_LOGIC;
    data_V_data_V_TREADY : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv26_3FFFDB0 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110110000";
    constant ap_const_lv26_1E7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111100111";
    constant ap_const_lv26_2F8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011111000";
    constant ap_const_lv26_323 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100100011";
    constant ap_const_lv26_293 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010010011";
    constant ap_const_lv26_3FFFDAC : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110101100";
    constant ap_const_lv26_3FFFD33 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100110011";
    constant ap_const_lv26_2C3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011000011";
    constant ap_const_lv26_32A : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100101010";
    constant ap_const_lv26_2ED : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011101101";
    constant ap_const_lv26_267 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001100111";
    constant ap_const_lv26_297 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010010111";
    constant ap_const_lv25_93 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010010011";
    constant ap_const_lv25_9E : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010011110";
    constant ap_const_lv25_1FFFF57 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101010111";
    constant ap_const_lv26_28F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010001111";
    constant ap_const_lv26_3FFFBE6 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101111100110";
    constant ap_const_lv26_1C2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111000010";
    constant ap_const_lv26_3FFFD28 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100101000";
    constant ap_const_lv26_397 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110010111";
    constant ap_const_lv26_3FFFC14 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110000010100";
    constant ap_const_lv24_FFFFB9 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110111001";
    constant ap_const_lv26_266 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001100110";
    constant ap_const_lv26_3FFFE2E : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000101110";
    constant ap_const_lv26_352 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001101010010";
    constant ap_const_lv26_24C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001001100";
    constant ap_const_lv26_3FFFCD7 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011010111";
    constant ap_const_lv26_131 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100110001";
    constant ap_const_lv22_3FFFEB : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111101011";
    constant ap_const_lv26_3FFFEF2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011110010";
    constant ap_const_lv26_19A : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110011010";
    constant ap_const_lv25_1FFFF43 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101000011";
    constant ap_const_lv26_3FFFDB9 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110111001";
    constant ap_const_lv26_20C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000001100";
    constant ap_const_lv26_3FFFED3 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011010011";
    constant ap_const_lv26_2E3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011100011";
    constant ap_const_lv26_26B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001001101011";
    constant ap_const_lv26_2A1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010100001";
    constant ap_const_lv26_3FFFD07 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100000111";
    constant ap_const_lv26_3FFFC49 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110001001001";
    constant ap_const_lv26_139 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100111001";
    constant ap_const_lv26_450 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010001010000";
    constant ap_const_lv26_3FFFB46 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101000110";
    constant ap_const_lv26_34E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001101001110";
    constant ap_const_lv26_296 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001010010110";
    constant ap_const_lv24_4A : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001001010";
    constant ap_const_lv26_3FFFB71 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111101101110001";
    constant ap_const_lv26_475 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010001110101";
    constant ap_const_lv25_BF : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010111111";
    constant ap_const_lv25_CC : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011001100";
    constant ap_const_lv26_374 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001101110100";
    constant ap_const_lv26_3FFFE3C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111000111100";
    constant ap_const_lv23_7FFFD5 : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111010101";
    constant ap_const_lv25_1FFFF5D : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101011101";
    constant ap_const_lv26_16F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101101111";
    constant ap_const_lv26_1CA : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111001010";
    constant ap_const_lv26_3FFFD53 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101010011";
    constant ap_const_lv26_3FFFCC1 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011000001";
    constant ap_const_lv26_3FFFD19 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100011001";
    constant ap_const_lv26_1ED : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111101101";
    constant ap_const_lv26_53B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010100111011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv15_16A : STD_LOGIC_VECTOR (14 downto 0) := "000000101101010";
    constant ap_const_lv14_3EA7 : STD_LOGIC_VECTOR (13 downto 0) := "11111010100111";
    constant ap_const_lv13_1FFB : STD_LOGIC_VECTOR (12 downto 0) := "1111111111011";
    constant ap_const_lv15_7E1B : STD_LOGIC_VECTOR (14 downto 0) := "111111000011011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_1170 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1169_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1169_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1169_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal and_ln289_2_reg_4824 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal grp_fu_3508_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal reg_3720 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln79_fu_3724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_fu_3836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln79_fu_3730_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln79_reg_4782 : STD_LOGIC_VECTOR (9 downto 0);
    signal kernel_data_V_7_load_reg_4787 : STD_LOGIC_VECTOR (15 downto 0);
    signal sX_1_load_reg_4792 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_3788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_4797 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_1_load_reg_4802 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_3798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_4807 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_1_load_reg_4812 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_1_load_reg_4818 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_582_reg_4828 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3588_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_583_reg_4833 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3598_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_584_reg_4838 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_589_reg_4843 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3618_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_590_reg_4848 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_591_reg_4853 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_3976_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_4858 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_578_fu_3982_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_578_reg_4863 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3698_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_591_reg_4868 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_594_fu_3988_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_594_reg_4873 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_607_fu_3994_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_607_reg_4878 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3704_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_610_reg_4883 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_623_fu_4000_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_623_reg_4888 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_626_fu_4006_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_626_reg_4893 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3528_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_606_reg_4898 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3538_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_607_reg_4903 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_608_reg_4908 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3578_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_612_reg_4913 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_616_reg_4918 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_621_reg_4923 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_622_reg_4928 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_623_reg_4933 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_624_reg_4938 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3628_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_625_reg_4943 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3638_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_626_reg_4948 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_628_reg_4953 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_606_fu_4224_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_606_reg_4958 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_3668_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_629_reg_4963 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3678_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_630_reg_4968 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_579_reg_4973 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_585_fu_4231_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_585_reg_4978 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_601_fu_4237_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_601_reg_4983 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_614_fu_4243_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_614_reg_4988 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_617_reg_4993 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_reg_360 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op309 : STD_LOGIC;
    signal ap_block_state4 : BOOLEAN;
    signal select_ln323_fu_4759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_374_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_4692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_4738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln326_fu_4697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_fu_4713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_4743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_381_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_fu_3842_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_593_fu_4073_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_608_fu_4380_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_381_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_382_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_585_fu_3916_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_604_fu_4207_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_382_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_383_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_579_fu_3877_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_596_fu_4106_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_590_fu_4321_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_383_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_384_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_595_fu_4095_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_581_fu_4306_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_384_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_385_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_576_fu_3849_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_588_fu_4064_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_607_fu_4374_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_385_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_386_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_589_fu_3969_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_386_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_387_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_387_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_388_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_591_fu_4328_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_388_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_389_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_583_fu_3899_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_389_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_390_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_598_fu_4350_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_390_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_391_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_582_fu_3894_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_599_fu_4145_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_391_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_392_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_577_fu_3854_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_592_fu_4068_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_392_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_393_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_393_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_394_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_394_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_395_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_395_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_396_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_396_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_603_fu_4202_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_398_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_594_fu_4090_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_398_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_399_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_399_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_400_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_578_fu_3872_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_597_fu_4112_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_401_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_401_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_402_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_402_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_388_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_396_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_392_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_402_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_401_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_384_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_399_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_383_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_393_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_395_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_389_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_382_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_387_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_394_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_3558_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3518_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3688_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3648_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3710_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln289_2_fu_3808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_3818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_3830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_3824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1118_fu_3842_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_576_fu_3849_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_577_fu_3854_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_578_fu_3872_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_579_fu_3877_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_582_fu_3884_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_400_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_582_fu_3894_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_583_fu_3899_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_591_fu_3906_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_391_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_585_fu_3916_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_3923_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_3923_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_586_fu_3931_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_1_fu_3941_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_1_fu_3941_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_fu_3935_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_587_fu_3949_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1118_1_fu_3953_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_589_fu_3969_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3548_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_594_fu_3959_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_579_fu_3862_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3568_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3658_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_592_fu_4068_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_593_fu_4073_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_608_fu_4080_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_594_fu_4090_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_595_fu_4095_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3710_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_596_fu_4106_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_597_fu_4112_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_613_fu_4117_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln708_613_fu_4117_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_614_fu_4131_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_614_fu_4131_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_599_fu_4145_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_2_fu_4152_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_2_fu_4152_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_3_fu_4164_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_3_fu_4164_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_601_fu_4172_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_600_fu_4160_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1118_fu_4176_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_603_fu_4202_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_604_fu_4207_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_628_fu_4214_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_606_fu_4224_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_6_fu_4127_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_1_fu_4060_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_4141_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_5_fu_4102_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_581_fu_4306_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_590_fu_4321_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_591_fu_4328_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_601_fu_4333_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_601_fu_4333_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_598_fu_4350_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_607_fu_4374_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_608_fu_4380_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_576_fu_4394_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_577_fu_4399_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_580_fu_4404_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_582_fu_4414_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_583_fu_4419_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_602_fu_4368_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_586_fu_4430_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_3_fu_4343_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_4436_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_587_fu_4440_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_584_fu_4424_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_588_fu_4446_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_581_fu_4408_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_589_fu_4451_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_592_fu_4464_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_595_fu_4474_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_593_fu_4469_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_596_fu_4479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_598_fu_4490_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_599_fu_4495_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_580_fu_4303_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_602_fu_4505_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_7_fu_4386_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_13_fu_4511_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_603_fu_4515_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_600_fu_4499_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_604_fu_4521_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_597_fu_4484_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_605_fu_4526_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_608_fu_4539_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_611_fu_4549_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_609_fu_4544_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_612_fu_4554_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_619_fu_4358_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_615_fu_4565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_584_fu_4314_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_618_fu_4575_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_8_fu_4390_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_14_fu_4581_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_619_fu_4585_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_616_fu_4570_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_620_fu_4591_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_613_fu_4559_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_621_fu_4596_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_624_fu_4609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_627_fu_4619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_625_fu_4614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_628_fu_4624_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_630_fu_4635_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_631_fu_4640_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_2_fu_4317_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_605_fu_4371_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_634_fu_4657_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_4_fu_4347_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_15_fu_4663_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_633_fu_4651_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_635_fu_4667_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_632_fu_4645_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_636_fu_4673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_629_fu_4629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_637_fu_4679_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_4708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_4754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal data_V_data_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_V_TVALID_int : STD_LOGIC;
    signal data_V_data_V_TREADY_int : STD_LOGIC;
    signal regslice_both_data_V_data_V_U_ack_in : STD_LOGIC;
    signal ap_condition_1099 : BOOLEAN;
    signal ap_condition_1100 : BOOLEAN;

    component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    line_buffer_Array_V_0_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_0_0_ce0,
        we0 => line_buffer_Array_V_0_0_we0,
        d0 => data_V_data_V_TDATA_int,
        q0 => line_buffer_Array_V_0_0_q0);

    line_buffer_Array_V_1169_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_1169_0_ce0,
        we0 => line_buffer_Array_V_1169_0_we0,
        d0 => line_buffer_Array_V_0_0_q0,
        q0 => line_buffer_Array_V_1169_0_q0);

    line_buffer_Array_V_2_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb
    generic map (
        DataWidth => 16,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_1B,
        ce0 => line_buffer_Array_V_2_0_ce0,
        we0 => line_buffer_Array_V_2_0_we0,
        d0 => line_buffer_Array_V_1169_0_q0,
        q0 => line_buffer_Array_V_2_0_q0);

    regslice_both_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => data_V_data_V_TDATA,
        vld_in => data_V_data_V_TVALID,
        ack_in => regslice_both_data_V_data_V_U_ack_in,
        data_out => data_V_data_V_TDATA_int,
        vld_out => data_V_data_V_TVALID_int,
        ack_out => data_V_data_V_TREADY_int,
        apdone_blk => regslice_both_data_V_data_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten_reg_360 <= add_ln79_reg_4782;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_360 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1099)) then
                if ((icmp_ln313_fu_4692_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_4692_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln326_fu_4697_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1100)) then
                if ((icmp_ln317_fu_4738_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_4738_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln321_fu_4743_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1099)) then
                if ((icmp_ln313_fu_4692_p2 = ap_const_lv1_1)) then 
                    sX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_4692_p2 = ap_const_lv1_0)) then 
                    sX_1 <= select_ln328_fu_4713_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_3724_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln289_2_fu_3836_p2))) then
                add_ln703_578_reg_4863 <= add_ln703_578_fu_3982_p2;
                add_ln703_591_reg_4868 <= grp_fu_3698_p2;
                add_ln703_594_reg_4873 <= add_ln703_594_fu_3988_p2;
                add_ln703_607_reg_4878 <= add_ln703_607_fu_3994_p2;
                add_ln703_610_reg_4883 <= grp_fu_3704_p2;
                add_ln703_623_reg_4888 <= add_ln703_623_fu_4000_p2;
                add_ln703_626_reg_4893 <= add_ln703_626_fu_4006_p2;
                add_ln703_reg_4858 <= add_ln703_fu_3976_p2;
                trunc_ln708_582_reg_4828 <= trunc_ln708_582_fu_3884_p1(22 downto 10);
                trunc_ln708_583_reg_4833 <= grp_fu_399_p2(25 downto 10);
                trunc_ln708_584_reg_4838 <= grp_fu_383_p2(25 downto 10);
                trunc_ln708_589_reg_4843 <= grp_fu_393_p2(25 downto 10);
                trunc_ln708_590_reg_4848 <= grp_fu_395_p2(25 downto 10);
                trunc_ln708_591_reg_4853 <= trunc_ln708_591_fu_3906_p1(21 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then
                add_ln703_579_reg_4973 <= grp_fu_3698_p2;
                add_ln703_585_reg_4978 <= add_ln703_585_fu_4231_p2;
                add_ln703_601_reg_4983 <= add_ln703_601_fu_4237_p2;
                add_ln703_614_reg_4988 <= add_ln703_614_fu_4243_p2;
                add_ln703_617_reg_4993 <= grp_fu_3704_p2;
                sext_ln1118_606_reg_4958 <= sext_ln1118_606_fu_4224_p1;
                trunc_ln708_606_reg_4898 <= grp_fu_388_p2(25 downto 10);
                trunc_ln708_607_reg_4903 <= grp_fu_396_p2(25 downto 10);
                trunc_ln708_608_reg_4908 <= trunc_ln708_608_fu_4080_p1(24 downto 10);
                trunc_ln708_612_reg_4913 <= grp_fu_384_p2(25 downto 10);
                trunc_ln708_616_reg_4918 <= grp_fu_383_p2(25 downto 10);
                trunc_ln708_621_reg_4923 <= add_ln1118_fu_4176_p2(23 downto 10);
                trunc_ln708_622_reg_4928 <= grp_fu_393_p2(25 downto 10);
                trunc_ln708_623_reg_4933 <= grp_fu_395_p2(25 downto 10);
                trunc_ln708_624_reg_4938 <= grp_fu_391_p2(25 downto 10);
                trunc_ln708_625_reg_4943 <= grp_fu_389_p2(25 downto 10);
                trunc_ln708_626_reg_4948 <= grp_fu_382_p2(25 downto 10);
                trunc_ln708_628_reg_4953 <= trunc_ln708_628_fu_4214_p1(23 downto 10);
                trunc_ln708_629_reg_4963 <= grp_fu_386_p2(25 downto 10);
                trunc_ln708_630_reg_4968 <= grp_fu_394_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln79_reg_4782 <= add_ln79_fu_3730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_3724_p2 = ap_const_lv1_0))) then
                and_ln289_2_reg_4824 <= and_ln289_2_fu_3836_p2;
                icmp_ln289_1_reg_4807 <= icmp_ln289_1_fu_3798_p2;
                icmp_ln289_reg_4797 <= icmp_ln289_fu_3788_p2;
                kernel_data_V_1170 <= kernel_data_V_2;
                kernel_data_V_2 <= kernel_data_V_3;
                kernel_data_V_5 <= kernel_data_V_6;
                kernel_data_V_6 <= kernel_data_V_7;
                kernel_data_V_7_load_reg_4787 <= kernel_data_V_7;
                pX_1_load_reg_4818 <= pX_1;
                pY_1_load_reg_4812 <= pY_1;
                sX_1_load_reg_4792 <= sX_1;
                sY_1_load_reg_4802 <= sY_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                kernel_data_V_10 <= kernel_data_V_11;
                kernel_data_V_13 <= kernel_data_V_14;
                kernel_data_V_14 <= kernel_data_V_15;
                kernel_data_V_9 <= kernel_data_V_10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                kernel_data_V_11 <= line_buffer_Array_V_0_0_q0;
                kernel_data_V_15 <= data_V_data_V_TDATA_int;
                kernel_data_V_3 <= line_buffer_Array_V_2_0_q0;
                kernel_data_V_7 <= line_buffer_Array_V_1169_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_3724_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln289_2_fu_3836_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) then
                reg_3720 <= grp_fu_385_p2(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln313_fu_4692_p2 = ap_const_lv1_1))) then
                sY_1 <= ap_phi_mux_storemerge_i_i_phi_fu_374_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, and_ln289_2_reg_4824, ap_CS_fsm_state2, icmp_ln79_fu_3724_p2, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln79_fu_3724_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln1118_fu_4176_p2 <= std_logic_vector(signed(sext_ln1118_601_fu_4172_p1) + signed(sext_ln1118_600_fu_4160_p1));
    add_ln321_fu_4743_p2 <= std_logic_vector(unsigned(pY_1_load_reg_4812) + unsigned(ap_const_lv32_1));
    add_ln323_fu_4754_p2 <= std_logic_vector(unsigned(sY_1_load_reg_4802) + unsigned(ap_const_lv32_1));
    add_ln326_fu_4697_p2 <= std_logic_vector(unsigned(pX_1_load_reg_4818) + unsigned(ap_const_lv32_1));
    add_ln328_fu_4708_p2 <= std_logic_vector(unsigned(sX_1_load_reg_4792) + unsigned(ap_const_lv32_1));
    add_ln703_576_fu_4394_p2 <= std_logic_vector(unsigned(trunc_ln708_589_reg_4843) + unsigned(grp_fu_3578_p4));
    add_ln703_577_fu_4399_p2 <= std_logic_vector(unsigned(add_ln703_reg_4858) + unsigned(add_ln703_576_fu_4394_p2));
    add_ln703_578_fu_3982_p2 <= std_logic_vector(unsigned(grp_fu_3668_p4) + unsigned(grp_fu_3638_p4));
    add_ln703_580_fu_4404_p2 <= std_logic_vector(unsigned(add_ln703_578_reg_4863) + unsigned(add_ln703_579_reg_4973));
    add_ln703_581_fu_4408_p2 <= std_logic_vector(unsigned(add_ln703_577_fu_4399_p2) + unsigned(add_ln703_580_fu_4404_p2));
    add_ln703_582_fu_4414_p2 <= std_logic_vector(unsigned(trunc_ln708_625_reg_4943) + unsigned(grp_fu_3658_p4));
    add_ln703_583_fu_4419_p2 <= std_logic_vector(unsigned(grp_fu_3638_p4) + unsigned(trunc_ln708_629_reg_4963));
    add_ln703_584_fu_4424_p2 <= std_logic_vector(unsigned(add_ln703_582_fu_4414_p2) + unsigned(add_ln703_583_fu_4419_p2));
    add_ln703_585_fu_4231_p2 <= std_logic_vector(signed(sext_ln708_6_fu_4127_p1) + signed(sext_ln708_1_fu_4060_p1));
    add_ln703_586_fu_4430_p2 <= std_logic_vector(signed(sext_ln1118_602_fu_4368_p1) + signed(ap_const_lv15_16A));
    add_ln703_587_fu_4440_p2 <= std_logic_vector(signed(sext_ln708_3_fu_4343_p1) + signed(sext_ln703_fu_4436_p1));
    add_ln703_588_fu_4446_p2 <= std_logic_vector(unsigned(add_ln703_585_reg_4978) + unsigned(add_ln703_587_fu_4440_p2));
    add_ln703_589_fu_4451_p2 <= std_logic_vector(unsigned(add_ln703_584_fu_4424_p2) + unsigned(add_ln703_588_fu_4446_p2));
    add_ln703_592_fu_4464_p2 <= std_logic_vector(unsigned(trunc_ln708_590_reg_4848) + unsigned(grp_fu_3558_p4));
    add_ln703_593_fu_4469_p2 <= std_logic_vector(unsigned(add_ln703_591_reg_4868) + unsigned(add_ln703_592_fu_4464_p2));
    add_ln703_594_fu_3988_p2 <= std_logic_vector(unsigned(grp_fu_3678_p4) + unsigned(trunc_ln708_594_fu_3959_p4));
    add_ln703_595_fu_4474_p2 <= std_logic_vector(unsigned(trunc_ln708_606_reg_4898) + unsigned(grp_fu_3598_p4));
    add_ln703_596_fu_4479_p2 <= std_logic_vector(unsigned(add_ln703_594_reg_4873) + unsigned(add_ln703_595_fu_4474_p2));
    add_ln703_597_fu_4484_p2 <= std_logic_vector(unsigned(add_ln703_593_fu_4469_p2) + unsigned(add_ln703_596_fu_4479_p2));
    add_ln703_598_fu_4490_p2 <= std_logic_vector(unsigned(trunc_ln708_622_reg_4928) + unsigned(grp_fu_3688_p4));
    add_ln703_599_fu_4495_p2 <= std_logic_vector(unsigned(trunc_ln708_630_reg_4968) + unsigned(trunc_ln708_626_reg_4948));
    add_ln703_600_fu_4499_p2 <= std_logic_vector(unsigned(add_ln703_598_fu_4490_p2) + unsigned(add_ln703_599_fu_4495_p2));
    add_ln703_601_fu_4237_p2 <= std_logic_vector(signed(sext_ln708_fu_4141_p1) + signed(sext_ln708_5_fu_4102_p1));
    add_ln703_602_fu_4505_p2 <= std_logic_vector(signed(sext_ln1118_580_fu_4303_p1) + signed(ap_const_lv14_3EA7));
    add_ln703_603_fu_4515_p2 <= std_logic_vector(signed(sext_ln708_7_fu_4386_p1) + signed(sext_ln703_13_fu_4511_p1));
    add_ln703_604_fu_4521_p2 <= std_logic_vector(unsigned(add_ln703_601_reg_4983) + unsigned(add_ln703_603_fu_4515_p2));
    add_ln703_605_fu_4526_p2 <= std_logic_vector(unsigned(add_ln703_600_fu_4499_p2) + unsigned(add_ln703_604_fu_4521_p2));
    add_ln703_607_fu_3994_p2 <= std_logic_vector(unsigned(trunc_ln708_579_fu_3862_p4) + unsigned(grp_fu_3528_p4));
    add_ln703_608_fu_4539_p2 <= std_logic_vector(unsigned(grp_fu_3628_p4) + unsigned(trunc_ln708_583_reg_4833));
    add_ln703_609_fu_4544_p2 <= std_logic_vector(unsigned(add_ln703_607_reg_4878) + unsigned(add_ln703_608_fu_4539_p2));
    add_ln703_611_fu_4549_p2 <= std_logic_vector(unsigned(trunc_ln708_607_reg_4903) + unsigned(grp_fu_3678_p4));
    add_ln703_612_fu_4554_p2 <= std_logic_vector(unsigned(add_ln703_610_reg_4883) + unsigned(add_ln703_611_fu_4549_p2));
    add_ln703_613_fu_4559_p2 <= std_logic_vector(unsigned(add_ln703_609_fu_4544_p2) + unsigned(add_ln703_612_fu_4554_p2));
    add_ln703_614_fu_4243_p2 <= std_logic_vector(unsigned(grp_fu_3588_p4) + unsigned(grp_fu_3568_p4));
    add_ln703_615_fu_4565_p2 <= std_logic_vector(unsigned(trunc_ln708_623_reg_4933) + unsigned(trunc_ln708_619_fu_4358_p4));
    add_ln703_616_fu_4570_p2 <= std_logic_vector(unsigned(add_ln703_614_reg_4988) + unsigned(add_ln703_615_fu_4565_p2));
    add_ln703_618_fu_4575_p2 <= std_logic_vector(signed(sext_ln1118_584_fu_4314_p1) + signed(ap_const_lv13_1FFB));
    add_ln703_619_fu_4585_p2 <= std_logic_vector(signed(sext_ln708_8_fu_4390_p1) + signed(sext_ln703_14_fu_4581_p1));
    add_ln703_620_fu_4591_p2 <= std_logic_vector(unsigned(add_ln703_617_reg_4993) + unsigned(add_ln703_619_fu_4585_p2));
    add_ln703_621_fu_4596_p2 <= std_logic_vector(unsigned(add_ln703_616_fu_4570_p2) + unsigned(add_ln703_620_fu_4591_p2));
    add_ln703_623_fu_4000_p2 <= std_logic_vector(unsigned(grp_fu_3568_p4) + unsigned(grp_fu_3538_p4));
    add_ln703_624_fu_4609_p2 <= std_logic_vector(unsigned(grp_fu_3568_p4) + unsigned(trunc_ln708_584_reg_4838));
    add_ln703_625_fu_4614_p2 <= std_logic_vector(unsigned(add_ln703_623_reg_4888) + unsigned(add_ln703_624_fu_4609_p2));
    add_ln703_626_fu_4006_p2 <= std_logic_vector(unsigned(grp_fu_3658_p4) + unsigned(grp_fu_3628_p4));
    add_ln703_627_fu_4619_p2 <= std_logic_vector(unsigned(trunc_ln708_612_reg_4913) + unsigned(grp_fu_3548_p4));
    add_ln703_628_fu_4624_p2 <= std_logic_vector(unsigned(add_ln703_626_reg_4893) + unsigned(add_ln703_627_fu_4619_p2));
    add_ln703_629_fu_4629_p2 <= std_logic_vector(unsigned(add_ln703_625_fu_4614_p2) + unsigned(add_ln703_628_fu_4624_p2));
    add_ln703_630_fu_4635_p2 <= std_logic_vector(unsigned(grp_fu_3538_p4) + unsigned(trunc_ln708_616_reg_4918));
    add_ln703_631_fu_4640_p2 <= std_logic_vector(unsigned(grp_fu_3618_p4) + unsigned(trunc_ln708_624_reg_4938));
    add_ln703_632_fu_4645_p2 <= std_logic_vector(unsigned(add_ln703_630_fu_4635_p2) + unsigned(add_ln703_631_fu_4640_p2));
    add_ln703_633_fu_4651_p2 <= std_logic_vector(signed(sext_ln708_2_fu_4317_p1) + signed(grp_fu_3518_p4));
    add_ln703_634_fu_4657_p2 <= std_logic_vector(signed(sext_ln1118_605_fu_4371_p1) + signed(ap_const_lv15_7E1B));
    add_ln703_635_fu_4667_p2 <= std_logic_vector(signed(sext_ln708_4_fu_4347_p1) + signed(sext_ln703_15_fu_4663_p1));
    add_ln703_636_fu_4673_p2 <= std_logic_vector(unsigned(add_ln703_633_fu_4651_p2) + unsigned(add_ln703_635_fu_4667_p2));
    add_ln703_637_fu_4679_p2 <= std_logic_vector(unsigned(add_ln703_632_fu_4645_p2) + unsigned(add_ln703_636_fu_4673_p2));
    add_ln703_fu_3976_p2 <= std_logic_vector(unsigned(grp_fu_3578_p4) + unsigned(grp_fu_3548_p4));
    add_ln79_fu_3730_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_360) + unsigned(ap_const_lv10_1));
    and_ln289_1_fu_3830_p2 <= (icmp_ln289_3_fu_3818_p2 and icmp_ln289_2_fu_3808_p2);
    and_ln289_2_fu_3836_p2 <= (and_ln289_fu_3824_p2 and and_ln289_1_fu_3830_p2);
    and_ln289_fu_3824_p2 <= (icmp_ln289_fu_3788_p2 and icmp_ln289_1_fu_3798_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
                ap_block_state4 <= ((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)));
    end process;


    ap_condition_1099_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
                ap_condition_1099 <= (not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4));
    end process;


    ap_condition_1100_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, icmp_ln313_fu_4692_p2, data_V_data_V_TVALID_int)
    begin
                ap_condition_1100 <= (not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln313_fu_4692_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_374_p4_assign_proc : process(ap_CS_fsm_state4, select_ln323_fu_4759_p3, icmp_ln313_fu_4692_p2, icmp_ln317_fu_4738_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln313_fu_4692_p2 = ap_const_lv1_1))) then
            if ((icmp_ln317_fu_4738_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_374_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_4738_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_374_p4 <= select_ln323_fu_4759_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_374_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_374_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state4, data_V_data_V_TVALID_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_V_data_V_TDATA_blk_n <= data_V_data_V_TVALID_int;
        else 
            data_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_TREADY_assign_proc : process(data_V_data_V_TVALID, regslice_both_data_V_data_V_U_ack_in)
    begin
        if (((data_V_data_V_TVALID = ap_const_logic_1) and (regslice_both_data_V_data_V_U_ack_in = ap_const_logic_1))) then 
            data_V_data_V_TREADY <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_TREADY_int_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            data_V_data_V_TREADY_int <= ap_const_logic_1;
        else 
            data_V_data_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3508_p4 <= grp_fu_385_p2(24 downto 10);
    grp_fu_3518_p4 <= grp_fu_381_p2(25 downto 10);
    grp_fu_3528_p4 <= grp_fu_388_p2(25 downto 10);
    grp_fu_3538_p4 <= grp_fu_396_p2(25 downto 10);
    grp_fu_3548_p4 <= grp_fu_392_p2(25 downto 10);
    grp_fu_3558_p4 <= grp_fu_402_p2(25 downto 10);
    grp_fu_3568_p4 <= grp_fu_401_p2(25 downto 10);
    grp_fu_3578_p4 <= grp_fu_384_p2(25 downto 10);
    grp_fu_3588_p4 <= grp_fu_399_p2(25 downto 10);
    grp_fu_3598_p4 <= grp_fu_383_p2(25 downto 10);
    grp_fu_3618_p4 <= grp_fu_395_p2(25 downto 10);
    grp_fu_3628_p4 <= grp_fu_389_p2(25 downto 10);
    grp_fu_3638_p4 <= grp_fu_382_p2(25 downto 10);
    grp_fu_3648_p4 <= grp_fu_387_p2(25 downto 10);
    grp_fu_3658_p4 <= grp_fu_397_p2(25 downto 10);
    grp_fu_3668_p4 <= grp_fu_386_p2(25 downto 10);
    grp_fu_3678_p4 <= grp_fu_394_p2(25 downto 10);
    grp_fu_3688_p4 <= grp_fu_390_p2(25 downto 10);
    grp_fu_3698_p2 <= std_logic_vector(unsigned(grp_fu_3558_p4) + unsigned(grp_fu_3518_p4));
    grp_fu_3704_p2 <= std_logic_vector(unsigned(grp_fu_3688_p4) + unsigned(grp_fu_3648_p4));
    grp_fu_3710_p1 <= grp_fu_398_p2(25 - 1 downto 0);
    grp_fu_3710_p4 <= grp_fu_3710_p1(24 downto 10);

    grp_fu_381_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_fu_3842_p1, sext_ln1118_593_fu_4073_p1, sext_ln1118_608_fu_4380_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_381_p0 <= sext_ln1118_608_fu_4380_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_381_p0 <= sext_ln1118_593_fu_4073_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_381_p0 <= sext_ln1118_fu_3842_p1(16 - 1 downto 0);
        else 
            grp_fu_381_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_381_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_381_p1 <= ap_const_lv26_2F8(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_381_p1 <= ap_const_lv26_1E7(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_381_p1 <= ap_const_lv26_3FFFDB0(12 - 1 downto 0);
        else 
            grp_fu_381_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_381_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_381_p0) * signed(grp_fu_381_p1))), 26));

    grp_fu_382_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_608_fu_4380_p1, sext_ln1118_585_fu_3916_p1, sext_ln1118_604_fu_4207_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_382_p0 <= sext_ln1118_608_fu_4380_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_382_p0 <= sext_ln1118_604_fu_4207_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_382_p0 <= sext_ln1118_585_fu_3916_p1(16 - 1 downto 0);
        else 
            grp_fu_382_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_382_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_382_p1 <= ap_const_lv26_3FFFDAC(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_382_p1 <= ap_const_lv26_293(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_382_p1 <= ap_const_lv26_323(12 - 1 downto 0);
        else 
            grp_fu_382_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_382_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_382_p0) * signed(grp_fu_382_p1))), 26));

    grp_fu_383_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_579_fu_3877_p1, sext_ln1118_596_fu_4106_p1, sext_ln1118_590_fu_4321_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_383_p0 <= sext_ln1118_590_fu_4321_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_383_p0 <= sext_ln1118_596_fu_4106_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_383_p0 <= sext_ln1118_579_fu_3877_p1(16 - 1 downto 0);
        else 
            grp_fu_383_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_383_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_383_p1 <= ap_const_lv26_32A(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_383_p1 <= ap_const_lv26_2C3(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_383_p1 <= ap_const_lv26_3FFFD33(12 - 1 downto 0);
        else 
            grp_fu_383_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_383_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_383_p0) * signed(grp_fu_383_p1))), 26));

    grp_fu_384_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_579_fu_3877_p1, sext_ln1118_595_fu_4095_p1, sext_ln1118_581_fu_4306_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_384_p0 <= sext_ln1118_581_fu_4306_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_384_p0 <= sext_ln1118_595_fu_4095_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_384_p0 <= sext_ln1118_579_fu_3877_p1(16 - 1 downto 0);
        else 
            grp_fu_384_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_384_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_384_p1 <= ap_const_lv26_297(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_384_p1 <= ap_const_lv26_267(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_384_p1 <= ap_const_lv26_2ED(11 - 1 downto 0);
        else 
            grp_fu_384_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_384_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_384_p0) * signed('0' &grp_fu_384_p1))), 26));

    grp_fu_385_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_576_fu_3849_p1, sext_ln1118_588_fu_4064_p1, sext_ln1118_607_fu_4374_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_385_p0 <= sext_ln1118_607_fu_4374_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_385_p0 <= sext_ln1118_588_fu_4064_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_385_p0 <= sext_ln1118_576_fu_3849_p1(16 - 1 downto 0);
        else 
            grp_fu_385_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_385_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_385_p1 <= ap_const_lv25_1FFFF57(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_385_p1 <= ap_const_lv25_9E(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_385_p1 <= ap_const_lv25_93(10 - 1 downto 0);
        else 
            grp_fu_385_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_385_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_385_p0) * signed(grp_fu_385_p1))), 25));

    grp_fu_386_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_606_fu_4224_p1, sext_ln1118_589_fu_3969_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_386_p0 <= sext_ln1118_606_fu_4224_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_386_p0 <= sext_ln1118_589_fu_3969_p1(16 - 1 downto 0);
        else 
            grp_fu_386_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_386_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_386_p1 <= ap_const_lv26_3FFFBE6(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_386_p1 <= ap_const_lv26_28F(12 - 1 downto 0);
        else 
            grp_fu_386_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_386_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_386_p0) * signed(grp_fu_386_p1))), 26));

    grp_fu_387_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_585_fu_3916_p1, sext_ln1118_604_fu_4207_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_387_p0 <= sext_ln1118_604_fu_4207_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_387_p0 <= sext_ln1118_585_fu_3916_p1(16 - 1 downto 0);
        else 
            grp_fu_387_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_387_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_387_p1 <= ap_const_lv26_3FFFD28(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_387_p1 <= ap_const_lv26_1C2(11 - 1 downto 0);
        else 
            grp_fu_387_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_387_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_387_p0) * signed(grp_fu_387_p1))), 26));

    grp_fu_388_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_fu_3842_p1, sext_ln1118_593_fu_4073_p1, sext_ln1118_591_fu_4328_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_388_p0 <= sext_ln1118_591_fu_4328_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_388_p0 <= sext_ln1118_593_fu_4073_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_388_p0 <= sext_ln1118_fu_3842_p1(16 - 1 downto 0);
        else 
            grp_fu_388_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_388_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_388_p1 <= ap_const_lv24_FFFFB9(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_388_p1 <= ap_const_lv26_3FFFC14(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_388_p1 <= ap_const_lv26_397(12 - 1 downto 0);
        else 
            grp_fu_388_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_388_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_388_p0) * signed(grp_fu_388_p1))), 26));

    grp_fu_389_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_604_fu_4207_p1, sext_ln1118_581_fu_4306_p1, sext_ln1118_583_fu_3899_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_389_p0 <= sext_ln1118_581_fu_4306_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_389_p0 <= sext_ln1118_604_fu_4207_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_389_p0 <= sext_ln1118_583_fu_3899_p1(16 - 1 downto 0);
        else 
            grp_fu_389_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_389_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_389_p1 <= ap_const_lv26_352(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_389_p1 <= ap_const_lv26_3FFFE2E(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_389_p1 <= ap_const_lv26_266(12 - 1 downto 0);
        else 
            grp_fu_389_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_389_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_389_p0) * signed(grp_fu_389_p1))), 26));

    grp_fu_390_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_606_fu_4224_p1, sext_ln1118_589_fu_3969_p1, sext_ln1118_598_fu_4350_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_390_p0 <= sext_ln1118_598_fu_4350_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_390_p0 <= sext_ln1118_606_fu_4224_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_390_p0 <= sext_ln1118_589_fu_3969_p1(16 - 1 downto 0);
        else 
            grp_fu_390_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_390_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_390_p1 <= ap_const_lv26_131(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_390_p1 <= ap_const_lv26_3FFFCD7(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_390_p1 <= ap_const_lv26_24C(12 - 1 downto 0);
        else 
            grp_fu_390_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_390_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_390_p0) * signed(grp_fu_390_p1))), 26));

    grp_fu_391_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_582_fu_3894_p1, sext_ln1118_599_fu_4145_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_391_p0 <= sext_ln1118_599_fu_4145_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_391_p0 <= sext_ln1118_582_fu_3894_p1(16 - 1 downto 0);
        else 
            grp_fu_391_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_391_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_391_p1 <= ap_const_lv26_3FFFEF2(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_391_p1 <= ap_const_lv22_3FFFEB(10 - 1 downto 0);
        else 
            grp_fu_391_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_391_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_391_p0) * signed(grp_fu_391_p1))), 26));

    grp_fu_392_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_590_fu_4321_p1, sext_ln1118_577_fu_3854_p1, sext_ln1118_592_fu_4068_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_392_p0 <= sext_ln1118_590_fu_4321_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_392_p0 <= sext_ln1118_592_fu_4068_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_392_p0 <= sext_ln1118_577_fu_3854_p1(16 - 1 downto 0);
        else 
            grp_fu_392_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_392_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_392_p1 <= ap_const_lv26_3FFFDB9(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_392_p1 <= ap_const_lv25_1FFFF43(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_392_p1 <= ap_const_lv26_19A(11 - 1 downto 0);
        else 
            grp_fu_392_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_392_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_392_p0) * signed(grp_fu_392_p1))), 26));

    grp_fu_393_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_583_fu_3899_p1, sext_ln1118_599_fu_4145_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_393_p0 <= sext_ln1118_599_fu_4145_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_393_p0 <= sext_ln1118_583_fu_3899_p1(16 - 1 downto 0);
        else 
            grp_fu_393_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_393_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_393_p1 <= ap_const_lv26_3FFFED3(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_393_p1 <= ap_const_lv26_20C(12 - 1 downto 0);
        else 
            grp_fu_393_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_393_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_393_p0) * signed(grp_fu_393_p1))), 26));

    grp_fu_394_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_606_fu_4224_p1, sext_ln1118_590_fu_4321_p1, sext_ln1118_589_fu_3969_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_394_p0 <= sext_ln1118_590_fu_4321_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_394_p0 <= sext_ln1118_606_fu_4224_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_394_p0 <= sext_ln1118_589_fu_3969_p1(16 - 1 downto 0);
        else 
            grp_fu_394_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_394_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_394_p1 <= ap_const_lv26_2A1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_394_p1 <= ap_const_lv26_26B(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_394_p1 <= ap_const_lv26_2E3(11 - 1 downto 0);
        else 
            grp_fu_394_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_394_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_394_p0) * signed('0' &grp_fu_394_p1))), 26));

    grp_fu_395_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_606_reg_4958, sext_ln1118_583_fu_3899_p1, sext_ln1118_599_fu_4145_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_395_p0 <= sext_ln1118_606_reg_4958(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_395_p0 <= sext_ln1118_599_fu_4145_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_395_p0 <= sext_ln1118_583_fu_3899_p1(16 - 1 downto 0);
        else 
            grp_fu_395_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_395_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_395_p1 <= ap_const_lv26_139(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_395_p1 <= ap_const_lv26_3FFFC49(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_395_p1 <= ap_const_lv26_3FFFD07(11 - 1 downto 0);
        else 
            grp_fu_395_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_395_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_395_p0) * signed(grp_fu_395_p1))), 26));

    grp_fu_396_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_fu_3842_p1, sext_ln1118_593_fu_4073_p1, sext_ln1118_598_fu_4350_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_396_p0 <= sext_ln1118_598_fu_4350_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_396_p0 <= sext_ln1118_593_fu_4073_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_396_p0 <= sext_ln1118_fu_3842_p1(16 - 1 downto 0);
        else 
            grp_fu_396_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_396_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_396_p1 <= ap_const_lv26_34E(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_396_p1 <= ap_const_lv26_3FFFB46(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_396_p1 <= ap_const_lv26_450(13 - 1 downto 0);
        else 
            grp_fu_396_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_396_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_396_p0) * signed(grp_fu_396_p1))), 26));

    grp_fu_397_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_585_fu_3916_p1, sext_ln1118_598_fu_4350_p1, sext_ln1118_603_fu_4202_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_397_p0 <= sext_ln1118_598_fu_4350_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_397_p0 <= sext_ln1118_603_fu_4202_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_397_p0 <= sext_ln1118_585_fu_3916_p1(16 - 1 downto 0);
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_397_p1 <= ap_const_lv26_3FFFB71(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_397_p1 <= ap_const_lv24_4A(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_397_p1 <= ap_const_lv26_296(12 - 1 downto 0);
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_397_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_397_p0) * signed(grp_fu_397_p1))), 26));

    grp_fu_398_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_607_fu_4374_p1, sext_ln1118_577_fu_3854_p1, sext_ln1118_594_fu_4090_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_398_p0 <= sext_ln1118_607_fu_4374_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_398_p0 <= sext_ln1118_594_fu_4090_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_398_p0 <= sext_ln1118_577_fu_3854_p1(16 - 1 downto 0);
        else 
            grp_fu_398_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_398_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_398_p1 <= ap_const_lv25_CC(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_398_p1 <= ap_const_lv25_BF(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_398_p1 <= ap_const_lv26_475(12 - 1 downto 0);
        else 
            grp_fu_398_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_398_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_398_p0) * signed('0' &grp_fu_398_p1))), 26));

    grp_fu_399_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_579_fu_3877_p1, sext_ln1118_596_fu_4106_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_399_p0 <= sext_ln1118_596_fu_4106_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_399_p0 <= sext_ln1118_579_fu_3877_p1(16 - 1 downto 0);
        else 
            grp_fu_399_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_399_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_399_p1 <= ap_const_lv26_3FFFE3C(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_399_p1 <= ap_const_lv26_374(12 - 1 downto 0);
        else 
            grp_fu_399_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_399_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_399_p0) * signed(grp_fu_399_p1))), 26));

    grp_fu_400_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_598_fu_4350_p1, sext_ln1118_578_fu_3872_p1, sext_ln1118_597_fu_4112_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_400_p0 <= sext_ln1118_598_fu_4350_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_400_p0 <= sext_ln1118_597_fu_4112_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_400_p0 <= sext_ln1118_578_fu_3872_p1(16 - 1 downto 0);
        else 
            grp_fu_400_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_400_p1 <= ap_const_lv26_16F(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_400_p1 <= ap_const_lv25_1FFFF5D(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_400_p1 <= ap_const_lv23_7FFFD5(11 - 1 downto 0);
        else 
            grp_fu_400_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_400_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_400_p0) * signed(grp_fu_400_p1))), 26));

    grp_fu_401_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_595_fu_4095_p1, sext_ln1118_581_fu_4306_p1, sext_ln1118_577_fu_3854_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_401_p0 <= sext_ln1118_581_fu_4306_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_401_p0 <= sext_ln1118_595_fu_4095_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_401_p0 <= sext_ln1118_577_fu_3854_p1(16 - 1 downto 0);
        else 
            grp_fu_401_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_401_p1 <= ap_const_lv26_3FFFCC1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_401_p1 <= ap_const_lv26_3FFFD53(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_401_p1 <= ap_const_lv26_1CA(11 - 1 downto 0);
        else 
            grp_fu_401_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_401_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_401_p0) * signed(grp_fu_401_p1))), 26));

    grp_fu_402_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln1118_595_fu_4095_p1, sext_ln1118_581_fu_4306_p1, sext_ln1118_577_fu_3854_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_402_p0 <= sext_ln1118_581_fu_4306_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_402_p0 <= sext_ln1118_595_fu_4095_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_402_p0 <= sext_ln1118_577_fu_3854_p1(16 - 1 downto 0);
        else 
            grp_fu_402_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_402_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_402_p1 <= ap_const_lv26_53B(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_402_p1 <= ap_const_lv26_1ED(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_402_p1 <= ap_const_lv26_3FFFD19(13 - 1 downto 0);
        else 
            grp_fu_402_p1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_402_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_402_p0) * signed(grp_fu_402_p1))), 26));
    icmp_ln289_1_fu_3798_p2 <= "1" when (sY_1 = ap_const_lv32_3) else "0";
    icmp_ln289_2_fu_3808_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln289_3_fu_3818_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln289_fu_3788_p2 <= "1" when (sX_1 = ap_const_lv32_3) else "0";
    icmp_ln313_fu_4692_p2 <= "1" when (pX_1_load_reg_4818 = ap_const_lv32_1B) else "0";
    icmp_ln317_fu_4738_p2 <= "1" when (pY_1_load_reg_4812 = ap_const_lv32_1B) else "0";
    icmp_ln79_fu_3724_p2 <= "1" when (indvar_flatten_reg_360 = ap_const_lv10_310) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op309 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_0_we0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1169_0_ce0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1169_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1169_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1169_0_we0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1169_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1169_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_ce0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_2_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_we0_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_2_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state4, and_ln289_2_reg_4824)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= std_logic_vector(unsigned(add_ln703_581_fu_4408_p2) + unsigned(add_ln703_589_fu_4451_p2));

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state4, and_ln289_2_reg_4824)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= std_logic_vector(unsigned(add_ln703_597_fu_4484_p2) + unsigned(add_ln703_605_fu_4526_p2));

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state4, and_ln289_2_reg_4824)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= std_logic_vector(unsigned(add_ln703_613_fu_4559_p2) + unsigned(add_ln703_621_fu_4596_p2));

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state4, and_ln289_2_reg_4824)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= std_logic_vector(unsigned(add_ln703_629_fu_4629_p2) + unsigned(add_ln703_637_fu_4679_p2));

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln289_2_reg_4824, io_acc_block_signal_op309, data_V_data_V_TVALID_int)
    begin
        if ((not(((data_V_data_V_TVALID_int = ap_const_logic_0) or ((io_acc_block_signal_op309 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4824)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln289_2_reg_4824))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_4759_p3 <= 
        ap_const_lv32_3 when (icmp_ln289_1_reg_4807(0) = '1') else 
        add_ln323_fu_4754_p2;
    select_ln328_fu_4713_p3 <= 
        ap_const_lv32_3 when (icmp_ln289_reg_4797(0) = '1') else 
        add_ln328_fu_4708_p2;
    sext_ln1118_576_fu_3849_p0 <= kernel_data_V_1170;
        sext_ln1118_576_fu_3849_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_576_fu_3849_p0),25));

    sext_ln1118_577_fu_3854_p0 <= kernel_data_V_2;
        sext_ln1118_577_fu_3854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_577_fu_3854_p0),26));

    sext_ln1118_578_fu_3872_p0 <= kernel_data_V_3;
        sext_ln1118_578_fu_3872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_578_fu_3872_p0),23));

    sext_ln1118_579_fu_3877_p0 <= kernel_data_V_3;
        sext_ln1118_579_fu_3877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_579_fu_3877_p0),26));

        sext_ln1118_580_fu_4303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_582_reg_4828),14));

    sext_ln1118_581_fu_4306_p0 <= line_buffer_Array_V_2_0_q0;
        sext_ln1118_581_fu_4306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_581_fu_4306_p0),26));

    sext_ln1118_582_fu_3894_p0 <= kernel_data_V_5;
        sext_ln1118_582_fu_3894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_582_fu_3894_p0),22));

    sext_ln1118_583_fu_3899_p0 <= kernel_data_V_5;
        sext_ln1118_583_fu_3899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_583_fu_3899_p0),26));

        sext_ln1118_584_fu_4314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_591_reg_4853),13));

    sext_ln1118_585_fu_3916_p0 <= kernel_data_V_6;
        sext_ln1118_585_fu_3916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_585_fu_3916_p0),26));

        sext_ln1118_586_fu_3931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_3923_p3),26));

        sext_ln1118_587_fu_3949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_3941_p3),26));

        sext_ln1118_588_fu_4064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_7_load_reg_4787),25));

    sext_ln1118_589_fu_3969_p0 <= kernel_data_V_7;
        sext_ln1118_589_fu_3969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_589_fu_3969_p0),26));

    sext_ln1118_590_fu_4321_p0 <= line_buffer_Array_V_1169_0_q0;
        sext_ln1118_590_fu_4321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_590_fu_4321_p0),26));

    sext_ln1118_591_fu_4328_p0 <= line_buffer_Array_V_1169_0_q0;
        sext_ln1118_591_fu_4328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_591_fu_4328_p0),24));

    sext_ln1118_592_fu_4068_p0 <= kernel_data_V_9;
        sext_ln1118_592_fu_4068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_592_fu_4068_p0),25));

    sext_ln1118_593_fu_4073_p0 <= kernel_data_V_9;
        sext_ln1118_593_fu_4073_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_593_fu_4073_p0),26));

    sext_ln1118_594_fu_4090_p0 <= kernel_data_V_10;
        sext_ln1118_594_fu_4090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_594_fu_4090_p0),25));

    sext_ln1118_595_fu_4095_p0 <= kernel_data_V_10;
        sext_ln1118_595_fu_4095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_595_fu_4095_p0),26));

    sext_ln1118_596_fu_4106_p0 <= kernel_data_V_11;
        sext_ln1118_596_fu_4106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_596_fu_4106_p0),26));

    sext_ln1118_597_fu_4112_p0 <= kernel_data_V_11;
        sext_ln1118_597_fu_4112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_597_fu_4112_p0),25));

    sext_ln1118_598_fu_4350_p0 <= line_buffer_Array_V_0_0_q0;
        sext_ln1118_598_fu_4350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_598_fu_4350_p0),26));

    sext_ln1118_599_fu_4145_p0 <= kernel_data_V_13;
        sext_ln1118_599_fu_4145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_599_fu_4145_p0),26));

        sext_ln1118_600_fu_4160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_4152_p3),24));

        sext_ln1118_601_fu_4172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_4164_p3),24));

        sext_ln1118_602_fu_4368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_621_reg_4923),15));

    sext_ln1118_603_fu_4202_p0 <= kernel_data_V_14;
        sext_ln1118_603_fu_4202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_603_fu_4202_p0),24));

    sext_ln1118_604_fu_4207_p0 <= kernel_data_V_14;
        sext_ln1118_604_fu_4207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_604_fu_4207_p0),26));

        sext_ln1118_605_fu_4371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_628_reg_4953),15));

    sext_ln1118_606_fu_4224_p0 <= kernel_data_V_15;
        sext_ln1118_606_fu_4224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_606_fu_4224_p0),26));

    sext_ln1118_607_fu_4374_p0 <= data_V_data_V_TDATA_int;
        sext_ln1118_607_fu_4374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_607_fu_4374_p0),25));

    sext_ln1118_608_fu_4380_p0 <= data_V_data_V_TDATA_int;
        sext_ln1118_608_fu_4380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_608_fu_4380_p0),26));

    sext_ln1118_fu_3842_p0 <= kernel_data_V_1170;
        sext_ln1118_fu_3842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_fu_3842_p0),26));

        sext_ln703_13_fu_4511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_602_fu_4505_p2),16));

        sext_ln703_14_fu_4581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_618_fu_4575_p2),16));

        sext_ln703_15_fu_4663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_634_fu_4657_p2),16));

        sext_ln703_fu_4436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_586_fu_4430_p2),16));

        sext_ln708_1_fu_4060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_3720),16));

        sext_ln708_2_fu_4317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_3720),16));

        sext_ln708_3_fu_4343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_601_fu_4333_p4),16));

        sext_ln708_4_fu_4347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_608_reg_4908),16));

        sext_ln708_5_fu_4102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3710_p4),16));

        sext_ln708_6_fu_4127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_613_fu_4117_p4),16));

        sext_ln708_7_fu_4386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3710_p4),16));

        sext_ln708_8_fu_4390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_3508_p4),16));

        sext_ln708_fu_4141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_614_fu_4131_p4),16));

    shl_ln1118_1_fu_3941_p1 <= kernel_data_V_6;
    shl_ln1118_1_fu_3941_p3 <= (shl_ln1118_1_fu_3941_p1 & ap_const_lv3_0);
    shl_ln1118_2_fu_4152_p1 <= kernel_data_V_13;
    shl_ln1118_2_fu_4152_p3 <= (shl_ln1118_2_fu_4152_p1 & ap_const_lv7_0);
    shl_ln1118_3_fu_4164_p1 <= kernel_data_V_13;
    shl_ln1118_3_fu_4164_p3 <= (shl_ln1118_3_fu_4164_p1 & ap_const_lv1_0);
    shl_ln_fu_3923_p1 <= kernel_data_V_6;
    shl_ln_fu_3923_p3 <= (shl_ln_fu_3923_p1 & ap_const_lv9_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_1_fu_3953_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_3935_p2) - unsigned(sext_ln1118_587_fu_3949_p1));
    sub_ln1118_fu_3935_p2 <= std_logic_vector(unsigned(ap_const_lv26_0) - unsigned(sext_ln1118_586_fu_3931_p1));
    trunc_ln708_579_fu_3862_p4 <= grp_fu_398_p2(25 downto 10);
    trunc_ln708_582_fu_3884_p1 <= grp_fu_400_p2(23 - 1 downto 0);
    trunc_ln708_591_fu_3906_p1 <= grp_fu_391_p2(22 - 1 downto 0);
    trunc_ln708_594_fu_3959_p4 <= sub_ln1118_1_fu_3953_p2(25 downto 10);
    trunc_ln708_601_fu_4333_p1 <= grp_fu_388_p2(24 - 1 downto 0);
    trunc_ln708_601_fu_4333_p4 <= trunc_ln708_601_fu_4333_p1(23 downto 10);
    trunc_ln708_608_fu_4080_p1 <= grp_fu_392_p2(25 - 1 downto 0);
    trunc_ln708_613_fu_4117_p1 <= grp_fu_400_p2(25 - 1 downto 0);
    trunc_ln708_613_fu_4117_p4 <= trunc_ln708_613_fu_4117_p1(24 downto 10);
    trunc_ln708_614_fu_4131_p1 <= kernel_data_V_11;
    trunc_ln708_614_fu_4131_p4 <= trunc_ln708_614_fu_4131_p1(15 downto 1);
    trunc_ln708_619_fu_4358_p4 <= grp_fu_400_p2(25 downto 10);
    trunc_ln708_628_fu_4214_p1 <= grp_fu_397_p2(24 - 1 downto 0);
end behav;
