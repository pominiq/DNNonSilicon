-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv10_2A4 : STD_LOGIC_VECTOR (9 downto 0) := "1010100100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_2_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_36 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_37 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_38 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_39 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_52 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_53 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_54 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_55 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_41 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_42 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_43 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_56 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_57 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_58 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_59 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_44 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_45 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_46 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_47 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_60 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_61 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_62 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_2_63 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_2_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_2_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_1_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_2_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_1_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_2_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_1_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_2_2_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_2_2_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln241_reg_2902 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal and_ln191_4_reg_2911 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_4_reg_2911_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_364 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln241_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op55 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal io_acc_block_signal_op375 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln241_reg_2902_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln241_fu_392_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln191_4_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_4_reg_2911_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_4_reg_2911_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_reg_2915 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln222_fu_530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_15_V_reg_2928 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_reg_2928_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_reg_2928_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_1_reg_2958 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_1_reg_2958_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_1_reg_2958_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_2_reg_2988 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_2_reg_2988_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_2_reg_2988_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_3_reg_3018 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_3_reg_3018_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_15_V_3_reg_3018_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_reg_3048 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_reg_3048_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_reg_3048_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_reg_3070 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_reg_3070_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_reg_3070_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_reg_3100 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_reg_3100_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_reg_3100_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_1_reg_3122 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_1_reg_3122_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_1_reg_3122_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_1_reg_3144 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_1_reg_3144_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_1_reg_3144_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_8_reg_3174 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_8_reg_3174_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_8_reg_3174_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_2_reg_3196 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_2_reg_3196_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_2_reg_3196_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_2_reg_3218 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_2_reg_3218_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_2_reg_3218_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_9_reg_3248 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_9_reg_3248_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_9_reg_3248_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_3_reg_3270 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_3_reg_3270_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_11_V_3_reg_3270_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_3_reg_3292 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_3_reg_3292_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_7_V_3_reg_3292_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_10_reg_3322 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_10_reg_3322_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_3_V_10_reg_3322_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_reg_3344 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_reg_3344_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_8_reg_3350 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_8_reg_3350_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_9_reg_3356 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_9_reg_3356_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_10_reg_3362 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_0_V_10_reg_3362_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_reg_3368 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_reg_3368_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_1_reg_3374 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_1_reg_3374_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_2_reg_3380 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_2_reg_3380_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_3_reg_3386 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_4_V_3_reg_3386_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_reg_3392 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_reg_3392_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_1_reg_3398 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_1_reg_3398_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_2_reg_3404 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_2_reg_3404_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_3_reg_3410 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_8_V_3_reg_3410_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_reg_3416 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_reg_3416_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_1_reg_3422 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_1_reg_3422_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_2_reg_3428 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_2_reg_3428_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_3_reg_3434 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_12_V_3_reg_3434_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_reg_3440 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_reg_3440_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_8_reg_3446 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_8_reg_3446_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_9_reg_3452 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_9_reg_3452_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_10_reg_3458 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_1_V_10_reg_3458_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_reg_3464 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_reg_3464_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_1_reg_3470 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_1_reg_3470_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_2_reg_3476 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_2_reg_3476_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_3_reg_3482 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_5_V_3_reg_3482_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_reg_3488 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_reg_3488_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_1_reg_3494 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_1_reg_3494_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_2_reg_3500 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_2_reg_3500_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_3_reg_3506 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_9_V_3_reg_3506_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_reg_3512 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_reg_3512_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_1_reg_3518 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_1_reg_3518_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_2_reg_3524 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_2_reg_3524_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_3_reg_3530 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_13_V_3_reg_3530_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_reg_3536 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_reg_3536_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_8_reg_3542 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_8_reg_3542_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_9_reg_3548 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_9_reg_3548_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_10_reg_3554 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_2_V_10_reg_3554_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_reg_3560 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_reg_3560_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_1_reg_3566 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_1_reg_3566_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_2_reg_3572 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_2_reg_3572_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_3_reg_3578 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_6_V_3_reg_3578_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_reg_3584 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_reg_3584_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_1_reg_3590 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_1_reg_3590_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_2_reg_3596 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_2_reg_3596_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_3_reg_3602 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_10_V_3_reg_3602_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_reg_3608 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_reg_3608_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_1_reg_3614 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_1_reg_3614_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_2_reg_3620 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_2_reg_3620_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_3_reg_3626 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_window_14_V_3_reg_3626_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_34_fu_1194_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_34_reg_3632 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln_fu_1206_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln_reg_3637 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_39_fu_1279_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_39_reg_3642 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_1_fu_1291_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_1_reg_3647 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_45_fu_1364_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_45_reg_3652 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_3_fu_1372_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_3_reg_3657 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln65_fu_1453_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln65_reg_3662 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_4_fu_1457_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_4_reg_3667 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_56_fu_1526_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_56_reg_3672 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_6_fu_1538_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_6_reg_3677 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_61_fu_1611_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_61_reg_3682 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_7_fu_1623_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_7_reg_3687 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_67_fu_1696_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_67_reg_3692 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_9_fu_1704_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_9_reg_3697 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln65_1_fu_1785_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln65_1_reg_3702 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_s_fu_1789_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_s_reg_3707 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_77_fu_1858_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_77_reg_3712 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_11_fu_1870_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_11_reg_3717 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_82_fu_1943_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_82_reg_3722 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_12_fu_1955_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_12_reg_3727 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_88_fu_2028_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_88_reg_3732 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_14_fu_2036_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_14_reg_3737 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln65_2_fu_2117_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln65_2_reg_3742 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_15_fu_2121_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_15_reg_3747 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_98_fu_2190_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln65_98_reg_3752 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_17_fu_2202_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_17_reg_3757 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_103_fu_2275_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_103_reg_3762 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_18_fu_2287_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_18_reg_3767 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_109_fu_2360_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_109_reg_3772 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_20_fu_2368_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_20_reg_3777 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln65_3_fu_2449_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln65_3_reg_3782 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_21_fu_2453_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_21_reg_3787 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln65_9_fu_2492_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_9_reg_3792 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_51_fu_2522_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_51_reg_3797 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_37_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_37_reg_3802 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_12_fu_2570_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_12_reg_3807 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_73_fu_2600_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_73_reg_3812 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_51_fu_2628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_51_reg_3817 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_15_fu_2648_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_15_reg_3822 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_94_fu_2678_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_94_reg_3827 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_65_fu_2706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_65_reg_3832 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_18_fu_2726_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln65_18_reg_3837 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_115_fu_2756_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_115_reg_3842 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_80_fu_2784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_80_reg_3847 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln227_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln220_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_1_load : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_fu_2795_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_data_1_V_fu_2823_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_2851_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_2879_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln191_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_4_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_5_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln191_6_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_3_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln191_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln227_fu_474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln222_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1496_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_24_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_1160_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_33_fu_1181_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_25_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_32_fu_1173_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_fu_1156_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln_fu_1206_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_26_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_27_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_36_fu_1245_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_38_fu_1266_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_28_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_48_fu_1258_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_35_fu_1237_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_1_fu_1291_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_30_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_31_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_42_fu_1330_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_44_fu_1351_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_32_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_43_fu_1343_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_41_fu_1322_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_3_fu_1372_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_33_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_34_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_47_fu_1411_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_49_fu_1432_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_35_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_52_fu_1424_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_46_fu_1403_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_50_fu_1445_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_4_fu_1457_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_1_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_38_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_53_fu_1492_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_55_fu_1513_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_39_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_54_fu_1505_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_10_fu_1488_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_6_fu_1538_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_40_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_41_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_58_fu_1577_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_60_fu_1598_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_42_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_70_fu_1590_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_57_fu_1569_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_7_fu_1623_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_44_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_45_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_64_fu_1662_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_66_fu_1683_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_46_fu_1690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_65_fu_1675_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_63_fu_1654_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_9_fu_1704_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_47_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_48_fu_1751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_69_fu_1743_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_71_fu_1764_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_49_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_80_fu_1756_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_68_fu_1735_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_72_fu_1777_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_s_fu_1789_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_2_fu_1814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_52_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_74_fu_1824_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_76_fu_1845_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_53_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_75_fu_1837_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_13_fu_1820_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_11_fu_1870_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_54_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_55_fu_1917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_79_fu_1909_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_81_fu_1930_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_56_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_101_fu_1922_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_78_fu_1901_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_12_fu_1955_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_58_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_59_fu_2002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_85_fu_1994_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_87_fu_2015_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_60_fu_2022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_86_fu_2007_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_84_fu_1986_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_14_fu_2036_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_61_fu_2061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_62_fu_2083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_90_fu_2075_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_92_fu_2096_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_63_fu_2103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_112_fu_2088_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_89_fu_2067_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_93_fu_2109_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_15_fu_2121_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_66_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_67_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_95_fu_2156_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_97_fu_2177_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_68_fu_2184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_96_fu_2169_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln65_16_fu_2152_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln65_17_fu_2202_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_69_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_70_fu_2249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_100_fu_2241_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_102_fu_2262_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_71_fu_2269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_117_fu_2254_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_99_fu_2233_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_18_fu_2287_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_73_fu_2312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_74_fu_2334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_106_fu_2326_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_108_fu_2347_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_75_fu_2354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_107_fu_2339_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln65_105_fu_2318_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_20_fu_2368_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_76_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_77_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_111_fu_2407_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_113_fu_2428_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_78_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_118_fu_2420_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_110_fu_2399_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_114_fu_2441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_21_fu_2453_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_29_fu_2481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_8_fu_2478_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_40_fu_2485_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_2_fu_2496_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_36_fu_2518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln65_5_fu_2528_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_2_fu_2496_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_5_fu_2528_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_43_fu_2559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_11_fu_2556_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_62_fu_2563_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_8_fu_2574_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_50_fu_2596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln65_10_fu_2606_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_8_fu_2574_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_10_fu_2606_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_57_fu_2637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_14_fu_2634_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_83_fu_2641_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_13_fu_2652_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_64_fu_2674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln65_16_fu_2684_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_13_fu_2652_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_16_fu_2684_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_72_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln65_17_fu_2712_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln65_104_fu_2719_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_ln65_19_fu_2730_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1496_79_fu_2752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln65_22_fu_2762_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_ln65_19_fu_2730_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_ln65_22_fu_2762_p18 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_fu_2795_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_data_1_V_fu_2823_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_data_2_V_fu_2851_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_data_3_V_fu_2879_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_313 : BOOLEAN;
    signal ap_condition_708 : BOOLEAN;
    signal ap_condition_288 : BOOLEAN;
    signal ap_condition_701 : BOOLEAN;
    signal ap_condition_714 : BOOLEAN;

    component myproject_mux_164_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        din10 : IN STD_LOGIC_VECTOR (15 downto 0);
        din11 : IN STD_LOGIC_VECTOR (15 downto 0);
        din12 : IN STD_LOGIC_VECTOR (15 downto 0);
        din13 : IN STD_LOGIC_VECTOR (15 downto 0);
        din14 : IN STD_LOGIC_VECTOR (15 downto 0);
        din15 : IN STD_LOGIC_VECTOR (15 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    line_buffer_Array_V_2_0_0_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_0_0_ce0,
        we0 => line_buffer_Array_V_2_0_0_we0,
        d0 => data_V_data_0_V_dout,
        q0 => line_buffer_Array_V_2_0_0_q0);

    line_buffer_Array_V_2_1_0_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_1_0_ce0,
        we0 => line_buffer_Array_V_2_1_0_we0,
        d0 => line_buffer_Array_V_2_0_0_q0,
        q0 => line_buffer_Array_V_2_1_0_q0);

    line_buffer_Array_V_2_2_0_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_2_0_ce0,
        we0 => line_buffer_Array_V_2_2_0_we0,
        d0 => line_buffer_Array_V_2_1_0_q0,
        q0 => line_buffer_Array_V_2_2_0_q0);

    line_buffer_Array_V_2_0_1_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_0_1_ce0,
        we0 => line_buffer_Array_V_2_0_1_we0,
        d0 => data_V_data_1_V_dout,
        q0 => line_buffer_Array_V_2_0_1_q0);

    line_buffer_Array_V_2_1_1_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_1_1_ce0,
        we0 => line_buffer_Array_V_2_1_1_we0,
        d0 => line_buffer_Array_V_2_0_1_q0,
        q0 => line_buffer_Array_V_2_1_1_q0);

    line_buffer_Array_V_2_2_1_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_2_1_ce0,
        we0 => line_buffer_Array_V_2_2_1_we0,
        d0 => line_buffer_Array_V_2_1_1_q0,
        q0 => line_buffer_Array_V_2_2_1_q0);

    line_buffer_Array_V_2_0_2_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_0_2_ce0,
        we0 => line_buffer_Array_V_2_0_2_we0,
        d0 => data_V_data_2_V_dout,
        q0 => line_buffer_Array_V_2_0_2_q0);

    line_buffer_Array_V_2_1_2_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_1_2_ce0,
        we0 => line_buffer_Array_V_2_1_2_we0,
        d0 => line_buffer_Array_V_2_0_2_q0,
        q0 => line_buffer_Array_V_2_1_2_q0);

    line_buffer_Array_V_2_2_2_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_2_2_ce0,
        we0 => line_buffer_Array_V_2_2_2_we0,
        d0 => line_buffer_Array_V_2_1_2_q0,
        q0 => line_buffer_Array_V_2_2_2_q0);

    line_buffer_Array_V_2_0_3_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_0_3_ce0,
        we0 => line_buffer_Array_V_2_0_3_we0,
        d0 => data_V_data_3_V_dout,
        q0 => line_buffer_Array_V_2_0_3_q0);

    line_buffer_Array_V_2_1_3_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_1_3_ce0,
        we0 => line_buffer_Array_V_2_1_3_we0,
        d0 => line_buffer_Array_V_2_0_3_q0,
        q0 => line_buffer_Array_V_2_1_3_q0);

    line_buffer_Array_V_2_2_3_U : component pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg
    generic map (
        DataWidth => 16,
        AddressRange => 26,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv5_19,
        ce0 => line_buffer_Array_V_2_2_3_ce0,
        we0 => line_buffer_Array_V_2_2_3_we0,
        d0 => line_buffer_Array_V_2_1_3_q0,
        q0 => line_buffer_Array_V_2_2_3_q0);

    myproject_mux_164_16_1_1_U41 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_data_V_2_4,
        din1 => kernel_data_V_2_8,
        din2 => kernel_data_V_2_12,
        din3 => pool_window_3_V_reg_3100,
        din4 => pool_window_3_V_reg_3100,
        din5 => pool_window_3_V_reg_3100,
        din6 => pool_window_3_V_reg_3100,
        din7 => pool_window_3_V_reg_3100,
        din8 => pool_window_3_V_reg_3100,
        din9 => pool_window_3_V_reg_3100,
        din10 => pool_window_3_V_reg_3100,
        din11 => pool_window_3_V_reg_3100,
        din12 => pool_window_3_V_reg_3100,
        din13 => pool_window_3_V_reg_3100,
        din14 => pool_window_3_V_reg_3100,
        din15 => pool_window_3_V_reg_3100,
        din16 => phi_ln_fu_1206_p17,
        dout => phi_ln_fu_1206_p18);

    myproject_mux_164_16_1_1_U42 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_7_V_reg_3070,
        din1 => pool_window_7_V_reg_3070,
        din2 => pool_window_7_V_reg_3070,
        din3 => pool_window_7_V_reg_3070,
        din4 => kernel_data_V_2_20,
        din5 => kernel_data_V_2_24,
        din6 => kernel_data_V_2_28,
        din7 => pool_window_7_V_reg_3070,
        din8 => pool_window_7_V_reg_3070,
        din9 => pool_window_7_V_reg_3070,
        din10 => pool_window_7_V_reg_3070,
        din11 => pool_window_7_V_reg_3070,
        din12 => pool_window_7_V_reg_3070,
        din13 => pool_window_7_V_reg_3070,
        din14 => pool_window_7_V_reg_3070,
        din15 => pool_window_7_V_reg_3070,
        din16 => phi_ln65_1_fu_1291_p17,
        dout => phi_ln65_1_fu_1291_p18);

    myproject_mux_164_16_1_1_U43 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_11_V_reg_3048,
        din1 => pool_window_11_V_reg_3048,
        din2 => pool_window_11_V_reg_3048,
        din3 => pool_window_11_V_reg_3048,
        din4 => pool_window_11_V_reg_3048,
        din5 => pool_window_11_V_reg_3048,
        din6 => pool_window_11_V_reg_3048,
        din7 => pool_window_11_V_reg_3048,
        din8 => kernel_data_V_2_36,
        din9 => kernel_data_V_2_40,
        din10 => kernel_data_V_2_44,
        din11 => pool_window_11_V_reg_3048,
        din12 => pool_window_11_V_reg_3048,
        din13 => pool_window_11_V_reg_3048,
        din14 => pool_window_11_V_reg_3048,
        din15 => pool_window_11_V_reg_3048,
        din16 => phi_ln65_3_fu_1372_p17,
        dout => phi_ln65_3_fu_1372_p18);

    myproject_mux_164_16_1_1_U44 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_reg_2928,
        din1 => pool_window_15_V_reg_2928,
        din2 => pool_window_15_V_reg_2928,
        din3 => pool_window_15_V_reg_2928,
        din4 => pool_window_15_V_reg_2928,
        din5 => pool_window_15_V_reg_2928,
        din6 => pool_window_15_V_reg_2928,
        din7 => pool_window_15_V_reg_2928,
        din8 => pool_window_15_V_reg_2928,
        din9 => pool_window_15_V_reg_2928,
        din10 => pool_window_15_V_reg_2928,
        din11 => pool_window_15_V_reg_2928,
        din12 => kernel_data_V_2_52,
        din13 => kernel_data_V_2_56,
        din14 => kernel_data_V_2_60,
        din15 => pool_window_15_V_reg_2928,
        din16 => phi_ln65_4_fu_1457_p17,
        dout => phi_ln65_4_fu_1457_p18);

    myproject_mux_164_16_1_1_U45 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_data_V_2_5,
        din1 => kernel_data_V_2_9,
        din2 => kernel_data_V_2_13,
        din3 => pool_window_3_V_8_reg_3174,
        din4 => pool_window_3_V_8_reg_3174,
        din5 => pool_window_3_V_8_reg_3174,
        din6 => pool_window_3_V_8_reg_3174,
        din7 => pool_window_3_V_8_reg_3174,
        din8 => pool_window_3_V_8_reg_3174,
        din9 => pool_window_3_V_8_reg_3174,
        din10 => pool_window_3_V_8_reg_3174,
        din11 => pool_window_3_V_8_reg_3174,
        din12 => pool_window_3_V_8_reg_3174,
        din13 => pool_window_3_V_8_reg_3174,
        din14 => pool_window_3_V_8_reg_3174,
        din15 => pool_window_3_V_8_reg_3174,
        din16 => phi_ln65_6_fu_1538_p17,
        dout => phi_ln65_6_fu_1538_p18);

    myproject_mux_164_16_1_1_U46 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_7_V_1_reg_3144,
        din1 => pool_window_7_V_1_reg_3144,
        din2 => pool_window_7_V_1_reg_3144,
        din3 => pool_window_7_V_1_reg_3144,
        din4 => kernel_data_V_2_21,
        din5 => kernel_data_V_2_25,
        din6 => kernel_data_V_2_29,
        din7 => pool_window_7_V_1_reg_3144,
        din8 => pool_window_7_V_1_reg_3144,
        din9 => pool_window_7_V_1_reg_3144,
        din10 => pool_window_7_V_1_reg_3144,
        din11 => pool_window_7_V_1_reg_3144,
        din12 => pool_window_7_V_1_reg_3144,
        din13 => pool_window_7_V_1_reg_3144,
        din14 => pool_window_7_V_1_reg_3144,
        din15 => pool_window_7_V_1_reg_3144,
        din16 => phi_ln65_7_fu_1623_p17,
        dout => phi_ln65_7_fu_1623_p18);

    myproject_mux_164_16_1_1_U47 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_11_V_1_reg_3122,
        din1 => pool_window_11_V_1_reg_3122,
        din2 => pool_window_11_V_1_reg_3122,
        din3 => pool_window_11_V_1_reg_3122,
        din4 => pool_window_11_V_1_reg_3122,
        din5 => pool_window_11_V_1_reg_3122,
        din6 => pool_window_11_V_1_reg_3122,
        din7 => pool_window_11_V_1_reg_3122,
        din8 => kernel_data_V_2_37,
        din9 => kernel_data_V_2_41,
        din10 => kernel_data_V_2_45,
        din11 => pool_window_11_V_1_reg_3122,
        din12 => pool_window_11_V_1_reg_3122,
        din13 => pool_window_11_V_1_reg_3122,
        din14 => pool_window_11_V_1_reg_3122,
        din15 => pool_window_11_V_1_reg_3122,
        din16 => phi_ln65_9_fu_1704_p17,
        dout => phi_ln65_9_fu_1704_p18);

    myproject_mux_164_16_1_1_U48 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_1_reg_2958,
        din1 => pool_window_15_V_1_reg_2958,
        din2 => pool_window_15_V_1_reg_2958,
        din3 => pool_window_15_V_1_reg_2958,
        din4 => pool_window_15_V_1_reg_2958,
        din5 => pool_window_15_V_1_reg_2958,
        din6 => pool_window_15_V_1_reg_2958,
        din7 => pool_window_15_V_1_reg_2958,
        din8 => pool_window_15_V_1_reg_2958,
        din9 => pool_window_15_V_1_reg_2958,
        din10 => pool_window_15_V_1_reg_2958,
        din11 => pool_window_15_V_1_reg_2958,
        din12 => kernel_data_V_2_53,
        din13 => kernel_data_V_2_57,
        din14 => kernel_data_V_2_61,
        din15 => pool_window_15_V_1_reg_2958,
        din16 => phi_ln65_s_fu_1789_p17,
        dout => phi_ln65_s_fu_1789_p18);

    myproject_mux_164_16_1_1_U49 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_data_V_2_6,
        din1 => kernel_data_V_2_10,
        din2 => kernel_data_V_2_14,
        din3 => pool_window_3_V_9_reg_3248,
        din4 => pool_window_3_V_9_reg_3248,
        din5 => pool_window_3_V_9_reg_3248,
        din6 => pool_window_3_V_9_reg_3248,
        din7 => pool_window_3_V_9_reg_3248,
        din8 => pool_window_3_V_9_reg_3248,
        din9 => pool_window_3_V_9_reg_3248,
        din10 => pool_window_3_V_9_reg_3248,
        din11 => pool_window_3_V_9_reg_3248,
        din12 => pool_window_3_V_9_reg_3248,
        din13 => pool_window_3_V_9_reg_3248,
        din14 => pool_window_3_V_9_reg_3248,
        din15 => pool_window_3_V_9_reg_3248,
        din16 => phi_ln65_11_fu_1870_p17,
        dout => phi_ln65_11_fu_1870_p18);

    myproject_mux_164_16_1_1_U50 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_7_V_2_reg_3218,
        din1 => pool_window_7_V_2_reg_3218,
        din2 => pool_window_7_V_2_reg_3218,
        din3 => pool_window_7_V_2_reg_3218,
        din4 => kernel_data_V_2_22,
        din5 => kernel_data_V_2_26,
        din6 => kernel_data_V_2_30,
        din7 => pool_window_7_V_2_reg_3218,
        din8 => pool_window_7_V_2_reg_3218,
        din9 => pool_window_7_V_2_reg_3218,
        din10 => pool_window_7_V_2_reg_3218,
        din11 => pool_window_7_V_2_reg_3218,
        din12 => pool_window_7_V_2_reg_3218,
        din13 => pool_window_7_V_2_reg_3218,
        din14 => pool_window_7_V_2_reg_3218,
        din15 => pool_window_7_V_2_reg_3218,
        din16 => phi_ln65_12_fu_1955_p17,
        dout => phi_ln65_12_fu_1955_p18);

    myproject_mux_164_16_1_1_U51 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_11_V_2_reg_3196,
        din1 => pool_window_11_V_2_reg_3196,
        din2 => pool_window_11_V_2_reg_3196,
        din3 => pool_window_11_V_2_reg_3196,
        din4 => pool_window_11_V_2_reg_3196,
        din5 => pool_window_11_V_2_reg_3196,
        din6 => pool_window_11_V_2_reg_3196,
        din7 => pool_window_11_V_2_reg_3196,
        din8 => kernel_data_V_2_38,
        din9 => kernel_data_V_2_42,
        din10 => kernel_data_V_2_46,
        din11 => pool_window_11_V_2_reg_3196,
        din12 => pool_window_11_V_2_reg_3196,
        din13 => pool_window_11_V_2_reg_3196,
        din14 => pool_window_11_V_2_reg_3196,
        din15 => pool_window_11_V_2_reg_3196,
        din16 => phi_ln65_14_fu_2036_p17,
        dout => phi_ln65_14_fu_2036_p18);

    myproject_mux_164_16_1_1_U52 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_2_reg_2988,
        din1 => pool_window_15_V_2_reg_2988,
        din2 => pool_window_15_V_2_reg_2988,
        din3 => pool_window_15_V_2_reg_2988,
        din4 => pool_window_15_V_2_reg_2988,
        din5 => pool_window_15_V_2_reg_2988,
        din6 => pool_window_15_V_2_reg_2988,
        din7 => pool_window_15_V_2_reg_2988,
        din8 => pool_window_15_V_2_reg_2988,
        din9 => pool_window_15_V_2_reg_2988,
        din10 => pool_window_15_V_2_reg_2988,
        din11 => pool_window_15_V_2_reg_2988,
        din12 => kernel_data_V_2_54,
        din13 => kernel_data_V_2_58,
        din14 => kernel_data_V_2_62,
        din15 => pool_window_15_V_2_reg_2988,
        din16 => phi_ln65_15_fu_2121_p17,
        dout => phi_ln65_15_fu_2121_p18);

    myproject_mux_164_16_1_1_U53 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => kernel_data_V_2_7,
        din1 => kernel_data_V_2_11,
        din2 => kernel_data_V_2_15,
        din3 => pool_window_3_V_10_reg_3322,
        din4 => pool_window_3_V_10_reg_3322,
        din5 => pool_window_3_V_10_reg_3322,
        din6 => pool_window_3_V_10_reg_3322,
        din7 => pool_window_3_V_10_reg_3322,
        din8 => pool_window_3_V_10_reg_3322,
        din9 => pool_window_3_V_10_reg_3322,
        din10 => pool_window_3_V_10_reg_3322,
        din11 => pool_window_3_V_10_reg_3322,
        din12 => pool_window_3_V_10_reg_3322,
        din13 => pool_window_3_V_10_reg_3322,
        din14 => pool_window_3_V_10_reg_3322,
        din15 => pool_window_3_V_10_reg_3322,
        din16 => phi_ln65_17_fu_2202_p17,
        dout => phi_ln65_17_fu_2202_p18);

    myproject_mux_164_16_1_1_U54 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_7_V_3_reg_3292,
        din1 => pool_window_7_V_3_reg_3292,
        din2 => pool_window_7_V_3_reg_3292,
        din3 => pool_window_7_V_3_reg_3292,
        din4 => kernel_data_V_2_23,
        din5 => kernel_data_V_2_27,
        din6 => kernel_data_V_2_31,
        din7 => pool_window_7_V_3_reg_3292,
        din8 => pool_window_7_V_3_reg_3292,
        din9 => pool_window_7_V_3_reg_3292,
        din10 => pool_window_7_V_3_reg_3292,
        din11 => pool_window_7_V_3_reg_3292,
        din12 => pool_window_7_V_3_reg_3292,
        din13 => pool_window_7_V_3_reg_3292,
        din14 => pool_window_7_V_3_reg_3292,
        din15 => pool_window_7_V_3_reg_3292,
        din16 => phi_ln65_18_fu_2287_p17,
        dout => phi_ln65_18_fu_2287_p18);

    myproject_mux_164_16_1_1_U55 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_11_V_3_reg_3270,
        din1 => pool_window_11_V_3_reg_3270,
        din2 => pool_window_11_V_3_reg_3270,
        din3 => pool_window_11_V_3_reg_3270,
        din4 => pool_window_11_V_3_reg_3270,
        din5 => pool_window_11_V_3_reg_3270,
        din6 => pool_window_11_V_3_reg_3270,
        din7 => pool_window_11_V_3_reg_3270,
        din8 => kernel_data_V_2_39,
        din9 => kernel_data_V_2_43,
        din10 => kernel_data_V_2_47,
        din11 => pool_window_11_V_3_reg_3270,
        din12 => pool_window_11_V_3_reg_3270,
        din13 => pool_window_11_V_3_reg_3270,
        din14 => pool_window_11_V_3_reg_3270,
        din15 => pool_window_11_V_3_reg_3270,
        din16 => phi_ln65_20_fu_2368_p17,
        dout => phi_ln65_20_fu_2368_p18);

    myproject_mux_164_16_1_1_U56 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_3_reg_3018,
        din1 => pool_window_15_V_3_reg_3018,
        din2 => pool_window_15_V_3_reg_3018,
        din3 => pool_window_15_V_3_reg_3018,
        din4 => pool_window_15_V_3_reg_3018,
        din5 => pool_window_15_V_3_reg_3018,
        din6 => pool_window_15_V_3_reg_3018,
        din7 => pool_window_15_V_3_reg_3018,
        din8 => pool_window_15_V_3_reg_3018,
        din9 => pool_window_15_V_3_reg_3018,
        din10 => pool_window_15_V_3_reg_3018,
        din11 => pool_window_15_V_3_reg_3018,
        din12 => kernel_data_V_2_55,
        din13 => kernel_data_V_2_59,
        din14 => kernel_data_V_2_63,
        din15 => pool_window_15_V_3_reg_3018,
        din16 => phi_ln65_21_fu_2453_p17,
        dout => phi_ln65_21_fu_2453_p18);

    myproject_mux_164_16_1_1_U57 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_reg_3344,
        din1 => pool_window_1_V_reg_3440,
        din2 => pool_window_2_V_reg_3536,
        din3 => pool_window_3_V_reg_3100_pp0_iter2_reg,
        din4 => pool_window_4_V_reg_3368,
        din5 => pool_window_5_V_reg_3464,
        din6 => pool_window_6_V_reg_3560,
        din7 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din8 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din9 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din10 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din11 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din12 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din13 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din14 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din15 => pool_window_7_V_reg_3070_pp0_iter2_reg,
        din16 => phi_ln65_2_fu_2496_p17,
        dout => phi_ln65_2_fu_2496_p18);

    myproject_mux_164_16_1_1_U58 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din1 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din2 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din3 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din4 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din5 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din6 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din7 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din8 => pool_window_8_V_reg_3392,
        din9 => pool_window_9_V_reg_3488,
        din10 => pool_window_10_V_reg_3584,
        din11 => pool_window_11_V_reg_3048_pp0_iter2_reg,
        din12 => pool_window_12_V_reg_3416,
        din13 => pool_window_13_V_reg_3512,
        din14 => pool_window_14_V_reg_3608,
        din15 => pool_window_15_V_reg_2928_pp0_iter2_reg,
        din16 => phi_ln65_5_fu_2528_p17,
        dout => phi_ln65_5_fu_2528_p18);

    myproject_mux_164_16_1_1_U59 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_8_reg_3350,
        din1 => pool_window_1_V_8_reg_3446,
        din2 => pool_window_2_V_8_reg_3542,
        din3 => pool_window_3_V_8_reg_3174_pp0_iter2_reg,
        din4 => pool_window_4_V_1_reg_3374,
        din5 => pool_window_5_V_1_reg_3470,
        din6 => pool_window_6_V_1_reg_3566,
        din7 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din8 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din9 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din10 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din11 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din12 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din13 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din14 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din15 => pool_window_7_V_1_reg_3144_pp0_iter2_reg,
        din16 => phi_ln65_8_fu_2574_p17,
        dout => phi_ln65_8_fu_2574_p18);

    myproject_mux_164_16_1_1_U60 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din1 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din2 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din3 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din4 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din5 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din6 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din7 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din8 => pool_window_8_V_1_reg_3398,
        din9 => pool_window_9_V_1_reg_3494,
        din10 => pool_window_10_V_1_reg_3590,
        din11 => pool_window_11_V_1_reg_3122_pp0_iter2_reg,
        din12 => pool_window_12_V_1_reg_3422,
        din13 => pool_window_13_V_1_reg_3518,
        din14 => pool_window_14_V_1_reg_3614,
        din15 => pool_window_15_V_1_reg_2958_pp0_iter2_reg,
        din16 => phi_ln65_10_fu_2606_p17,
        dout => phi_ln65_10_fu_2606_p18);

    myproject_mux_164_16_1_1_U61 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_9_reg_3356,
        din1 => pool_window_1_V_9_reg_3452,
        din2 => pool_window_2_V_9_reg_3548,
        din3 => pool_window_3_V_9_reg_3248_pp0_iter2_reg,
        din4 => pool_window_4_V_2_reg_3380,
        din5 => pool_window_5_V_2_reg_3476,
        din6 => pool_window_6_V_2_reg_3572,
        din7 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din8 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din9 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din10 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din11 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din12 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din13 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din14 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din15 => pool_window_7_V_2_reg_3218_pp0_iter2_reg,
        din16 => phi_ln65_13_fu_2652_p17,
        dout => phi_ln65_13_fu_2652_p18);

    myproject_mux_164_16_1_1_U62 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din1 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din2 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din3 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din4 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din5 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din6 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din7 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din8 => pool_window_8_V_2_reg_3404,
        din9 => pool_window_9_V_2_reg_3500,
        din10 => pool_window_10_V_2_reg_3596,
        din11 => pool_window_11_V_2_reg_3196_pp0_iter2_reg,
        din12 => pool_window_12_V_2_reg_3428,
        din13 => pool_window_13_V_2_reg_3524,
        din14 => pool_window_14_V_2_reg_3620,
        din15 => pool_window_15_V_2_reg_2988_pp0_iter2_reg,
        din16 => phi_ln65_16_fu_2684_p17,
        dout => phi_ln65_16_fu_2684_p18);

    myproject_mux_164_16_1_1_U63 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_10_reg_3362,
        din1 => pool_window_1_V_10_reg_3458,
        din2 => pool_window_2_V_10_reg_3554,
        din3 => pool_window_3_V_10_reg_3322_pp0_iter2_reg,
        din4 => pool_window_4_V_3_reg_3386,
        din5 => pool_window_5_V_3_reg_3482,
        din6 => pool_window_6_V_3_reg_3578,
        din7 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din8 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din9 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din10 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din11 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din12 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din13 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din14 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din15 => pool_window_7_V_3_reg_3292_pp0_iter2_reg,
        din16 => phi_ln65_19_fu_2730_p17,
        dout => phi_ln65_19_fu_2730_p18);

    myproject_mux_164_16_1_1_U64 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din1 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din2 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din3 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din4 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din5 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din6 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din7 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din8 => pool_window_8_V_3_reg_3410,
        din9 => pool_window_9_V_3_reg_3506,
        din10 => pool_window_10_V_3_reg_3602,
        din11 => pool_window_11_V_3_reg_3270_pp0_iter2_reg,
        din12 => pool_window_12_V_3_reg_3434,
        din13 => pool_window_13_V_3_reg_3530,
        din14 => pool_window_14_V_3_reg_3626,
        din15 => pool_window_15_V_3_reg_3018_pp0_iter2_reg,
        din16 => phi_ln65_22_fu_2762_p17,
        dout => phi_ln65_22_fu_2762_p18);

    myproject_mux_164_16_1_1_U65 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_reg_3344_pp0_iter3_reg,
        din1 => pool_window_1_V_reg_3440_pp0_iter3_reg,
        din2 => pool_window_2_V_reg_3536_pp0_iter3_reg,
        din3 => pool_window_3_V_reg_3100_pp0_iter3_reg,
        din4 => pool_window_4_V_reg_3368_pp0_iter3_reg,
        din5 => pool_window_5_V_reg_3464_pp0_iter3_reg,
        din6 => pool_window_6_V_reg_3560_pp0_iter3_reg,
        din7 => pool_window_7_V_reg_3070_pp0_iter3_reg,
        din8 => pool_window_8_V_reg_3392_pp0_iter3_reg,
        din9 => pool_window_9_V_reg_3488_pp0_iter3_reg,
        din10 => pool_window_10_V_reg_3584_pp0_iter3_reg,
        din11 => pool_window_11_V_reg_3048_pp0_iter3_reg,
        din12 => pool_window_12_V_reg_3416_pp0_iter3_reg,
        din13 => pool_window_13_V_reg_3512_pp0_iter3_reg,
        din14 => pool_window_14_V_reg_3608_pp0_iter3_reg,
        din15 => pool_window_15_V_reg_2928_pp0_iter3_reg,
        din16 => tmp_data_0_V_fu_2795_p17,
        dout => tmp_data_0_V_fu_2795_p18);

    myproject_mux_164_16_1_1_U66 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_8_reg_3350_pp0_iter3_reg,
        din1 => pool_window_1_V_8_reg_3446_pp0_iter3_reg,
        din2 => pool_window_2_V_8_reg_3542_pp0_iter3_reg,
        din3 => pool_window_3_V_8_reg_3174_pp0_iter3_reg,
        din4 => pool_window_4_V_1_reg_3374_pp0_iter3_reg,
        din5 => pool_window_5_V_1_reg_3470_pp0_iter3_reg,
        din6 => pool_window_6_V_1_reg_3566_pp0_iter3_reg,
        din7 => pool_window_7_V_1_reg_3144_pp0_iter3_reg,
        din8 => pool_window_8_V_1_reg_3398_pp0_iter3_reg,
        din9 => pool_window_9_V_1_reg_3494_pp0_iter3_reg,
        din10 => pool_window_10_V_1_reg_3590_pp0_iter3_reg,
        din11 => pool_window_11_V_1_reg_3122_pp0_iter3_reg,
        din12 => pool_window_12_V_1_reg_3422_pp0_iter3_reg,
        din13 => pool_window_13_V_1_reg_3518_pp0_iter3_reg,
        din14 => pool_window_14_V_1_reg_3614_pp0_iter3_reg,
        din15 => pool_window_15_V_1_reg_2958_pp0_iter3_reg,
        din16 => tmp_data_1_V_fu_2823_p17,
        dout => tmp_data_1_V_fu_2823_p18);

    myproject_mux_164_16_1_1_U67 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_9_reg_3356_pp0_iter3_reg,
        din1 => pool_window_1_V_9_reg_3452_pp0_iter3_reg,
        din2 => pool_window_2_V_9_reg_3548_pp0_iter3_reg,
        din3 => pool_window_3_V_9_reg_3248_pp0_iter3_reg,
        din4 => pool_window_4_V_2_reg_3380_pp0_iter3_reg,
        din5 => pool_window_5_V_2_reg_3476_pp0_iter3_reg,
        din6 => pool_window_6_V_2_reg_3572_pp0_iter3_reg,
        din7 => pool_window_7_V_2_reg_3218_pp0_iter3_reg,
        din8 => pool_window_8_V_2_reg_3404_pp0_iter3_reg,
        din9 => pool_window_9_V_2_reg_3500_pp0_iter3_reg,
        din10 => pool_window_10_V_2_reg_3596_pp0_iter3_reg,
        din11 => pool_window_11_V_2_reg_3196_pp0_iter3_reg,
        din12 => pool_window_12_V_2_reg_3428_pp0_iter3_reg,
        din13 => pool_window_13_V_2_reg_3524_pp0_iter3_reg,
        din14 => pool_window_14_V_2_reg_3620_pp0_iter3_reg,
        din15 => pool_window_15_V_2_reg_2988_pp0_iter3_reg,
        din16 => tmp_data_2_V_fu_2851_p17,
        dout => tmp_data_2_V_fu_2851_p18);

    myproject_mux_164_16_1_1_U68 : component myproject_mux_164_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 4,
        dout_WIDTH => 16)
    port map (
        din0 => pool_window_0_V_10_reg_3362_pp0_iter3_reg,
        din1 => pool_window_1_V_10_reg_3458_pp0_iter3_reg,
        din2 => pool_window_2_V_10_reg_3554_pp0_iter3_reg,
        din3 => pool_window_3_V_10_reg_3322_pp0_iter3_reg,
        din4 => pool_window_4_V_3_reg_3386_pp0_iter3_reg,
        din5 => pool_window_5_V_3_reg_3482_pp0_iter3_reg,
        din6 => pool_window_6_V_3_reg_3578_pp0_iter3_reg,
        din7 => pool_window_7_V_3_reg_3292_pp0_iter3_reg,
        din8 => pool_window_8_V_3_reg_3410_pp0_iter3_reg,
        din9 => pool_window_9_V_3_reg_3506_pp0_iter3_reg,
        din10 => pool_window_10_V_3_reg_3602_pp0_iter3_reg,
        din11 => pool_window_11_V_3_reg_3270_pp0_iter3_reg,
        din12 => pool_window_12_V_3_reg_3434_pp0_iter3_reg,
        din13 => pool_window_13_V_3_reg_3530_pp0_iter3_reg,
        din14 => pool_window_14_V_3_reg_3626_pp0_iter3_reg,
        din15 => pool_window_15_V_3_reg_3018_pp0_iter3_reg,
        din16 => tmp_data_3_V_fu_2879_p17,
        dout => tmp_data_3_V_fu_2879_p18);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_288)) then
                if ((ap_const_boolean_1 = ap_condition_708)) then 
                    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_313)) then 
                    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= select_ln222_fu_530_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_364 <= add_ln241_fu_392_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_364 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_701)) then
                if ((icmp_ln212_fu_456_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln212_fu_456_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln225_fu_462_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_714)) then
                if ((icmp_ln216_fu_506_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln216_fu_506_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln220_fu_512_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_701)) then
                if ((icmp_ln212_fu_456_p2 = ap_const_lv1_1)) then 
                    sX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln212_fu_456_p2 = ap_const_lv1_0)) then 
                    sX_1 <= select_ln227_fu_480_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln191_4_reg_2911 <= and_ln191_4_fu_450_p2;
                icmp_ln212_reg_2915 <= icmp_ln212_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln191_4_reg_2911_pp0_iter1_reg <= and_ln191_4_reg_2911;
                icmp_ln241_reg_2902 <= icmp_ln241_fu_386_p2;
                icmp_ln241_reg_2902_pp0_iter1_reg <= icmp_ln241_reg_2902;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln191_4_reg_2911_pp0_iter2_reg <= and_ln191_4_reg_2911_pp0_iter1_reg;
                and_ln191_4_reg_2911_pp0_iter3_reg <= and_ln191_4_reg_2911_pp0_iter2_reg;
                pool_window_0_V_10_reg_3362_pp0_iter3_reg <= pool_window_0_V_10_reg_3362;
                pool_window_0_V_8_reg_3350_pp0_iter3_reg <= pool_window_0_V_8_reg_3350;
                pool_window_0_V_9_reg_3356_pp0_iter3_reg <= pool_window_0_V_9_reg_3356;
                pool_window_0_V_reg_3344_pp0_iter3_reg <= pool_window_0_V_reg_3344;
                pool_window_10_V_1_reg_3590_pp0_iter3_reg <= pool_window_10_V_1_reg_3590;
                pool_window_10_V_2_reg_3596_pp0_iter3_reg <= pool_window_10_V_2_reg_3596;
                pool_window_10_V_3_reg_3602_pp0_iter3_reg <= pool_window_10_V_3_reg_3602;
                pool_window_10_V_reg_3584_pp0_iter3_reg <= pool_window_10_V_reg_3584;
                pool_window_11_V_1_reg_3122_pp0_iter2_reg <= pool_window_11_V_1_reg_3122;
                pool_window_11_V_1_reg_3122_pp0_iter3_reg <= pool_window_11_V_1_reg_3122_pp0_iter2_reg;
                pool_window_11_V_2_reg_3196_pp0_iter2_reg <= pool_window_11_V_2_reg_3196;
                pool_window_11_V_2_reg_3196_pp0_iter3_reg <= pool_window_11_V_2_reg_3196_pp0_iter2_reg;
                pool_window_11_V_3_reg_3270_pp0_iter2_reg <= pool_window_11_V_3_reg_3270;
                pool_window_11_V_3_reg_3270_pp0_iter3_reg <= pool_window_11_V_3_reg_3270_pp0_iter2_reg;
                pool_window_11_V_reg_3048_pp0_iter2_reg <= pool_window_11_V_reg_3048;
                pool_window_11_V_reg_3048_pp0_iter3_reg <= pool_window_11_V_reg_3048_pp0_iter2_reg;
                pool_window_12_V_1_reg_3422_pp0_iter3_reg <= pool_window_12_V_1_reg_3422;
                pool_window_12_V_2_reg_3428_pp0_iter3_reg <= pool_window_12_V_2_reg_3428;
                pool_window_12_V_3_reg_3434_pp0_iter3_reg <= pool_window_12_V_3_reg_3434;
                pool_window_12_V_reg_3416_pp0_iter3_reg <= pool_window_12_V_reg_3416;
                pool_window_13_V_1_reg_3518_pp0_iter3_reg <= pool_window_13_V_1_reg_3518;
                pool_window_13_V_2_reg_3524_pp0_iter3_reg <= pool_window_13_V_2_reg_3524;
                pool_window_13_V_3_reg_3530_pp0_iter3_reg <= pool_window_13_V_3_reg_3530;
                pool_window_13_V_reg_3512_pp0_iter3_reg <= pool_window_13_V_reg_3512;
                pool_window_14_V_1_reg_3614_pp0_iter3_reg <= pool_window_14_V_1_reg_3614;
                pool_window_14_V_2_reg_3620_pp0_iter3_reg <= pool_window_14_V_2_reg_3620;
                pool_window_14_V_3_reg_3626_pp0_iter3_reg <= pool_window_14_V_3_reg_3626;
                pool_window_14_V_reg_3608_pp0_iter3_reg <= pool_window_14_V_reg_3608;
                pool_window_15_V_1_reg_2958_pp0_iter2_reg <= pool_window_15_V_1_reg_2958;
                pool_window_15_V_1_reg_2958_pp0_iter3_reg <= pool_window_15_V_1_reg_2958_pp0_iter2_reg;
                pool_window_15_V_2_reg_2988_pp0_iter2_reg <= pool_window_15_V_2_reg_2988;
                pool_window_15_V_2_reg_2988_pp0_iter3_reg <= pool_window_15_V_2_reg_2988_pp0_iter2_reg;
                pool_window_15_V_3_reg_3018_pp0_iter2_reg <= pool_window_15_V_3_reg_3018;
                pool_window_15_V_3_reg_3018_pp0_iter3_reg <= pool_window_15_V_3_reg_3018_pp0_iter2_reg;
                pool_window_15_V_reg_2928_pp0_iter2_reg <= pool_window_15_V_reg_2928;
                pool_window_15_V_reg_2928_pp0_iter3_reg <= pool_window_15_V_reg_2928_pp0_iter2_reg;
                pool_window_1_V_10_reg_3458_pp0_iter3_reg <= pool_window_1_V_10_reg_3458;
                pool_window_1_V_8_reg_3446_pp0_iter3_reg <= pool_window_1_V_8_reg_3446;
                pool_window_1_V_9_reg_3452_pp0_iter3_reg <= pool_window_1_V_9_reg_3452;
                pool_window_1_V_reg_3440_pp0_iter3_reg <= pool_window_1_V_reg_3440;
                pool_window_2_V_10_reg_3554_pp0_iter3_reg <= pool_window_2_V_10_reg_3554;
                pool_window_2_V_8_reg_3542_pp0_iter3_reg <= pool_window_2_V_8_reg_3542;
                pool_window_2_V_9_reg_3548_pp0_iter3_reg <= pool_window_2_V_9_reg_3548;
                pool_window_2_V_reg_3536_pp0_iter3_reg <= pool_window_2_V_reg_3536;
                pool_window_3_V_10_reg_3322_pp0_iter2_reg <= pool_window_3_V_10_reg_3322;
                pool_window_3_V_10_reg_3322_pp0_iter3_reg <= pool_window_3_V_10_reg_3322_pp0_iter2_reg;
                pool_window_3_V_8_reg_3174_pp0_iter2_reg <= pool_window_3_V_8_reg_3174;
                pool_window_3_V_8_reg_3174_pp0_iter3_reg <= pool_window_3_V_8_reg_3174_pp0_iter2_reg;
                pool_window_3_V_9_reg_3248_pp0_iter2_reg <= pool_window_3_V_9_reg_3248;
                pool_window_3_V_9_reg_3248_pp0_iter3_reg <= pool_window_3_V_9_reg_3248_pp0_iter2_reg;
                pool_window_3_V_reg_3100_pp0_iter2_reg <= pool_window_3_V_reg_3100;
                pool_window_3_V_reg_3100_pp0_iter3_reg <= pool_window_3_V_reg_3100_pp0_iter2_reg;
                pool_window_4_V_1_reg_3374_pp0_iter3_reg <= pool_window_4_V_1_reg_3374;
                pool_window_4_V_2_reg_3380_pp0_iter3_reg <= pool_window_4_V_2_reg_3380;
                pool_window_4_V_3_reg_3386_pp0_iter3_reg <= pool_window_4_V_3_reg_3386;
                pool_window_4_V_reg_3368_pp0_iter3_reg <= pool_window_4_V_reg_3368;
                pool_window_5_V_1_reg_3470_pp0_iter3_reg <= pool_window_5_V_1_reg_3470;
                pool_window_5_V_2_reg_3476_pp0_iter3_reg <= pool_window_5_V_2_reg_3476;
                pool_window_5_V_3_reg_3482_pp0_iter3_reg <= pool_window_5_V_3_reg_3482;
                pool_window_5_V_reg_3464_pp0_iter3_reg <= pool_window_5_V_reg_3464;
                pool_window_6_V_1_reg_3566_pp0_iter3_reg <= pool_window_6_V_1_reg_3566;
                pool_window_6_V_2_reg_3572_pp0_iter3_reg <= pool_window_6_V_2_reg_3572;
                pool_window_6_V_3_reg_3578_pp0_iter3_reg <= pool_window_6_V_3_reg_3578;
                pool_window_6_V_reg_3560_pp0_iter3_reg <= pool_window_6_V_reg_3560;
                pool_window_7_V_1_reg_3144_pp0_iter2_reg <= pool_window_7_V_1_reg_3144;
                pool_window_7_V_1_reg_3144_pp0_iter3_reg <= pool_window_7_V_1_reg_3144_pp0_iter2_reg;
                pool_window_7_V_2_reg_3218_pp0_iter2_reg <= pool_window_7_V_2_reg_3218;
                pool_window_7_V_2_reg_3218_pp0_iter3_reg <= pool_window_7_V_2_reg_3218_pp0_iter2_reg;
                pool_window_7_V_3_reg_3292_pp0_iter2_reg <= pool_window_7_V_3_reg_3292;
                pool_window_7_V_3_reg_3292_pp0_iter3_reg <= pool_window_7_V_3_reg_3292_pp0_iter2_reg;
                pool_window_7_V_reg_3070_pp0_iter2_reg <= pool_window_7_V_reg_3070;
                pool_window_7_V_reg_3070_pp0_iter3_reg <= pool_window_7_V_reg_3070_pp0_iter2_reg;
                pool_window_8_V_1_reg_3398_pp0_iter3_reg <= pool_window_8_V_1_reg_3398;
                pool_window_8_V_2_reg_3404_pp0_iter3_reg <= pool_window_8_V_2_reg_3404;
                pool_window_8_V_3_reg_3410_pp0_iter3_reg <= pool_window_8_V_3_reg_3410;
                pool_window_8_V_reg_3392_pp0_iter3_reg <= pool_window_8_V_reg_3392;
                pool_window_9_V_1_reg_3494_pp0_iter3_reg <= pool_window_9_V_1_reg_3494;
                pool_window_9_V_2_reg_3500_pp0_iter3_reg <= pool_window_9_V_2_reg_3500;
                pool_window_9_V_3_reg_3506_pp0_iter3_reg <= pool_window_9_V_3_reg_3506;
                pool_window_9_V_reg_3488_pp0_iter3_reg <= pool_window_9_V_reg_3488;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter2_reg))) then
                icmp_ln1496_37_reg_3802 <= icmp_ln1496_37_fu_2550_p2;
                icmp_ln1496_51_reg_3817 <= icmp_ln1496_51_fu_2628_p2;
                icmp_ln1496_65_reg_3832 <= icmp_ln1496_65_fu_2706_p2;
                icmp_ln1496_80_reg_3847 <= icmp_ln1496_80_fu_2784_p2;
                    select_ln65_115_reg_3842(2 downto 0) <= select_ln65_115_fu_2756_p3(2 downto 0);
                    select_ln65_51_reg_3797(2 downto 0) <= select_ln65_51_fu_2522_p3(2 downto 0);
                    select_ln65_73_reg_3812(2 downto 0) <= select_ln65_73_fu_2600_p3(2 downto 0);
                    select_ln65_94_reg_3827(2 downto 0) <= select_ln65_94_fu_2678_p3(2 downto 0);
                    zext_ln65_12_reg_3807(2 downto 0) <= zext_ln65_12_fu_2570_p1(2 downto 0);
                    zext_ln65_15_reg_3822(2 downto 0) <= zext_ln65_15_fu_2648_p1(2 downto 0);
                    zext_ln65_18_reg_3837(2 downto 0) <= zext_ln65_18_fu_2726_p1(2 downto 0);
                    zext_ln65_9_reg_3792(2 downto 0) <= zext_ln65_9_fu_2492_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                kernel_data_V_2_10 <= kernel_data_V_2_14;
                kernel_data_V_2_11 <= kernel_data_V_2_15;
                kernel_data_V_2_12 <= pool_window_3_V_reg_3100;
                kernel_data_V_2_13 <= pool_window_3_V_8_reg_3174;
                kernel_data_V_2_14 <= pool_window_3_V_9_reg_3248;
                kernel_data_V_2_15 <= pool_window_3_V_10_reg_3322;
                kernel_data_V_2_20 <= kernel_data_V_2_24;
                kernel_data_V_2_21 <= kernel_data_V_2_25;
                kernel_data_V_2_22 <= kernel_data_V_2_26;
                kernel_data_V_2_23 <= kernel_data_V_2_27;
                kernel_data_V_2_24 <= kernel_data_V_2_28;
                kernel_data_V_2_25 <= kernel_data_V_2_29;
                kernel_data_V_2_26 <= kernel_data_V_2_30;
                kernel_data_V_2_27 <= kernel_data_V_2_31;
                kernel_data_V_2_28 <= pool_window_7_V_reg_3070;
                kernel_data_V_2_29 <= pool_window_7_V_1_reg_3144;
                kernel_data_V_2_30 <= pool_window_7_V_2_reg_3218;
                kernel_data_V_2_31 <= pool_window_7_V_3_reg_3292;
                kernel_data_V_2_36 <= kernel_data_V_2_40;
                kernel_data_V_2_37 <= kernel_data_V_2_41;
                kernel_data_V_2_38 <= kernel_data_V_2_42;
                kernel_data_V_2_39 <= kernel_data_V_2_43;
                kernel_data_V_2_4 <= kernel_data_V_2_8;
                kernel_data_V_2_40 <= kernel_data_V_2_44;
                kernel_data_V_2_41 <= kernel_data_V_2_45;
                kernel_data_V_2_42 <= kernel_data_V_2_46;
                kernel_data_V_2_43 <= kernel_data_V_2_47;
                kernel_data_V_2_44 <= pool_window_11_V_reg_3048;
                kernel_data_V_2_45 <= pool_window_11_V_1_reg_3122;
                kernel_data_V_2_46 <= pool_window_11_V_2_reg_3196;
                kernel_data_V_2_47 <= pool_window_11_V_3_reg_3270;
                kernel_data_V_2_5 <= kernel_data_V_2_9;
                kernel_data_V_2_52 <= kernel_data_V_2_56;
                kernel_data_V_2_53 <= kernel_data_V_2_57;
                kernel_data_V_2_54 <= kernel_data_V_2_58;
                kernel_data_V_2_55 <= kernel_data_V_2_59;
                kernel_data_V_2_56 <= kernel_data_V_2_60;
                kernel_data_V_2_57 <= kernel_data_V_2_61;
                kernel_data_V_2_58 <= kernel_data_V_2_62;
                kernel_data_V_2_59 <= kernel_data_V_2_63;
                kernel_data_V_2_6 <= kernel_data_V_2_10;
                kernel_data_V_2_60 <= pool_window_15_V_reg_2928;
                kernel_data_V_2_61 <= pool_window_15_V_1_reg_2958;
                kernel_data_V_2_62 <= pool_window_15_V_2_reg_2988;
                kernel_data_V_2_63 <= pool_window_15_V_3_reg_3018;
                kernel_data_V_2_7 <= kernel_data_V_2_11;
                kernel_data_V_2_8 <= kernel_data_V_2_12;
                kernel_data_V_2_9 <= kernel_data_V_2_13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter1_reg))) then
                phi_ln65_11_reg_3717 <= phi_ln65_11_fu_1870_p18;
                phi_ln65_12_reg_3727 <= phi_ln65_12_fu_1955_p18;
                phi_ln65_14_reg_3737 <= phi_ln65_14_fu_2036_p18;
                phi_ln65_15_reg_3747 <= phi_ln65_15_fu_2121_p18;
                phi_ln65_17_reg_3757 <= phi_ln65_17_fu_2202_p18;
                phi_ln65_18_reg_3767 <= phi_ln65_18_fu_2287_p18;
                phi_ln65_1_reg_3647 <= phi_ln65_1_fu_1291_p18;
                phi_ln65_20_reg_3777 <= phi_ln65_20_fu_2368_p18;
                phi_ln65_21_reg_3787 <= phi_ln65_21_fu_2453_p18;
                phi_ln65_3_reg_3657 <= phi_ln65_3_fu_1372_p18;
                phi_ln65_4_reg_3667 <= phi_ln65_4_fu_1457_p18;
                phi_ln65_6_reg_3677 <= phi_ln65_6_fu_1538_p18;
                phi_ln65_7_reg_3687 <= phi_ln65_7_fu_1623_p18;
                phi_ln65_9_reg_3697 <= phi_ln65_9_fu_1704_p18;
                phi_ln65_s_reg_3707 <= phi_ln65_s_fu_1789_p18;
                phi_ln_reg_3637 <= phi_ln_fu_1206_p18;
                    select_ln65_103_reg_3762(1 downto 0) <= select_ln65_103_fu_2275_p3(1 downto 0);
                    select_ln65_109_reg_3772(1 downto 0) <= select_ln65_109_fu_2360_p3(1 downto 0);
                select_ln65_34_reg_3632 <= select_ln65_34_fu_1194_p3;
                    select_ln65_39_reg_3642(1 downto 0) <= select_ln65_39_fu_1279_p3(1 downto 0);
                    select_ln65_45_reg_3652(1 downto 0) <= select_ln65_45_fu_1364_p3(1 downto 0);
                select_ln65_56_reg_3672 <= select_ln65_56_fu_1526_p3;
                    select_ln65_61_reg_3682(1 downto 0) <= select_ln65_61_fu_1611_p3(1 downto 0);
                    select_ln65_67_reg_3692(1 downto 0) <= select_ln65_67_fu_1696_p3(1 downto 0);
                select_ln65_77_reg_3712 <= select_ln65_77_fu_1858_p3;
                    select_ln65_82_reg_3722(1 downto 0) <= select_ln65_82_fu_1943_p3(1 downto 0);
                    select_ln65_88_reg_3732(1 downto 0) <= select_ln65_88_fu_2028_p3(1 downto 0);
                select_ln65_98_reg_3752 <= select_ln65_98_fu_2190_p3;
                    sext_ln65_1_reg_3702(1 downto 0) <= sext_ln65_1_fu_1785_p1(1 downto 0);
                    sext_ln65_2_reg_3742(1 downto 0) <= sext_ln65_2_fu_2117_p1(1 downto 0);
                    sext_ln65_3_reg_3782(1 downto 0) <= sext_ln65_3_fu_2449_p1(1 downto 0);
                    sext_ln65_reg_3662(1 downto 0) <= sext_ln65_fu_1453_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902_pp0_iter1_reg = ap_const_lv1_0))) then
                pool_window_0_V_10_reg_3362 <= kernel_data_V_2_7;
                pool_window_0_V_8_reg_3350 <= kernel_data_V_2_5;
                pool_window_0_V_9_reg_3356 <= kernel_data_V_2_6;
                pool_window_0_V_reg_3344 <= kernel_data_V_2_4;
                pool_window_10_V_1_reg_3590 <= kernel_data_V_2_45;
                pool_window_10_V_2_reg_3596 <= kernel_data_V_2_46;
                pool_window_10_V_3_reg_3602 <= kernel_data_V_2_47;
                pool_window_10_V_reg_3584 <= kernel_data_V_2_44;
                pool_window_12_V_1_reg_3422 <= kernel_data_V_2_53;
                pool_window_12_V_2_reg_3428 <= kernel_data_V_2_54;
                pool_window_12_V_3_reg_3434 <= kernel_data_V_2_55;
                pool_window_12_V_reg_3416 <= kernel_data_V_2_52;
                pool_window_13_V_1_reg_3518 <= kernel_data_V_2_57;
                pool_window_13_V_2_reg_3524 <= kernel_data_V_2_58;
                pool_window_13_V_3_reg_3530 <= kernel_data_V_2_59;
                pool_window_13_V_reg_3512 <= kernel_data_V_2_56;
                pool_window_14_V_1_reg_3614 <= kernel_data_V_2_61;
                pool_window_14_V_2_reg_3620 <= kernel_data_V_2_62;
                pool_window_14_V_3_reg_3626 <= kernel_data_V_2_63;
                pool_window_14_V_reg_3608 <= kernel_data_V_2_60;
                pool_window_1_V_10_reg_3458 <= kernel_data_V_2_11;
                pool_window_1_V_8_reg_3446 <= kernel_data_V_2_9;
                pool_window_1_V_9_reg_3452 <= kernel_data_V_2_10;
                pool_window_1_V_reg_3440 <= kernel_data_V_2_8;
                pool_window_2_V_10_reg_3554 <= kernel_data_V_2_15;
                pool_window_2_V_8_reg_3542 <= kernel_data_V_2_13;
                pool_window_2_V_9_reg_3548 <= kernel_data_V_2_14;
                pool_window_2_V_reg_3536 <= kernel_data_V_2_12;
                pool_window_4_V_1_reg_3374 <= kernel_data_V_2_21;
                pool_window_4_V_2_reg_3380 <= kernel_data_V_2_22;
                pool_window_4_V_3_reg_3386 <= kernel_data_V_2_23;
                pool_window_4_V_reg_3368 <= kernel_data_V_2_20;
                pool_window_5_V_1_reg_3470 <= kernel_data_V_2_25;
                pool_window_5_V_2_reg_3476 <= kernel_data_V_2_26;
                pool_window_5_V_3_reg_3482 <= kernel_data_V_2_27;
                pool_window_5_V_reg_3464 <= kernel_data_V_2_24;
                pool_window_6_V_1_reg_3566 <= kernel_data_V_2_29;
                pool_window_6_V_2_reg_3572 <= kernel_data_V_2_30;
                pool_window_6_V_3_reg_3578 <= kernel_data_V_2_31;
                pool_window_6_V_reg_3560 <= kernel_data_V_2_28;
                pool_window_8_V_1_reg_3398 <= kernel_data_V_2_37;
                pool_window_8_V_2_reg_3404 <= kernel_data_V_2_38;
                pool_window_8_V_3_reg_3410 <= kernel_data_V_2_39;
                pool_window_8_V_reg_3392 <= kernel_data_V_2_36;
                pool_window_9_V_1_reg_3494 <= kernel_data_V_2_41;
                pool_window_9_V_2_reg_3500 <= kernel_data_V_2_42;
                pool_window_9_V_3_reg_3506 <= kernel_data_V_2_43;
                pool_window_9_V_reg_3488 <= kernel_data_V_2_40;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                pool_window_11_V_1_reg_3122 <= line_buffer_Array_V_2_0_1_q0;
                pool_window_11_V_2_reg_3196 <= line_buffer_Array_V_2_0_2_q0;
                pool_window_11_V_3_reg_3270 <= line_buffer_Array_V_2_0_3_q0;
                pool_window_11_V_reg_3048 <= line_buffer_Array_V_2_0_0_q0;
                pool_window_15_V_1_reg_2958 <= data_V_data_1_V_dout;
                pool_window_15_V_2_reg_2988 <= data_V_data_2_V_dout;
                pool_window_15_V_3_reg_3018 <= data_V_data_3_V_dout;
                pool_window_15_V_reg_2928 <= data_V_data_0_V_dout;
                pool_window_3_V_10_reg_3322 <= line_buffer_Array_V_2_2_3_q0;
                pool_window_3_V_8_reg_3174 <= line_buffer_Array_V_2_2_1_q0;
                pool_window_3_V_9_reg_3248 <= line_buffer_Array_V_2_2_2_q0;
                pool_window_3_V_reg_3100 <= line_buffer_Array_V_2_2_0_q0;
                pool_window_7_V_1_reg_3144 <= line_buffer_Array_V_2_1_1_q0;
                pool_window_7_V_2_reg_3218 <= line_buffer_Array_V_2_1_2_q0;
                pool_window_7_V_3_reg_3292 <= line_buffer_Array_V_2_1_3_q0;
                pool_window_7_V_reg_3070 <= line_buffer_Array_V_2_1_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_reg_2915 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sY_1 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375;
            end if;
        end if;
    end process;
    select_ln65_39_reg_3642(2) <= '1';
    select_ln65_45_reg_3652(3 downto 2) <= "10";
    sext_ln65_reg_3662(3 downto 2) <= "11";
    select_ln65_61_reg_3682(2) <= '1';
    select_ln65_67_reg_3692(3 downto 2) <= "10";
    sext_ln65_1_reg_3702(3 downto 2) <= "11";
    select_ln65_82_reg_3722(2) <= '1';
    select_ln65_88_reg_3732(3 downto 2) <= "10";
    sext_ln65_2_reg_3742(3 downto 2) <= "11";
    select_ln65_103_reg_3762(2) <= '1';
    select_ln65_109_reg_3772(3 downto 2) <= "10";
    sext_ln65_3_reg_3782(3 downto 2) <= "11";
    zext_ln65_9_reg_3792(3) <= '0';
    select_ln65_51_reg_3797(3) <= '1';
    zext_ln65_12_reg_3807(3) <= '0';
    select_ln65_73_reg_3812(3) <= '1';
    zext_ln65_15_reg_3822(3) <= '0';
    select_ln65_94_reg_3827(3) <= '1';
    zext_ln65_18_reg_3837(3) <= '0';
    select_ln65_115_reg_3842(3) <= '1';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, icmp_ln241_fu_386_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln241_fu_386_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln241_fu_386_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln220_fu_512_p2 <= std_logic_vector(unsigned(pY_1) + unsigned(ap_const_lv32_1));
    add_ln222_fu_524_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_1_load) + unsigned(ap_const_lv32_1));
    add_ln225_fu_462_p2 <= std_logic_vector(unsigned(pX_1) + unsigned(ap_const_lv32_1));
    add_ln227_fu_474_p2 <= std_logic_vector(unsigned(sX_1) + unsigned(ap_const_lv32_1));
    add_ln241_fu_392_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_364) + unsigned(ap_const_lv10_1));
    and_ln191_3_fu_444_p2 <= (icmp_ln191_6_fu_432_p2 and icmp_ln191_5_fu_422_p2);
    and_ln191_4_fu_450_p2 <= (and_ln191_fu_438_p2 and and_ln191_3_fu_444_p2);
    and_ln191_fu_438_p2 <= (icmp_ln191_fu_402_p2 and icmp_ln191_4_fu_412_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, io_acc_block_signal_op55, io_acc_block_signal_op375)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op375 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((io_acc_block_signal_op55 = ap_const_logic_0) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, io_acc_block_signal_op55, io_acc_block_signal_op375)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op375 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((io_acc_block_signal_op55 = ap_const_logic_0) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, io_acc_block_signal_op55, io_acc_block_signal_op375)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op375 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((io_acc_block_signal_op55 = ap_const_logic_0) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln241_reg_2902, io_acc_block_signal_op55)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((io_acc_block_signal_op55 = ap_const_logic_0) and (icmp_ln241_reg_2902 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(and_ln191_4_reg_2911_pp0_iter3_reg, io_acc_block_signal_op375)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((io_acc_block_signal_op375 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg));
    end process;


    ap_condition_288_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_288 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_313_assign_proc : process(icmp_ln241_fu_386_p2, icmp_ln212_fu_456_p2, icmp_ln216_fu_506_p2)
    begin
                ap_condition_313 <= ((icmp_ln212_fu_456_p2 = ap_const_lv1_1) and (icmp_ln216_fu_506_p2 = ap_const_lv1_0) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0));
    end process;


    ap_condition_701_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln241_fu_386_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_701 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_708_assign_proc : process(icmp_ln241_fu_386_p2, icmp_ln212_fu_456_p2, icmp_ln216_fu_506_p2)
    begin
                ap_condition_708 <= ((icmp_ln216_fu_506_p2 = ap_const_lv1_1) and (icmp_ln212_fu_456_p2 = ap_const_lv1_1) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0));
    end process;


    ap_condition_714_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln241_fu_386_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_ln212_fu_456_p2)
    begin
                ap_condition_714 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln212_fu_456_p2 = ap_const_lv1_1) and (icmp_ln241_fu_386_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln241_fu_386_p2)
    begin
        if ((icmp_ln241_fu_386_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_sY_1_load_assign_proc : process(sY_1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln212_reg_2915, ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375)
    begin
        if (((icmp_ln212_reg_2915 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_sY_1_load <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375;
        else 
            ap_sig_allocacmp_sY_1_load <= sY_1;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln241_reg_2902)
    begin
        if (((icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln241_reg_2902)
    begin
        if (((icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln241_reg_2902)
    begin
        if (((icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln241_reg_2902)
    begin
        if (((icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1496_1_fu_1482_p2 <= "1" when (signed(kernel_data_V_2_5) < signed(kernel_data_V_2_9)) else "0";
    icmp_ln1496_24_fu_1168_p2 <= "1" when (signed(kernel_data_V_2_12) < signed(pool_window_3_V_reg_3100)) else "0";
    icmp_ln1496_25_fu_1188_p2 <= "1" when (signed(select_ln65_fu_1160_p3) < signed(select_ln65_33_fu_1181_p3)) else "0";
    icmp_ln1496_26_fu_1231_p2 <= "1" when (signed(kernel_data_V_2_20) < signed(kernel_data_V_2_24)) else "0";
    icmp_ln1496_27_fu_1253_p2 <= "1" when (signed(kernel_data_V_2_28) < signed(pool_window_7_V_reg_3070)) else "0";
    icmp_ln1496_28_fu_1273_p2 <= "1" when (signed(select_ln65_36_fu_1245_p3) < signed(select_ln65_38_fu_1266_p3)) else "0";
    icmp_ln1496_29_fu_2481_p2 <= "1" when (signed(phi_ln_reg_3637) < signed(phi_ln65_1_reg_3647)) else "0";
    icmp_ln1496_2_fu_1814_p2 <= "1" when (signed(kernel_data_V_2_6) < signed(kernel_data_V_2_10)) else "0";
    icmp_ln1496_30_fu_1316_p2 <= "1" when (signed(kernel_data_V_2_36) < signed(kernel_data_V_2_40)) else "0";
    icmp_ln1496_31_fu_1338_p2 <= "1" when (signed(kernel_data_V_2_44) < signed(pool_window_11_V_reg_3048)) else "0";
    icmp_ln1496_32_fu_1358_p2 <= "1" when (signed(select_ln65_42_fu_1330_p3) < signed(select_ln65_44_fu_1351_p3)) else "0";
    icmp_ln1496_33_fu_1397_p2 <= "1" when (signed(kernel_data_V_2_52) < signed(kernel_data_V_2_56)) else "0";
    icmp_ln1496_34_fu_1419_p2 <= "1" when (signed(kernel_data_V_2_60) < signed(pool_window_15_V_reg_2928)) else "0";
    icmp_ln1496_35_fu_1439_p2 <= "1" when (signed(select_ln65_47_fu_1411_p3) < signed(select_ln65_49_fu_1432_p3)) else "0";
    icmp_ln1496_36_fu_2518_p2 <= "1" when (signed(phi_ln65_3_reg_3657) < signed(phi_ln65_4_reg_3667)) else "0";
    icmp_ln1496_37_fu_2550_p2 <= "1" when (signed(phi_ln65_2_fu_2496_p18) < signed(phi_ln65_5_fu_2528_p18)) else "0";
    icmp_ln1496_38_fu_1500_p2 <= "1" when (signed(kernel_data_V_2_13) < signed(pool_window_3_V_8_reg_3174)) else "0";
    icmp_ln1496_39_fu_1520_p2 <= "1" when (signed(select_ln65_53_fu_1492_p3) < signed(select_ln65_55_fu_1513_p3)) else "0";
    icmp_ln1496_40_fu_1563_p2 <= "1" when (signed(kernel_data_V_2_21) < signed(kernel_data_V_2_25)) else "0";
    icmp_ln1496_41_fu_1585_p2 <= "1" when (signed(kernel_data_V_2_29) < signed(pool_window_7_V_1_reg_3144)) else "0";
    icmp_ln1496_42_fu_1605_p2 <= "1" when (signed(select_ln65_58_fu_1577_p3) < signed(select_ln65_60_fu_1598_p3)) else "0";
    icmp_ln1496_43_fu_2559_p2 <= "1" when (signed(phi_ln65_6_reg_3677) < signed(phi_ln65_7_reg_3687)) else "0";
    icmp_ln1496_44_fu_1648_p2 <= "1" when (signed(kernel_data_V_2_37) < signed(kernel_data_V_2_41)) else "0";
    icmp_ln1496_45_fu_1670_p2 <= "1" when (signed(kernel_data_V_2_45) < signed(pool_window_11_V_1_reg_3122)) else "0";
    icmp_ln1496_46_fu_1690_p2 <= "1" when (signed(select_ln65_64_fu_1662_p3) < signed(select_ln65_66_fu_1683_p3)) else "0";
    icmp_ln1496_47_fu_1729_p2 <= "1" when (signed(kernel_data_V_2_53) < signed(kernel_data_V_2_57)) else "0";
    icmp_ln1496_48_fu_1751_p2 <= "1" when (signed(kernel_data_V_2_61) < signed(pool_window_15_V_1_reg_2958)) else "0";
    icmp_ln1496_49_fu_1771_p2 <= "1" when (signed(select_ln65_69_fu_1743_p3) < signed(select_ln65_71_fu_1764_p3)) else "0";
    icmp_ln1496_50_fu_2596_p2 <= "1" when (signed(phi_ln65_9_reg_3697) < signed(phi_ln65_s_reg_3707)) else "0";
    icmp_ln1496_51_fu_2628_p2 <= "1" when (signed(phi_ln65_8_fu_2574_p18) < signed(phi_ln65_10_fu_2606_p18)) else "0";
    icmp_ln1496_52_fu_1832_p2 <= "1" when (signed(kernel_data_V_2_14) < signed(pool_window_3_V_9_reg_3248)) else "0";
    icmp_ln1496_53_fu_1852_p2 <= "1" when (signed(select_ln65_74_fu_1824_p3) < signed(select_ln65_76_fu_1845_p3)) else "0";
    icmp_ln1496_54_fu_1895_p2 <= "1" when (signed(kernel_data_V_2_22) < signed(kernel_data_V_2_26)) else "0";
    icmp_ln1496_55_fu_1917_p2 <= "1" when (signed(kernel_data_V_2_30) < signed(pool_window_7_V_2_reg_3218)) else "0";
    icmp_ln1496_56_fu_1937_p2 <= "1" when (signed(select_ln65_79_fu_1909_p3) < signed(select_ln65_81_fu_1930_p3)) else "0";
    icmp_ln1496_57_fu_2637_p2 <= "1" when (signed(phi_ln65_11_reg_3717) < signed(phi_ln65_12_reg_3727)) else "0";
    icmp_ln1496_58_fu_1980_p2 <= "1" when (signed(kernel_data_V_2_38) < signed(kernel_data_V_2_42)) else "0";
    icmp_ln1496_59_fu_2002_p2 <= "1" when (signed(kernel_data_V_2_46) < signed(pool_window_11_V_2_reg_3196)) else "0";
    icmp_ln1496_60_fu_2022_p2 <= "1" when (signed(select_ln65_85_fu_1994_p3) < signed(select_ln65_87_fu_2015_p3)) else "0";
    icmp_ln1496_61_fu_2061_p2 <= "1" when (signed(kernel_data_V_2_54) < signed(kernel_data_V_2_58)) else "0";
    icmp_ln1496_62_fu_2083_p2 <= "1" when (signed(kernel_data_V_2_62) < signed(pool_window_15_V_2_reg_2988)) else "0";
    icmp_ln1496_63_fu_2103_p2 <= "1" when (signed(select_ln65_90_fu_2075_p3) < signed(select_ln65_92_fu_2096_p3)) else "0";
    icmp_ln1496_64_fu_2674_p2 <= "1" when (signed(phi_ln65_14_reg_3737) < signed(phi_ln65_15_reg_3747)) else "0";
    icmp_ln1496_65_fu_2706_p2 <= "1" when (signed(phi_ln65_13_fu_2652_p18) < signed(phi_ln65_16_fu_2684_p18)) else "0";
    icmp_ln1496_66_fu_2146_p2 <= "1" when (signed(kernel_data_V_2_7) < signed(kernel_data_V_2_11)) else "0";
    icmp_ln1496_67_fu_2164_p2 <= "1" when (signed(kernel_data_V_2_15) < signed(pool_window_3_V_10_reg_3322)) else "0";
    icmp_ln1496_68_fu_2184_p2 <= "1" when (signed(select_ln65_95_fu_2156_p3) < signed(select_ln65_97_fu_2177_p3)) else "0";
    icmp_ln1496_69_fu_2227_p2 <= "1" when (signed(kernel_data_V_2_23) < signed(kernel_data_V_2_27)) else "0";
    icmp_ln1496_70_fu_2249_p2 <= "1" when (signed(kernel_data_V_2_31) < signed(pool_window_7_V_3_reg_3292)) else "0";
    icmp_ln1496_71_fu_2269_p2 <= "1" when (signed(select_ln65_100_fu_2241_p3) < signed(select_ln65_102_fu_2262_p3)) else "0";
    icmp_ln1496_72_fu_2715_p2 <= "1" when (signed(phi_ln65_17_reg_3757) < signed(phi_ln65_18_reg_3767)) else "0";
    icmp_ln1496_73_fu_2312_p2 <= "1" when (signed(kernel_data_V_2_39) < signed(kernel_data_V_2_43)) else "0";
    icmp_ln1496_74_fu_2334_p2 <= "1" when (signed(kernel_data_V_2_47) < signed(pool_window_11_V_3_reg_3270)) else "0";
    icmp_ln1496_75_fu_2354_p2 <= "1" when (signed(select_ln65_106_fu_2326_p3) < signed(select_ln65_108_fu_2347_p3)) else "0";
    icmp_ln1496_76_fu_2393_p2 <= "1" when (signed(kernel_data_V_2_55) < signed(kernel_data_V_2_59)) else "0";
    icmp_ln1496_77_fu_2415_p2 <= "1" when (signed(kernel_data_V_2_63) < signed(pool_window_15_V_3_reg_3018)) else "0";
    icmp_ln1496_78_fu_2435_p2 <= "1" when (signed(select_ln65_111_fu_2407_p3) < signed(select_ln65_113_fu_2428_p3)) else "0";
    icmp_ln1496_79_fu_2752_p2 <= "1" when (signed(phi_ln65_20_reg_3777) < signed(phi_ln65_21_reg_3787)) else "0";
    icmp_ln1496_80_fu_2784_p2 <= "1" when (signed(phi_ln65_19_fu_2730_p18) < signed(phi_ln65_22_fu_2762_p18)) else "0";
    icmp_ln1496_fu_1150_p2 <= "1" when (signed(kernel_data_V_2_4) < signed(kernel_data_V_2_8)) else "0";
    icmp_ln191_4_fu_412_p2 <= "1" when (ap_sig_allocacmp_sY_1_load = ap_const_lv32_3) else "0";
    icmp_ln191_5_fu_422_p2 <= "1" when (signed(pY_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln191_6_fu_432_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_2)) else "0";
    icmp_ln191_fu_402_p2 <= "1" when (sX_1 = ap_const_lv32_3) else "0";
    icmp_ln212_fu_456_p2 <= "1" when (pX_1 = ap_const_lv32_19) else "0";
    icmp_ln216_fu_506_p2 <= "1" when (pY_1 = ap_const_lv32_19) else "0";
    icmp_ln241_fu_386_p2 <= "1" when (indvar_flatten_reg_364 = ap_const_lv10_2A4) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op375 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op55 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    line_buffer_Array_V_2_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_0_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_1_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_1_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_2_2_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln241_reg_2902, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln241_reg_2902 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_Array_V_2_2_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_2_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phi_ln65_10_fu_2606_p17 <= 
        sext_ln65_1_reg_3702 when (icmp_ln1496_50_fu_2596_p2(0) = '1') else 
        select_ln65_67_reg_3692;
    phi_ln65_11_fu_1870_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_77_fu_1858_p3),4));
    phi_ln65_12_fu_1955_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_82_fu_1943_p3),4));
    phi_ln65_13_fu_2652_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_83_fu_2641_p3),4));
    phi_ln65_14_fu_2036_p17 <= 
        select_ln65_86_fu_2007_p3 when (icmp_ln1496_60_fu_2022_p2(0) = '1') else 
        select_ln65_84_fu_1986_p3;
        phi_ln65_15_fu_2121_p17 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_93_fu_2109_p3),4));

    phi_ln65_16_fu_2684_p17 <= 
        sext_ln65_2_reg_3742 when (icmp_ln1496_64_fu_2674_p2(0) = '1') else 
        select_ln65_88_reg_3732;
    phi_ln65_17_fu_2202_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_98_fu_2190_p3),4));
    phi_ln65_18_fu_2287_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_103_fu_2275_p3),4));
    phi_ln65_19_fu_2730_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_104_fu_2719_p3),4));
    phi_ln65_1_fu_1291_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_39_fu_1279_p3),4));
    phi_ln65_20_fu_2368_p17 <= 
        select_ln65_107_fu_2339_p3 when (icmp_ln1496_75_fu_2354_p2(0) = '1') else 
        select_ln65_105_fu_2318_p3;
        phi_ln65_21_fu_2453_p17 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_114_fu_2441_p3),4));

    phi_ln65_22_fu_2762_p17 <= 
        sext_ln65_3_reg_3782 when (icmp_ln1496_79_fu_2752_p2(0) = '1') else 
        select_ln65_109_reg_3772;
    phi_ln65_2_fu_2496_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_40_fu_2485_p3),4));
    phi_ln65_3_fu_1372_p17 <= 
        select_ln65_43_fu_1343_p3 when (icmp_ln1496_32_fu_1358_p2(0) = '1') else 
        select_ln65_41_fu_1322_p3;
        phi_ln65_4_fu_1457_p17 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_50_fu_1445_p3),4));

    phi_ln65_5_fu_2528_p17 <= 
        sext_ln65_reg_3662 when (icmp_ln1496_36_fu_2518_p2(0) = '1') else 
        select_ln65_45_reg_3652;
    phi_ln65_6_fu_1538_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_56_fu_1526_p3),4));
    phi_ln65_7_fu_1623_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_61_fu_1611_p3),4));
    phi_ln65_8_fu_2574_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_62_fu_2563_p3),4));
    phi_ln65_9_fu_1704_p17 <= 
        select_ln65_65_fu_1675_p3 when (icmp_ln1496_46_fu_1690_p2(0) = '1') else 
        select_ln65_63_fu_1654_p3;
        phi_ln65_s_fu_1789_p17 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_72_fu_1777_p3),4));

    phi_ln_fu_1206_p17 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_34_fu_1194_p3),4));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_fu_2795_p18;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_fu_2823_p18;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_fu_2851_p18;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_fu_2879_p18;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln191_4_reg_2911_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln191_4_reg_2911_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln222_fu_530_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_4_fu_412_p2(0) = '1') else 
        add_ln222_fu_524_p2;
    select_ln227_fu_480_p3 <= 
        ap_const_lv32_0 when (icmp_ln191_fu_402_p2(0) = '1') else 
        add_ln227_fu_474_p2;
    select_ln65_100_fu_2241_p3 <= 
        kernel_data_V_2_27 when (icmp_ln1496_69_fu_2227_p2(0) = '1') else 
        kernel_data_V_2_23;
    select_ln65_101_fu_1922_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_55_fu_1917_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_102_fu_2262_p3 <= 
        pool_window_7_V_3_reg_3292 when (icmp_ln1496_70_fu_2249_p2(0) = '1') else 
        kernel_data_V_2_31;
    select_ln65_103_fu_2275_p3 <= 
        select_ln65_117_fu_2254_p3 when (icmp_ln1496_71_fu_2269_p2(0) = '1') else 
        select_ln65_99_fu_2233_p3;
    select_ln65_104_fu_2719_p3 <= 
        select_ln65_103_reg_3762 when (icmp_ln1496_72_fu_2715_p2(0) = '1') else 
        zext_ln65_17_fu_2712_p1;
    select_ln65_105_fu_2318_p3 <= 
        ap_const_lv4_9 when (icmp_ln1496_73_fu_2312_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln65_106_fu_2326_p3 <= 
        kernel_data_V_2_43 when (icmp_ln1496_73_fu_2312_p2(0) = '1') else 
        kernel_data_V_2_39;
    select_ln65_107_fu_2339_p3 <= 
        ap_const_lv4_B when (icmp_ln1496_74_fu_2334_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln65_108_fu_2347_p3 <= 
        pool_window_11_V_3_reg_3270 when (icmp_ln1496_74_fu_2334_p2(0) = '1') else 
        kernel_data_V_2_47;
    select_ln65_109_fu_2360_p3 <= 
        select_ln65_107_fu_2339_p3 when (icmp_ln1496_75_fu_2354_p2(0) = '1') else 
        select_ln65_105_fu_2318_p3;
    select_ln65_110_fu_2399_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_76_fu_2393_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_111_fu_2407_p3 <= 
        kernel_data_V_2_59 when (icmp_ln1496_76_fu_2393_p2(0) = '1') else 
        kernel_data_V_2_55;
    select_ln65_112_fu_2088_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_62_fu_2083_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_113_fu_2428_p3 <= 
        pool_window_15_V_3_reg_3018 when (icmp_ln1496_77_fu_2415_p2(0) = '1') else 
        kernel_data_V_2_63;
    select_ln65_114_fu_2441_p3 <= 
        select_ln65_118_fu_2420_p3 when (icmp_ln1496_78_fu_2435_p2(0) = '1') else 
        select_ln65_110_fu_2399_p3;
    select_ln65_115_fu_2756_p3 <= 
        sext_ln65_3_reg_3782 when (icmp_ln1496_79_fu_2752_p2(0) = '1') else 
        select_ln65_109_reg_3772;
    select_ln65_117_fu_2254_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_70_fu_2249_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_118_fu_2420_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_77_fu_2415_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_32_fu_1173_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_24_fu_1168_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_33_fu_1181_p3 <= 
        pool_window_3_V_reg_3100 when (icmp_ln1496_24_fu_1168_p2(0) = '1') else 
        kernel_data_V_2_12;
    select_ln65_34_fu_1194_p3 <= 
        select_ln65_32_fu_1173_p3 when (icmp_ln1496_25_fu_1188_p2(0) = '1') else 
        zext_ln65_fu_1156_p1;
    select_ln65_35_fu_1237_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_26_fu_1231_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_36_fu_1245_p3 <= 
        kernel_data_V_2_24 when (icmp_ln1496_26_fu_1231_p2(0) = '1') else 
        kernel_data_V_2_20;
    select_ln65_38_fu_1266_p3 <= 
        pool_window_7_V_reg_3070 when (icmp_ln1496_27_fu_1253_p2(0) = '1') else 
        kernel_data_V_2_28;
    select_ln65_39_fu_1279_p3 <= 
        select_ln65_48_fu_1258_p3 when (icmp_ln1496_28_fu_1273_p2(0) = '1') else 
        select_ln65_35_fu_1237_p3;
    select_ln65_40_fu_2485_p3 <= 
        select_ln65_39_reg_3642 when (icmp_ln1496_29_fu_2481_p2(0) = '1') else 
        zext_ln65_8_fu_2478_p1;
    select_ln65_41_fu_1322_p3 <= 
        ap_const_lv4_9 when (icmp_ln1496_30_fu_1316_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln65_42_fu_1330_p3 <= 
        kernel_data_V_2_40 when (icmp_ln1496_30_fu_1316_p2(0) = '1') else 
        kernel_data_V_2_36;
    select_ln65_43_fu_1343_p3 <= 
        ap_const_lv4_B when (icmp_ln1496_31_fu_1338_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln65_44_fu_1351_p3 <= 
        pool_window_11_V_reg_3048 when (icmp_ln1496_31_fu_1338_p2(0) = '1') else 
        kernel_data_V_2_44;
    select_ln65_45_fu_1364_p3 <= 
        select_ln65_43_fu_1343_p3 when (icmp_ln1496_32_fu_1358_p2(0) = '1') else 
        select_ln65_41_fu_1322_p3;
    select_ln65_46_fu_1403_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_33_fu_1397_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_47_fu_1411_p3 <= 
        kernel_data_V_2_56 when (icmp_ln1496_33_fu_1397_p2(0) = '1') else 
        kernel_data_V_2_52;
    select_ln65_48_fu_1258_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_27_fu_1253_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_49_fu_1432_p3 <= 
        pool_window_15_V_reg_2928 when (icmp_ln1496_34_fu_1419_p2(0) = '1') else 
        kernel_data_V_2_60;
    select_ln65_50_fu_1445_p3 <= 
        select_ln65_52_fu_1424_p3 when (icmp_ln1496_35_fu_1439_p2(0) = '1') else 
        select_ln65_46_fu_1403_p3;
    select_ln65_51_fu_2522_p3 <= 
        sext_ln65_reg_3662 when (icmp_ln1496_36_fu_2518_p2(0) = '1') else 
        select_ln65_45_reg_3652;
    select_ln65_52_fu_1424_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_34_fu_1419_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_53_fu_1492_p3 <= 
        kernel_data_V_2_9 when (icmp_ln1496_1_fu_1482_p2(0) = '1') else 
        kernel_data_V_2_5;
    select_ln65_54_fu_1505_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_38_fu_1500_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_55_fu_1513_p3 <= 
        pool_window_3_V_8_reg_3174 when (icmp_ln1496_38_fu_1500_p2(0) = '1') else 
        kernel_data_V_2_13;
    select_ln65_56_fu_1526_p3 <= 
        select_ln65_54_fu_1505_p3 when (icmp_ln1496_39_fu_1520_p2(0) = '1') else 
        zext_ln65_10_fu_1488_p1;
    select_ln65_57_fu_1569_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_40_fu_1563_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_58_fu_1577_p3 <= 
        kernel_data_V_2_25 when (icmp_ln1496_40_fu_1563_p2(0) = '1') else 
        kernel_data_V_2_21;
    select_ln65_60_fu_1598_p3 <= 
        pool_window_7_V_1_reg_3144 when (icmp_ln1496_41_fu_1585_p2(0) = '1') else 
        kernel_data_V_2_29;
    select_ln65_61_fu_1611_p3 <= 
        select_ln65_70_fu_1590_p3 when (icmp_ln1496_42_fu_1605_p2(0) = '1') else 
        select_ln65_57_fu_1569_p3;
    select_ln65_62_fu_2563_p3 <= 
        select_ln65_61_reg_3682 when (icmp_ln1496_43_fu_2559_p2(0) = '1') else 
        zext_ln65_11_fu_2556_p1;
    select_ln65_63_fu_1654_p3 <= 
        ap_const_lv4_9 when (icmp_ln1496_44_fu_1648_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln65_64_fu_1662_p3 <= 
        kernel_data_V_2_41 when (icmp_ln1496_44_fu_1648_p2(0) = '1') else 
        kernel_data_V_2_37;
    select_ln65_65_fu_1675_p3 <= 
        ap_const_lv4_B when (icmp_ln1496_45_fu_1670_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln65_66_fu_1683_p3 <= 
        pool_window_11_V_1_reg_3122 when (icmp_ln1496_45_fu_1670_p2(0) = '1') else 
        kernel_data_V_2_45;
    select_ln65_67_fu_1696_p3 <= 
        select_ln65_65_fu_1675_p3 when (icmp_ln1496_46_fu_1690_p2(0) = '1') else 
        select_ln65_63_fu_1654_p3;
    select_ln65_68_fu_1735_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_47_fu_1729_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_69_fu_1743_p3 <= 
        kernel_data_V_2_57 when (icmp_ln1496_47_fu_1729_p2(0) = '1') else 
        kernel_data_V_2_53;
    select_ln65_70_fu_1590_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_41_fu_1585_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_71_fu_1764_p3 <= 
        pool_window_15_V_1_reg_2958 when (icmp_ln1496_48_fu_1751_p2(0) = '1') else 
        kernel_data_V_2_61;
    select_ln65_72_fu_1777_p3 <= 
        select_ln65_80_fu_1756_p3 when (icmp_ln1496_49_fu_1771_p2(0) = '1') else 
        select_ln65_68_fu_1735_p3;
    select_ln65_73_fu_2600_p3 <= 
        sext_ln65_1_reg_3702 when (icmp_ln1496_50_fu_2596_p2(0) = '1') else 
        select_ln65_67_reg_3692;
    select_ln65_74_fu_1824_p3 <= 
        kernel_data_V_2_10 when (icmp_ln1496_2_fu_1814_p2(0) = '1') else 
        kernel_data_V_2_6;
    select_ln65_75_fu_1837_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_52_fu_1832_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_76_fu_1845_p3 <= 
        pool_window_3_V_9_reg_3248 when (icmp_ln1496_52_fu_1832_p2(0) = '1') else 
        kernel_data_V_2_14;
    select_ln65_77_fu_1858_p3 <= 
        select_ln65_75_fu_1837_p3 when (icmp_ln1496_53_fu_1852_p2(0) = '1') else 
        zext_ln65_13_fu_1820_p1;
    select_ln65_78_fu_1901_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_54_fu_1895_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_79_fu_1909_p3 <= 
        kernel_data_V_2_26 when (icmp_ln1496_54_fu_1895_p2(0) = '1') else 
        kernel_data_V_2_22;
    select_ln65_80_fu_1756_p3 <= 
        ap_const_lv3_7 when (icmp_ln1496_48_fu_1751_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln65_81_fu_1930_p3 <= 
        pool_window_7_V_2_reg_3218 when (icmp_ln1496_55_fu_1917_p2(0) = '1') else 
        kernel_data_V_2_30;
    select_ln65_82_fu_1943_p3 <= 
        select_ln65_101_fu_1922_p3 when (icmp_ln1496_56_fu_1937_p2(0) = '1') else 
        select_ln65_78_fu_1901_p3;
    select_ln65_83_fu_2641_p3 <= 
        select_ln65_82_reg_3722 when (icmp_ln1496_57_fu_2637_p2(0) = '1') else 
        zext_ln65_14_fu_2634_p1;
    select_ln65_84_fu_1986_p3 <= 
        ap_const_lv4_9 when (icmp_ln1496_58_fu_1980_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln65_85_fu_1994_p3 <= 
        kernel_data_V_2_42 when (icmp_ln1496_58_fu_1980_p2(0) = '1') else 
        kernel_data_V_2_38;
    select_ln65_86_fu_2007_p3 <= 
        ap_const_lv4_B when (icmp_ln1496_59_fu_2002_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln65_87_fu_2015_p3 <= 
        pool_window_11_V_2_reg_3196 when (icmp_ln1496_59_fu_2002_p2(0) = '1') else 
        kernel_data_V_2_46;
    select_ln65_88_fu_2028_p3 <= 
        select_ln65_86_fu_2007_p3 when (icmp_ln1496_60_fu_2022_p2(0) = '1') else 
        select_ln65_84_fu_1986_p3;
    select_ln65_89_fu_2067_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_61_fu_2061_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_90_fu_2075_p3 <= 
        kernel_data_V_2_58 when (icmp_ln1496_61_fu_2061_p2(0) = '1') else 
        kernel_data_V_2_54;
    select_ln65_92_fu_2096_p3 <= 
        pool_window_15_V_2_reg_2988 when (icmp_ln1496_62_fu_2083_p2(0) = '1') else 
        kernel_data_V_2_62;
    select_ln65_93_fu_2109_p3 <= 
        select_ln65_112_fu_2088_p3 when (icmp_ln1496_63_fu_2103_p2(0) = '1') else 
        select_ln65_89_fu_2067_p3;
    select_ln65_94_fu_2678_p3 <= 
        sext_ln65_2_reg_3742 when (icmp_ln1496_64_fu_2674_p2(0) = '1') else 
        select_ln65_88_reg_3732;
    select_ln65_95_fu_2156_p3 <= 
        kernel_data_V_2_11 when (icmp_ln1496_66_fu_2146_p2(0) = '1') else 
        kernel_data_V_2_7;
    select_ln65_96_fu_2169_p3 <= 
        ap_const_lv2_3 when (icmp_ln1496_67_fu_2164_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln65_97_fu_2177_p3 <= 
        pool_window_3_V_10_reg_3322 when (icmp_ln1496_67_fu_2164_p2(0) = '1') else 
        kernel_data_V_2_15;
    select_ln65_98_fu_2190_p3 <= 
        select_ln65_96_fu_2169_p3 when (icmp_ln1496_68_fu_2184_p2(0) = '1') else 
        zext_ln65_16_fu_2152_p1;
    select_ln65_99_fu_2233_p3 <= 
        ap_const_lv3_5 when (icmp_ln1496_69_fu_2227_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln65_fu_1160_p3 <= 
        kernel_data_V_2_8 when (icmp_ln1496_fu_1150_p2(0) = '1') else 
        kernel_data_V_2_4;
        sext_ln65_1_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_72_fu_1777_p3),4));

        sext_ln65_2_fu_2117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_93_fu_2109_p3),4));

        sext_ln65_3_fu_2449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_114_fu_2441_p3),4));

        sext_ln65_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln65_50_fu_1445_p3),4));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_data_0_V_fu_2795_p17 <= 
        select_ln65_51_reg_3797 when (icmp_ln1496_37_reg_3802(0) = '1') else 
        zext_ln65_9_reg_3792;
    tmp_data_1_V_fu_2823_p17 <= 
        select_ln65_73_reg_3812 when (icmp_ln1496_51_reg_3817(0) = '1') else 
        zext_ln65_12_reg_3807;
    tmp_data_2_V_fu_2851_p17 <= 
        select_ln65_94_reg_3827 when (icmp_ln1496_65_reg_3832(0) = '1') else 
        zext_ln65_15_reg_3822;
    tmp_data_3_V_fu_2879_p17 <= 
        select_ln65_115_reg_3842 when (icmp_ln1496_80_reg_3847(0) = '1') else 
        zext_ln65_18_reg_3837;
    zext_ln65_10_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_1_fu_1482_p2),2));
    zext_ln65_11_fu_2556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_56_reg_3672),3));
    zext_ln65_12_fu_2570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_62_fu_2563_p3),4));
    zext_ln65_13_fu_1820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_2_fu_1814_p2),2));
    zext_ln65_14_fu_2634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_77_reg_3712),3));
    zext_ln65_15_fu_2648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_83_fu_2641_p3),4));
    zext_ln65_16_fu_2152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_66_fu_2146_p2),2));
    zext_ln65_17_fu_2712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_98_reg_3752),3));
    zext_ln65_18_fu_2726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_104_fu_2719_p3),4));
    zext_ln65_8_fu_2478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_34_reg_3632),3));
    zext_ln65_9_fu_2492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln65_40_fu_2485_p3),4));
    zext_ln65_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln1496_fu_1150_p2),2));
end behav;
