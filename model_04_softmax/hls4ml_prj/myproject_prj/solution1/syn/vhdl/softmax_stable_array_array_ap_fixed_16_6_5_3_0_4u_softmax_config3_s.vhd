-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv10_2A4 : STD_LOGIC_VECTOR (9 downto 0) := "1010100100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table8_ce0 : STD_LOGIC;
    signal exp_table8_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table10_ce0 : STD_LOGIC;
    signal invert_table10_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln196_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal icmp_ln196_reg_931_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal i_0_reg_276 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln196_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln196_reg_931_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_931_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_323_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_935 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_data_0_V_1_reg_940 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op32 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_data_1_V_1_reg_946 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_1_reg_952 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_1_reg_958 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_964 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_7_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_fu_631_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_974 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal io_acc_block_signal_op169 : STD_LOGIC;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal y_V_9_fu_665_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_9_reg_979 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_10_fu_699_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_10_reg_984 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_11_fu_733_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_11_reg_989 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal exp_res_0_V_reg_999 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exp_res_0_V_reg_999_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_1010 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_reg_1010_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_1021 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_reg_1021_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1032 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_reg_1032_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_23_reg_1037 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_24_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1051 : STD_LOGIC_VECTOR (9 downto 0);
    signal inv_exp_sum_V_reg_1062 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_911_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln241_reg_1067 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_1072 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_data_1_V_reg_1077 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_1087 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_phi_mux_i_0_phi_fu_280_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln225_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln225_1_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal grp_fu_287_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_fu_915_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_8_fu_919_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_9_fu_923_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_10_fu_927_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln1496_fu_345_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_345_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_7_fu_351_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_7_fu_351_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_357_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_7_fu_362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_8_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_373_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_381_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_9_fu_384_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_388_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_10_fu_440_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_8_fu_443_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_457_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_11_fu_495_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_9_fu_498_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_fu_512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_12_fu_550_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_10_fu_553_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_42_fu_567_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_18_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_605_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_623_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_19_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_639_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_8_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_9_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_19_fu_649_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_9_fu_657_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_20_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_673_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_9_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_10_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_21_fu_683_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_10_fu_691_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_21_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_707_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_10_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_11_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_23_fu_717_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_11_fu_725_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_18_fu_757_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_19_fu_760_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_20_fu_763_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_s_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_fu_785_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_22_fu_788_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_23_fu_792_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_22_fu_798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_24_fu_777_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_25_fu_806_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_fu_814_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_fu_818_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_822_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_27_fu_836_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal xor_ln786_9_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_22_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_12_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_27_fu_884_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_12_fu_891_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_12_fu_898_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_exp_table8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table8_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_exp_table8
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table8_address0,
        ce0 => exp_table8_ce0,
        q0 => exp_table8_q0);

    invert_table10_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table10_address0,
        ce0 => invert_table10_ce0,
        q0 => invert_table10_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_0_reg_276 <= i_reg_935;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_276 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_reg_999 <= exp_table8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_reg_999_pp0_iter2_reg <= exp_res_0_V_reg_999;
                icmp_ln196_reg_931 <= icmp_ln196_fu_317_p2;
                icmp_ln196_reg_931_pp0_iter1_reg <= icmp_ln196_reg_931;
                icmp_ln196_reg_931_pp0_iter2_reg <= icmp_ln196_reg_931_pp0_iter1_reg;
                icmp_ln196_reg_931_pp0_iter3_reg <= icmp_ln196_reg_931_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_1_V_reg_1010 <= exp_table8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                exp_res_1_V_reg_1010_pp0_iter2_reg <= exp_res_1_V_reg_1010;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                exp_res_2_V_reg_1021 <= exp_table8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                exp_res_2_V_reg_1021_pp0_iter2_reg <= exp_res_2_V_reg_1021;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                exp_res_3_V_reg_1032 <= exp_table8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                exp_res_3_V_reg_1032_pp0_iter2_reg <= exp_res_3_V_reg_1032;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_935 <= i_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln1496_7_reg_969 <= icmp_ln1496_7_fu_351_p2;
                icmp_ln1496_reg_964 <= icmp_ln1496_fu_345_p2;
                tmp_data_0_V_1_reg_940 <= data_V_data_0_V_dout;
                tmp_data_1_V_1_reg_946 <= data_V_data_1_V_dout;
                tmp_data_2_V_1_reg_952 <= data_V_data_2_V_dout;
                tmp_data_3_V_1_reg_958 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                inv_exp_sum_V_reg_1062 <= invert_table10_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                p_Result_23_reg_1037 <= ret_V_fu_822_p2(18 downto 18);
                p_Result_24_reg_1044 <= p_Val2_27_fu_836_p2(17 downto 17);
                tmp_20_reg_1051 <= p_Val2_27_fu_836_p2(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                sext_ln241_reg_1067 <= sext_ln241_fu_911_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_data_0_V_reg_1072 <= grp_fu_287_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_data_1_V_reg_1077 <= grp_fu_287_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_2_V_reg_1082 <= grp_fu_287_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_data_3_V_reg_1087 <= grp_fu_287_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                y_V_10_reg_984 <= y_V_10_fu_699_p3;
                y_V_11_reg_989 <= y_V_11_fu_733_p3;
                y_V_9_reg_979 <= y_V_9_fu_665_p3;
                y_V_reg_974 <= y_V_fu_631_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_fu_317_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln196_fu_317_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln196_fu_317_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    and_ln786_10_fu_581_p2 <= (xor_ln786_3_fu_575_p2 and tmp_41_fu_559_p3);
    and_ln786_8_fu_471_p2 <= (xor_ln786_1_fu_465_p2 and tmp_37_fu_449_p3);
    and_ln786_9_fu_526_p2 <= (xor_ln786_2_fu_520_p2 and tmp_39_fu_504_p3);
    and_ln786_fu_416_p2 <= (xor_ln786_fu_410_p2 and tmp_35_fu_394_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, io_acc_block_signal_op32)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln196_reg_931 = ap_const_lv1_0) and (io_acc_block_signal_op32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, io_acc_block_signal_op32)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln196_reg_931 = ap_const_lv1_0) and (io_acc_block_signal_op32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, io_acc_block_signal_op169)
    begin
                ap_block_pp0_stage2_01001 <= ((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op169 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, io_acc_block_signal_op169)
    begin
                ap_block_pp0_stage2_11001 <= ((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op169 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, io_acc_block_signal_op169)
    begin
                ap_block_pp0_stage2_subdone <= ((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op169 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage2_iter3_assign_proc : process(icmp_ln196_reg_931_pp0_iter3_reg, io_acc_block_signal_op169)
    begin
                ap_block_state16_pp0_stage2_iter3 <= ((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op169 = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln196_reg_931, io_acc_block_signal_op32)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln196_reg_931 = ap_const_lv1_0) and (io_acc_block_signal_op32 = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln196_fu_317_p2)
    begin
        if ((icmp_ln196_fu_317_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_280_p4_assign_proc : process(icmp_ln196_reg_931, i_0_reg_276, ap_CS_fsm_pp0_stage0, i_reg_935, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_280_p4 <= i_reg_935;
        else 
            ap_phi_mux_i_0_phi_fu_280_p4 <= i_0_reg_276;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_931)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_931)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_931)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_931)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_931, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln196_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table8_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln225_fu_741_p1, ap_block_pp0_stage3, zext_ln225_1_fu_745_p1, zext_ln225_2_fu_749_p1, zext_ln225_3_fu_753_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            exp_table8_address0 <= zext_ln225_3_fu_753_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            exp_table8_address0 <= zext_ln225_2_fu_749_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table8_address0 <= zext_ln225_1_fu_745_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            exp_table8_address0 <= zext_ln225_fu_741_p1(10 - 1 downto 0);
        else 
            exp_table8_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table8_ce0 <= ap_const_logic_1;
        else 
            exp_table8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_287_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, sext_ln241_fu_911_p1, sext_ln241_reg_1067, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_287_p0 <= sext_ln241_reg_1067(18 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_287_p0 <= sext_ln241_fu_911_p1(18 - 1 downto 0);
        else 
            grp_fu_287_p0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_287_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage3, zext_ln1118_fu_915_p1, zext_ln1118_8_fu_919_p1, zext_ln1118_9_fu_923_p1, zext_ln1118_10_fu_927_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_287_p1 <= zext_ln1118_10_fu_927_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_287_p1 <= zext_ln1118_9_fu_923_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_287_p1 <= zext_ln1118_8_fu_919_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_287_p1 <= zext_ln1118_fu_915_p1(17 - 1 downto 0);
        else 
            grp_fu_287_p1 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_287_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(grp_fu_287_p0) * signed('0' &grp_fu_287_p1))), 26));
    i_fu_323_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_280_p4) + unsigned(ap_const_lv10_1));
    icmp_ln1496_7_fu_351_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_7_fu_351_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_7_fu_351_p2 <= "1" when (signed(icmp_ln1496_7_fu_351_p0) < signed(icmp_ln1496_7_fu_351_p1)) else "0";
    icmp_ln1496_8_fu_367_p2 <= "1" when (signed(select_ln65_fu_357_p3) < signed(select_ln65_7_fu_362_p3)) else "0";
    icmp_ln1496_fu_345_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_345_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_345_p2 <= "1" when (signed(icmp_ln1496_fu_345_p0) < signed(icmp_ln1496_fu_345_p1)) else "0";
    icmp_ln196_fu_317_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_280_p4 = ap_const_lv10_2A4) else "0";
    invert_table10_address0 <= zext_ln235_fu_906_p1(10 - 1 downto 0);

    invert_table10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            invert_table10_ce0 <= ap_const_logic_1;
        else 
            invert_table10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op169 <= (res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op32 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
        lhs_V_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_fu_777_p3),19));

    or_ln340_10_fu_544_p2 <= (xor_ln340_2_fu_538_p2 or tmp_40_fu_512_p3);
    or_ln340_11_fu_599_p2 <= (xor_ln340_3_fu_593_p2 or tmp_42_fu_567_p3);
    or_ln340_12_fu_879_p2 <= (xor_ln340_9_fu_874_p2 or p_Result_24_reg_1044);
    or_ln340_9_fu_489_p2 <= (xor_ln340_1_fu_483_p2 or tmp_38_fu_457_p3);
    or_ln340_fu_434_p2 <= (xor_ln340_fu_428_p2 or tmp_36_fu_402_p3);
    p_Result_22_fu_798_p3 <= p_Val2_23_fu_792_p2(17 downto 17);
    p_Result_s_fu_769_p3 <= p_Val2_20_fu_763_p2(17 downto 17);
    p_Val2_18_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_999),18));
    p_Val2_19_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_1010),18));
    p_Val2_20_fu_763_p2 <= std_logic_vector(unsigned(p_Val2_18_fu_757_p1) + unsigned(p_Val2_19_fu_760_p1));
    p_Val2_21_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_1021),18));
    p_Val2_22_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_table8_q0),18));
    p_Val2_23_fu_792_p2 <= std_logic_vector(unsigned(p_Val2_21_fu_785_p1) + unsigned(p_Val2_22_fu_788_p1));
    p_Val2_24_fu_777_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_s_fu_769_p3(0) = '1') else 
        p_Val2_20_fu_763_p2;
    p_Val2_25_fu_806_p3 <= 
        ap_const_lv18_1FFFF when (p_Result_22_fu_798_p3(0) = '1') else 
        p_Val2_23_fu_792_p2;
    p_Val2_27_fu_836_p2 <= std_logic_vector(signed(p_Val2_25_fu_806_p3) + signed(p_Val2_24_fu_777_p3));

    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_931_pp0_iter3_reg)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1072;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_931_pp0_iter3_reg)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1077;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_931_pp0_iter3_reg)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1082;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage2, icmp_ln196_reg_931_pp0_iter3_reg)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1087;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, icmp_ln196_reg_931_pp0_iter3_reg, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln196_reg_931_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_822_p2 <= std_logic_vector(signed(lhs_V_fu_814_p1) + signed(rhs_V_fu_818_p1));
        rhs_V_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_25_fu_806_p3),19));

    select_ln340_19_fu_649_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_19_fu_477_p2(0) = '1') else 
        tmp_17_fu_639_p4;
    select_ln340_21_fu_683_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_20_fu_532_p2(0) = '1') else 
        tmp_18_fu_673_p4;
    select_ln340_23_fu_717_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_21_fu_587_p2(0) = '1') else 
        tmp_19_fu_707_p4;
    select_ln340_27_fu_884_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_22_fu_870_p2(0) = '1') else 
        tmp_20_reg_1051;
    select_ln340_fu_615_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_18_fu_422_p2(0) = '1') else 
        tmp_fu_605_p4;
    select_ln388_10_fu_691_p3 <= 
        ap_const_lv10_200 when (and_ln786_9_fu_526_p2(0) = '1') else 
        tmp_18_fu_673_p4;
    select_ln388_11_fu_725_p3 <= 
        ap_const_lv10_200 when (and_ln786_10_fu_581_p2(0) = '1') else 
        tmp_19_fu_707_p4;
    select_ln388_12_fu_891_p3 <= 
        ap_const_lv10_200 when (underflow_fu_865_p2(0) = '1') else 
        tmp_20_reg_1051;
    select_ln388_9_fu_657_p3 <= 
        ap_const_lv10_200 when (and_ln786_8_fu_471_p2(0) = '1') else 
        tmp_17_fu_639_p4;
    select_ln388_fu_623_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_416_p2(0) = '1') else 
        tmp_fu_605_p4;
    select_ln65_7_fu_362_p3 <= 
        tmp_data_3_V_1_reg_958 when (icmp_ln1496_7_reg_969(0) = '1') else 
        tmp_data_2_V_1_reg_952;
    select_ln65_fu_357_p3 <= 
        tmp_data_1_V_1_reg_946 when (icmp_ln1496_reg_964(0) = '1') else 
        tmp_data_0_V_1_reg_940;
        sext_ln241_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_1062),26));

        sext_ln703_10_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_1_V_1_reg_946),17));

        sext_ln703_11_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_2_V_1_reg_952),17));

        sext_ln703_12_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_1_reg_958),17));

        sext_ln703_9_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_373_p3),17));

        sext_ln703_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_1_reg_940),17));

    sub_ln1193_10_fu_553_p2 <= std_logic_vector(signed(sext_ln703_12_fu_550_p1) - signed(sext_ln703_9_fu_384_p1));
    sub_ln1193_8_fu_443_p2 <= std_logic_vector(signed(sext_ln703_10_fu_440_p1) - signed(sext_ln703_9_fu_384_p1));
    sub_ln1193_9_fu_498_p2 <= std_logic_vector(signed(sext_ln703_11_fu_495_p1) - signed(sext_ln703_9_fu_384_p1));
    sub_ln1193_fu_388_p2 <= std_logic_vector(signed(sext_ln703_fu_381_p1) - signed(sext_ln703_9_fu_384_p1));
    tmp_17_fu_639_p4 <= sub_ln1193_8_fu_443_p2(15 downto 6);
    tmp_18_fu_673_p4 <= sub_ln1193_9_fu_498_p2(15 downto 6);
    tmp_19_fu_707_p4 <= sub_ln1193_10_fu_553_p2(15 downto 6);
    tmp_35_fu_394_p3 <= sub_ln1193_fu_388_p2(16 downto 16);
    tmp_36_fu_402_p3 <= sub_ln1193_fu_388_p2(15 downto 15);
    tmp_37_fu_449_p3 <= sub_ln1193_8_fu_443_p2(16 downto 16);
    tmp_38_fu_457_p3 <= sub_ln1193_8_fu_443_p2(15 downto 15);
    tmp_39_fu_504_p3 <= sub_ln1193_9_fu_498_p2(16 downto 16);
    tmp_40_fu_512_p3 <= sub_ln1193_9_fu_498_p2(15 downto 15);
    tmp_41_fu_559_p3 <= sub_ln1193_10_fu_553_p2(16 downto 16);
    tmp_42_fu_567_p3 <= sub_ln1193_10_fu_553_p2(15 downto 15);
    tmp_fu_605_p4 <= sub_ln1193_fu_388_p2(15 downto 6);
    underflow_fu_865_p2 <= (xor_ln786_9_fu_860_p2 and p_Result_23_reg_1037);
    x_max_V_fu_373_p3 <= 
        select_ln65_7_fu_362_p3 when (icmp_ln1496_8_fu_367_p2(0) = '1') else 
        select_ln65_fu_357_p3;
    xor_ln340_18_fu_422_p2 <= (tmp_36_fu_402_p3 xor tmp_35_fu_394_p3);
    xor_ln340_19_fu_477_p2 <= (tmp_38_fu_457_p3 xor tmp_37_fu_449_p3);
    xor_ln340_1_fu_483_p2 <= (tmp_37_fu_449_p3 xor ap_const_lv1_1);
    xor_ln340_20_fu_532_p2 <= (tmp_40_fu_512_p3 xor tmp_39_fu_504_p3);
    xor_ln340_21_fu_587_p2 <= (tmp_42_fu_567_p3 xor tmp_41_fu_559_p3);
    xor_ln340_22_fu_870_p2 <= (p_Result_24_reg_1044 xor p_Result_23_reg_1037);
    xor_ln340_2_fu_538_p2 <= (tmp_39_fu_504_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_593_p2 <= (tmp_41_fu_559_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_874_p2 <= (p_Result_23_reg_1037 xor ap_const_lv1_1);
    xor_ln340_fu_428_p2 <= (tmp_35_fu_394_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_465_p2 <= (tmp_38_fu_457_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_520_p2 <= (tmp_40_fu_512_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_575_p2 <= (tmp_42_fu_567_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_860_p2 <= (p_Result_24_reg_1044 xor ap_const_lv1_1);
    xor_ln786_fu_410_p2 <= (tmp_36_fu_402_p3 xor ap_const_lv1_1);
    y_V_10_fu_699_p3 <= 
        select_ln340_21_fu_683_p3 when (or_ln340_10_fu_544_p2(0) = '1') else 
        select_ln388_10_fu_691_p3;
    y_V_11_fu_733_p3 <= 
        select_ln340_23_fu_717_p3 when (or_ln340_11_fu_599_p2(0) = '1') else 
        select_ln388_11_fu_725_p3;
    y_V_12_fu_898_p3 <= 
        select_ln340_27_fu_884_p3 when (or_ln340_12_fu_879_p2(0) = '1') else 
        select_ln388_12_fu_891_p3;
    y_V_9_fu_665_p3 <= 
        select_ln340_19_fu_649_p3 when (or_ln340_9_fu_489_p2(0) = '1') else 
        select_ln388_9_fu_657_p3;
    y_V_fu_631_p3 <= 
        select_ln340_fu_615_p3 when (or_ln340_fu_434_p2(0) = '1') else 
        select_ln388_fu_623_p3;
    zext_ln1118_10_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_reg_1032_pp0_iter2_reg),26));
    zext_ln1118_8_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_reg_1010_pp0_iter2_reg),26));
    zext_ln1118_9_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_reg_1021_pp0_iter2_reg),26));
    zext_ln1118_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_reg_999_pp0_iter2_reg),26));
    zext_ln225_1_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_9_reg_979),64));
    zext_ln225_2_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_10_reg_984),64));
    zext_ln225_3_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_11_reg_989),64));
    zext_ln225_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_974),64));
    zext_ln235_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_12_fu_898_p3),64));
end behav;
