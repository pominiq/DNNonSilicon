// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state19 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [15:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [15:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [15:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [15:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] exp_table4_address0;
reg    exp_table4_ce0;
wire   [16:0] exp_table4_q0;
reg   [9:0] exp_table4_address1;
reg    exp_table4_ce1;
wire   [16:0] exp_table4_q1;
wire   [9:0] invert_table6_address0;
reg    invert_table6_ce0;
wire   [17:0] invert_table6_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln196_reg_1693;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln196_reg_1693_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [4:0] i_0_reg_480;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    io_acc_block_signal_op293;
reg    ap_block_state18_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln196_fu_584_p2;
reg   [0:0] icmp_ln196_reg_1693_pp0_iter1_reg;
reg   [0:0] icmp_ln196_reg_1693_pp0_iter2_reg;
wire   [4:0] i_fu_590_p2;
reg   [4:0] i_reg_1697;
reg  signed [15:0] data_array_0_V_reg_1702;
wire    io_acc_block_signal_op50;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg  signed [15:0] data_array_1_V_reg_1708;
reg  signed [15:0] data_array_2_V_reg_1714;
reg  signed [15:0] data_array_3_V_reg_1720;
reg  signed [15:0] data_array_4_V_reg_1726;
reg  signed [15:0] data_array_5_V_reg_1732;
reg  signed [15:0] data_array_6_V_reg_1738;
reg  signed [15:0] data_array_7_V_reg_1744;
wire   [0:0] icmp_ln1496_fu_628_p2;
reg   [0:0] icmp_ln1496_reg_1750;
wire   [0:0] icmp_ln1496_1_fu_634_p2;
reg   [0:0] icmp_ln1496_1_reg_1755;
wire   [0:0] icmp_ln1496_3_fu_640_p2;
reg   [0:0] icmp_ln1496_3_reg_1760;
wire   [0:0] icmp_ln1496_4_fu_646_p2;
reg   [0:0] icmp_ln1496_4_reg_1765;
wire   [15:0] x_max_V_fu_706_p3;
reg   [15:0] x_max_V_reg_1770;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_state16_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_state17_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] y_V_2_fu_1261_p3;
reg   [9:0] y_V_2_reg_1785;
wire   [9:0] y_V_3_fu_1295_p3;
reg   [9:0] y_V_3_reg_1790;
wire   [9:0] y_V_4_fu_1329_p3;
reg   [9:0] y_V_4_reg_1795;
wire   [9:0] y_V_5_fu_1363_p3;
reg   [9:0] y_V_5_reg_1800;
wire   [9:0] y_V_6_fu_1397_p3;
reg   [9:0] y_V_6_reg_1805;
wire   [9:0] y_V_7_fu_1431_p3;
reg   [9:0] y_V_7_reg_1810;
reg   [16:0] exp_res_0_V_1_reg_1815;
reg    ap_enable_reg_pp0_iter1;
reg   [16:0] exp_res_0_V_1_reg_1815_pp0_iter2_reg;
reg   [16:0] exp_res_1_V_1_reg_1821;
reg   [16:0] exp_res_1_V_1_reg_1821_pp0_iter2_reg;
reg   [16:0] exp_res_2_V_1_reg_1837;
reg   [16:0] exp_res_2_V_1_reg_1837_pp0_iter2_reg;
reg   [16:0] exp_res_3_V_1_reg_1843;
reg   [16:0] exp_res_3_V_1_reg_1843_pp0_iter2_reg;
reg   [16:0] exp_res_4_V_1_reg_1859;
reg   [16:0] exp_res_4_V_1_reg_1859_pp0_iter2_reg;
reg   [16:0] exp_res_5_V_1_reg_1864;
reg   [16:0] exp_res_5_V_1_reg_1864_pp0_iter2_reg;
reg   [16:0] exp_res_6_V_1_reg_1879;
reg   [16:0] exp_res_6_V_1_reg_1879_pp0_iter2_reg;
reg   [16:0] exp_res_7_V_1_reg_1884;
reg   [16:0] exp_res_7_V_1_reg_1884_pp0_iter2_reg;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return;
reg  signed [17:0] p_Val2_9_reg_1889;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return;
reg  signed [17:0] p_Val2_1_reg_1895;
reg   [17:0] inv_exp_sum_V_reg_1906;
wire  signed [25:0] sext_ln241_fu_1600_p1;
reg  signed [25:0] sext_ln241_reg_1911;
reg   [15:0] tmp_data_0_V_reg_1917;
reg    ap_enable_reg_pp0_iter3;
reg   [15:0] tmp_data_1_V_reg_1922;
reg   [15:0] tmp_data_2_V_reg_1927;
reg   [15:0] tmp_data_3_V_reg_1932;
reg   [15:0] tmp_data_4_V_reg_1937;
reg   [15:0] tmp_data_5_V_reg_1942;
reg   [15:0] tmp_data_6_V_reg_1947;
reg   [15:0] tmp_data_7_V_reg_1952;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_done;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_idle;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call163;
wire    ap_block_state6_pp0_stage0_iter1_ignore_call163;
wire    ap_block_state10_pp0_stage0_iter2_ignore_call163;
wire    ap_block_state14_pp0_stage0_iter3_ignore_call163;
reg    ap_block_state18_pp0_stage0_iter4_ignore_call163;
reg    ap_block_pp0_stage0_11001_ignoreCallOp218;
reg    ap_block_state3_pp0_stage1_iter0_ignore_call163;
wire    ap_block_state7_pp0_stage1_iter1_ignore_call163;
wire    ap_block_state11_pp0_stage1_iter2_ignore_call163;
wire    ap_block_state15_pp0_stage1_iter3_ignore_call163;
reg    ap_block_pp0_stage1_11001_ignoreCallOp220;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_done;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_idle;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call164;
wire    ap_block_state6_pp0_stage0_iter1_ignore_call164;
wire    ap_block_state10_pp0_stage0_iter2_ignore_call164;
wire    ap_block_state14_pp0_stage0_iter3_ignore_call164;
reg    ap_block_state18_pp0_stage0_iter4_ignore_call164;
reg    ap_block_pp0_stage0_11001_ignoreCallOp219;
reg    ap_block_state3_pp0_stage1_iter0_ignore_call164;
wire    ap_block_state7_pp0_stage1_iter1_ignore_call164;
wire    ap_block_state11_pp0_stage1_iter2_ignore_call164;
wire    ap_block_state15_pp0_stage1_iter3_ignore_call164;
reg    ap_block_pp0_stage1_11001_ignoreCallOp221;
reg   [4:0] ap_phi_mux_i_0_phi_fu_484_p4;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg;
reg   [16:0] exp_res_0_V_fu_342;
reg   [16:0] exp_res_1_V_fu_338;
reg   [16:0] exp_res_2_V_fu_334;
reg   [16:0] exp_res_3_V_fu_330;
reg   [16:0] exp_res_4_V_fu_326;
reg   [16:0] exp_res_5_V_fu_322;
reg   [16:0] exp_res_6_V_fu_318;
reg   [16:0] exp_res_7_V_fu_314;
reg    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg;
wire   [63:0] zext_ln225_fu_1191_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln225_1_fu_1230_p1;
wire   [63:0] zext_ln225_2_fu_1439_p1;
wire   [63:0] zext_ln225_3_fu_1443_p1;
wire   [63:0] zext_ln225_4_fu_1447_p1;
wire   [63:0] zext_ln225_5_fu_1451_p1;
wire   [63:0] zext_ln225_6_fu_1481_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln225_7_fu_1485_p1;
wire   [63:0] zext_ln235_fu_1595_p1;
reg    ap_block_pp0_stage0_01001;
reg   [16:0] grp_fu_491_p0;
wire   [25:0] zext_ln1118_fu_1605_p1;
wire   [25:0] zext_ln1118_2_fu_1613_p1;
wire   [25:0] zext_ln1118_4_fu_1621_p1;
wire   [25:0] zext_ln1118_6_fu_1629_p1;
reg  signed [17:0] grp_fu_491_p1;
reg   [16:0] grp_fu_492_p0;
wire   [25:0] zext_ln1118_1_fu_1609_p1;
wire   [25:0] zext_ln1118_3_fu_1617_p1;
wire   [25:0] zext_ln1118_5_fu_1625_p1;
wire   [25:0] zext_ln1118_7_fu_1633_p1;
reg  signed [17:0] grp_fu_492_p1;
wire   [25:0] grp_fu_491_p2;
wire   [25:0] grp_fu_492_p2;
wire  signed [15:0] icmp_ln1496_fu_628_p0;
wire  signed [15:0] icmp_ln1496_fu_628_p1;
wire  signed [15:0] icmp_ln1496_1_fu_634_p0;
wire  signed [15:0] icmp_ln1496_1_fu_634_p1;
wire  signed [15:0] icmp_ln1496_3_fu_640_p0;
wire  signed [15:0] icmp_ln1496_3_fu_640_p1;
wire  signed [15:0] icmp_ln1496_4_fu_646_p0;
wire  signed [15:0] icmp_ln1496_4_fu_646_p1;
wire   [15:0] select_ln65_fu_652_p3;
wire   [15:0] select_ln65_1_fu_657_p3;
wire   [0:0] icmp_ln1496_2_fu_662_p2;
wire   [15:0] select_ln65_3_fu_676_p3;
wire   [15:0] select_ln65_4_fu_681_p3;
wire   [0:0] icmp_ln1496_5_fu_686_p2;
wire   [15:0] select_ln65_2_fu_668_p3;
wire   [15:0] select_ln65_5_fu_692_p3;
wire   [0:0] icmp_ln1496_6_fu_700_p2;
wire  signed [16:0] sext_ln703_fu_714_p1;
wire  signed [16:0] sext_ln703_1_fu_717_p1;
wire   [16:0] sub_ln1193_fu_720_p2;
wire   [0:0] tmp_18_fu_734_p3;
wire   [0:0] tmp_17_fu_726_p3;
wire   [0:0] xor_ln786_fu_742_p2;
wire   [0:0] xor_ln340_fu_760_p2;
wire  signed [16:0] sext_ln703_2_fu_772_p1;
wire   [16:0] sub_ln1193_1_fu_775_p2;
wire   [0:0] tmp_20_fu_789_p3;
wire   [0:0] tmp_19_fu_781_p3;
wire   [0:0] xor_ln786_1_fu_797_p2;
wire   [0:0] xor_ln340_1_fu_815_p2;
wire  signed [16:0] sext_ln703_3_fu_827_p1;
wire   [16:0] sub_ln1193_2_fu_830_p2;
wire   [0:0] tmp_22_fu_844_p3;
wire   [0:0] tmp_21_fu_836_p3;
wire   [0:0] xor_ln786_2_fu_852_p2;
wire   [0:0] xor_ln340_2_fu_870_p2;
wire  signed [16:0] sext_ln703_4_fu_882_p1;
wire   [16:0] sub_ln1193_3_fu_885_p2;
wire   [0:0] tmp_24_fu_899_p3;
wire   [0:0] tmp_23_fu_891_p3;
wire   [0:0] xor_ln786_3_fu_907_p2;
wire   [0:0] xor_ln340_3_fu_925_p2;
wire  signed [16:0] sext_ln703_5_fu_937_p1;
wire   [16:0] sub_ln1193_4_fu_940_p2;
wire   [0:0] tmp_26_fu_954_p3;
wire   [0:0] tmp_25_fu_946_p3;
wire   [0:0] xor_ln786_4_fu_962_p2;
wire   [0:0] xor_ln340_4_fu_980_p2;
wire  signed [16:0] sext_ln703_6_fu_992_p1;
wire   [16:0] sub_ln1193_5_fu_995_p2;
wire   [0:0] tmp_28_fu_1009_p3;
wire   [0:0] tmp_27_fu_1001_p3;
wire   [0:0] xor_ln786_5_fu_1017_p2;
wire   [0:0] xor_ln340_5_fu_1035_p2;
wire  signed [16:0] sext_ln703_7_fu_1047_p1;
wire   [16:0] sub_ln1193_6_fu_1050_p2;
wire   [0:0] tmp_30_fu_1064_p3;
wire   [0:0] tmp_29_fu_1056_p3;
wire   [0:0] xor_ln786_6_fu_1072_p2;
wire   [0:0] xor_ln340_6_fu_1090_p2;
wire  signed [16:0] sext_ln703_8_fu_1102_p1;
wire   [16:0] sub_ln1193_7_fu_1105_p2;
wire   [0:0] tmp_32_fu_1119_p3;
wire   [0:0] tmp_31_fu_1111_p3;
wire   [0:0] xor_ln786_7_fu_1127_p2;
wire   [0:0] xor_ln340_7_fu_1145_p2;
wire   [0:0] xor_ln340_9_fu_754_p2;
wire   [9:0] tmp_fu_1157_p4;
wire   [0:0] and_ln786_fu_748_p2;
wire   [0:0] or_ln340_fu_766_p2;
wire   [9:0] select_ln340_fu_1167_p3;
wire   [9:0] select_ln388_fu_1175_p3;
wire   [9:0] y_V_fu_1183_p3;
wire   [0:0] xor_ln340_10_fu_809_p2;
wire   [9:0] tmp_s_fu_1196_p4;
wire   [0:0] and_ln786_1_fu_803_p2;
wire   [0:0] or_ln340_1_fu_821_p2;
wire   [9:0] select_ln340_2_fu_1206_p3;
wire   [9:0] select_ln388_1_fu_1214_p3;
wire   [9:0] y_V_1_fu_1222_p3;
wire   [0:0] xor_ln340_11_fu_864_p2;
wire   [9:0] tmp_10_fu_1235_p4;
wire   [0:0] and_ln786_2_fu_858_p2;
wire   [0:0] or_ln340_2_fu_876_p2;
wire   [9:0] select_ln340_4_fu_1245_p3;
wire   [9:0] select_ln388_2_fu_1253_p3;
wire   [0:0] xor_ln340_12_fu_919_p2;
wire   [9:0] tmp_11_fu_1269_p4;
wire   [0:0] and_ln786_3_fu_913_p2;
wire   [0:0] or_ln340_3_fu_931_p2;
wire   [9:0] select_ln340_6_fu_1279_p3;
wire   [9:0] select_ln388_3_fu_1287_p3;
wire   [0:0] xor_ln340_13_fu_974_p2;
wire   [9:0] tmp_12_fu_1303_p4;
wire   [0:0] and_ln786_4_fu_968_p2;
wire   [0:0] or_ln340_4_fu_986_p2;
wire   [9:0] select_ln340_8_fu_1313_p3;
wire   [9:0] select_ln388_4_fu_1321_p3;
wire   [0:0] xor_ln340_14_fu_1029_p2;
wire   [9:0] tmp_13_fu_1337_p4;
wire   [0:0] and_ln786_5_fu_1023_p2;
wire   [0:0] or_ln340_5_fu_1041_p2;
wire   [9:0] select_ln340_10_fu_1347_p3;
wire   [9:0] select_ln388_5_fu_1355_p3;
wire   [0:0] xor_ln340_15_fu_1084_p2;
wire   [9:0] tmp_14_fu_1371_p4;
wire   [0:0] and_ln786_6_fu_1078_p2;
wire   [0:0] or_ln340_6_fu_1096_p2;
wire   [9:0] select_ln340_12_fu_1381_p3;
wire   [9:0] select_ln388_6_fu_1389_p3;
wire   [0:0] xor_ln340_16_fu_1139_p2;
wire   [9:0] tmp_15_fu_1405_p4;
wire   [0:0] and_ln786_7_fu_1133_p2;
wire   [0:0] or_ln340_7_fu_1151_p2;
wire   [9:0] select_ln340_14_fu_1415_p3;
wire   [9:0] select_ln388_7_fu_1423_p3;
wire  signed [18:0] rhs_V_fu_1502_p1;
wire  signed [18:0] lhs_V_fu_1499_p1;
wire   [18:0] ret_V_fu_1505_p2;
wire   [17:0] p_Val2_12_fu_1519_p2;
wire   [0:0] p_Result_12_fu_1523_p3;
wire   [0:0] p_Result_s_fu_1511_p3;
wire   [0:0] xor_ln786_8_fu_1531_p2;
wire   [0:0] xor_ln340_8_fu_1549_p2;
wire   [0:0] xor_ln340_17_fu_1543_p2;
wire   [9:0] tmp_16_fu_1561_p4;
wire   [0:0] underflow_fu_1537_p2;
wire   [0:0] or_ln340_8_fu_1555_p2;
wire   [9:0] select_ln340_16_fu_1571_p3;
wire   [9:0] select_ln388_8_fu_1579_p3;
wire   [9:0] y_V_8_fu_1587_p3;
wire    ap_CS_fsm_state19;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg = 1'b0;
#0 grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg = 1'b0;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table4 #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table4_address0),
    .ce0(exp_table4_ce0),
    .q0(exp_table4_q0),
    .address1(exp_table4_address1),
    .ce1(exp_table4_ce1),
    .q1(exp_table4_q1)
);

softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table6_address0),
    .ce0(invert_table6_ce0),
    .q0(invert_table6_q0)
);

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2 grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start),
    .ap_done(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_done),
    .ap_idle(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready),
    .x_0_V(exp_res_0_V_fu_342),
    .x_1_V(exp_res_1_V_fu_338),
    .x_2_V(exp_res_2_V_fu_334),
    .x_3_V(exp_res_3_V_fu_330),
    .x_4_V(exp_res_4_V_fu_326),
    .x_5_V(exp_res_5_V_fu_322),
    .x_6_V(exp_res_6_V_fu_318),
    .x_7_V(exp_res_7_V_fu_314),
    .x_V_offset(5'd0),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce)
);

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2 grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start),
    .ap_done(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_done),
    .ap_idle(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_idle),
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready),
    .x_0_V(exp_res_0_V_fu_342),
    .x_1_V(exp_res_1_V_fu_338),
    .x_2_V(exp_res_2_V_fu_334),
    .x_3_V(exp_res_3_V_fu_330),
    .x_4_V(exp_res_4_V_fu_326),
    .x_5_V(exp_res_5_V_fu_322),
    .x_6_V(exp_res_6_V_fu_318),
    .x_7_V(exp_res_7_V_fu_314),
    .x_V_offset(5'd4),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return),
    .ap_ce(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693_pp0_iter1_reg == 1'd0))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693_pp0_iter1_reg == 1'd0))) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready == 1'b1)) begin
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693 == 1'd0))) begin
        i_0_reg_480 <= i_reg_1697;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_480 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_array_0_V_reg_1702 <= data_V_data_0_V_dout;
        data_array_1_V_reg_1708 <= data_V_data_1_V_dout;
        data_array_2_V_reg_1714 <= data_V_data_2_V_dout;
        data_array_3_V_reg_1720 <= data_V_data_3_V_dout;
        data_array_4_V_reg_1726 <= data_V_data_4_V_dout;
        data_array_5_V_reg_1732 <= data_V_data_5_V_dout;
        data_array_6_V_reg_1738 <= data_V_data_6_V_dout;
        data_array_7_V_reg_1744 <= data_V_data_7_V_dout;
        icmp_ln1496_1_reg_1755 <= icmp_ln1496_1_fu_634_p2;
        icmp_ln1496_3_reg_1760 <= icmp_ln1496_3_fu_640_p2;
        icmp_ln1496_4_reg_1765 <= icmp_ln1496_4_fu_646_p2;
        icmp_ln1496_reg_1750 <= icmp_ln1496_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693 == 1'd0))) begin
        exp_res_0_V_1_reg_1815 <= exp_table4_q0;
        exp_res_1_V_1_reg_1821 <= exp_table4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_0_V_1_reg_1815_pp0_iter2_reg <= exp_res_0_V_1_reg_1815;
        exp_res_1_V_1_reg_1821_pp0_iter2_reg <= exp_res_1_V_1_reg_1821;
        icmp_ln196_reg_1693 <= icmp_ln196_fu_584_p2;
        icmp_ln196_reg_1693_pp0_iter1_reg <= icmp_ln196_reg_1693;
        icmp_ln196_reg_1693_pp0_iter2_reg <= icmp_ln196_reg_1693_pp0_iter1_reg;
        icmp_ln196_reg_1693_pp0_iter3_reg <= icmp_ln196_reg_1693_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1693_pp0_iter1_reg == 1'd0))) begin
        exp_res_0_V_fu_342 <= exp_res_0_V_1_reg_1815;
        exp_res_1_V_fu_338 <= exp_res_1_V_1_reg_1821;
        exp_res_2_V_fu_334 <= exp_res_2_V_1_reg_1837;
        exp_res_3_V_fu_330 <= exp_res_3_V_1_reg_1843;
        exp_res_4_V_1_reg_1859 <= exp_table4_q0;
        exp_res_4_V_fu_326 <= exp_table4_q0;
        exp_res_5_V_1_reg_1864 <= exp_table4_q1;
        exp_res_5_V_fu_322 <= exp_table4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693_pp0_iter1_reg == 1'd0))) begin
        exp_res_2_V_1_reg_1837 <= exp_table4_q0;
        exp_res_3_V_1_reg_1843 <= exp_table4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_2_V_1_reg_1837_pp0_iter2_reg <= exp_res_2_V_1_reg_1837;
        exp_res_3_V_1_reg_1843_pp0_iter2_reg <= exp_res_3_V_1_reg_1843;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_4_V_1_reg_1859_pp0_iter2_reg <= exp_res_4_V_1_reg_1859;
        exp_res_5_V_1_reg_1864_pp0_iter2_reg <= exp_res_5_V_1_reg_1864;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693_pp0_iter1_reg == 1'd0))) begin
        exp_res_6_V_1_reg_1879 <= exp_table4_q0;
        exp_res_6_V_fu_318 <= exp_table4_q0;
        exp_res_7_V_1_reg_1884 <= exp_table4_q1;
        exp_res_7_V_fu_314 <= exp_table4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_6_V_1_reg_1879_pp0_iter2_reg <= exp_res_6_V_1_reg_1879;
        exp_res_7_V_1_reg_1884_pp0_iter2_reg <= exp_res_7_V_1_reg_1884;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_1697 <= i_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693_pp0_iter2_reg == 1'd0))) begin
        inv_exp_sum_V_reg_1906 <= invert_table6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693_pp0_iter2_reg == 1'd0))) begin
        p_Val2_1_reg_1895 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return;
        p_Val2_9_reg_1889 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter2_reg == 1'd0))) begin
        sext_ln241_reg_1911 <= sext_ln241_fu_1600_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter2_reg == 1'd0))) begin
        tmp_data_0_V_reg_1917 <= {{grp_fu_491_p2[25:10]}};
        tmp_data_1_V_reg_1922 <= {{grp_fu_492_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        tmp_data_2_V_reg_1927 <= {{grp_fu_491_p2[25:10]}};
        tmp_data_3_V_reg_1932 <= {{grp_fu_492_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        tmp_data_4_V_reg_1937 <= {{grp_fu_491_p2[25:10]}};
        tmp_data_5_V_reg_1942 <= {{grp_fu_492_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        tmp_data_6_V_reg_1947 <= {{grp_fu_491_p2[25:10]}};
        tmp_data_7_V_reg_1952 <= {{grp_fu_492_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln196_reg_1693 == 1'd0))) begin
        x_max_V_reg_1770 <= x_max_V_fu_706_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln196_reg_1693 == 1'd0))) begin
        y_V_2_reg_1785 <= y_V_2_fu_1261_p3;
        y_V_3_reg_1790 <= y_V_3_fu_1295_p3;
        y_V_4_reg_1795 <= y_V_4_fu_1329_p3;
        y_V_5_reg_1800 <= y_V_5_fu_1363_p3;
        y_V_6_reg_1805 <= y_V_6_fu_1397_p3;
        y_V_7_reg_1810 <= y_V_7_fu_1431_p3;
    end
end

always @ (*) begin
    if ((icmp_ln196_fu_584_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_484_p4 = i_reg_1697;
    end else begin
        ap_phi_mux_i_0_phi_fu_484_p4 = i_0_reg_480;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln196_reg_1693 == 1'd0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table4_address0 = zext_ln225_6_fu_1481_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        exp_table4_address0 = zext_ln225_4_fu_1447_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        exp_table4_address0 = zext_ln225_2_fu_1439_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table4_address0 = zext_ln225_fu_1191_p1;
    end else begin
        exp_table4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table4_address1 = zext_ln225_7_fu_1485_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        exp_table4_address1 = zext_ln225_5_fu_1451_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        exp_table4_address1 = zext_ln225_3_fu_1443_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        exp_table4_address1 = zext_ln225_1_fu_1230_p1;
    end else begin
        exp_table4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        exp_table4_ce0 = 1'b1;
    end else begin
        exp_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        exp_table4_ce1 = 1'b1;
    end else begin
        exp_table4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_491_p0 = zext_ln1118_6_fu_1629_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_491_p0 = zext_ln1118_4_fu_1621_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_491_p0 = zext_ln1118_2_fu_1613_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_491_p0 = zext_ln1118_fu_1605_p1;
        end else begin
            grp_fu_491_p0 = 'bx;
        end
    end else begin
        grp_fu_491_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_491_p1 = sext_ln241_reg_1911;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_491_p1 = sext_ln241_fu_1600_p1;
    end else begin
        grp_fu_491_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_492_p0 = zext_ln1118_7_fu_1633_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_492_p0 = zext_ln1118_5_fu_1625_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_492_p0 = zext_ln1118_3_fu_1617_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_492_p0 = zext_ln1118_1_fu_1609_p1;
        end else begin
            grp_fu_492_p0 = 'bx;
        end
    end else begin
        grp_fu_492_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_492_p1 = sext_ln241_reg_1911;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_492_p1 = sext_ln241_fu_1600_p1;
    end else begin
        grp_fu_492_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp218) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp220) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp219) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp221) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce = 1'b1;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        invert_table6_ce0 = 1'b1;
    end else begin
        invert_table6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_fu_584_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_fu_584_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln786_1_fu_803_p2 = (xor_ln786_1_fu_797_p2 & tmp_19_fu_781_p3);

assign and_ln786_2_fu_858_p2 = (xor_ln786_2_fu_852_p2 & tmp_21_fu_836_p3);

assign and_ln786_3_fu_913_p2 = (xor_ln786_3_fu_907_p2 & tmp_23_fu_891_p3);

assign and_ln786_4_fu_968_p2 = (xor_ln786_4_fu_962_p2 & tmp_25_fu_946_p3);

assign and_ln786_5_fu_1023_p2 = (xor_ln786_5_fu_1017_p2 & tmp_27_fu_1001_p3);

assign and_ln786_6_fu_1078_p2 = (xor_ln786_6_fu_1072_p2 & tmp_29_fu_1056_p3);

assign and_ln786_7_fu_1133_p2 = (xor_ln786_7_fu_1127_p2 & tmp_31_fu_1111_p3);

assign and_ln786_fu_748_p2 = (xor_ln786_fu_742_p2 & tmp_17_fu_726_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((io_acc_block_signal_op293 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op293 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp218 = ((io_acc_block_signal_op293 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp219 = ((io_acc_block_signal_op293 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op293 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((io_acc_block_signal_op50 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1693 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp220 = ((io_acc_block_signal_op50 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1693 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp221 = ((io_acc_block_signal_op50 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1693 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((io_acc_block_signal_op50 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln196_reg_1693 == 1'd0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter4 = ((io_acc_block_signal_op293 == 1'b0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter4_ignore_call163 = ((io_acc_block_signal_op293 == 1'b0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter4_ignore_call164 = ((io_acc_block_signal_op293 == 1'b0) & (icmp_ln196_reg_1693_pp0_iter3_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call164 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((io_acc_block_signal_op50 == 1'b0) & (icmp_ln196_reg_1693 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0_ignore_call163 = ((io_acc_block_signal_op50 == 1'b0) & (icmp_ln196_reg_1693 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0_ignore_call164 = ((io_acc_block_signal_op50 == 1'b0) & (icmp_ln196_reg_1693 == 1'd0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1_ignore_call163 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1_ignore_call164 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_491_p2 = ($signed({{1'b0}, {grp_fu_491_p0}}) * $signed(grp_fu_491_p1));

assign grp_fu_492_p2 = ($signed({{1'b0}, {grp_fu_492_p0}}) * $signed(grp_fu_492_p1));

assign grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg;

assign grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg;

assign i_fu_590_p2 = (ap_phi_mux_i_0_phi_fu_484_p4 + 5'd1);

assign icmp_ln1496_1_fu_634_p0 = data_V_data_2_V_dout;

assign icmp_ln1496_1_fu_634_p1 = data_V_data_3_V_dout;

assign icmp_ln1496_1_fu_634_p2 = (($signed(icmp_ln1496_1_fu_634_p0) < $signed(icmp_ln1496_1_fu_634_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_662_p2 = (($signed(select_ln65_fu_652_p3) < $signed(select_ln65_1_fu_657_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_640_p0 = data_V_data_4_V_dout;

assign icmp_ln1496_3_fu_640_p1 = data_V_data_5_V_dout;

assign icmp_ln1496_3_fu_640_p2 = (($signed(icmp_ln1496_3_fu_640_p0) < $signed(icmp_ln1496_3_fu_640_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_646_p0 = data_V_data_6_V_dout;

assign icmp_ln1496_4_fu_646_p1 = data_V_data_7_V_dout;

assign icmp_ln1496_4_fu_646_p2 = (($signed(icmp_ln1496_4_fu_646_p0) < $signed(icmp_ln1496_4_fu_646_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_686_p2 = (($signed(select_ln65_3_fu_676_p3) < $signed(select_ln65_4_fu_681_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_700_p2 = (($signed(select_ln65_2_fu_668_p3) < $signed(select_ln65_5_fu_692_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_628_p0 = data_V_data_0_V_dout;

assign icmp_ln1496_fu_628_p1 = data_V_data_1_V_dout;

assign icmp_ln1496_fu_628_p2 = (($signed(icmp_ln1496_fu_628_p0) < $signed(icmp_ln1496_fu_628_p1)) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_584_p2 = ((ap_phi_mux_i_0_phi_fu_484_p4 == 5'd16) ? 1'b1 : 1'b0);

assign invert_table6_address0 = zext_ln235_fu_1595_p1;

assign io_acc_block_signal_op293 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op50 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_fu_1499_p1 = p_Val2_9_reg_1889;

assign or_ln340_1_fu_821_p2 = (xor_ln340_1_fu_815_p2 | tmp_20_fu_789_p3);

assign or_ln340_2_fu_876_p2 = (xor_ln340_2_fu_870_p2 | tmp_22_fu_844_p3);

assign or_ln340_3_fu_931_p2 = (xor_ln340_3_fu_925_p2 | tmp_24_fu_899_p3);

assign or_ln340_4_fu_986_p2 = (xor_ln340_4_fu_980_p2 | tmp_26_fu_954_p3);

assign or_ln340_5_fu_1041_p2 = (xor_ln340_5_fu_1035_p2 | tmp_28_fu_1009_p3);

assign or_ln340_6_fu_1096_p2 = (xor_ln340_6_fu_1090_p2 | tmp_30_fu_1064_p3);

assign or_ln340_7_fu_1151_p2 = (xor_ln340_7_fu_1145_p2 | tmp_32_fu_1119_p3);

assign or_ln340_8_fu_1555_p2 = (xor_ln340_8_fu_1549_p2 | p_Result_12_fu_1523_p3);

assign or_ln340_fu_766_p2 = (xor_ln340_fu_760_p2 | tmp_18_fu_734_p3);

assign p_Result_12_fu_1523_p3 = p_Val2_12_fu_1519_p2[32'd17];

assign p_Result_s_fu_1511_p3 = ret_V_fu_1505_p2[32'd18];

assign p_Val2_12_fu_1519_p2 = ($signed(p_Val2_9_reg_1889) + $signed(p_Val2_1_reg_1895));

assign res_V_data_0_V_din = tmp_data_0_V_reg_1917;

assign res_V_data_1_V_din = tmp_data_1_V_reg_1922;

assign res_V_data_2_V_din = tmp_data_2_V_reg_1927;

assign res_V_data_3_V_din = tmp_data_3_V_reg_1932;

assign res_V_data_4_V_din = tmp_data_4_V_reg_1937;

assign res_V_data_5_V_din = tmp_data_5_V_reg_1942;

assign res_V_data_6_V_din = tmp_data_6_V_reg_1947;

assign res_V_data_7_V_din = tmp_data_7_V_reg_1952;

assign ret_V_fu_1505_p2 = ($signed(rhs_V_fu_1502_p1) + $signed(lhs_V_fu_1499_p1));

assign rhs_V_fu_1502_p1 = p_Val2_1_reg_1895;

assign select_ln340_10_fu_1347_p3 = ((xor_ln340_14_fu_1029_p2[0:0] === 1'b1) ? 10'd511 : tmp_13_fu_1337_p4);

assign select_ln340_12_fu_1381_p3 = ((xor_ln340_15_fu_1084_p2[0:0] === 1'b1) ? 10'd511 : tmp_14_fu_1371_p4);

assign select_ln340_14_fu_1415_p3 = ((xor_ln340_16_fu_1139_p2[0:0] === 1'b1) ? 10'd511 : tmp_15_fu_1405_p4);

assign select_ln340_16_fu_1571_p3 = ((xor_ln340_17_fu_1543_p2[0:0] === 1'b1) ? 10'd511 : tmp_16_fu_1561_p4);

assign select_ln340_2_fu_1206_p3 = ((xor_ln340_10_fu_809_p2[0:0] === 1'b1) ? 10'd511 : tmp_s_fu_1196_p4);

assign select_ln340_4_fu_1245_p3 = ((xor_ln340_11_fu_864_p2[0:0] === 1'b1) ? 10'd511 : tmp_10_fu_1235_p4);

assign select_ln340_6_fu_1279_p3 = ((xor_ln340_12_fu_919_p2[0:0] === 1'b1) ? 10'd511 : tmp_11_fu_1269_p4);

assign select_ln340_8_fu_1313_p3 = ((xor_ln340_13_fu_974_p2[0:0] === 1'b1) ? 10'd511 : tmp_12_fu_1303_p4);

assign select_ln340_fu_1167_p3 = ((xor_ln340_9_fu_754_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_1157_p4);

assign select_ln388_1_fu_1214_p3 = ((and_ln786_1_fu_803_p2[0:0] === 1'b1) ? 10'd512 : tmp_s_fu_1196_p4);

assign select_ln388_2_fu_1253_p3 = ((and_ln786_2_fu_858_p2[0:0] === 1'b1) ? 10'd512 : tmp_10_fu_1235_p4);

assign select_ln388_3_fu_1287_p3 = ((and_ln786_3_fu_913_p2[0:0] === 1'b1) ? 10'd512 : tmp_11_fu_1269_p4);

assign select_ln388_4_fu_1321_p3 = ((and_ln786_4_fu_968_p2[0:0] === 1'b1) ? 10'd512 : tmp_12_fu_1303_p4);

assign select_ln388_5_fu_1355_p3 = ((and_ln786_5_fu_1023_p2[0:0] === 1'b1) ? 10'd512 : tmp_13_fu_1337_p4);

assign select_ln388_6_fu_1389_p3 = ((and_ln786_6_fu_1078_p2[0:0] === 1'b1) ? 10'd512 : tmp_14_fu_1371_p4);

assign select_ln388_7_fu_1423_p3 = ((and_ln786_7_fu_1133_p2[0:0] === 1'b1) ? 10'd512 : tmp_15_fu_1405_p4);

assign select_ln388_8_fu_1579_p3 = ((underflow_fu_1537_p2[0:0] === 1'b1) ? 10'd512 : tmp_16_fu_1561_p4);

assign select_ln388_fu_1175_p3 = ((and_ln786_fu_748_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_1157_p4);

assign select_ln65_1_fu_657_p3 = ((icmp_ln1496_1_reg_1755[0:0] === 1'b1) ? data_array_3_V_reg_1720 : data_array_2_V_reg_1714);

assign select_ln65_2_fu_668_p3 = ((icmp_ln1496_2_fu_662_p2[0:0] === 1'b1) ? select_ln65_1_fu_657_p3 : select_ln65_fu_652_p3);

assign select_ln65_3_fu_676_p3 = ((icmp_ln1496_3_reg_1760[0:0] === 1'b1) ? data_array_5_V_reg_1732 : data_array_4_V_reg_1726);

assign select_ln65_4_fu_681_p3 = ((icmp_ln1496_4_reg_1765[0:0] === 1'b1) ? data_array_7_V_reg_1744 : data_array_6_V_reg_1738);

assign select_ln65_5_fu_692_p3 = ((icmp_ln1496_5_fu_686_p2[0:0] === 1'b1) ? select_ln65_4_fu_681_p3 : select_ln65_3_fu_676_p3);

assign select_ln65_fu_652_p3 = ((icmp_ln1496_reg_1750[0:0] === 1'b1) ? data_array_1_V_reg_1708 : data_array_0_V_reg_1702);

assign sext_ln241_fu_1600_p1 = $signed(inv_exp_sum_V_reg_1906);

assign sext_ln703_1_fu_717_p1 = $signed(x_max_V_reg_1770);

assign sext_ln703_2_fu_772_p1 = data_array_1_V_reg_1708;

assign sext_ln703_3_fu_827_p1 = data_array_2_V_reg_1714;

assign sext_ln703_4_fu_882_p1 = data_array_3_V_reg_1720;

assign sext_ln703_5_fu_937_p1 = data_array_4_V_reg_1726;

assign sext_ln703_6_fu_992_p1 = data_array_5_V_reg_1732;

assign sext_ln703_7_fu_1047_p1 = data_array_6_V_reg_1738;

assign sext_ln703_8_fu_1102_p1 = data_array_7_V_reg_1744;

assign sext_ln703_fu_714_p1 = data_array_0_V_reg_1702;

assign sub_ln1193_1_fu_775_p2 = ($signed(sext_ln703_2_fu_772_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_2_fu_830_p2 = ($signed(sext_ln703_3_fu_827_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_3_fu_885_p2 = ($signed(sext_ln703_4_fu_882_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_4_fu_940_p2 = ($signed(sext_ln703_5_fu_937_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_5_fu_995_p2 = ($signed(sext_ln703_6_fu_992_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_6_fu_1050_p2 = ($signed(sext_ln703_7_fu_1047_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_7_fu_1105_p2 = ($signed(sext_ln703_8_fu_1102_p1) - $signed(sext_ln703_1_fu_717_p1));

assign sub_ln1193_fu_720_p2 = ($signed(sext_ln703_fu_714_p1) - $signed(sext_ln703_1_fu_717_p1));

assign tmp_10_fu_1235_p4 = {{sub_ln1193_2_fu_830_p2[15:6]}};

assign tmp_11_fu_1269_p4 = {{sub_ln1193_3_fu_885_p2[15:6]}};

assign tmp_12_fu_1303_p4 = {{sub_ln1193_4_fu_940_p2[15:6]}};

assign tmp_13_fu_1337_p4 = {{sub_ln1193_5_fu_995_p2[15:6]}};

assign tmp_14_fu_1371_p4 = {{sub_ln1193_6_fu_1050_p2[15:6]}};

assign tmp_15_fu_1405_p4 = {{sub_ln1193_7_fu_1105_p2[15:6]}};

assign tmp_16_fu_1561_p4 = {{p_Val2_12_fu_1519_p2[17:8]}};

assign tmp_17_fu_726_p3 = sub_ln1193_fu_720_p2[32'd16];

assign tmp_18_fu_734_p3 = sub_ln1193_fu_720_p2[32'd15];

assign tmp_19_fu_781_p3 = sub_ln1193_1_fu_775_p2[32'd16];

assign tmp_20_fu_789_p3 = sub_ln1193_1_fu_775_p2[32'd15];

assign tmp_21_fu_836_p3 = sub_ln1193_2_fu_830_p2[32'd16];

assign tmp_22_fu_844_p3 = sub_ln1193_2_fu_830_p2[32'd15];

assign tmp_23_fu_891_p3 = sub_ln1193_3_fu_885_p2[32'd16];

assign tmp_24_fu_899_p3 = sub_ln1193_3_fu_885_p2[32'd15];

assign tmp_25_fu_946_p3 = sub_ln1193_4_fu_940_p2[32'd16];

assign tmp_26_fu_954_p3 = sub_ln1193_4_fu_940_p2[32'd15];

assign tmp_27_fu_1001_p3 = sub_ln1193_5_fu_995_p2[32'd16];

assign tmp_28_fu_1009_p3 = sub_ln1193_5_fu_995_p2[32'd15];

assign tmp_29_fu_1056_p3 = sub_ln1193_6_fu_1050_p2[32'd16];

assign tmp_30_fu_1064_p3 = sub_ln1193_6_fu_1050_p2[32'd15];

assign tmp_31_fu_1111_p3 = sub_ln1193_7_fu_1105_p2[32'd16];

assign tmp_32_fu_1119_p3 = sub_ln1193_7_fu_1105_p2[32'd15];

assign tmp_fu_1157_p4 = {{sub_ln1193_fu_720_p2[15:6]}};

assign tmp_s_fu_1196_p4 = {{sub_ln1193_1_fu_775_p2[15:6]}};

assign underflow_fu_1537_p2 = (xor_ln786_8_fu_1531_p2 & p_Result_s_fu_1511_p3);

assign x_max_V_fu_706_p3 = ((icmp_ln1496_6_fu_700_p2[0:0] === 1'b1) ? select_ln65_5_fu_692_p3 : select_ln65_2_fu_668_p3);

assign xor_ln340_10_fu_809_p2 = (tmp_20_fu_789_p3 ^ tmp_19_fu_781_p3);

assign xor_ln340_11_fu_864_p2 = (tmp_22_fu_844_p3 ^ tmp_21_fu_836_p3);

assign xor_ln340_12_fu_919_p2 = (tmp_24_fu_899_p3 ^ tmp_23_fu_891_p3);

assign xor_ln340_13_fu_974_p2 = (tmp_26_fu_954_p3 ^ tmp_25_fu_946_p3);

assign xor_ln340_14_fu_1029_p2 = (tmp_28_fu_1009_p3 ^ tmp_27_fu_1001_p3);

assign xor_ln340_15_fu_1084_p2 = (tmp_30_fu_1064_p3 ^ tmp_29_fu_1056_p3);

assign xor_ln340_16_fu_1139_p2 = (tmp_32_fu_1119_p3 ^ tmp_31_fu_1111_p3);

assign xor_ln340_17_fu_1543_p2 = (p_Result_s_fu_1511_p3 ^ p_Result_12_fu_1523_p3);

assign xor_ln340_1_fu_815_p2 = (tmp_19_fu_781_p3 ^ 1'd1);

assign xor_ln340_2_fu_870_p2 = (tmp_21_fu_836_p3 ^ 1'd1);

assign xor_ln340_3_fu_925_p2 = (tmp_23_fu_891_p3 ^ 1'd1);

assign xor_ln340_4_fu_980_p2 = (tmp_25_fu_946_p3 ^ 1'd1);

assign xor_ln340_5_fu_1035_p2 = (tmp_27_fu_1001_p3 ^ 1'd1);

assign xor_ln340_6_fu_1090_p2 = (tmp_29_fu_1056_p3 ^ 1'd1);

assign xor_ln340_7_fu_1145_p2 = (tmp_31_fu_1111_p3 ^ 1'd1);

assign xor_ln340_8_fu_1549_p2 = (p_Result_s_fu_1511_p3 ^ 1'd1);

assign xor_ln340_9_fu_754_p2 = (tmp_18_fu_734_p3 ^ tmp_17_fu_726_p3);

assign xor_ln340_fu_760_p2 = (tmp_17_fu_726_p3 ^ 1'd1);

assign xor_ln786_1_fu_797_p2 = (tmp_20_fu_789_p3 ^ 1'd1);

assign xor_ln786_2_fu_852_p2 = (tmp_22_fu_844_p3 ^ 1'd1);

assign xor_ln786_3_fu_907_p2 = (tmp_24_fu_899_p3 ^ 1'd1);

assign xor_ln786_4_fu_962_p2 = (tmp_26_fu_954_p3 ^ 1'd1);

assign xor_ln786_5_fu_1017_p2 = (tmp_28_fu_1009_p3 ^ 1'd1);

assign xor_ln786_6_fu_1072_p2 = (tmp_30_fu_1064_p3 ^ 1'd1);

assign xor_ln786_7_fu_1127_p2 = (tmp_32_fu_1119_p3 ^ 1'd1);

assign xor_ln786_8_fu_1531_p2 = (p_Result_12_fu_1523_p3 ^ 1'd1);

assign xor_ln786_fu_742_p2 = (tmp_18_fu_734_p3 ^ 1'd1);

assign y_V_1_fu_1222_p3 = ((or_ln340_1_fu_821_p2[0:0] === 1'b1) ? select_ln340_2_fu_1206_p3 : select_ln388_1_fu_1214_p3);

assign y_V_2_fu_1261_p3 = ((or_ln340_2_fu_876_p2[0:0] === 1'b1) ? select_ln340_4_fu_1245_p3 : select_ln388_2_fu_1253_p3);

assign y_V_3_fu_1295_p3 = ((or_ln340_3_fu_931_p2[0:0] === 1'b1) ? select_ln340_6_fu_1279_p3 : select_ln388_3_fu_1287_p3);

assign y_V_4_fu_1329_p3 = ((or_ln340_4_fu_986_p2[0:0] === 1'b1) ? select_ln340_8_fu_1313_p3 : select_ln388_4_fu_1321_p3);

assign y_V_5_fu_1363_p3 = ((or_ln340_5_fu_1041_p2[0:0] === 1'b1) ? select_ln340_10_fu_1347_p3 : select_ln388_5_fu_1355_p3);

assign y_V_6_fu_1397_p3 = ((or_ln340_6_fu_1096_p2[0:0] === 1'b1) ? select_ln340_12_fu_1381_p3 : select_ln388_6_fu_1389_p3);

assign y_V_7_fu_1431_p3 = ((or_ln340_7_fu_1151_p2[0:0] === 1'b1) ? select_ln340_14_fu_1415_p3 : select_ln388_7_fu_1423_p3);

assign y_V_8_fu_1587_p3 = ((or_ln340_8_fu_1555_p2[0:0] === 1'b1) ? select_ln340_16_fu_1571_p3 : select_ln388_8_fu_1579_p3);

assign y_V_fu_1183_p3 = ((or_ln340_fu_766_p2[0:0] === 1'b1) ? select_ln340_fu_1167_p3 : select_ln388_fu_1175_p3);

assign zext_ln1118_1_fu_1609_p1 = exp_res_1_V_1_reg_1821_pp0_iter2_reg;

assign zext_ln1118_2_fu_1613_p1 = exp_res_2_V_1_reg_1837_pp0_iter2_reg;

assign zext_ln1118_3_fu_1617_p1 = exp_res_3_V_1_reg_1843_pp0_iter2_reg;

assign zext_ln1118_4_fu_1621_p1 = exp_res_4_V_1_reg_1859_pp0_iter2_reg;

assign zext_ln1118_5_fu_1625_p1 = exp_res_5_V_1_reg_1864_pp0_iter2_reg;

assign zext_ln1118_6_fu_1629_p1 = exp_res_6_V_1_reg_1879_pp0_iter2_reg;

assign zext_ln1118_7_fu_1633_p1 = exp_res_7_V_1_reg_1884_pp0_iter2_reg;

assign zext_ln1118_fu_1605_p1 = exp_res_0_V_1_reg_1815_pp0_iter2_reg;

assign zext_ln225_1_fu_1230_p1 = y_V_1_fu_1222_p3;

assign zext_ln225_2_fu_1439_p1 = y_V_2_reg_1785;

assign zext_ln225_3_fu_1443_p1 = y_V_3_reg_1790;

assign zext_ln225_4_fu_1447_p1 = y_V_4_reg_1795;

assign zext_ln225_5_fu_1451_p1 = y_V_5_reg_1800;

assign zext_ln225_6_fu_1481_p1 = y_V_6_reg_1805;

assign zext_ln225_7_fu_1485_p1 = y_V_7_reg_1810;

assign zext_ln225_fu_1191_p1 = y_V_fu_1183_p3;

assign zext_ln235_fu_1595_p1 = y_V_8_fu_1587_p3;

endmodule //softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s
