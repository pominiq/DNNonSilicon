// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_1;
reg   [31:0] sX_1;
reg   [31:0] pY_1;
reg   [31:0] sY_1;
reg   [15:0] kernel_data_V_2_4;
reg   [15:0] kernel_data_V_2_5;
reg   [15:0] kernel_data_V_2_6;
reg   [15:0] kernel_data_V_2_7;
reg   [15:0] kernel_data_V_2_20;
reg   [15:0] kernel_data_V_2_21;
reg   [15:0] kernel_data_V_2_22;
reg   [15:0] kernel_data_V_2_23;
reg   [15:0] kernel_data_V_2_36;
reg   [15:0] kernel_data_V_2_37;
reg   [15:0] kernel_data_V_2_38;
reg   [15:0] kernel_data_V_2_39;
reg   [15:0] kernel_data_V_2_52;
reg   [15:0] kernel_data_V_2_53;
reg   [15:0] kernel_data_V_2_54;
reg   [15:0] kernel_data_V_2_55;
reg   [15:0] kernel_data_V_2_8;
reg   [15:0] kernel_data_V_2_9;
reg   [15:0] kernel_data_V_2_10;
reg   [15:0] kernel_data_V_2_11;
reg   [15:0] kernel_data_V_2_24;
reg   [15:0] kernel_data_V_2_25;
reg   [15:0] kernel_data_V_2_26;
reg   [15:0] kernel_data_V_2_27;
reg   [15:0] kernel_data_V_2_40;
reg   [15:0] kernel_data_V_2_41;
reg   [15:0] kernel_data_V_2_42;
reg   [15:0] kernel_data_V_2_43;
reg   [15:0] kernel_data_V_2_56;
reg   [15:0] kernel_data_V_2_57;
reg   [15:0] kernel_data_V_2_58;
reg   [15:0] kernel_data_V_2_59;
reg   [15:0] kernel_data_V_2_12;
reg   [15:0] kernel_data_V_2_13;
reg   [15:0] kernel_data_V_2_14;
reg   [15:0] kernel_data_V_2_15;
reg   [15:0] kernel_data_V_2_28;
reg   [15:0] kernel_data_V_2_29;
reg   [15:0] kernel_data_V_2_30;
reg   [15:0] kernel_data_V_2_31;
reg   [15:0] kernel_data_V_2_44;
reg   [15:0] kernel_data_V_2_45;
reg   [15:0] kernel_data_V_2_46;
reg   [15:0] kernel_data_V_2_47;
reg   [15:0] kernel_data_V_2_60;
reg   [15:0] kernel_data_V_2_61;
reg   [15:0] kernel_data_V_2_62;
reg   [15:0] kernel_data_V_2_63;
reg    line_buffer_Array_V_2_0_0_ce0;
reg    line_buffer_Array_V_2_0_0_we0;
wire   [15:0] line_buffer_Array_V_2_0_0_q0;
reg    line_buffer_Array_V_2_1_0_ce0;
reg    line_buffer_Array_V_2_1_0_we0;
wire   [15:0] line_buffer_Array_V_2_1_0_q0;
reg    line_buffer_Array_V_2_2_0_ce0;
reg    line_buffer_Array_V_2_2_0_we0;
wire   [15:0] line_buffer_Array_V_2_2_0_q0;
reg    line_buffer_Array_V_2_0_1_ce0;
reg    line_buffer_Array_V_2_0_1_we0;
wire   [15:0] line_buffer_Array_V_2_0_1_q0;
reg    line_buffer_Array_V_2_1_1_ce0;
reg    line_buffer_Array_V_2_1_1_we0;
wire   [15:0] line_buffer_Array_V_2_1_1_q0;
reg    line_buffer_Array_V_2_2_1_ce0;
reg    line_buffer_Array_V_2_2_1_we0;
wire   [15:0] line_buffer_Array_V_2_2_1_q0;
reg    line_buffer_Array_V_2_0_2_ce0;
reg    line_buffer_Array_V_2_0_2_we0;
wire   [15:0] line_buffer_Array_V_2_0_2_q0;
reg    line_buffer_Array_V_2_1_2_ce0;
reg    line_buffer_Array_V_2_1_2_we0;
wire   [15:0] line_buffer_Array_V_2_1_2_q0;
reg    line_buffer_Array_V_2_2_2_ce0;
reg    line_buffer_Array_V_2_2_2_we0;
wire   [15:0] line_buffer_Array_V_2_2_2_q0;
reg    line_buffer_Array_V_2_0_3_ce0;
reg    line_buffer_Array_V_2_0_3_we0;
wire   [15:0] line_buffer_Array_V_2_0_3_q0;
reg    line_buffer_Array_V_2_1_3_ce0;
reg    line_buffer_Array_V_2_1_3_we0;
wire   [15:0] line_buffer_Array_V_2_1_3_q0;
reg    line_buffer_Array_V_2_2_3_ce0;
reg    line_buffer_Array_V_2_2_3_we0;
wire   [15:0] line_buffer_Array_V_2_2_3_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln241_reg_2902;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] and_ln191_4_reg_2911;
reg   [0:0] and_ln191_4_reg_2911_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [9:0] indvar_flatten_reg_364;
wire   [0:0] icmp_ln241_fu_386_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op55;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    io_acc_block_signal_op375;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln241_reg_2902_pp0_iter1_reg;
wire   [9:0] add_ln241_fu_392_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln191_4_fu_450_p2;
reg   [0:0] and_ln191_4_reg_2911_pp0_iter1_reg;
reg   [0:0] and_ln191_4_reg_2911_pp0_iter2_reg;
wire   [0:0] icmp_ln212_fu_456_p2;
reg   [0:0] icmp_ln212_reg_2915;
wire   [0:0] icmp_ln216_fu_506_p2;
wire   [31:0] select_ln222_fu_530_p3;
reg   [15:0] pool_window_15_V_reg_2928;
reg   [15:0] pool_window_15_V_reg_2928_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_reg_2928_pp0_iter3_reg;
reg   [15:0] pool_window_15_V_1_reg_2958;
reg   [15:0] pool_window_15_V_1_reg_2958_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_1_reg_2958_pp0_iter3_reg;
reg   [15:0] pool_window_15_V_2_reg_2988;
reg   [15:0] pool_window_15_V_2_reg_2988_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_2_reg_2988_pp0_iter3_reg;
reg   [15:0] pool_window_15_V_3_reg_3018;
reg   [15:0] pool_window_15_V_3_reg_3018_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_3_reg_3018_pp0_iter3_reg;
reg   [15:0] pool_window_11_V_reg_3048;
reg   [15:0] pool_window_11_V_reg_3048_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_reg_3048_pp0_iter3_reg;
reg   [15:0] pool_window_7_V_reg_3070;
reg   [15:0] pool_window_7_V_reg_3070_pp0_iter2_reg;
reg   [15:0] pool_window_7_V_reg_3070_pp0_iter3_reg;
reg   [15:0] pool_window_3_V_reg_3100;
reg   [15:0] pool_window_3_V_reg_3100_pp0_iter2_reg;
reg   [15:0] pool_window_3_V_reg_3100_pp0_iter3_reg;
reg   [15:0] pool_window_11_V_1_reg_3122;
reg   [15:0] pool_window_11_V_1_reg_3122_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_1_reg_3122_pp0_iter3_reg;
reg   [15:0] pool_window_7_V_1_reg_3144;
reg   [15:0] pool_window_7_V_1_reg_3144_pp0_iter2_reg;
reg   [15:0] pool_window_7_V_1_reg_3144_pp0_iter3_reg;
reg   [15:0] pool_window_3_V_8_reg_3174;
reg   [15:0] pool_window_3_V_8_reg_3174_pp0_iter2_reg;
reg   [15:0] pool_window_3_V_8_reg_3174_pp0_iter3_reg;
reg   [15:0] pool_window_11_V_2_reg_3196;
reg   [15:0] pool_window_11_V_2_reg_3196_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_2_reg_3196_pp0_iter3_reg;
reg   [15:0] pool_window_7_V_2_reg_3218;
reg   [15:0] pool_window_7_V_2_reg_3218_pp0_iter2_reg;
reg   [15:0] pool_window_7_V_2_reg_3218_pp0_iter3_reg;
reg   [15:0] pool_window_3_V_9_reg_3248;
reg   [15:0] pool_window_3_V_9_reg_3248_pp0_iter2_reg;
reg   [15:0] pool_window_3_V_9_reg_3248_pp0_iter3_reg;
reg   [15:0] pool_window_11_V_3_reg_3270;
reg   [15:0] pool_window_11_V_3_reg_3270_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_3_reg_3270_pp0_iter3_reg;
reg   [15:0] pool_window_7_V_3_reg_3292;
reg   [15:0] pool_window_7_V_3_reg_3292_pp0_iter2_reg;
reg   [15:0] pool_window_7_V_3_reg_3292_pp0_iter3_reg;
reg   [15:0] pool_window_3_V_10_reg_3322;
reg   [15:0] pool_window_3_V_10_reg_3322_pp0_iter2_reg;
reg   [15:0] pool_window_3_V_10_reg_3322_pp0_iter3_reg;
reg   [15:0] pool_window_0_V_reg_3344;
reg   [15:0] pool_window_0_V_reg_3344_pp0_iter3_reg;
reg   [15:0] pool_window_0_V_8_reg_3350;
reg   [15:0] pool_window_0_V_8_reg_3350_pp0_iter3_reg;
reg   [15:0] pool_window_0_V_9_reg_3356;
reg   [15:0] pool_window_0_V_9_reg_3356_pp0_iter3_reg;
reg   [15:0] pool_window_0_V_10_reg_3362;
reg   [15:0] pool_window_0_V_10_reg_3362_pp0_iter3_reg;
reg   [15:0] pool_window_4_V_reg_3368;
reg   [15:0] pool_window_4_V_reg_3368_pp0_iter3_reg;
reg   [15:0] pool_window_4_V_1_reg_3374;
reg   [15:0] pool_window_4_V_1_reg_3374_pp0_iter3_reg;
reg   [15:0] pool_window_4_V_2_reg_3380;
reg   [15:0] pool_window_4_V_2_reg_3380_pp0_iter3_reg;
reg   [15:0] pool_window_4_V_3_reg_3386;
reg   [15:0] pool_window_4_V_3_reg_3386_pp0_iter3_reg;
reg   [15:0] pool_window_8_V_reg_3392;
reg   [15:0] pool_window_8_V_reg_3392_pp0_iter3_reg;
reg   [15:0] pool_window_8_V_1_reg_3398;
reg   [15:0] pool_window_8_V_1_reg_3398_pp0_iter3_reg;
reg   [15:0] pool_window_8_V_2_reg_3404;
reg   [15:0] pool_window_8_V_2_reg_3404_pp0_iter3_reg;
reg   [15:0] pool_window_8_V_3_reg_3410;
reg   [15:0] pool_window_8_V_3_reg_3410_pp0_iter3_reg;
reg   [15:0] pool_window_12_V_reg_3416;
reg   [15:0] pool_window_12_V_reg_3416_pp0_iter3_reg;
reg   [15:0] pool_window_12_V_1_reg_3422;
reg   [15:0] pool_window_12_V_1_reg_3422_pp0_iter3_reg;
reg   [15:0] pool_window_12_V_2_reg_3428;
reg   [15:0] pool_window_12_V_2_reg_3428_pp0_iter3_reg;
reg   [15:0] pool_window_12_V_3_reg_3434;
reg   [15:0] pool_window_12_V_3_reg_3434_pp0_iter3_reg;
reg   [15:0] pool_window_1_V_reg_3440;
reg   [15:0] pool_window_1_V_reg_3440_pp0_iter3_reg;
reg   [15:0] pool_window_1_V_8_reg_3446;
reg   [15:0] pool_window_1_V_8_reg_3446_pp0_iter3_reg;
reg   [15:0] pool_window_1_V_9_reg_3452;
reg   [15:0] pool_window_1_V_9_reg_3452_pp0_iter3_reg;
reg   [15:0] pool_window_1_V_10_reg_3458;
reg   [15:0] pool_window_1_V_10_reg_3458_pp0_iter3_reg;
reg   [15:0] pool_window_5_V_reg_3464;
reg   [15:0] pool_window_5_V_reg_3464_pp0_iter3_reg;
reg   [15:0] pool_window_5_V_1_reg_3470;
reg   [15:0] pool_window_5_V_1_reg_3470_pp0_iter3_reg;
reg   [15:0] pool_window_5_V_2_reg_3476;
reg   [15:0] pool_window_5_V_2_reg_3476_pp0_iter3_reg;
reg   [15:0] pool_window_5_V_3_reg_3482;
reg   [15:0] pool_window_5_V_3_reg_3482_pp0_iter3_reg;
reg   [15:0] pool_window_9_V_reg_3488;
reg   [15:0] pool_window_9_V_reg_3488_pp0_iter3_reg;
reg   [15:0] pool_window_9_V_1_reg_3494;
reg   [15:0] pool_window_9_V_1_reg_3494_pp0_iter3_reg;
reg   [15:0] pool_window_9_V_2_reg_3500;
reg   [15:0] pool_window_9_V_2_reg_3500_pp0_iter3_reg;
reg   [15:0] pool_window_9_V_3_reg_3506;
reg   [15:0] pool_window_9_V_3_reg_3506_pp0_iter3_reg;
reg   [15:0] pool_window_13_V_reg_3512;
reg   [15:0] pool_window_13_V_reg_3512_pp0_iter3_reg;
reg   [15:0] pool_window_13_V_1_reg_3518;
reg   [15:0] pool_window_13_V_1_reg_3518_pp0_iter3_reg;
reg   [15:0] pool_window_13_V_2_reg_3524;
reg   [15:0] pool_window_13_V_2_reg_3524_pp0_iter3_reg;
reg   [15:0] pool_window_13_V_3_reg_3530;
reg   [15:0] pool_window_13_V_3_reg_3530_pp0_iter3_reg;
reg   [15:0] pool_window_2_V_reg_3536;
reg   [15:0] pool_window_2_V_reg_3536_pp0_iter3_reg;
reg   [15:0] pool_window_2_V_8_reg_3542;
reg   [15:0] pool_window_2_V_8_reg_3542_pp0_iter3_reg;
reg   [15:0] pool_window_2_V_9_reg_3548;
reg   [15:0] pool_window_2_V_9_reg_3548_pp0_iter3_reg;
reg   [15:0] pool_window_2_V_10_reg_3554;
reg   [15:0] pool_window_2_V_10_reg_3554_pp0_iter3_reg;
reg   [15:0] pool_window_6_V_reg_3560;
reg   [15:0] pool_window_6_V_reg_3560_pp0_iter3_reg;
reg   [15:0] pool_window_6_V_1_reg_3566;
reg   [15:0] pool_window_6_V_1_reg_3566_pp0_iter3_reg;
reg   [15:0] pool_window_6_V_2_reg_3572;
reg   [15:0] pool_window_6_V_2_reg_3572_pp0_iter3_reg;
reg   [15:0] pool_window_6_V_3_reg_3578;
reg   [15:0] pool_window_6_V_3_reg_3578_pp0_iter3_reg;
reg   [15:0] pool_window_10_V_reg_3584;
reg   [15:0] pool_window_10_V_reg_3584_pp0_iter3_reg;
reg   [15:0] pool_window_10_V_1_reg_3590;
reg   [15:0] pool_window_10_V_1_reg_3590_pp0_iter3_reg;
reg   [15:0] pool_window_10_V_2_reg_3596;
reg   [15:0] pool_window_10_V_2_reg_3596_pp0_iter3_reg;
reg   [15:0] pool_window_10_V_3_reg_3602;
reg   [15:0] pool_window_10_V_3_reg_3602_pp0_iter3_reg;
reg   [15:0] pool_window_14_V_reg_3608;
reg   [15:0] pool_window_14_V_reg_3608_pp0_iter3_reg;
reg   [15:0] pool_window_14_V_1_reg_3614;
reg   [15:0] pool_window_14_V_1_reg_3614_pp0_iter3_reg;
reg   [15:0] pool_window_14_V_2_reg_3620;
reg   [15:0] pool_window_14_V_2_reg_3620_pp0_iter3_reg;
reg   [15:0] pool_window_14_V_3_reg_3626;
reg   [15:0] pool_window_14_V_3_reg_3626_pp0_iter3_reg;
wire   [1:0] select_ln65_34_fu_1194_p3;
reg   [1:0] select_ln65_34_reg_3632;
wire   [15:0] phi_ln_fu_1206_p18;
reg   [15:0] phi_ln_reg_3637;
wire   [2:0] select_ln65_39_fu_1279_p3;
reg   [2:0] select_ln65_39_reg_3642;
wire   [15:0] phi_ln65_1_fu_1291_p18;
reg   [15:0] phi_ln65_1_reg_3647;
wire   [3:0] select_ln65_45_fu_1364_p3;
reg   [3:0] select_ln65_45_reg_3652;
wire   [15:0] phi_ln65_3_fu_1372_p18;
reg   [15:0] phi_ln65_3_reg_3657;
wire  signed [3:0] sext_ln65_fu_1453_p1;
reg  signed [3:0] sext_ln65_reg_3662;
wire   [15:0] phi_ln65_4_fu_1457_p18;
reg   [15:0] phi_ln65_4_reg_3667;
wire   [1:0] select_ln65_56_fu_1526_p3;
reg   [1:0] select_ln65_56_reg_3672;
wire   [15:0] phi_ln65_6_fu_1538_p18;
reg   [15:0] phi_ln65_6_reg_3677;
wire   [2:0] select_ln65_61_fu_1611_p3;
reg   [2:0] select_ln65_61_reg_3682;
wire   [15:0] phi_ln65_7_fu_1623_p18;
reg   [15:0] phi_ln65_7_reg_3687;
wire   [3:0] select_ln65_67_fu_1696_p3;
reg   [3:0] select_ln65_67_reg_3692;
wire   [15:0] phi_ln65_9_fu_1704_p18;
reg   [15:0] phi_ln65_9_reg_3697;
wire  signed [3:0] sext_ln65_1_fu_1785_p1;
reg  signed [3:0] sext_ln65_1_reg_3702;
wire   [15:0] phi_ln65_s_fu_1789_p18;
reg   [15:0] phi_ln65_s_reg_3707;
wire   [1:0] select_ln65_77_fu_1858_p3;
reg   [1:0] select_ln65_77_reg_3712;
wire   [15:0] phi_ln65_11_fu_1870_p18;
reg   [15:0] phi_ln65_11_reg_3717;
wire   [2:0] select_ln65_82_fu_1943_p3;
reg   [2:0] select_ln65_82_reg_3722;
wire   [15:0] phi_ln65_12_fu_1955_p18;
reg   [15:0] phi_ln65_12_reg_3727;
wire   [3:0] select_ln65_88_fu_2028_p3;
reg   [3:0] select_ln65_88_reg_3732;
wire   [15:0] phi_ln65_14_fu_2036_p18;
reg   [15:0] phi_ln65_14_reg_3737;
wire  signed [3:0] sext_ln65_2_fu_2117_p1;
reg  signed [3:0] sext_ln65_2_reg_3742;
wire   [15:0] phi_ln65_15_fu_2121_p18;
reg   [15:0] phi_ln65_15_reg_3747;
wire   [1:0] select_ln65_98_fu_2190_p3;
reg   [1:0] select_ln65_98_reg_3752;
wire   [15:0] phi_ln65_17_fu_2202_p18;
reg   [15:0] phi_ln65_17_reg_3757;
wire   [2:0] select_ln65_103_fu_2275_p3;
reg   [2:0] select_ln65_103_reg_3762;
wire   [15:0] phi_ln65_18_fu_2287_p18;
reg   [15:0] phi_ln65_18_reg_3767;
wire   [3:0] select_ln65_109_fu_2360_p3;
reg   [3:0] select_ln65_109_reg_3772;
wire   [15:0] phi_ln65_20_fu_2368_p18;
reg   [15:0] phi_ln65_20_reg_3777;
wire  signed [3:0] sext_ln65_3_fu_2449_p1;
reg  signed [3:0] sext_ln65_3_reg_3782;
wire   [15:0] phi_ln65_21_fu_2453_p18;
reg   [15:0] phi_ln65_21_reg_3787;
wire   [3:0] zext_ln65_9_fu_2492_p1;
reg   [3:0] zext_ln65_9_reg_3792;
wire   [3:0] select_ln65_51_fu_2522_p3;
reg   [3:0] select_ln65_51_reg_3797;
wire   [0:0] icmp_ln1496_37_fu_2550_p2;
reg   [0:0] icmp_ln1496_37_reg_3802;
wire   [3:0] zext_ln65_12_fu_2570_p1;
reg   [3:0] zext_ln65_12_reg_3807;
wire   [3:0] select_ln65_73_fu_2600_p3;
reg   [3:0] select_ln65_73_reg_3812;
wire   [0:0] icmp_ln1496_51_fu_2628_p2;
reg   [0:0] icmp_ln1496_51_reg_3817;
wire   [3:0] zext_ln65_15_fu_2648_p1;
reg   [3:0] zext_ln65_15_reg_3822;
wire   [3:0] select_ln65_94_fu_2678_p3;
reg   [3:0] select_ln65_94_reg_3827;
wire   [0:0] icmp_ln1496_65_fu_2706_p2;
reg   [0:0] icmp_ln1496_65_reg_3832;
wire   [3:0] zext_ln65_18_fu_2726_p1;
reg   [3:0] zext_ln65_18_reg_3837;
wire   [3:0] select_ln65_115_fu_2756_p3;
reg   [3:0] select_ln65_115_reg_3842;
wire   [0:0] icmp_ln1496_80_fu_2784_p2;
reg   [0:0] icmp_ln1496_80_reg_3847;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375;
wire   [31:0] add_ln225_fu_462_p2;
wire   [31:0] select_ln227_fu_480_p3;
wire   [31:0] add_ln220_fu_512_p2;
reg   [31:0] ap_sig_allocacmp_sY_1_load;
wire   [15:0] tmp_data_0_V_fu_2795_p18;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_data_1_V_fu_2823_p18;
wire   [15:0] tmp_data_2_V_fu_2851_p18;
wire   [15:0] tmp_data_3_V_fu_2879_p18;
wire   [0:0] icmp_ln191_fu_402_p2;
wire   [0:0] icmp_ln191_4_fu_412_p2;
wire   [0:0] icmp_ln191_5_fu_422_p2;
wire   [0:0] icmp_ln191_6_fu_432_p2;
wire   [0:0] and_ln191_3_fu_444_p2;
wire   [0:0] and_ln191_fu_438_p2;
wire   [31:0] add_ln227_fu_474_p2;
wire   [31:0] add_ln222_fu_524_p2;
wire   [0:0] icmp_ln1496_fu_1150_p2;
wire   [0:0] icmp_ln1496_24_fu_1168_p2;
wire   [15:0] select_ln65_fu_1160_p3;
wire   [15:0] select_ln65_33_fu_1181_p3;
wire   [0:0] icmp_ln1496_25_fu_1188_p2;
wire   [1:0] select_ln65_32_fu_1173_p3;
wire   [1:0] zext_ln65_fu_1156_p1;
wire   [3:0] phi_ln_fu_1206_p17;
wire   [0:0] icmp_ln1496_26_fu_1231_p2;
wire   [0:0] icmp_ln1496_27_fu_1253_p2;
wire   [15:0] select_ln65_36_fu_1245_p3;
wire   [15:0] select_ln65_38_fu_1266_p3;
wire   [0:0] icmp_ln1496_28_fu_1273_p2;
wire   [2:0] select_ln65_48_fu_1258_p3;
wire   [2:0] select_ln65_35_fu_1237_p3;
wire   [3:0] phi_ln65_1_fu_1291_p17;
wire   [0:0] icmp_ln1496_30_fu_1316_p2;
wire   [0:0] icmp_ln1496_31_fu_1338_p2;
wire   [15:0] select_ln65_42_fu_1330_p3;
wire   [15:0] select_ln65_44_fu_1351_p3;
wire   [0:0] icmp_ln1496_32_fu_1358_p2;
wire   [3:0] select_ln65_43_fu_1343_p3;
wire   [3:0] select_ln65_41_fu_1322_p3;
wire   [3:0] phi_ln65_3_fu_1372_p17;
wire   [0:0] icmp_ln1496_33_fu_1397_p2;
wire   [0:0] icmp_ln1496_34_fu_1419_p2;
wire   [15:0] select_ln65_47_fu_1411_p3;
wire   [15:0] select_ln65_49_fu_1432_p3;
wire   [0:0] icmp_ln1496_35_fu_1439_p2;
wire   [2:0] select_ln65_52_fu_1424_p3;
wire   [2:0] select_ln65_46_fu_1403_p3;
wire   [2:0] select_ln65_50_fu_1445_p3;
wire  signed [3:0] phi_ln65_4_fu_1457_p17;
wire   [0:0] icmp_ln1496_1_fu_1482_p2;
wire   [0:0] icmp_ln1496_38_fu_1500_p2;
wire   [15:0] select_ln65_53_fu_1492_p3;
wire   [15:0] select_ln65_55_fu_1513_p3;
wire   [0:0] icmp_ln1496_39_fu_1520_p2;
wire   [1:0] select_ln65_54_fu_1505_p3;
wire   [1:0] zext_ln65_10_fu_1488_p1;
wire   [3:0] phi_ln65_6_fu_1538_p17;
wire   [0:0] icmp_ln1496_40_fu_1563_p2;
wire   [0:0] icmp_ln1496_41_fu_1585_p2;
wire   [15:0] select_ln65_58_fu_1577_p3;
wire   [15:0] select_ln65_60_fu_1598_p3;
wire   [0:0] icmp_ln1496_42_fu_1605_p2;
wire   [2:0] select_ln65_70_fu_1590_p3;
wire   [2:0] select_ln65_57_fu_1569_p3;
wire   [3:0] phi_ln65_7_fu_1623_p17;
wire   [0:0] icmp_ln1496_44_fu_1648_p2;
wire   [0:0] icmp_ln1496_45_fu_1670_p2;
wire   [15:0] select_ln65_64_fu_1662_p3;
wire   [15:0] select_ln65_66_fu_1683_p3;
wire   [0:0] icmp_ln1496_46_fu_1690_p2;
wire   [3:0] select_ln65_65_fu_1675_p3;
wire   [3:0] select_ln65_63_fu_1654_p3;
wire   [3:0] phi_ln65_9_fu_1704_p17;
wire   [0:0] icmp_ln1496_47_fu_1729_p2;
wire   [0:0] icmp_ln1496_48_fu_1751_p2;
wire   [15:0] select_ln65_69_fu_1743_p3;
wire   [15:0] select_ln65_71_fu_1764_p3;
wire   [0:0] icmp_ln1496_49_fu_1771_p2;
wire   [2:0] select_ln65_80_fu_1756_p3;
wire   [2:0] select_ln65_68_fu_1735_p3;
wire   [2:0] select_ln65_72_fu_1777_p3;
wire  signed [3:0] phi_ln65_s_fu_1789_p17;
wire   [0:0] icmp_ln1496_2_fu_1814_p2;
wire   [0:0] icmp_ln1496_52_fu_1832_p2;
wire   [15:0] select_ln65_74_fu_1824_p3;
wire   [15:0] select_ln65_76_fu_1845_p3;
wire   [0:0] icmp_ln1496_53_fu_1852_p2;
wire   [1:0] select_ln65_75_fu_1837_p3;
wire   [1:0] zext_ln65_13_fu_1820_p1;
wire   [3:0] phi_ln65_11_fu_1870_p17;
wire   [0:0] icmp_ln1496_54_fu_1895_p2;
wire   [0:0] icmp_ln1496_55_fu_1917_p2;
wire   [15:0] select_ln65_79_fu_1909_p3;
wire   [15:0] select_ln65_81_fu_1930_p3;
wire   [0:0] icmp_ln1496_56_fu_1937_p2;
wire   [2:0] select_ln65_101_fu_1922_p3;
wire   [2:0] select_ln65_78_fu_1901_p3;
wire   [3:0] phi_ln65_12_fu_1955_p17;
wire   [0:0] icmp_ln1496_58_fu_1980_p2;
wire   [0:0] icmp_ln1496_59_fu_2002_p2;
wire   [15:0] select_ln65_85_fu_1994_p3;
wire   [15:0] select_ln65_87_fu_2015_p3;
wire   [0:0] icmp_ln1496_60_fu_2022_p2;
wire   [3:0] select_ln65_86_fu_2007_p3;
wire   [3:0] select_ln65_84_fu_1986_p3;
wire   [3:0] phi_ln65_14_fu_2036_p17;
wire   [0:0] icmp_ln1496_61_fu_2061_p2;
wire   [0:0] icmp_ln1496_62_fu_2083_p2;
wire   [15:0] select_ln65_90_fu_2075_p3;
wire   [15:0] select_ln65_92_fu_2096_p3;
wire   [0:0] icmp_ln1496_63_fu_2103_p2;
wire   [2:0] select_ln65_112_fu_2088_p3;
wire   [2:0] select_ln65_89_fu_2067_p3;
wire   [2:0] select_ln65_93_fu_2109_p3;
wire  signed [3:0] phi_ln65_15_fu_2121_p17;
wire   [0:0] icmp_ln1496_66_fu_2146_p2;
wire   [0:0] icmp_ln1496_67_fu_2164_p2;
wire   [15:0] select_ln65_95_fu_2156_p3;
wire   [15:0] select_ln65_97_fu_2177_p3;
wire   [0:0] icmp_ln1496_68_fu_2184_p2;
wire   [1:0] select_ln65_96_fu_2169_p3;
wire   [1:0] zext_ln65_16_fu_2152_p1;
wire   [3:0] phi_ln65_17_fu_2202_p17;
wire   [0:0] icmp_ln1496_69_fu_2227_p2;
wire   [0:0] icmp_ln1496_70_fu_2249_p2;
wire   [15:0] select_ln65_100_fu_2241_p3;
wire   [15:0] select_ln65_102_fu_2262_p3;
wire   [0:0] icmp_ln1496_71_fu_2269_p2;
wire   [2:0] select_ln65_117_fu_2254_p3;
wire   [2:0] select_ln65_99_fu_2233_p3;
wire   [3:0] phi_ln65_18_fu_2287_p17;
wire   [0:0] icmp_ln1496_73_fu_2312_p2;
wire   [0:0] icmp_ln1496_74_fu_2334_p2;
wire   [15:0] select_ln65_106_fu_2326_p3;
wire   [15:0] select_ln65_108_fu_2347_p3;
wire   [0:0] icmp_ln1496_75_fu_2354_p2;
wire   [3:0] select_ln65_107_fu_2339_p3;
wire   [3:0] select_ln65_105_fu_2318_p3;
wire   [3:0] phi_ln65_20_fu_2368_p17;
wire   [0:0] icmp_ln1496_76_fu_2393_p2;
wire   [0:0] icmp_ln1496_77_fu_2415_p2;
wire   [15:0] select_ln65_111_fu_2407_p3;
wire   [15:0] select_ln65_113_fu_2428_p3;
wire   [0:0] icmp_ln1496_78_fu_2435_p2;
wire   [2:0] select_ln65_118_fu_2420_p3;
wire   [2:0] select_ln65_110_fu_2399_p3;
wire   [2:0] select_ln65_114_fu_2441_p3;
wire  signed [3:0] phi_ln65_21_fu_2453_p17;
wire   [0:0] icmp_ln1496_29_fu_2481_p2;
wire   [2:0] zext_ln65_8_fu_2478_p1;
wire   [2:0] select_ln65_40_fu_2485_p3;
wire   [3:0] phi_ln65_2_fu_2496_p17;
wire   [0:0] icmp_ln1496_36_fu_2518_p2;
wire   [3:0] phi_ln65_5_fu_2528_p17;
wire   [15:0] phi_ln65_2_fu_2496_p18;
wire   [15:0] phi_ln65_5_fu_2528_p18;
wire   [0:0] icmp_ln1496_43_fu_2559_p2;
wire   [2:0] zext_ln65_11_fu_2556_p1;
wire   [2:0] select_ln65_62_fu_2563_p3;
wire   [3:0] phi_ln65_8_fu_2574_p17;
wire   [0:0] icmp_ln1496_50_fu_2596_p2;
wire   [3:0] phi_ln65_10_fu_2606_p17;
wire   [15:0] phi_ln65_8_fu_2574_p18;
wire   [15:0] phi_ln65_10_fu_2606_p18;
wire   [0:0] icmp_ln1496_57_fu_2637_p2;
wire   [2:0] zext_ln65_14_fu_2634_p1;
wire   [2:0] select_ln65_83_fu_2641_p3;
wire   [3:0] phi_ln65_13_fu_2652_p17;
wire   [0:0] icmp_ln1496_64_fu_2674_p2;
wire   [3:0] phi_ln65_16_fu_2684_p17;
wire   [15:0] phi_ln65_13_fu_2652_p18;
wire   [15:0] phi_ln65_16_fu_2684_p18;
wire   [0:0] icmp_ln1496_72_fu_2715_p2;
wire   [2:0] zext_ln65_17_fu_2712_p1;
wire   [2:0] select_ln65_104_fu_2719_p3;
wire   [3:0] phi_ln65_19_fu_2730_p17;
wire   [0:0] icmp_ln1496_79_fu_2752_p2;
wire   [3:0] phi_ln65_22_fu_2762_p17;
wire   [15:0] phi_ln65_19_fu_2730_p18;
wire   [15:0] phi_ln65_22_fu_2762_p18;
wire   [3:0] tmp_data_0_V_fu_2795_p17;
wire   [3:0] tmp_data_1_V_fu_2823_p17;
wire   [3:0] tmp_data_2_V_fu_2851_p17;
wire   [3:0] tmp_data_3_V_fu_2879_p17;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_313;
reg    ap_condition_708;
reg    ap_condition_288;
reg    ap_condition_701;
reg    ap_condition_714;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX_1 = 32'd0;
#0 sX_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 sY_1 = 32'd0;
#0 kernel_data_V_2_4 = 16'd0;
#0 kernel_data_V_2_5 = 16'd0;
#0 kernel_data_V_2_6 = 16'd0;
#0 kernel_data_V_2_7 = 16'd0;
#0 kernel_data_V_2_20 = 16'd0;
#0 kernel_data_V_2_21 = 16'd0;
#0 kernel_data_V_2_22 = 16'd0;
#0 kernel_data_V_2_23 = 16'd0;
#0 kernel_data_V_2_36 = 16'd0;
#0 kernel_data_V_2_37 = 16'd0;
#0 kernel_data_V_2_38 = 16'd0;
#0 kernel_data_V_2_39 = 16'd0;
#0 kernel_data_V_2_52 = 16'd0;
#0 kernel_data_V_2_53 = 16'd0;
#0 kernel_data_V_2_54 = 16'd0;
#0 kernel_data_V_2_55 = 16'd0;
#0 kernel_data_V_2_8 = 16'd0;
#0 kernel_data_V_2_9 = 16'd0;
#0 kernel_data_V_2_10 = 16'd0;
#0 kernel_data_V_2_11 = 16'd0;
#0 kernel_data_V_2_24 = 16'd0;
#0 kernel_data_V_2_25 = 16'd0;
#0 kernel_data_V_2_26 = 16'd0;
#0 kernel_data_V_2_27 = 16'd0;
#0 kernel_data_V_2_40 = 16'd0;
#0 kernel_data_V_2_41 = 16'd0;
#0 kernel_data_V_2_42 = 16'd0;
#0 kernel_data_V_2_43 = 16'd0;
#0 kernel_data_V_2_56 = 16'd0;
#0 kernel_data_V_2_57 = 16'd0;
#0 kernel_data_V_2_58 = 16'd0;
#0 kernel_data_V_2_59 = 16'd0;
#0 kernel_data_V_2_12 = 16'd0;
#0 kernel_data_V_2_13 = 16'd0;
#0 kernel_data_V_2_14 = 16'd0;
#0 kernel_data_V_2_15 = 16'd0;
#0 kernel_data_V_2_28 = 16'd0;
#0 kernel_data_V_2_29 = 16'd0;
#0 kernel_data_V_2_30 = 16'd0;
#0 kernel_data_V_2_31 = 16'd0;
#0 kernel_data_V_2_44 = 16'd0;
#0 kernel_data_V_2_45 = 16'd0;
#0 kernel_data_V_2_46 = 16'd0;
#0 kernel_data_V_2_47 = 16'd0;
#0 kernel_data_V_2_60 = 16'd0;
#0 kernel_data_V_2_61 = 16'd0;
#0 kernel_data_V_2_62 = 16'd0;
#0 kernel_data_V_2_63 = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_0_0_ce0),
    .we0(line_buffer_Array_V_2_0_0_we0),
    .d0(data_V_data_0_V_dout),
    .q0(line_buffer_Array_V_2_0_0_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_1_0_ce0),
    .we0(line_buffer_Array_V_2_1_0_we0),
    .d0(line_buffer_Array_V_2_0_0_q0),
    .q0(line_buffer_Array_V_2_1_0_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_2_0_ce0),
    .we0(line_buffer_Array_V_2_2_0_we0),
    .d0(line_buffer_Array_V_2_1_0_q0),
    .q0(line_buffer_Array_V_2_2_0_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_0_1_ce0),
    .we0(line_buffer_Array_V_2_0_1_we0),
    .d0(data_V_data_1_V_dout),
    .q0(line_buffer_Array_V_2_0_1_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_1_1_ce0),
    .we0(line_buffer_Array_V_2_1_1_we0),
    .d0(line_buffer_Array_V_2_0_1_q0),
    .q0(line_buffer_Array_V_2_1_1_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_2_1_ce0),
    .we0(line_buffer_Array_V_2_2_1_we0),
    .d0(line_buffer_Array_V_2_1_1_q0),
    .q0(line_buffer_Array_V_2_2_1_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_0_2_ce0),
    .we0(line_buffer_Array_V_2_0_2_we0),
    .d0(data_V_data_2_V_dout),
    .q0(line_buffer_Array_V_2_0_2_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_1_2_ce0),
    .we0(line_buffer_Array_V_2_1_2_we0),
    .d0(line_buffer_Array_V_2_0_2_q0),
    .q0(line_buffer_Array_V_2_1_2_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_2_2_ce0),
    .we0(line_buffer_Array_V_2_2_2_we0),
    .d0(line_buffer_Array_V_2_1_2_q0),
    .q0(line_buffer_Array_V_2_2_2_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_0_3_ce0),
    .we0(line_buffer_Array_V_2_0_3_we0),
    .d0(data_V_data_3_V_dout),
    .q0(line_buffer_Array_V_2_0_3_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_1_3_ce0),
    .we0(line_buffer_Array_V_2_1_3_we0),
    .d0(line_buffer_Array_V_2_0_3_q0),
    .q0(line_buffer_Array_V_2_1_3_q0)
);

pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s_line_bueOg #(
    .DataWidth( 16 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_2_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd25),
    .ce0(line_buffer_Array_V_2_2_3_ce0),
    .we0(line_buffer_Array_V_2_2_3_we0),
    .d0(line_buffer_Array_V_2_1_3_q0),
    .q0(line_buffer_Array_V_2_2_3_q0)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U41(
    .din0(kernel_data_V_2_4),
    .din1(kernel_data_V_2_8),
    .din2(kernel_data_V_2_12),
    .din3(pool_window_3_V_reg_3100),
    .din4(pool_window_3_V_reg_3100),
    .din5(pool_window_3_V_reg_3100),
    .din6(pool_window_3_V_reg_3100),
    .din7(pool_window_3_V_reg_3100),
    .din8(pool_window_3_V_reg_3100),
    .din9(pool_window_3_V_reg_3100),
    .din10(pool_window_3_V_reg_3100),
    .din11(pool_window_3_V_reg_3100),
    .din12(pool_window_3_V_reg_3100),
    .din13(pool_window_3_V_reg_3100),
    .din14(pool_window_3_V_reg_3100),
    .din15(pool_window_3_V_reg_3100),
    .din16(phi_ln_fu_1206_p17),
    .dout(phi_ln_fu_1206_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U42(
    .din0(pool_window_7_V_reg_3070),
    .din1(pool_window_7_V_reg_3070),
    .din2(pool_window_7_V_reg_3070),
    .din3(pool_window_7_V_reg_3070),
    .din4(kernel_data_V_2_20),
    .din5(kernel_data_V_2_24),
    .din6(kernel_data_V_2_28),
    .din7(pool_window_7_V_reg_3070),
    .din8(pool_window_7_V_reg_3070),
    .din9(pool_window_7_V_reg_3070),
    .din10(pool_window_7_V_reg_3070),
    .din11(pool_window_7_V_reg_3070),
    .din12(pool_window_7_V_reg_3070),
    .din13(pool_window_7_V_reg_3070),
    .din14(pool_window_7_V_reg_3070),
    .din15(pool_window_7_V_reg_3070),
    .din16(phi_ln65_1_fu_1291_p17),
    .dout(phi_ln65_1_fu_1291_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U43(
    .din0(pool_window_11_V_reg_3048),
    .din1(pool_window_11_V_reg_3048),
    .din2(pool_window_11_V_reg_3048),
    .din3(pool_window_11_V_reg_3048),
    .din4(pool_window_11_V_reg_3048),
    .din5(pool_window_11_V_reg_3048),
    .din6(pool_window_11_V_reg_3048),
    .din7(pool_window_11_V_reg_3048),
    .din8(kernel_data_V_2_36),
    .din9(kernel_data_V_2_40),
    .din10(kernel_data_V_2_44),
    .din11(pool_window_11_V_reg_3048),
    .din12(pool_window_11_V_reg_3048),
    .din13(pool_window_11_V_reg_3048),
    .din14(pool_window_11_V_reg_3048),
    .din15(pool_window_11_V_reg_3048),
    .din16(phi_ln65_3_fu_1372_p17),
    .dout(phi_ln65_3_fu_1372_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U44(
    .din0(pool_window_15_V_reg_2928),
    .din1(pool_window_15_V_reg_2928),
    .din2(pool_window_15_V_reg_2928),
    .din3(pool_window_15_V_reg_2928),
    .din4(pool_window_15_V_reg_2928),
    .din5(pool_window_15_V_reg_2928),
    .din6(pool_window_15_V_reg_2928),
    .din7(pool_window_15_V_reg_2928),
    .din8(pool_window_15_V_reg_2928),
    .din9(pool_window_15_V_reg_2928),
    .din10(pool_window_15_V_reg_2928),
    .din11(pool_window_15_V_reg_2928),
    .din12(kernel_data_V_2_52),
    .din13(kernel_data_V_2_56),
    .din14(kernel_data_V_2_60),
    .din15(pool_window_15_V_reg_2928),
    .din16(phi_ln65_4_fu_1457_p17),
    .dout(phi_ln65_4_fu_1457_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U45(
    .din0(kernel_data_V_2_5),
    .din1(kernel_data_V_2_9),
    .din2(kernel_data_V_2_13),
    .din3(pool_window_3_V_8_reg_3174),
    .din4(pool_window_3_V_8_reg_3174),
    .din5(pool_window_3_V_8_reg_3174),
    .din6(pool_window_3_V_8_reg_3174),
    .din7(pool_window_3_V_8_reg_3174),
    .din8(pool_window_3_V_8_reg_3174),
    .din9(pool_window_3_V_8_reg_3174),
    .din10(pool_window_3_V_8_reg_3174),
    .din11(pool_window_3_V_8_reg_3174),
    .din12(pool_window_3_V_8_reg_3174),
    .din13(pool_window_3_V_8_reg_3174),
    .din14(pool_window_3_V_8_reg_3174),
    .din15(pool_window_3_V_8_reg_3174),
    .din16(phi_ln65_6_fu_1538_p17),
    .dout(phi_ln65_6_fu_1538_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U46(
    .din0(pool_window_7_V_1_reg_3144),
    .din1(pool_window_7_V_1_reg_3144),
    .din2(pool_window_7_V_1_reg_3144),
    .din3(pool_window_7_V_1_reg_3144),
    .din4(kernel_data_V_2_21),
    .din5(kernel_data_V_2_25),
    .din6(kernel_data_V_2_29),
    .din7(pool_window_7_V_1_reg_3144),
    .din8(pool_window_7_V_1_reg_3144),
    .din9(pool_window_7_V_1_reg_3144),
    .din10(pool_window_7_V_1_reg_3144),
    .din11(pool_window_7_V_1_reg_3144),
    .din12(pool_window_7_V_1_reg_3144),
    .din13(pool_window_7_V_1_reg_3144),
    .din14(pool_window_7_V_1_reg_3144),
    .din15(pool_window_7_V_1_reg_3144),
    .din16(phi_ln65_7_fu_1623_p17),
    .dout(phi_ln65_7_fu_1623_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U47(
    .din0(pool_window_11_V_1_reg_3122),
    .din1(pool_window_11_V_1_reg_3122),
    .din2(pool_window_11_V_1_reg_3122),
    .din3(pool_window_11_V_1_reg_3122),
    .din4(pool_window_11_V_1_reg_3122),
    .din5(pool_window_11_V_1_reg_3122),
    .din6(pool_window_11_V_1_reg_3122),
    .din7(pool_window_11_V_1_reg_3122),
    .din8(kernel_data_V_2_37),
    .din9(kernel_data_V_2_41),
    .din10(kernel_data_V_2_45),
    .din11(pool_window_11_V_1_reg_3122),
    .din12(pool_window_11_V_1_reg_3122),
    .din13(pool_window_11_V_1_reg_3122),
    .din14(pool_window_11_V_1_reg_3122),
    .din15(pool_window_11_V_1_reg_3122),
    .din16(phi_ln65_9_fu_1704_p17),
    .dout(phi_ln65_9_fu_1704_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U48(
    .din0(pool_window_15_V_1_reg_2958),
    .din1(pool_window_15_V_1_reg_2958),
    .din2(pool_window_15_V_1_reg_2958),
    .din3(pool_window_15_V_1_reg_2958),
    .din4(pool_window_15_V_1_reg_2958),
    .din5(pool_window_15_V_1_reg_2958),
    .din6(pool_window_15_V_1_reg_2958),
    .din7(pool_window_15_V_1_reg_2958),
    .din8(pool_window_15_V_1_reg_2958),
    .din9(pool_window_15_V_1_reg_2958),
    .din10(pool_window_15_V_1_reg_2958),
    .din11(pool_window_15_V_1_reg_2958),
    .din12(kernel_data_V_2_53),
    .din13(kernel_data_V_2_57),
    .din14(kernel_data_V_2_61),
    .din15(pool_window_15_V_1_reg_2958),
    .din16(phi_ln65_s_fu_1789_p17),
    .dout(phi_ln65_s_fu_1789_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U49(
    .din0(kernel_data_V_2_6),
    .din1(kernel_data_V_2_10),
    .din2(kernel_data_V_2_14),
    .din3(pool_window_3_V_9_reg_3248),
    .din4(pool_window_3_V_9_reg_3248),
    .din5(pool_window_3_V_9_reg_3248),
    .din6(pool_window_3_V_9_reg_3248),
    .din7(pool_window_3_V_9_reg_3248),
    .din8(pool_window_3_V_9_reg_3248),
    .din9(pool_window_3_V_9_reg_3248),
    .din10(pool_window_3_V_9_reg_3248),
    .din11(pool_window_3_V_9_reg_3248),
    .din12(pool_window_3_V_9_reg_3248),
    .din13(pool_window_3_V_9_reg_3248),
    .din14(pool_window_3_V_9_reg_3248),
    .din15(pool_window_3_V_9_reg_3248),
    .din16(phi_ln65_11_fu_1870_p17),
    .dout(phi_ln65_11_fu_1870_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U50(
    .din0(pool_window_7_V_2_reg_3218),
    .din1(pool_window_7_V_2_reg_3218),
    .din2(pool_window_7_V_2_reg_3218),
    .din3(pool_window_7_V_2_reg_3218),
    .din4(kernel_data_V_2_22),
    .din5(kernel_data_V_2_26),
    .din6(kernel_data_V_2_30),
    .din7(pool_window_7_V_2_reg_3218),
    .din8(pool_window_7_V_2_reg_3218),
    .din9(pool_window_7_V_2_reg_3218),
    .din10(pool_window_7_V_2_reg_3218),
    .din11(pool_window_7_V_2_reg_3218),
    .din12(pool_window_7_V_2_reg_3218),
    .din13(pool_window_7_V_2_reg_3218),
    .din14(pool_window_7_V_2_reg_3218),
    .din15(pool_window_7_V_2_reg_3218),
    .din16(phi_ln65_12_fu_1955_p17),
    .dout(phi_ln65_12_fu_1955_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U51(
    .din0(pool_window_11_V_2_reg_3196),
    .din1(pool_window_11_V_2_reg_3196),
    .din2(pool_window_11_V_2_reg_3196),
    .din3(pool_window_11_V_2_reg_3196),
    .din4(pool_window_11_V_2_reg_3196),
    .din5(pool_window_11_V_2_reg_3196),
    .din6(pool_window_11_V_2_reg_3196),
    .din7(pool_window_11_V_2_reg_3196),
    .din8(kernel_data_V_2_38),
    .din9(kernel_data_V_2_42),
    .din10(kernel_data_V_2_46),
    .din11(pool_window_11_V_2_reg_3196),
    .din12(pool_window_11_V_2_reg_3196),
    .din13(pool_window_11_V_2_reg_3196),
    .din14(pool_window_11_V_2_reg_3196),
    .din15(pool_window_11_V_2_reg_3196),
    .din16(phi_ln65_14_fu_2036_p17),
    .dout(phi_ln65_14_fu_2036_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U52(
    .din0(pool_window_15_V_2_reg_2988),
    .din1(pool_window_15_V_2_reg_2988),
    .din2(pool_window_15_V_2_reg_2988),
    .din3(pool_window_15_V_2_reg_2988),
    .din4(pool_window_15_V_2_reg_2988),
    .din5(pool_window_15_V_2_reg_2988),
    .din6(pool_window_15_V_2_reg_2988),
    .din7(pool_window_15_V_2_reg_2988),
    .din8(pool_window_15_V_2_reg_2988),
    .din9(pool_window_15_V_2_reg_2988),
    .din10(pool_window_15_V_2_reg_2988),
    .din11(pool_window_15_V_2_reg_2988),
    .din12(kernel_data_V_2_54),
    .din13(kernel_data_V_2_58),
    .din14(kernel_data_V_2_62),
    .din15(pool_window_15_V_2_reg_2988),
    .din16(phi_ln65_15_fu_2121_p17),
    .dout(phi_ln65_15_fu_2121_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U53(
    .din0(kernel_data_V_2_7),
    .din1(kernel_data_V_2_11),
    .din2(kernel_data_V_2_15),
    .din3(pool_window_3_V_10_reg_3322),
    .din4(pool_window_3_V_10_reg_3322),
    .din5(pool_window_3_V_10_reg_3322),
    .din6(pool_window_3_V_10_reg_3322),
    .din7(pool_window_3_V_10_reg_3322),
    .din8(pool_window_3_V_10_reg_3322),
    .din9(pool_window_3_V_10_reg_3322),
    .din10(pool_window_3_V_10_reg_3322),
    .din11(pool_window_3_V_10_reg_3322),
    .din12(pool_window_3_V_10_reg_3322),
    .din13(pool_window_3_V_10_reg_3322),
    .din14(pool_window_3_V_10_reg_3322),
    .din15(pool_window_3_V_10_reg_3322),
    .din16(phi_ln65_17_fu_2202_p17),
    .dout(phi_ln65_17_fu_2202_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U54(
    .din0(pool_window_7_V_3_reg_3292),
    .din1(pool_window_7_V_3_reg_3292),
    .din2(pool_window_7_V_3_reg_3292),
    .din3(pool_window_7_V_3_reg_3292),
    .din4(kernel_data_V_2_23),
    .din5(kernel_data_V_2_27),
    .din6(kernel_data_V_2_31),
    .din7(pool_window_7_V_3_reg_3292),
    .din8(pool_window_7_V_3_reg_3292),
    .din9(pool_window_7_V_3_reg_3292),
    .din10(pool_window_7_V_3_reg_3292),
    .din11(pool_window_7_V_3_reg_3292),
    .din12(pool_window_7_V_3_reg_3292),
    .din13(pool_window_7_V_3_reg_3292),
    .din14(pool_window_7_V_3_reg_3292),
    .din15(pool_window_7_V_3_reg_3292),
    .din16(phi_ln65_18_fu_2287_p17),
    .dout(phi_ln65_18_fu_2287_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U55(
    .din0(pool_window_11_V_3_reg_3270),
    .din1(pool_window_11_V_3_reg_3270),
    .din2(pool_window_11_V_3_reg_3270),
    .din3(pool_window_11_V_3_reg_3270),
    .din4(pool_window_11_V_3_reg_3270),
    .din5(pool_window_11_V_3_reg_3270),
    .din6(pool_window_11_V_3_reg_3270),
    .din7(pool_window_11_V_3_reg_3270),
    .din8(kernel_data_V_2_39),
    .din9(kernel_data_V_2_43),
    .din10(kernel_data_V_2_47),
    .din11(pool_window_11_V_3_reg_3270),
    .din12(pool_window_11_V_3_reg_3270),
    .din13(pool_window_11_V_3_reg_3270),
    .din14(pool_window_11_V_3_reg_3270),
    .din15(pool_window_11_V_3_reg_3270),
    .din16(phi_ln65_20_fu_2368_p17),
    .dout(phi_ln65_20_fu_2368_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U56(
    .din0(pool_window_15_V_3_reg_3018),
    .din1(pool_window_15_V_3_reg_3018),
    .din2(pool_window_15_V_3_reg_3018),
    .din3(pool_window_15_V_3_reg_3018),
    .din4(pool_window_15_V_3_reg_3018),
    .din5(pool_window_15_V_3_reg_3018),
    .din6(pool_window_15_V_3_reg_3018),
    .din7(pool_window_15_V_3_reg_3018),
    .din8(pool_window_15_V_3_reg_3018),
    .din9(pool_window_15_V_3_reg_3018),
    .din10(pool_window_15_V_3_reg_3018),
    .din11(pool_window_15_V_3_reg_3018),
    .din12(kernel_data_V_2_55),
    .din13(kernel_data_V_2_59),
    .din14(kernel_data_V_2_63),
    .din15(pool_window_15_V_3_reg_3018),
    .din16(phi_ln65_21_fu_2453_p17),
    .dout(phi_ln65_21_fu_2453_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U57(
    .din0(pool_window_0_V_reg_3344),
    .din1(pool_window_1_V_reg_3440),
    .din2(pool_window_2_V_reg_3536),
    .din3(pool_window_3_V_reg_3100_pp0_iter2_reg),
    .din4(pool_window_4_V_reg_3368),
    .din5(pool_window_5_V_reg_3464),
    .din6(pool_window_6_V_reg_3560),
    .din7(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din8(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din9(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din10(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din11(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din12(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din13(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din14(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din15(pool_window_7_V_reg_3070_pp0_iter2_reg),
    .din16(phi_ln65_2_fu_2496_p17),
    .dout(phi_ln65_2_fu_2496_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U58(
    .din0(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din1(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din2(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din3(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din4(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din5(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din6(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din7(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din8(pool_window_8_V_reg_3392),
    .din9(pool_window_9_V_reg_3488),
    .din10(pool_window_10_V_reg_3584),
    .din11(pool_window_11_V_reg_3048_pp0_iter2_reg),
    .din12(pool_window_12_V_reg_3416),
    .din13(pool_window_13_V_reg_3512),
    .din14(pool_window_14_V_reg_3608),
    .din15(pool_window_15_V_reg_2928_pp0_iter2_reg),
    .din16(phi_ln65_5_fu_2528_p17),
    .dout(phi_ln65_5_fu_2528_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U59(
    .din0(pool_window_0_V_8_reg_3350),
    .din1(pool_window_1_V_8_reg_3446),
    .din2(pool_window_2_V_8_reg_3542),
    .din3(pool_window_3_V_8_reg_3174_pp0_iter2_reg),
    .din4(pool_window_4_V_1_reg_3374),
    .din5(pool_window_5_V_1_reg_3470),
    .din6(pool_window_6_V_1_reg_3566),
    .din7(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din8(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din9(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din10(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din11(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din12(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din13(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din14(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din15(pool_window_7_V_1_reg_3144_pp0_iter2_reg),
    .din16(phi_ln65_8_fu_2574_p17),
    .dout(phi_ln65_8_fu_2574_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U60(
    .din0(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din1(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din2(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din3(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din4(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din5(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din6(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din7(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din8(pool_window_8_V_1_reg_3398),
    .din9(pool_window_9_V_1_reg_3494),
    .din10(pool_window_10_V_1_reg_3590),
    .din11(pool_window_11_V_1_reg_3122_pp0_iter2_reg),
    .din12(pool_window_12_V_1_reg_3422),
    .din13(pool_window_13_V_1_reg_3518),
    .din14(pool_window_14_V_1_reg_3614),
    .din15(pool_window_15_V_1_reg_2958_pp0_iter2_reg),
    .din16(phi_ln65_10_fu_2606_p17),
    .dout(phi_ln65_10_fu_2606_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U61(
    .din0(pool_window_0_V_9_reg_3356),
    .din1(pool_window_1_V_9_reg_3452),
    .din2(pool_window_2_V_9_reg_3548),
    .din3(pool_window_3_V_9_reg_3248_pp0_iter2_reg),
    .din4(pool_window_4_V_2_reg_3380),
    .din5(pool_window_5_V_2_reg_3476),
    .din6(pool_window_6_V_2_reg_3572),
    .din7(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din8(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din9(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din10(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din11(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din12(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din13(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din14(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din15(pool_window_7_V_2_reg_3218_pp0_iter2_reg),
    .din16(phi_ln65_13_fu_2652_p17),
    .dout(phi_ln65_13_fu_2652_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U62(
    .din0(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din1(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din2(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din3(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din4(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din5(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din6(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din7(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din8(pool_window_8_V_2_reg_3404),
    .din9(pool_window_9_V_2_reg_3500),
    .din10(pool_window_10_V_2_reg_3596),
    .din11(pool_window_11_V_2_reg_3196_pp0_iter2_reg),
    .din12(pool_window_12_V_2_reg_3428),
    .din13(pool_window_13_V_2_reg_3524),
    .din14(pool_window_14_V_2_reg_3620),
    .din15(pool_window_15_V_2_reg_2988_pp0_iter2_reg),
    .din16(phi_ln65_16_fu_2684_p17),
    .dout(phi_ln65_16_fu_2684_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U63(
    .din0(pool_window_0_V_10_reg_3362),
    .din1(pool_window_1_V_10_reg_3458),
    .din2(pool_window_2_V_10_reg_3554),
    .din3(pool_window_3_V_10_reg_3322_pp0_iter2_reg),
    .din4(pool_window_4_V_3_reg_3386),
    .din5(pool_window_5_V_3_reg_3482),
    .din6(pool_window_6_V_3_reg_3578),
    .din7(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din8(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din9(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din10(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din11(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din12(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din13(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din14(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din15(pool_window_7_V_3_reg_3292_pp0_iter2_reg),
    .din16(phi_ln65_19_fu_2730_p17),
    .dout(phi_ln65_19_fu_2730_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U64(
    .din0(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din1(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din2(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din3(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din4(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din5(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din6(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din7(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din8(pool_window_8_V_3_reg_3410),
    .din9(pool_window_9_V_3_reg_3506),
    .din10(pool_window_10_V_3_reg_3602),
    .din11(pool_window_11_V_3_reg_3270_pp0_iter2_reg),
    .din12(pool_window_12_V_3_reg_3434),
    .din13(pool_window_13_V_3_reg_3530),
    .din14(pool_window_14_V_3_reg_3626),
    .din15(pool_window_15_V_3_reg_3018_pp0_iter2_reg),
    .din16(phi_ln65_22_fu_2762_p17),
    .dout(phi_ln65_22_fu_2762_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U65(
    .din0(pool_window_0_V_reg_3344_pp0_iter3_reg),
    .din1(pool_window_1_V_reg_3440_pp0_iter3_reg),
    .din2(pool_window_2_V_reg_3536_pp0_iter3_reg),
    .din3(pool_window_3_V_reg_3100_pp0_iter3_reg),
    .din4(pool_window_4_V_reg_3368_pp0_iter3_reg),
    .din5(pool_window_5_V_reg_3464_pp0_iter3_reg),
    .din6(pool_window_6_V_reg_3560_pp0_iter3_reg),
    .din7(pool_window_7_V_reg_3070_pp0_iter3_reg),
    .din8(pool_window_8_V_reg_3392_pp0_iter3_reg),
    .din9(pool_window_9_V_reg_3488_pp0_iter3_reg),
    .din10(pool_window_10_V_reg_3584_pp0_iter3_reg),
    .din11(pool_window_11_V_reg_3048_pp0_iter3_reg),
    .din12(pool_window_12_V_reg_3416_pp0_iter3_reg),
    .din13(pool_window_13_V_reg_3512_pp0_iter3_reg),
    .din14(pool_window_14_V_reg_3608_pp0_iter3_reg),
    .din15(pool_window_15_V_reg_2928_pp0_iter3_reg),
    .din16(tmp_data_0_V_fu_2795_p17),
    .dout(tmp_data_0_V_fu_2795_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U66(
    .din0(pool_window_0_V_8_reg_3350_pp0_iter3_reg),
    .din1(pool_window_1_V_8_reg_3446_pp0_iter3_reg),
    .din2(pool_window_2_V_8_reg_3542_pp0_iter3_reg),
    .din3(pool_window_3_V_8_reg_3174_pp0_iter3_reg),
    .din4(pool_window_4_V_1_reg_3374_pp0_iter3_reg),
    .din5(pool_window_5_V_1_reg_3470_pp0_iter3_reg),
    .din6(pool_window_6_V_1_reg_3566_pp0_iter3_reg),
    .din7(pool_window_7_V_1_reg_3144_pp0_iter3_reg),
    .din8(pool_window_8_V_1_reg_3398_pp0_iter3_reg),
    .din9(pool_window_9_V_1_reg_3494_pp0_iter3_reg),
    .din10(pool_window_10_V_1_reg_3590_pp0_iter3_reg),
    .din11(pool_window_11_V_1_reg_3122_pp0_iter3_reg),
    .din12(pool_window_12_V_1_reg_3422_pp0_iter3_reg),
    .din13(pool_window_13_V_1_reg_3518_pp0_iter3_reg),
    .din14(pool_window_14_V_1_reg_3614_pp0_iter3_reg),
    .din15(pool_window_15_V_1_reg_2958_pp0_iter3_reg),
    .din16(tmp_data_1_V_fu_2823_p17),
    .dout(tmp_data_1_V_fu_2823_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U67(
    .din0(pool_window_0_V_9_reg_3356_pp0_iter3_reg),
    .din1(pool_window_1_V_9_reg_3452_pp0_iter3_reg),
    .din2(pool_window_2_V_9_reg_3548_pp0_iter3_reg),
    .din3(pool_window_3_V_9_reg_3248_pp0_iter3_reg),
    .din4(pool_window_4_V_2_reg_3380_pp0_iter3_reg),
    .din5(pool_window_5_V_2_reg_3476_pp0_iter3_reg),
    .din6(pool_window_6_V_2_reg_3572_pp0_iter3_reg),
    .din7(pool_window_7_V_2_reg_3218_pp0_iter3_reg),
    .din8(pool_window_8_V_2_reg_3404_pp0_iter3_reg),
    .din9(pool_window_9_V_2_reg_3500_pp0_iter3_reg),
    .din10(pool_window_10_V_2_reg_3596_pp0_iter3_reg),
    .din11(pool_window_11_V_2_reg_3196_pp0_iter3_reg),
    .din12(pool_window_12_V_2_reg_3428_pp0_iter3_reg),
    .din13(pool_window_13_V_2_reg_3524_pp0_iter3_reg),
    .din14(pool_window_14_V_2_reg_3620_pp0_iter3_reg),
    .din15(pool_window_15_V_2_reg_2988_pp0_iter3_reg),
    .din16(tmp_data_2_V_fu_2851_p17),
    .dout(tmp_data_2_V_fu_2851_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U68(
    .din0(pool_window_0_V_10_reg_3362_pp0_iter3_reg),
    .din1(pool_window_1_V_10_reg_3458_pp0_iter3_reg),
    .din2(pool_window_2_V_10_reg_3554_pp0_iter3_reg),
    .din3(pool_window_3_V_10_reg_3322_pp0_iter3_reg),
    .din4(pool_window_4_V_3_reg_3386_pp0_iter3_reg),
    .din5(pool_window_5_V_3_reg_3482_pp0_iter3_reg),
    .din6(pool_window_6_V_3_reg_3578_pp0_iter3_reg),
    .din7(pool_window_7_V_3_reg_3292_pp0_iter3_reg),
    .din8(pool_window_8_V_3_reg_3410_pp0_iter3_reg),
    .din9(pool_window_9_V_3_reg_3506_pp0_iter3_reg),
    .din10(pool_window_10_V_3_reg_3602_pp0_iter3_reg),
    .din11(pool_window_11_V_3_reg_3270_pp0_iter3_reg),
    .din12(pool_window_12_V_3_reg_3434_pp0_iter3_reg),
    .din13(pool_window_13_V_3_reg_3530_pp0_iter3_reg),
    .din14(pool_window_14_V_3_reg_3626_pp0_iter3_reg),
    .din15(pool_window_15_V_3_reg_3018_pp0_iter3_reg),
    .din16(tmp_data_3_V_fu_2879_p17),
    .dout(tmp_data_3_V_fu_2879_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if ((1'b1 == ap_condition_708)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= 32'd0;
        end else if ((1'b1 == ap_condition_313)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= select_ln222_fu_530_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_386_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_364 <= add_ln241_fu_392_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_364 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_701)) begin
        if ((icmp_ln212_fu_456_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln212_fu_456_p2 == 1'd0)) begin
            pX_1 <= add_ln225_fu_462_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_714)) begin
        if ((icmp_ln216_fu_506_p2 == 1'd1)) begin
            pY_1 <= 32'd0;
        end else if ((icmp_ln216_fu_506_p2 == 1'd0)) begin
            pY_1 <= add_ln220_fu_512_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_701)) begin
        if ((icmp_ln212_fu_456_p2 == 1'd1)) begin
            sX_1 <= 32'd0;
        end else if ((icmp_ln212_fu_456_p2 == 1'd0)) begin
            sX_1 <= select_ln227_fu_480_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_386_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln191_4_reg_2911 <= and_ln191_4_fu_450_p2;
        icmp_ln212_reg_2915 <= icmp_ln212_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln191_4_reg_2911_pp0_iter1_reg <= and_ln191_4_reg_2911;
        icmp_ln241_reg_2902 <= icmp_ln241_fu_386_p2;
        icmp_ln241_reg_2902_pp0_iter1_reg <= icmp_ln241_reg_2902;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln191_4_reg_2911_pp0_iter2_reg <= and_ln191_4_reg_2911_pp0_iter1_reg;
        and_ln191_4_reg_2911_pp0_iter3_reg <= and_ln191_4_reg_2911_pp0_iter2_reg;
        pool_window_0_V_10_reg_3362_pp0_iter3_reg <= pool_window_0_V_10_reg_3362;
        pool_window_0_V_8_reg_3350_pp0_iter3_reg <= pool_window_0_V_8_reg_3350;
        pool_window_0_V_9_reg_3356_pp0_iter3_reg <= pool_window_0_V_9_reg_3356;
        pool_window_0_V_reg_3344_pp0_iter3_reg <= pool_window_0_V_reg_3344;
        pool_window_10_V_1_reg_3590_pp0_iter3_reg <= pool_window_10_V_1_reg_3590;
        pool_window_10_V_2_reg_3596_pp0_iter3_reg <= pool_window_10_V_2_reg_3596;
        pool_window_10_V_3_reg_3602_pp0_iter3_reg <= pool_window_10_V_3_reg_3602;
        pool_window_10_V_reg_3584_pp0_iter3_reg <= pool_window_10_V_reg_3584;
        pool_window_11_V_1_reg_3122_pp0_iter2_reg <= pool_window_11_V_1_reg_3122;
        pool_window_11_V_1_reg_3122_pp0_iter3_reg <= pool_window_11_V_1_reg_3122_pp0_iter2_reg;
        pool_window_11_V_2_reg_3196_pp0_iter2_reg <= pool_window_11_V_2_reg_3196;
        pool_window_11_V_2_reg_3196_pp0_iter3_reg <= pool_window_11_V_2_reg_3196_pp0_iter2_reg;
        pool_window_11_V_3_reg_3270_pp0_iter2_reg <= pool_window_11_V_3_reg_3270;
        pool_window_11_V_3_reg_3270_pp0_iter3_reg <= pool_window_11_V_3_reg_3270_pp0_iter2_reg;
        pool_window_11_V_reg_3048_pp0_iter2_reg <= pool_window_11_V_reg_3048;
        pool_window_11_V_reg_3048_pp0_iter3_reg <= pool_window_11_V_reg_3048_pp0_iter2_reg;
        pool_window_12_V_1_reg_3422_pp0_iter3_reg <= pool_window_12_V_1_reg_3422;
        pool_window_12_V_2_reg_3428_pp0_iter3_reg <= pool_window_12_V_2_reg_3428;
        pool_window_12_V_3_reg_3434_pp0_iter3_reg <= pool_window_12_V_3_reg_3434;
        pool_window_12_V_reg_3416_pp0_iter3_reg <= pool_window_12_V_reg_3416;
        pool_window_13_V_1_reg_3518_pp0_iter3_reg <= pool_window_13_V_1_reg_3518;
        pool_window_13_V_2_reg_3524_pp0_iter3_reg <= pool_window_13_V_2_reg_3524;
        pool_window_13_V_3_reg_3530_pp0_iter3_reg <= pool_window_13_V_3_reg_3530;
        pool_window_13_V_reg_3512_pp0_iter3_reg <= pool_window_13_V_reg_3512;
        pool_window_14_V_1_reg_3614_pp0_iter3_reg <= pool_window_14_V_1_reg_3614;
        pool_window_14_V_2_reg_3620_pp0_iter3_reg <= pool_window_14_V_2_reg_3620;
        pool_window_14_V_3_reg_3626_pp0_iter3_reg <= pool_window_14_V_3_reg_3626;
        pool_window_14_V_reg_3608_pp0_iter3_reg <= pool_window_14_V_reg_3608;
        pool_window_15_V_1_reg_2958_pp0_iter2_reg <= pool_window_15_V_1_reg_2958;
        pool_window_15_V_1_reg_2958_pp0_iter3_reg <= pool_window_15_V_1_reg_2958_pp0_iter2_reg;
        pool_window_15_V_2_reg_2988_pp0_iter2_reg <= pool_window_15_V_2_reg_2988;
        pool_window_15_V_2_reg_2988_pp0_iter3_reg <= pool_window_15_V_2_reg_2988_pp0_iter2_reg;
        pool_window_15_V_3_reg_3018_pp0_iter2_reg <= pool_window_15_V_3_reg_3018;
        pool_window_15_V_3_reg_3018_pp0_iter3_reg <= pool_window_15_V_3_reg_3018_pp0_iter2_reg;
        pool_window_15_V_reg_2928_pp0_iter2_reg <= pool_window_15_V_reg_2928;
        pool_window_15_V_reg_2928_pp0_iter3_reg <= pool_window_15_V_reg_2928_pp0_iter2_reg;
        pool_window_1_V_10_reg_3458_pp0_iter3_reg <= pool_window_1_V_10_reg_3458;
        pool_window_1_V_8_reg_3446_pp0_iter3_reg <= pool_window_1_V_8_reg_3446;
        pool_window_1_V_9_reg_3452_pp0_iter3_reg <= pool_window_1_V_9_reg_3452;
        pool_window_1_V_reg_3440_pp0_iter3_reg <= pool_window_1_V_reg_3440;
        pool_window_2_V_10_reg_3554_pp0_iter3_reg <= pool_window_2_V_10_reg_3554;
        pool_window_2_V_8_reg_3542_pp0_iter3_reg <= pool_window_2_V_8_reg_3542;
        pool_window_2_V_9_reg_3548_pp0_iter3_reg <= pool_window_2_V_9_reg_3548;
        pool_window_2_V_reg_3536_pp0_iter3_reg <= pool_window_2_V_reg_3536;
        pool_window_3_V_10_reg_3322_pp0_iter2_reg <= pool_window_3_V_10_reg_3322;
        pool_window_3_V_10_reg_3322_pp0_iter3_reg <= pool_window_3_V_10_reg_3322_pp0_iter2_reg;
        pool_window_3_V_8_reg_3174_pp0_iter2_reg <= pool_window_3_V_8_reg_3174;
        pool_window_3_V_8_reg_3174_pp0_iter3_reg <= pool_window_3_V_8_reg_3174_pp0_iter2_reg;
        pool_window_3_V_9_reg_3248_pp0_iter2_reg <= pool_window_3_V_9_reg_3248;
        pool_window_3_V_9_reg_3248_pp0_iter3_reg <= pool_window_3_V_9_reg_3248_pp0_iter2_reg;
        pool_window_3_V_reg_3100_pp0_iter2_reg <= pool_window_3_V_reg_3100;
        pool_window_3_V_reg_3100_pp0_iter3_reg <= pool_window_3_V_reg_3100_pp0_iter2_reg;
        pool_window_4_V_1_reg_3374_pp0_iter3_reg <= pool_window_4_V_1_reg_3374;
        pool_window_4_V_2_reg_3380_pp0_iter3_reg <= pool_window_4_V_2_reg_3380;
        pool_window_4_V_3_reg_3386_pp0_iter3_reg <= pool_window_4_V_3_reg_3386;
        pool_window_4_V_reg_3368_pp0_iter3_reg <= pool_window_4_V_reg_3368;
        pool_window_5_V_1_reg_3470_pp0_iter3_reg <= pool_window_5_V_1_reg_3470;
        pool_window_5_V_2_reg_3476_pp0_iter3_reg <= pool_window_5_V_2_reg_3476;
        pool_window_5_V_3_reg_3482_pp0_iter3_reg <= pool_window_5_V_3_reg_3482;
        pool_window_5_V_reg_3464_pp0_iter3_reg <= pool_window_5_V_reg_3464;
        pool_window_6_V_1_reg_3566_pp0_iter3_reg <= pool_window_6_V_1_reg_3566;
        pool_window_6_V_2_reg_3572_pp0_iter3_reg <= pool_window_6_V_2_reg_3572;
        pool_window_6_V_3_reg_3578_pp0_iter3_reg <= pool_window_6_V_3_reg_3578;
        pool_window_6_V_reg_3560_pp0_iter3_reg <= pool_window_6_V_reg_3560;
        pool_window_7_V_1_reg_3144_pp0_iter2_reg <= pool_window_7_V_1_reg_3144;
        pool_window_7_V_1_reg_3144_pp0_iter3_reg <= pool_window_7_V_1_reg_3144_pp0_iter2_reg;
        pool_window_7_V_2_reg_3218_pp0_iter2_reg <= pool_window_7_V_2_reg_3218;
        pool_window_7_V_2_reg_3218_pp0_iter3_reg <= pool_window_7_V_2_reg_3218_pp0_iter2_reg;
        pool_window_7_V_3_reg_3292_pp0_iter2_reg <= pool_window_7_V_3_reg_3292;
        pool_window_7_V_3_reg_3292_pp0_iter3_reg <= pool_window_7_V_3_reg_3292_pp0_iter2_reg;
        pool_window_7_V_reg_3070_pp0_iter2_reg <= pool_window_7_V_reg_3070;
        pool_window_7_V_reg_3070_pp0_iter3_reg <= pool_window_7_V_reg_3070_pp0_iter2_reg;
        pool_window_8_V_1_reg_3398_pp0_iter3_reg <= pool_window_8_V_1_reg_3398;
        pool_window_8_V_2_reg_3404_pp0_iter3_reg <= pool_window_8_V_2_reg_3404;
        pool_window_8_V_3_reg_3410_pp0_iter3_reg <= pool_window_8_V_3_reg_3410;
        pool_window_8_V_reg_3392_pp0_iter3_reg <= pool_window_8_V_reg_3392;
        pool_window_9_V_1_reg_3494_pp0_iter3_reg <= pool_window_9_V_1_reg_3494;
        pool_window_9_V_2_reg_3500_pp0_iter3_reg <= pool_window_9_V_2_reg_3500;
        pool_window_9_V_3_reg_3506_pp0_iter3_reg <= pool_window_9_V_3_reg_3506;
        pool_window_9_V_reg_3488_pp0_iter3_reg <= pool_window_9_V_reg_3488;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter2_reg))) begin
        icmp_ln1496_37_reg_3802 <= icmp_ln1496_37_fu_2550_p2;
        icmp_ln1496_51_reg_3817 <= icmp_ln1496_51_fu_2628_p2;
        icmp_ln1496_65_reg_3832 <= icmp_ln1496_65_fu_2706_p2;
        icmp_ln1496_80_reg_3847 <= icmp_ln1496_80_fu_2784_p2;
        select_ln65_115_reg_3842[2 : 0] <= select_ln65_115_fu_2756_p3[2 : 0];
        select_ln65_51_reg_3797[2 : 0] <= select_ln65_51_fu_2522_p3[2 : 0];
        select_ln65_73_reg_3812[2 : 0] <= select_ln65_73_fu_2600_p3[2 : 0];
        select_ln65_94_reg_3827[2 : 0] <= select_ln65_94_fu_2678_p3[2 : 0];
        zext_ln65_12_reg_3807[2 : 0] <= zext_ln65_12_fu_2570_p1[2 : 0];
        zext_ln65_15_reg_3822[2 : 0] <= zext_ln65_15_fu_2648_p1[2 : 0];
        zext_ln65_18_reg_3837[2 : 0] <= zext_ln65_18_fu_2726_p1[2 : 0];
        zext_ln65_9_reg_3792[2 : 0] <= zext_ln65_9_fu_2492_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_data_V_2_10 <= kernel_data_V_2_14;
        kernel_data_V_2_11 <= kernel_data_V_2_15;
        kernel_data_V_2_12 <= pool_window_3_V_reg_3100;
        kernel_data_V_2_13 <= pool_window_3_V_8_reg_3174;
        kernel_data_V_2_14 <= pool_window_3_V_9_reg_3248;
        kernel_data_V_2_15 <= pool_window_3_V_10_reg_3322;
        kernel_data_V_2_20 <= kernel_data_V_2_24;
        kernel_data_V_2_21 <= kernel_data_V_2_25;
        kernel_data_V_2_22 <= kernel_data_V_2_26;
        kernel_data_V_2_23 <= kernel_data_V_2_27;
        kernel_data_V_2_24 <= kernel_data_V_2_28;
        kernel_data_V_2_25 <= kernel_data_V_2_29;
        kernel_data_V_2_26 <= kernel_data_V_2_30;
        kernel_data_V_2_27 <= kernel_data_V_2_31;
        kernel_data_V_2_28 <= pool_window_7_V_reg_3070;
        kernel_data_V_2_29 <= pool_window_7_V_1_reg_3144;
        kernel_data_V_2_30 <= pool_window_7_V_2_reg_3218;
        kernel_data_V_2_31 <= pool_window_7_V_3_reg_3292;
        kernel_data_V_2_36 <= kernel_data_V_2_40;
        kernel_data_V_2_37 <= kernel_data_V_2_41;
        kernel_data_V_2_38 <= kernel_data_V_2_42;
        kernel_data_V_2_39 <= kernel_data_V_2_43;
        kernel_data_V_2_4 <= kernel_data_V_2_8;
        kernel_data_V_2_40 <= kernel_data_V_2_44;
        kernel_data_V_2_41 <= kernel_data_V_2_45;
        kernel_data_V_2_42 <= kernel_data_V_2_46;
        kernel_data_V_2_43 <= kernel_data_V_2_47;
        kernel_data_V_2_44 <= pool_window_11_V_reg_3048;
        kernel_data_V_2_45 <= pool_window_11_V_1_reg_3122;
        kernel_data_V_2_46 <= pool_window_11_V_2_reg_3196;
        kernel_data_V_2_47 <= pool_window_11_V_3_reg_3270;
        kernel_data_V_2_5 <= kernel_data_V_2_9;
        kernel_data_V_2_52 <= kernel_data_V_2_56;
        kernel_data_V_2_53 <= kernel_data_V_2_57;
        kernel_data_V_2_54 <= kernel_data_V_2_58;
        kernel_data_V_2_55 <= kernel_data_V_2_59;
        kernel_data_V_2_56 <= kernel_data_V_2_60;
        kernel_data_V_2_57 <= kernel_data_V_2_61;
        kernel_data_V_2_58 <= kernel_data_V_2_62;
        kernel_data_V_2_59 <= kernel_data_V_2_63;
        kernel_data_V_2_6 <= kernel_data_V_2_10;
        kernel_data_V_2_60 <= pool_window_15_V_reg_2928;
        kernel_data_V_2_61 <= pool_window_15_V_1_reg_2958;
        kernel_data_V_2_62 <= pool_window_15_V_2_reg_2988;
        kernel_data_V_2_63 <= pool_window_15_V_3_reg_3018;
        kernel_data_V_2_7 <= kernel_data_V_2_11;
        kernel_data_V_2_8 <= kernel_data_V_2_12;
        kernel_data_V_2_9 <= kernel_data_V_2_13;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter1_reg))) begin
        phi_ln65_11_reg_3717 <= phi_ln65_11_fu_1870_p18;
        phi_ln65_12_reg_3727 <= phi_ln65_12_fu_1955_p18;
        phi_ln65_14_reg_3737 <= phi_ln65_14_fu_2036_p18;
        phi_ln65_15_reg_3747 <= phi_ln65_15_fu_2121_p18;
        phi_ln65_17_reg_3757 <= phi_ln65_17_fu_2202_p18;
        phi_ln65_18_reg_3767 <= phi_ln65_18_fu_2287_p18;
        phi_ln65_1_reg_3647 <= phi_ln65_1_fu_1291_p18;
        phi_ln65_20_reg_3777 <= phi_ln65_20_fu_2368_p18;
        phi_ln65_21_reg_3787 <= phi_ln65_21_fu_2453_p18;
        phi_ln65_3_reg_3657 <= phi_ln65_3_fu_1372_p18;
        phi_ln65_4_reg_3667 <= phi_ln65_4_fu_1457_p18;
        phi_ln65_6_reg_3677 <= phi_ln65_6_fu_1538_p18;
        phi_ln65_7_reg_3687 <= phi_ln65_7_fu_1623_p18;
        phi_ln65_9_reg_3697 <= phi_ln65_9_fu_1704_p18;
        phi_ln65_s_reg_3707 <= phi_ln65_s_fu_1789_p18;
        phi_ln_reg_3637 <= phi_ln_fu_1206_p18;
        select_ln65_103_reg_3762[1 : 0] <= select_ln65_103_fu_2275_p3[1 : 0];
        select_ln65_109_reg_3772[1 : 0] <= select_ln65_109_fu_2360_p3[1 : 0];
        select_ln65_34_reg_3632 <= select_ln65_34_fu_1194_p3;
        select_ln65_39_reg_3642[1 : 0] <= select_ln65_39_fu_1279_p3[1 : 0];
        select_ln65_45_reg_3652[1 : 0] <= select_ln65_45_fu_1364_p3[1 : 0];
        select_ln65_56_reg_3672 <= select_ln65_56_fu_1526_p3;
        select_ln65_61_reg_3682[1 : 0] <= select_ln65_61_fu_1611_p3[1 : 0];
        select_ln65_67_reg_3692[1 : 0] <= select_ln65_67_fu_1696_p3[1 : 0];
        select_ln65_77_reg_3712 <= select_ln65_77_fu_1858_p3;
        select_ln65_82_reg_3722[1 : 0] <= select_ln65_82_fu_1943_p3[1 : 0];
        select_ln65_88_reg_3732[1 : 0] <= select_ln65_88_fu_2028_p3[1 : 0];
        select_ln65_98_reg_3752 <= select_ln65_98_fu_2190_p3;
        sext_ln65_1_reg_3702[1 : 0] <= sext_ln65_1_fu_1785_p1[1 : 0];
        sext_ln65_2_reg_3742[1 : 0] <= sext_ln65_2_fu_2117_p1[1 : 0];
        sext_ln65_3_reg_3782[1 : 0] <= sext_ln65_3_fu_2449_p1[1 : 0];
        sext_ln65_reg_3662[1 : 0] <= sext_ln65_fu_1453_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902_pp0_iter1_reg == 1'd0))) begin
        pool_window_0_V_10_reg_3362 <= kernel_data_V_2_7;
        pool_window_0_V_8_reg_3350 <= kernel_data_V_2_5;
        pool_window_0_V_9_reg_3356 <= kernel_data_V_2_6;
        pool_window_0_V_reg_3344 <= kernel_data_V_2_4;
        pool_window_10_V_1_reg_3590 <= kernel_data_V_2_45;
        pool_window_10_V_2_reg_3596 <= kernel_data_V_2_46;
        pool_window_10_V_3_reg_3602 <= kernel_data_V_2_47;
        pool_window_10_V_reg_3584 <= kernel_data_V_2_44;
        pool_window_12_V_1_reg_3422 <= kernel_data_V_2_53;
        pool_window_12_V_2_reg_3428 <= kernel_data_V_2_54;
        pool_window_12_V_3_reg_3434 <= kernel_data_V_2_55;
        pool_window_12_V_reg_3416 <= kernel_data_V_2_52;
        pool_window_13_V_1_reg_3518 <= kernel_data_V_2_57;
        pool_window_13_V_2_reg_3524 <= kernel_data_V_2_58;
        pool_window_13_V_3_reg_3530 <= kernel_data_V_2_59;
        pool_window_13_V_reg_3512 <= kernel_data_V_2_56;
        pool_window_14_V_1_reg_3614 <= kernel_data_V_2_61;
        pool_window_14_V_2_reg_3620 <= kernel_data_V_2_62;
        pool_window_14_V_3_reg_3626 <= kernel_data_V_2_63;
        pool_window_14_V_reg_3608 <= kernel_data_V_2_60;
        pool_window_1_V_10_reg_3458 <= kernel_data_V_2_11;
        pool_window_1_V_8_reg_3446 <= kernel_data_V_2_9;
        pool_window_1_V_9_reg_3452 <= kernel_data_V_2_10;
        pool_window_1_V_reg_3440 <= kernel_data_V_2_8;
        pool_window_2_V_10_reg_3554 <= kernel_data_V_2_15;
        pool_window_2_V_8_reg_3542 <= kernel_data_V_2_13;
        pool_window_2_V_9_reg_3548 <= kernel_data_V_2_14;
        pool_window_2_V_reg_3536 <= kernel_data_V_2_12;
        pool_window_4_V_1_reg_3374 <= kernel_data_V_2_21;
        pool_window_4_V_2_reg_3380 <= kernel_data_V_2_22;
        pool_window_4_V_3_reg_3386 <= kernel_data_V_2_23;
        pool_window_4_V_reg_3368 <= kernel_data_V_2_20;
        pool_window_5_V_1_reg_3470 <= kernel_data_V_2_25;
        pool_window_5_V_2_reg_3476 <= kernel_data_V_2_26;
        pool_window_5_V_3_reg_3482 <= kernel_data_V_2_27;
        pool_window_5_V_reg_3464 <= kernel_data_V_2_24;
        pool_window_6_V_1_reg_3566 <= kernel_data_V_2_29;
        pool_window_6_V_2_reg_3572 <= kernel_data_V_2_30;
        pool_window_6_V_3_reg_3578 <= kernel_data_V_2_31;
        pool_window_6_V_reg_3560 <= kernel_data_V_2_28;
        pool_window_8_V_1_reg_3398 <= kernel_data_V_2_37;
        pool_window_8_V_2_reg_3404 <= kernel_data_V_2_38;
        pool_window_8_V_3_reg_3410 <= kernel_data_V_2_39;
        pool_window_8_V_reg_3392 <= kernel_data_V_2_36;
        pool_window_9_V_1_reg_3494 <= kernel_data_V_2_41;
        pool_window_9_V_2_reg_3500 <= kernel_data_V_2_42;
        pool_window_9_V_3_reg_3506 <= kernel_data_V_2_43;
        pool_window_9_V_reg_3488 <= kernel_data_V_2_40;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pool_window_11_V_1_reg_3122 <= line_buffer_Array_V_2_0_1_q0;
        pool_window_11_V_2_reg_3196 <= line_buffer_Array_V_2_0_2_q0;
        pool_window_11_V_3_reg_3270 <= line_buffer_Array_V_2_0_3_q0;
        pool_window_11_V_reg_3048 <= line_buffer_Array_V_2_0_0_q0;
        pool_window_15_V_1_reg_2958 <= data_V_data_1_V_dout;
        pool_window_15_V_2_reg_2988 <= data_V_data_2_V_dout;
        pool_window_15_V_3_reg_3018 <= data_V_data_3_V_dout;
        pool_window_15_V_reg_2928 <= data_V_data_0_V_dout;
        pool_window_3_V_10_reg_3322 <= line_buffer_Array_V_2_2_3_q0;
        pool_window_3_V_8_reg_3174 <= line_buffer_Array_V_2_2_1_q0;
        pool_window_3_V_9_reg_3248 <= line_buffer_Array_V_2_2_2_q0;
        pool_window_3_V_reg_3100 <= line_buffer_Array_V_2_2_0_q0;
        pool_window_7_V_1_reg_3144 <= line_buffer_Array_V_2_1_1_q0;
        pool_window_7_V_2_reg_3218 <= line_buffer_Array_V_2_1_2_q0;
        pool_window_7_V_3_reg_3292 <= line_buffer_Array_V_2_1_3_q0;
        pool_window_7_V_reg_3070 <= line_buffer_Array_V_2_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_reg_2915 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sY_1 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375;
    end
end

always @ (*) begin
    if ((icmp_ln241_fu_386_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln212_reg_2915 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_sY_1_load = ap_phi_reg_pp0_iter1_storemerge_i_i_reg_375;
    end else begin
        ap_sig_allocacmp_sY_1_load = sY_1;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_2902 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_2902 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_2902 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_2902 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_0_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_1_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_2_2_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_2_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln241_fu_386_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln241_fu_386_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln220_fu_512_p2 = (pY_1 + 32'd1);

assign add_ln222_fu_524_p2 = (ap_sig_allocacmp_sY_1_load + 32'd1);

assign add_ln225_fu_462_p2 = (pX_1 + 32'd1);

assign add_ln227_fu_474_p2 = (sX_1 + 32'd1);

assign add_ln241_fu_392_p2 = (indvar_flatten_reg_364 + 10'd1);

assign and_ln191_3_fu_444_p2 = (icmp_ln191_6_fu_432_p2 & icmp_ln191_5_fu_422_p2);

assign and_ln191_4_fu_450_p2 = (and_ln191_fu_438_p2 & and_ln191_3_fu_444_p2);

assign and_ln191_fu_438_p2 = (icmp_ln191_fu_402_p2 & icmp_ln191_4_fu_412_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((io_acc_block_signal_op375 == 1'b0) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((io_acc_block_signal_op55 == 1'b0) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((io_acc_block_signal_op375 == 1'b0) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((io_acc_block_signal_op55 == 1'b0) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((io_acc_block_signal_op375 == 1'b0) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((io_acc_block_signal_op55 == 1'b0) & (icmp_ln241_reg_2902 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((io_acc_block_signal_op55 == 1'b0) & (icmp_ln241_reg_2902 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((io_acc_block_signal_op375 == 1'b0) & (1'd1 == and_ln191_4_reg_2911_pp0_iter3_reg));
end

always @ (*) begin
    ap_condition_288 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_313 = ((icmp_ln212_fu_456_p2 == 1'd1) & (icmp_ln216_fu_506_p2 == 1'd0) & (icmp_ln241_fu_386_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_701 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_386_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_708 = ((icmp_ln216_fu_506_p2 == 1'd1) & (icmp_ln212_fu_456_p2 == 1'd1) & (icmp_ln241_fu_386_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_714 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_fu_456_p2 == 1'd1) & (icmp_ln241_fu_386_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_375 = 'bx;

assign ap_ready = internal_ap_ready;

assign icmp_ln1496_1_fu_1482_p2 = (($signed(kernel_data_V_2_5) < $signed(kernel_data_V_2_9)) ? 1'b1 : 1'b0);

assign icmp_ln1496_24_fu_1168_p2 = (($signed(kernel_data_V_2_12) < $signed(pool_window_3_V_reg_3100)) ? 1'b1 : 1'b0);

assign icmp_ln1496_25_fu_1188_p2 = (($signed(select_ln65_fu_1160_p3) < $signed(select_ln65_33_fu_1181_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_26_fu_1231_p2 = (($signed(kernel_data_V_2_20) < $signed(kernel_data_V_2_24)) ? 1'b1 : 1'b0);

assign icmp_ln1496_27_fu_1253_p2 = (($signed(kernel_data_V_2_28) < $signed(pool_window_7_V_reg_3070)) ? 1'b1 : 1'b0);

assign icmp_ln1496_28_fu_1273_p2 = (($signed(select_ln65_36_fu_1245_p3) < $signed(select_ln65_38_fu_1266_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_29_fu_2481_p2 = (($signed(phi_ln_reg_3637) < $signed(phi_ln65_1_reg_3647)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_1814_p2 = (($signed(kernel_data_V_2_6) < $signed(kernel_data_V_2_10)) ? 1'b1 : 1'b0);

assign icmp_ln1496_30_fu_1316_p2 = (($signed(kernel_data_V_2_36) < $signed(kernel_data_V_2_40)) ? 1'b1 : 1'b0);

assign icmp_ln1496_31_fu_1338_p2 = (($signed(kernel_data_V_2_44) < $signed(pool_window_11_V_reg_3048)) ? 1'b1 : 1'b0);

assign icmp_ln1496_32_fu_1358_p2 = (($signed(select_ln65_42_fu_1330_p3) < $signed(select_ln65_44_fu_1351_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_33_fu_1397_p2 = (($signed(kernel_data_V_2_52) < $signed(kernel_data_V_2_56)) ? 1'b1 : 1'b0);

assign icmp_ln1496_34_fu_1419_p2 = (($signed(kernel_data_V_2_60) < $signed(pool_window_15_V_reg_2928)) ? 1'b1 : 1'b0);

assign icmp_ln1496_35_fu_1439_p2 = (($signed(select_ln65_47_fu_1411_p3) < $signed(select_ln65_49_fu_1432_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_36_fu_2518_p2 = (($signed(phi_ln65_3_reg_3657) < $signed(phi_ln65_4_reg_3667)) ? 1'b1 : 1'b0);

assign icmp_ln1496_37_fu_2550_p2 = (($signed(phi_ln65_2_fu_2496_p18) < $signed(phi_ln65_5_fu_2528_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_38_fu_1500_p2 = (($signed(kernel_data_V_2_13) < $signed(pool_window_3_V_8_reg_3174)) ? 1'b1 : 1'b0);

assign icmp_ln1496_39_fu_1520_p2 = (($signed(select_ln65_53_fu_1492_p3) < $signed(select_ln65_55_fu_1513_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_40_fu_1563_p2 = (($signed(kernel_data_V_2_21) < $signed(kernel_data_V_2_25)) ? 1'b1 : 1'b0);

assign icmp_ln1496_41_fu_1585_p2 = (($signed(kernel_data_V_2_29) < $signed(pool_window_7_V_1_reg_3144)) ? 1'b1 : 1'b0);

assign icmp_ln1496_42_fu_1605_p2 = (($signed(select_ln65_58_fu_1577_p3) < $signed(select_ln65_60_fu_1598_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_43_fu_2559_p2 = (($signed(phi_ln65_6_reg_3677) < $signed(phi_ln65_7_reg_3687)) ? 1'b1 : 1'b0);

assign icmp_ln1496_44_fu_1648_p2 = (($signed(kernel_data_V_2_37) < $signed(kernel_data_V_2_41)) ? 1'b1 : 1'b0);

assign icmp_ln1496_45_fu_1670_p2 = (($signed(kernel_data_V_2_45) < $signed(pool_window_11_V_1_reg_3122)) ? 1'b1 : 1'b0);

assign icmp_ln1496_46_fu_1690_p2 = (($signed(select_ln65_64_fu_1662_p3) < $signed(select_ln65_66_fu_1683_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_47_fu_1729_p2 = (($signed(kernel_data_V_2_53) < $signed(kernel_data_V_2_57)) ? 1'b1 : 1'b0);

assign icmp_ln1496_48_fu_1751_p2 = (($signed(kernel_data_V_2_61) < $signed(pool_window_15_V_1_reg_2958)) ? 1'b1 : 1'b0);

assign icmp_ln1496_49_fu_1771_p2 = (($signed(select_ln65_69_fu_1743_p3) < $signed(select_ln65_71_fu_1764_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_50_fu_2596_p2 = (($signed(phi_ln65_9_reg_3697) < $signed(phi_ln65_s_reg_3707)) ? 1'b1 : 1'b0);

assign icmp_ln1496_51_fu_2628_p2 = (($signed(phi_ln65_8_fu_2574_p18) < $signed(phi_ln65_10_fu_2606_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_52_fu_1832_p2 = (($signed(kernel_data_V_2_14) < $signed(pool_window_3_V_9_reg_3248)) ? 1'b1 : 1'b0);

assign icmp_ln1496_53_fu_1852_p2 = (($signed(select_ln65_74_fu_1824_p3) < $signed(select_ln65_76_fu_1845_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_54_fu_1895_p2 = (($signed(kernel_data_V_2_22) < $signed(kernel_data_V_2_26)) ? 1'b1 : 1'b0);

assign icmp_ln1496_55_fu_1917_p2 = (($signed(kernel_data_V_2_30) < $signed(pool_window_7_V_2_reg_3218)) ? 1'b1 : 1'b0);

assign icmp_ln1496_56_fu_1937_p2 = (($signed(select_ln65_79_fu_1909_p3) < $signed(select_ln65_81_fu_1930_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_57_fu_2637_p2 = (($signed(phi_ln65_11_reg_3717) < $signed(phi_ln65_12_reg_3727)) ? 1'b1 : 1'b0);

assign icmp_ln1496_58_fu_1980_p2 = (($signed(kernel_data_V_2_38) < $signed(kernel_data_V_2_42)) ? 1'b1 : 1'b0);

assign icmp_ln1496_59_fu_2002_p2 = (($signed(kernel_data_V_2_46) < $signed(pool_window_11_V_2_reg_3196)) ? 1'b1 : 1'b0);

assign icmp_ln1496_60_fu_2022_p2 = (($signed(select_ln65_85_fu_1994_p3) < $signed(select_ln65_87_fu_2015_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_61_fu_2061_p2 = (($signed(kernel_data_V_2_54) < $signed(kernel_data_V_2_58)) ? 1'b1 : 1'b0);

assign icmp_ln1496_62_fu_2083_p2 = (($signed(kernel_data_V_2_62) < $signed(pool_window_15_V_2_reg_2988)) ? 1'b1 : 1'b0);

assign icmp_ln1496_63_fu_2103_p2 = (($signed(select_ln65_90_fu_2075_p3) < $signed(select_ln65_92_fu_2096_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_64_fu_2674_p2 = (($signed(phi_ln65_14_reg_3737) < $signed(phi_ln65_15_reg_3747)) ? 1'b1 : 1'b0);

assign icmp_ln1496_65_fu_2706_p2 = (($signed(phi_ln65_13_fu_2652_p18) < $signed(phi_ln65_16_fu_2684_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_66_fu_2146_p2 = (($signed(kernel_data_V_2_7) < $signed(kernel_data_V_2_11)) ? 1'b1 : 1'b0);

assign icmp_ln1496_67_fu_2164_p2 = (($signed(kernel_data_V_2_15) < $signed(pool_window_3_V_10_reg_3322)) ? 1'b1 : 1'b0);

assign icmp_ln1496_68_fu_2184_p2 = (($signed(select_ln65_95_fu_2156_p3) < $signed(select_ln65_97_fu_2177_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_69_fu_2227_p2 = (($signed(kernel_data_V_2_23) < $signed(kernel_data_V_2_27)) ? 1'b1 : 1'b0);

assign icmp_ln1496_70_fu_2249_p2 = (($signed(kernel_data_V_2_31) < $signed(pool_window_7_V_3_reg_3292)) ? 1'b1 : 1'b0);

assign icmp_ln1496_71_fu_2269_p2 = (($signed(select_ln65_100_fu_2241_p3) < $signed(select_ln65_102_fu_2262_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_72_fu_2715_p2 = (($signed(phi_ln65_17_reg_3757) < $signed(phi_ln65_18_reg_3767)) ? 1'b1 : 1'b0);

assign icmp_ln1496_73_fu_2312_p2 = (($signed(kernel_data_V_2_39) < $signed(kernel_data_V_2_43)) ? 1'b1 : 1'b0);

assign icmp_ln1496_74_fu_2334_p2 = (($signed(kernel_data_V_2_47) < $signed(pool_window_11_V_3_reg_3270)) ? 1'b1 : 1'b0);

assign icmp_ln1496_75_fu_2354_p2 = (($signed(select_ln65_106_fu_2326_p3) < $signed(select_ln65_108_fu_2347_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_76_fu_2393_p2 = (($signed(kernel_data_V_2_55) < $signed(kernel_data_V_2_59)) ? 1'b1 : 1'b0);

assign icmp_ln1496_77_fu_2415_p2 = (($signed(kernel_data_V_2_63) < $signed(pool_window_15_V_3_reg_3018)) ? 1'b1 : 1'b0);

assign icmp_ln1496_78_fu_2435_p2 = (($signed(select_ln65_111_fu_2407_p3) < $signed(select_ln65_113_fu_2428_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_79_fu_2752_p2 = (($signed(phi_ln65_20_reg_3777) < $signed(phi_ln65_21_reg_3787)) ? 1'b1 : 1'b0);

assign icmp_ln1496_80_fu_2784_p2 = (($signed(phi_ln65_19_fu_2730_p18) < $signed(phi_ln65_22_fu_2762_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_1150_p2 = (($signed(kernel_data_V_2_4) < $signed(kernel_data_V_2_8)) ? 1'b1 : 1'b0);

assign icmp_ln191_4_fu_412_p2 = ((ap_sig_allocacmp_sY_1_load == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_5_fu_422_p2 = (($signed(pY_1) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln191_6_fu_432_p2 = (($signed(pX_1) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_402_p2 = ((sX_1 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_456_p2 = ((pX_1 == 32'd25) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_506_p2 = ((pY_1 == 32'd25) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_386_p2 = ((indvar_flatten_reg_364 == 10'd676) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op375 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op55 = (data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign phi_ln65_10_fu_2606_p17 = ((icmp_ln1496_50_fu_2596_p2[0:0] === 1'b1) ? sext_ln65_1_reg_3702 : select_ln65_67_reg_3692);

assign phi_ln65_11_fu_1870_p17 = select_ln65_77_fu_1858_p3;

assign phi_ln65_12_fu_1955_p17 = select_ln65_82_fu_1943_p3;

assign phi_ln65_13_fu_2652_p17 = select_ln65_83_fu_2641_p3;

assign phi_ln65_14_fu_2036_p17 = ((icmp_ln1496_60_fu_2022_p2[0:0] === 1'b1) ? select_ln65_86_fu_2007_p3 : select_ln65_84_fu_1986_p3);

assign phi_ln65_15_fu_2121_p17 = $signed(select_ln65_93_fu_2109_p3);

assign phi_ln65_16_fu_2684_p17 = ((icmp_ln1496_64_fu_2674_p2[0:0] === 1'b1) ? sext_ln65_2_reg_3742 : select_ln65_88_reg_3732);

assign phi_ln65_17_fu_2202_p17 = select_ln65_98_fu_2190_p3;

assign phi_ln65_18_fu_2287_p17 = select_ln65_103_fu_2275_p3;

assign phi_ln65_19_fu_2730_p17 = select_ln65_104_fu_2719_p3;

assign phi_ln65_1_fu_1291_p17 = select_ln65_39_fu_1279_p3;

assign phi_ln65_20_fu_2368_p17 = ((icmp_ln1496_75_fu_2354_p2[0:0] === 1'b1) ? select_ln65_107_fu_2339_p3 : select_ln65_105_fu_2318_p3);

assign phi_ln65_21_fu_2453_p17 = $signed(select_ln65_114_fu_2441_p3);

assign phi_ln65_22_fu_2762_p17 = ((icmp_ln1496_79_fu_2752_p2[0:0] === 1'b1) ? sext_ln65_3_reg_3782 : select_ln65_109_reg_3772);

assign phi_ln65_2_fu_2496_p17 = select_ln65_40_fu_2485_p3;

assign phi_ln65_3_fu_1372_p17 = ((icmp_ln1496_32_fu_1358_p2[0:0] === 1'b1) ? select_ln65_43_fu_1343_p3 : select_ln65_41_fu_1322_p3);

assign phi_ln65_4_fu_1457_p17 = $signed(select_ln65_50_fu_1445_p3);

assign phi_ln65_5_fu_2528_p17 = ((icmp_ln1496_36_fu_2518_p2[0:0] === 1'b1) ? sext_ln65_reg_3662 : select_ln65_45_reg_3652);

assign phi_ln65_6_fu_1538_p17 = select_ln65_56_fu_1526_p3;

assign phi_ln65_7_fu_1623_p17 = select_ln65_61_fu_1611_p3;

assign phi_ln65_8_fu_2574_p17 = select_ln65_62_fu_2563_p3;

assign phi_ln65_9_fu_1704_p17 = ((icmp_ln1496_46_fu_1690_p2[0:0] === 1'b1) ? select_ln65_65_fu_1675_p3 : select_ln65_63_fu_1654_p3);

assign phi_ln65_s_fu_1789_p17 = $signed(select_ln65_72_fu_1777_p3);

assign phi_ln_fu_1206_p17 = select_ln65_34_fu_1194_p3;

assign res_V_data_0_V_din = tmp_data_0_V_fu_2795_p18;

assign res_V_data_1_V_din = tmp_data_1_V_fu_2823_p18;

assign res_V_data_2_V_din = tmp_data_2_V_fu_2851_p18;

assign res_V_data_3_V_din = tmp_data_3_V_fu_2879_p18;

assign select_ln222_fu_530_p3 = ((icmp_ln191_4_fu_412_p2[0:0] === 1'b1) ? 32'd0 : add_ln222_fu_524_p2);

assign select_ln227_fu_480_p3 = ((icmp_ln191_fu_402_p2[0:0] === 1'b1) ? 32'd0 : add_ln227_fu_474_p2);

assign select_ln65_100_fu_2241_p3 = ((icmp_ln1496_69_fu_2227_p2[0:0] === 1'b1) ? kernel_data_V_2_27 : kernel_data_V_2_23);

assign select_ln65_101_fu_1922_p3 = ((icmp_ln1496_55_fu_1917_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_102_fu_2262_p3 = ((icmp_ln1496_70_fu_2249_p2[0:0] === 1'b1) ? pool_window_7_V_3_reg_3292 : kernel_data_V_2_31);

assign select_ln65_103_fu_2275_p3 = ((icmp_ln1496_71_fu_2269_p2[0:0] === 1'b1) ? select_ln65_117_fu_2254_p3 : select_ln65_99_fu_2233_p3);

assign select_ln65_104_fu_2719_p3 = ((icmp_ln1496_72_fu_2715_p2[0:0] === 1'b1) ? select_ln65_103_reg_3762 : zext_ln65_17_fu_2712_p1);

assign select_ln65_105_fu_2318_p3 = ((icmp_ln1496_73_fu_2312_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_106_fu_2326_p3 = ((icmp_ln1496_73_fu_2312_p2[0:0] === 1'b1) ? kernel_data_V_2_43 : kernel_data_V_2_39);

assign select_ln65_107_fu_2339_p3 = ((icmp_ln1496_74_fu_2334_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_108_fu_2347_p3 = ((icmp_ln1496_74_fu_2334_p2[0:0] === 1'b1) ? pool_window_11_V_3_reg_3270 : kernel_data_V_2_47);

assign select_ln65_109_fu_2360_p3 = ((icmp_ln1496_75_fu_2354_p2[0:0] === 1'b1) ? select_ln65_107_fu_2339_p3 : select_ln65_105_fu_2318_p3);

assign select_ln65_110_fu_2399_p3 = ((icmp_ln1496_76_fu_2393_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_111_fu_2407_p3 = ((icmp_ln1496_76_fu_2393_p2[0:0] === 1'b1) ? kernel_data_V_2_59 : kernel_data_V_2_55);

assign select_ln65_112_fu_2088_p3 = ((icmp_ln1496_62_fu_2083_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_113_fu_2428_p3 = ((icmp_ln1496_77_fu_2415_p2[0:0] === 1'b1) ? pool_window_15_V_3_reg_3018 : kernel_data_V_2_63);

assign select_ln65_114_fu_2441_p3 = ((icmp_ln1496_78_fu_2435_p2[0:0] === 1'b1) ? select_ln65_118_fu_2420_p3 : select_ln65_110_fu_2399_p3);

assign select_ln65_115_fu_2756_p3 = ((icmp_ln1496_79_fu_2752_p2[0:0] === 1'b1) ? sext_ln65_3_reg_3782 : select_ln65_109_reg_3772);

assign select_ln65_117_fu_2254_p3 = ((icmp_ln1496_70_fu_2249_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_118_fu_2420_p3 = ((icmp_ln1496_77_fu_2415_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_32_fu_1173_p3 = ((icmp_ln1496_24_fu_1168_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_33_fu_1181_p3 = ((icmp_ln1496_24_fu_1168_p2[0:0] === 1'b1) ? pool_window_3_V_reg_3100 : kernel_data_V_2_12);

assign select_ln65_34_fu_1194_p3 = ((icmp_ln1496_25_fu_1188_p2[0:0] === 1'b1) ? select_ln65_32_fu_1173_p3 : zext_ln65_fu_1156_p1);

assign select_ln65_35_fu_1237_p3 = ((icmp_ln1496_26_fu_1231_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_36_fu_1245_p3 = ((icmp_ln1496_26_fu_1231_p2[0:0] === 1'b1) ? kernel_data_V_2_24 : kernel_data_V_2_20);

assign select_ln65_38_fu_1266_p3 = ((icmp_ln1496_27_fu_1253_p2[0:0] === 1'b1) ? pool_window_7_V_reg_3070 : kernel_data_V_2_28);

assign select_ln65_39_fu_1279_p3 = ((icmp_ln1496_28_fu_1273_p2[0:0] === 1'b1) ? select_ln65_48_fu_1258_p3 : select_ln65_35_fu_1237_p3);

assign select_ln65_40_fu_2485_p3 = ((icmp_ln1496_29_fu_2481_p2[0:0] === 1'b1) ? select_ln65_39_reg_3642 : zext_ln65_8_fu_2478_p1);

assign select_ln65_41_fu_1322_p3 = ((icmp_ln1496_30_fu_1316_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_42_fu_1330_p3 = ((icmp_ln1496_30_fu_1316_p2[0:0] === 1'b1) ? kernel_data_V_2_40 : kernel_data_V_2_36);

assign select_ln65_43_fu_1343_p3 = ((icmp_ln1496_31_fu_1338_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_44_fu_1351_p3 = ((icmp_ln1496_31_fu_1338_p2[0:0] === 1'b1) ? pool_window_11_V_reg_3048 : kernel_data_V_2_44);

assign select_ln65_45_fu_1364_p3 = ((icmp_ln1496_32_fu_1358_p2[0:0] === 1'b1) ? select_ln65_43_fu_1343_p3 : select_ln65_41_fu_1322_p3);

assign select_ln65_46_fu_1403_p3 = ((icmp_ln1496_33_fu_1397_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_47_fu_1411_p3 = ((icmp_ln1496_33_fu_1397_p2[0:0] === 1'b1) ? kernel_data_V_2_56 : kernel_data_V_2_52);

assign select_ln65_48_fu_1258_p3 = ((icmp_ln1496_27_fu_1253_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_49_fu_1432_p3 = ((icmp_ln1496_34_fu_1419_p2[0:0] === 1'b1) ? pool_window_15_V_reg_2928 : kernel_data_V_2_60);

assign select_ln65_50_fu_1445_p3 = ((icmp_ln1496_35_fu_1439_p2[0:0] === 1'b1) ? select_ln65_52_fu_1424_p3 : select_ln65_46_fu_1403_p3);

assign select_ln65_51_fu_2522_p3 = ((icmp_ln1496_36_fu_2518_p2[0:0] === 1'b1) ? sext_ln65_reg_3662 : select_ln65_45_reg_3652);

assign select_ln65_52_fu_1424_p3 = ((icmp_ln1496_34_fu_1419_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_53_fu_1492_p3 = ((icmp_ln1496_1_fu_1482_p2[0:0] === 1'b1) ? kernel_data_V_2_9 : kernel_data_V_2_5);

assign select_ln65_54_fu_1505_p3 = ((icmp_ln1496_38_fu_1500_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_55_fu_1513_p3 = ((icmp_ln1496_38_fu_1500_p2[0:0] === 1'b1) ? pool_window_3_V_8_reg_3174 : kernel_data_V_2_13);

assign select_ln65_56_fu_1526_p3 = ((icmp_ln1496_39_fu_1520_p2[0:0] === 1'b1) ? select_ln65_54_fu_1505_p3 : zext_ln65_10_fu_1488_p1);

assign select_ln65_57_fu_1569_p3 = ((icmp_ln1496_40_fu_1563_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_58_fu_1577_p3 = ((icmp_ln1496_40_fu_1563_p2[0:0] === 1'b1) ? kernel_data_V_2_25 : kernel_data_V_2_21);

assign select_ln65_60_fu_1598_p3 = ((icmp_ln1496_41_fu_1585_p2[0:0] === 1'b1) ? pool_window_7_V_1_reg_3144 : kernel_data_V_2_29);

assign select_ln65_61_fu_1611_p3 = ((icmp_ln1496_42_fu_1605_p2[0:0] === 1'b1) ? select_ln65_70_fu_1590_p3 : select_ln65_57_fu_1569_p3);

assign select_ln65_62_fu_2563_p3 = ((icmp_ln1496_43_fu_2559_p2[0:0] === 1'b1) ? select_ln65_61_reg_3682 : zext_ln65_11_fu_2556_p1);

assign select_ln65_63_fu_1654_p3 = ((icmp_ln1496_44_fu_1648_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_64_fu_1662_p3 = ((icmp_ln1496_44_fu_1648_p2[0:0] === 1'b1) ? kernel_data_V_2_41 : kernel_data_V_2_37);

assign select_ln65_65_fu_1675_p3 = ((icmp_ln1496_45_fu_1670_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_66_fu_1683_p3 = ((icmp_ln1496_45_fu_1670_p2[0:0] === 1'b1) ? pool_window_11_V_1_reg_3122 : kernel_data_V_2_45);

assign select_ln65_67_fu_1696_p3 = ((icmp_ln1496_46_fu_1690_p2[0:0] === 1'b1) ? select_ln65_65_fu_1675_p3 : select_ln65_63_fu_1654_p3);

assign select_ln65_68_fu_1735_p3 = ((icmp_ln1496_47_fu_1729_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_69_fu_1743_p3 = ((icmp_ln1496_47_fu_1729_p2[0:0] === 1'b1) ? kernel_data_V_2_57 : kernel_data_V_2_53);

assign select_ln65_70_fu_1590_p3 = ((icmp_ln1496_41_fu_1585_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_71_fu_1764_p3 = ((icmp_ln1496_48_fu_1751_p2[0:0] === 1'b1) ? pool_window_15_V_1_reg_2958 : kernel_data_V_2_61);

assign select_ln65_72_fu_1777_p3 = ((icmp_ln1496_49_fu_1771_p2[0:0] === 1'b1) ? select_ln65_80_fu_1756_p3 : select_ln65_68_fu_1735_p3);

assign select_ln65_73_fu_2600_p3 = ((icmp_ln1496_50_fu_2596_p2[0:0] === 1'b1) ? sext_ln65_1_reg_3702 : select_ln65_67_reg_3692);

assign select_ln65_74_fu_1824_p3 = ((icmp_ln1496_2_fu_1814_p2[0:0] === 1'b1) ? kernel_data_V_2_10 : kernel_data_V_2_6);

assign select_ln65_75_fu_1837_p3 = ((icmp_ln1496_52_fu_1832_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_76_fu_1845_p3 = ((icmp_ln1496_52_fu_1832_p2[0:0] === 1'b1) ? pool_window_3_V_9_reg_3248 : kernel_data_V_2_14);

assign select_ln65_77_fu_1858_p3 = ((icmp_ln1496_53_fu_1852_p2[0:0] === 1'b1) ? select_ln65_75_fu_1837_p3 : zext_ln65_13_fu_1820_p1);

assign select_ln65_78_fu_1901_p3 = ((icmp_ln1496_54_fu_1895_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_79_fu_1909_p3 = ((icmp_ln1496_54_fu_1895_p2[0:0] === 1'b1) ? kernel_data_V_2_26 : kernel_data_V_2_22);

assign select_ln65_80_fu_1756_p3 = ((icmp_ln1496_48_fu_1751_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_81_fu_1930_p3 = ((icmp_ln1496_55_fu_1917_p2[0:0] === 1'b1) ? pool_window_7_V_2_reg_3218 : kernel_data_V_2_30);

assign select_ln65_82_fu_1943_p3 = ((icmp_ln1496_56_fu_1937_p2[0:0] === 1'b1) ? select_ln65_101_fu_1922_p3 : select_ln65_78_fu_1901_p3);

assign select_ln65_83_fu_2641_p3 = ((icmp_ln1496_57_fu_2637_p2[0:0] === 1'b1) ? select_ln65_82_reg_3722 : zext_ln65_14_fu_2634_p1);

assign select_ln65_84_fu_1986_p3 = ((icmp_ln1496_58_fu_1980_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_85_fu_1994_p3 = ((icmp_ln1496_58_fu_1980_p2[0:0] === 1'b1) ? kernel_data_V_2_42 : kernel_data_V_2_38);

assign select_ln65_86_fu_2007_p3 = ((icmp_ln1496_59_fu_2002_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_87_fu_2015_p3 = ((icmp_ln1496_59_fu_2002_p2[0:0] === 1'b1) ? pool_window_11_V_2_reg_3196 : kernel_data_V_2_46);

assign select_ln65_88_fu_2028_p3 = ((icmp_ln1496_60_fu_2022_p2[0:0] === 1'b1) ? select_ln65_86_fu_2007_p3 : select_ln65_84_fu_1986_p3);

assign select_ln65_89_fu_2067_p3 = ((icmp_ln1496_61_fu_2061_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_90_fu_2075_p3 = ((icmp_ln1496_61_fu_2061_p2[0:0] === 1'b1) ? kernel_data_V_2_58 : kernel_data_V_2_54);

assign select_ln65_92_fu_2096_p3 = ((icmp_ln1496_62_fu_2083_p2[0:0] === 1'b1) ? pool_window_15_V_2_reg_2988 : kernel_data_V_2_62);

assign select_ln65_93_fu_2109_p3 = ((icmp_ln1496_63_fu_2103_p2[0:0] === 1'b1) ? select_ln65_112_fu_2088_p3 : select_ln65_89_fu_2067_p3);

assign select_ln65_94_fu_2678_p3 = ((icmp_ln1496_64_fu_2674_p2[0:0] === 1'b1) ? sext_ln65_2_reg_3742 : select_ln65_88_reg_3732);

assign select_ln65_95_fu_2156_p3 = ((icmp_ln1496_66_fu_2146_p2[0:0] === 1'b1) ? kernel_data_V_2_11 : kernel_data_V_2_7);

assign select_ln65_96_fu_2169_p3 = ((icmp_ln1496_67_fu_2164_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_97_fu_2177_p3 = ((icmp_ln1496_67_fu_2164_p2[0:0] === 1'b1) ? pool_window_3_V_10_reg_3322 : kernel_data_V_2_15);

assign select_ln65_98_fu_2190_p3 = ((icmp_ln1496_68_fu_2184_p2[0:0] === 1'b1) ? select_ln65_96_fu_2169_p3 : zext_ln65_16_fu_2152_p1);

assign select_ln65_99_fu_2233_p3 = ((icmp_ln1496_69_fu_2227_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_fu_1160_p3 = ((icmp_ln1496_fu_1150_p2[0:0] === 1'b1) ? kernel_data_V_2_8 : kernel_data_V_2_4);

assign sext_ln65_1_fu_1785_p1 = $signed(select_ln65_72_fu_1777_p3);

assign sext_ln65_2_fu_2117_p1 = $signed(select_ln65_93_fu_2109_p3);

assign sext_ln65_3_fu_2449_p1 = $signed(select_ln65_114_fu_2441_p3);

assign sext_ln65_fu_1453_p1 = $signed(select_ln65_50_fu_1445_p3);

assign start_out = real_start;

assign tmp_data_0_V_fu_2795_p17 = ((icmp_ln1496_37_reg_3802[0:0] === 1'b1) ? select_ln65_51_reg_3797 : zext_ln65_9_reg_3792);

assign tmp_data_1_V_fu_2823_p17 = ((icmp_ln1496_51_reg_3817[0:0] === 1'b1) ? select_ln65_73_reg_3812 : zext_ln65_12_reg_3807);

assign tmp_data_2_V_fu_2851_p17 = ((icmp_ln1496_65_reg_3832[0:0] === 1'b1) ? select_ln65_94_reg_3827 : zext_ln65_15_reg_3822);

assign tmp_data_3_V_fu_2879_p17 = ((icmp_ln1496_80_reg_3847[0:0] === 1'b1) ? select_ln65_115_reg_3842 : zext_ln65_18_reg_3837);

assign zext_ln65_10_fu_1488_p1 = icmp_ln1496_1_fu_1482_p2;

assign zext_ln65_11_fu_2556_p1 = select_ln65_56_reg_3672;

assign zext_ln65_12_fu_2570_p1 = select_ln65_62_fu_2563_p3;

assign zext_ln65_13_fu_1820_p1 = icmp_ln1496_2_fu_1814_p2;

assign zext_ln65_14_fu_2634_p1 = select_ln65_77_reg_3712;

assign zext_ln65_15_fu_2648_p1 = select_ln65_83_fu_2641_p3;

assign zext_ln65_16_fu_2152_p1 = icmp_ln1496_66_fu_2146_p2;

assign zext_ln65_17_fu_2712_p1 = select_ln65_98_reg_3752;

assign zext_ln65_18_fu_2726_p1 = select_ln65_104_fu_2719_p3;

assign zext_ln65_8_fu_2478_p1 = select_ln65_34_reg_3632;

assign zext_ln65_9_fu_2492_p1 = select_ln65_40_fu_2485_p3;

assign zext_ln65_fu_1156_p1 = icmp_ln1496_fu_1150_p2;

always @ (posedge ap_clk) begin
    select_ln65_39_reg_3642[2] <= 1'b1;
    select_ln65_45_reg_3652[3:2] <= 2'b10;
    sext_ln65_reg_3662[3:2] <= 2'b11;
    select_ln65_61_reg_3682[2] <= 1'b1;
    select_ln65_67_reg_3692[3:2] <= 2'b10;
    sext_ln65_1_reg_3702[3:2] <= 2'b11;
    select_ln65_82_reg_3722[2] <= 1'b1;
    select_ln65_88_reg_3732[3:2] <= 2'b10;
    sext_ln65_2_reg_3742[3:2] <= 2'b11;
    select_ln65_103_reg_3762[2] <= 1'b1;
    select_ln65_109_reg_3772[3:2] <= 2'b10;
    sext_ln65_3_reg_3782[3:2] <= 2'b11;
    zext_ln65_9_reg_3792[3] <= 1'b0;
    select_ln65_51_reg_3797[3] <= 1'b1;
    zext_ln65_12_reg_3807[3] <= 1'b0;
    select_ln65_73_reg_3812[3] <= 1'b1;
    zext_ln65_15_reg_3822[3] <= 1'b0;
    select_ln65_94_reg_3827[3] <= 1'b1;
    zext_ln65_18_reg_3837[3] <= 1'b0;
    select_ln65_115_reg_3842[3] <= 1'b1;
end

endmodule //pooling2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_4u_config4_s
