// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state17 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] exp_table8_address0;
reg    exp_table8_ce0;
wire   [16:0] exp_table8_q0;
wire   [9:0] invert_table10_address0;
reg    invert_table10_ce0;
wire   [17:0] invert_table10_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln196_reg_931;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln196_reg_931_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [9:0] i_0_reg_276;
wire   [0:0] icmp_ln196_fu_317_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln196_reg_931_pp0_iter1_reg;
reg   [0:0] icmp_ln196_reg_931_pp0_iter2_reg;
wire   [9:0] i_fu_323_p2;
reg   [9:0] i_reg_935;
reg  signed [15:0] tmp_data_0_V_1_reg_940;
wire    io_acc_block_signal_op32;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
reg  signed [15:0] tmp_data_1_V_1_reg_946;
reg  signed [15:0] tmp_data_2_V_1_reg_952;
reg  signed [15:0] tmp_data_3_V_1_reg_958;
wire   [0:0] icmp_ln1496_fu_345_p2;
reg   [0:0] icmp_ln1496_reg_964;
wire   [0:0] icmp_ln1496_7_fu_351_p2;
reg   [0:0] icmp_ln1496_7_reg_969;
wire   [9:0] y_V_fu_631_p3;
reg   [9:0] y_V_reg_974;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    io_acc_block_signal_op169;
reg    ap_block_state16_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_11001;
wire   [9:0] y_V_9_fu_665_p3;
reg   [9:0] y_V_9_reg_979;
wire   [9:0] y_V_10_fu_699_p3;
reg   [9:0] y_V_10_reg_984;
wire   [9:0] y_V_11_fu_733_p3;
reg   [9:0] y_V_11_reg_989;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [16:0] exp_res_0_V_reg_999;
reg    ap_enable_reg_pp0_iter1;
reg   [16:0] exp_res_0_V_reg_999_pp0_iter2_reg;
reg   [16:0] exp_res_1_V_reg_1010;
reg   [16:0] exp_res_1_V_reg_1010_pp0_iter2_reg;
reg   [16:0] exp_res_2_V_reg_1021;
reg   [16:0] exp_res_2_V_reg_1021_pp0_iter2_reg;
reg   [16:0] exp_res_3_V_reg_1032;
reg   [16:0] exp_res_3_V_reg_1032_pp0_iter2_reg;
reg   [0:0] p_Result_23_reg_1037;
reg   [0:0] p_Result_24_reg_1044;
reg   [9:0] tmp_20_reg_1051;
reg   [17:0] inv_exp_sum_V_reg_1062;
wire  signed [25:0] sext_ln241_fu_911_p1;
reg  signed [25:0] sext_ln241_reg_1067;
reg   [15:0] tmp_data_0_V_reg_1072;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] tmp_data_1_V_reg_1077;
reg   [15:0] tmp_data_2_V_reg_1082;
reg   [15:0] tmp_data_3_V_reg_1087;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [9:0] ap_phi_mux_i_0_phi_fu_280_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln225_fu_741_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln225_1_fu_745_p1;
wire   [63:0] zext_ln225_2_fu_749_p1;
wire   [63:0] zext_ln225_3_fu_753_p1;
wire   [63:0] zext_ln235_fu_906_p1;
reg    ap_block_pp0_stage2_01001;
reg  signed [17:0] grp_fu_287_p0;
reg   [16:0] grp_fu_287_p1;
wire   [25:0] zext_ln1118_fu_915_p1;
wire   [25:0] zext_ln1118_8_fu_919_p1;
wire   [25:0] zext_ln1118_9_fu_923_p1;
wire   [25:0] zext_ln1118_10_fu_927_p1;
wire   [25:0] grp_fu_287_p2;
wire  signed [15:0] icmp_ln1496_fu_345_p0;
wire  signed [15:0] icmp_ln1496_fu_345_p1;
wire  signed [15:0] icmp_ln1496_7_fu_351_p0;
wire  signed [15:0] icmp_ln1496_7_fu_351_p1;
wire   [15:0] select_ln65_fu_357_p3;
wire   [15:0] select_ln65_7_fu_362_p3;
wire   [0:0] icmp_ln1496_8_fu_367_p2;
wire   [15:0] x_max_V_fu_373_p3;
wire  signed [16:0] sext_ln703_fu_381_p1;
wire  signed [16:0] sext_ln703_9_fu_384_p1;
wire   [16:0] sub_ln1193_fu_388_p2;
wire   [0:0] tmp_36_fu_402_p3;
wire   [0:0] tmp_35_fu_394_p3;
wire   [0:0] xor_ln786_fu_410_p2;
wire   [0:0] xor_ln340_fu_428_p2;
wire  signed [16:0] sext_ln703_10_fu_440_p1;
wire   [16:0] sub_ln1193_8_fu_443_p2;
wire   [0:0] tmp_38_fu_457_p3;
wire   [0:0] tmp_37_fu_449_p3;
wire   [0:0] xor_ln786_1_fu_465_p2;
wire   [0:0] xor_ln340_1_fu_483_p2;
wire  signed [16:0] sext_ln703_11_fu_495_p1;
wire   [16:0] sub_ln1193_9_fu_498_p2;
wire   [0:0] tmp_40_fu_512_p3;
wire   [0:0] tmp_39_fu_504_p3;
wire   [0:0] xor_ln786_2_fu_520_p2;
wire   [0:0] xor_ln340_2_fu_538_p2;
wire  signed [16:0] sext_ln703_12_fu_550_p1;
wire   [16:0] sub_ln1193_10_fu_553_p2;
wire   [0:0] tmp_42_fu_567_p3;
wire   [0:0] tmp_41_fu_559_p3;
wire   [0:0] xor_ln786_3_fu_575_p2;
wire   [0:0] xor_ln340_3_fu_593_p2;
wire   [0:0] xor_ln340_18_fu_422_p2;
wire   [9:0] tmp_fu_605_p4;
wire   [0:0] and_ln786_fu_416_p2;
wire   [0:0] or_ln340_fu_434_p2;
wire   [9:0] select_ln340_fu_615_p3;
wire   [9:0] select_ln388_fu_623_p3;
wire   [0:0] xor_ln340_19_fu_477_p2;
wire   [9:0] tmp_17_fu_639_p4;
wire   [0:0] and_ln786_8_fu_471_p2;
wire   [0:0] or_ln340_9_fu_489_p2;
wire   [9:0] select_ln340_19_fu_649_p3;
wire   [9:0] select_ln388_9_fu_657_p3;
wire   [0:0] xor_ln340_20_fu_532_p2;
wire   [9:0] tmp_18_fu_673_p4;
wire   [0:0] and_ln786_9_fu_526_p2;
wire   [0:0] or_ln340_10_fu_544_p2;
wire   [9:0] select_ln340_21_fu_683_p3;
wire   [9:0] select_ln388_10_fu_691_p3;
wire   [0:0] xor_ln340_21_fu_587_p2;
wire   [9:0] tmp_19_fu_707_p4;
wire   [0:0] and_ln786_10_fu_581_p2;
wire   [0:0] or_ln340_11_fu_599_p2;
wire   [9:0] select_ln340_23_fu_717_p3;
wire   [9:0] select_ln388_11_fu_725_p3;
wire   [17:0] p_Val2_18_fu_757_p1;
wire   [17:0] p_Val2_19_fu_760_p1;
wire   [17:0] p_Val2_20_fu_763_p2;
wire   [0:0] p_Result_s_fu_769_p3;
wire   [17:0] p_Val2_21_fu_785_p1;
wire   [17:0] p_Val2_22_fu_788_p1;
wire   [17:0] p_Val2_23_fu_792_p2;
wire   [0:0] p_Result_22_fu_798_p3;
wire  signed [17:0] p_Val2_24_fu_777_p3;
wire  signed [17:0] p_Val2_25_fu_806_p3;
wire  signed [18:0] lhs_V_fu_814_p1;
wire  signed [18:0] rhs_V_fu_818_p1;
wire   [18:0] ret_V_fu_822_p2;
wire   [17:0] p_Val2_27_fu_836_p2;
wire   [0:0] xor_ln786_9_fu_860_p2;
wire   [0:0] xor_ln340_9_fu_874_p2;
wire   [0:0] xor_ln340_22_fu_870_p2;
wire   [0:0] underflow_fu_865_p2;
wire   [0:0] or_ln340_12_fu_879_p2;
wire   [9:0] select_ln340_27_fu_884_p3;
wire   [9:0] select_ln388_12_fu_891_p3;
wire   [9:0] y_V_12_fu_898_p3;
wire    ap_CS_fsm_state17;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_exp_table8 #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table8_address0),
    .ce0(exp_table8_ce0),
    .q0(exp_table8_q0)
);

softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table10_address0),
    .ce0(invert_table10_ce0),
    .q0(invert_table10_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_276 <= i_reg_935;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_276 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_0_V_reg_999 <= exp_table8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_0_V_reg_999_pp0_iter2_reg <= exp_res_0_V_reg_999;
        icmp_ln196_reg_931 <= icmp_ln196_fu_317_p2;
        icmp_ln196_reg_931_pp0_iter1_reg <= icmp_ln196_reg_931;
        icmp_ln196_reg_931_pp0_iter2_reg <= icmp_ln196_reg_931_pp0_iter1_reg;
        icmp_ln196_reg_931_pp0_iter3_reg <= icmp_ln196_reg_931_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        exp_res_1_V_reg_1010 <= exp_table8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        exp_res_1_V_reg_1010_pp0_iter2_reg <= exp_res_1_V_reg_1010;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        exp_res_2_V_reg_1021 <= exp_table8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        exp_res_2_V_reg_1021_pp0_iter2_reg <= exp_res_2_V_reg_1021;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        exp_res_3_V_reg_1032 <= exp_table8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        exp_res_3_V_reg_1032_pp0_iter2_reg <= exp_res_3_V_reg_1032;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_935 <= i_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln1496_7_reg_969 <= icmp_ln1496_7_fu_351_p2;
        icmp_ln1496_reg_964 <= icmp_ln1496_fu_345_p2;
        tmp_data_0_V_1_reg_940 <= data_V_data_0_V_dout;
        tmp_data_1_V_1_reg_946 <= data_V_data_1_V_dout;
        tmp_data_2_V_1_reg_952 <= data_V_data_2_V_dout;
        tmp_data_3_V_1_reg_958 <= data_V_data_3_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        inv_exp_sum_V_reg_1062 <= invert_table10_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        p_Result_23_reg_1037 <= ret_V_fu_822_p2[32'd18];
        p_Result_24_reg_1044 <= p_Val2_27_fu_836_p2[32'd17];
        tmp_20_reg_1051 <= {{p_Val2_27_fu_836_p2[17:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        sext_ln241_reg_1067 <= sext_ln241_fu_911_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_data_0_V_reg_1072 <= {{grp_fu_287_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_data_1_V_reg_1077 <= {{grp_fu_287_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_2_V_reg_1082 <= {{grp_fu_287_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_data_3_V_reg_1087 <= {{grp_fu_287_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        y_V_10_reg_984 <= y_V_10_fu_699_p3;
        y_V_11_reg_989 <= y_V_11_fu_733_p3;
        y_V_9_reg_979 <= y_V_9_fu_665_p3;
        y_V_reg_974 <= y_V_fu_631_p3;
    end
end

always @ (*) begin
    if ((icmp_ln196_fu_317_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_280_p4 = i_reg_935;
    end else begin
        ap_phi_mux_i_0_phi_fu_280_p4 = i_0_reg_276;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        exp_table8_address0 = zext_ln225_3_fu_753_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        exp_table8_address0 = zext_ln225_2_fu_749_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table8_address0 = zext_ln225_1_fu_745_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_table8_address0 = zext_ln225_fu_741_p1;
    end else begin
        exp_table8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        exp_table8_ce0 = 1'b1;
    end else begin
        exp_table8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_287_p0 = sext_ln241_reg_1067;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_287_p0 = sext_ln241_fu_911_p1;
    end else begin
        grp_fu_287_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_287_p1 = zext_ln1118_10_fu_927_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_287_p1 = zext_ln1118_9_fu_923_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_287_p1 = zext_ln1118_8_fu_919_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_287_p1 = zext_ln1118_fu_915_p1;
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        invert_table10_ce0 = 1'b1;
    end else begin
        invert_table10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln196_fu_317_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln196_fu_317_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln786_10_fu_581_p2 = (xor_ln786_3_fu_575_p2 & tmp_41_fu_559_p3);

assign and_ln786_8_fu_471_p2 = (xor_ln786_1_fu_465_p2 & tmp_37_fu_449_p3);

assign and_ln786_9_fu_526_p2 = (xor_ln786_2_fu_520_p2 & tmp_39_fu_504_p3);

assign and_ln786_fu_416_p2 = (xor_ln786_fu_410_p2 & tmp_35_fu_394_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln196_reg_931 == 1'd0) & (io_acc_block_signal_op32 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln196_reg_931 == 1'd0) & (io_acc_block_signal_op32 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op169 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op169 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op169 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage2_iter3 = ((icmp_ln196_reg_931_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op169 == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln196_reg_931 == 1'd0) & (io_acc_block_signal_op32 == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_287_p2 = ($signed(grp_fu_287_p0) * $signed({{1'b0}, {grp_fu_287_p1}}));

assign i_fu_323_p2 = (ap_phi_mux_i_0_phi_fu_280_p4 + 10'd1);

assign icmp_ln1496_7_fu_351_p0 = data_V_data_2_V_dout;

assign icmp_ln1496_7_fu_351_p1 = data_V_data_3_V_dout;

assign icmp_ln1496_7_fu_351_p2 = (($signed(icmp_ln1496_7_fu_351_p0) < $signed(icmp_ln1496_7_fu_351_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_367_p2 = (($signed(select_ln65_fu_357_p3) < $signed(select_ln65_7_fu_362_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_345_p0 = data_V_data_0_V_dout;

assign icmp_ln1496_fu_345_p1 = data_V_data_1_V_dout;

assign icmp_ln1496_fu_345_p2 = (($signed(icmp_ln1496_fu_345_p0) < $signed(icmp_ln1496_fu_345_p1)) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_317_p2 = ((ap_phi_mux_i_0_phi_fu_280_p4 == 10'd676) ? 1'b1 : 1'b0);

assign invert_table10_address0 = zext_ln235_fu_906_p1;

assign io_acc_block_signal_op169 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op32 = (data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign lhs_V_fu_814_p1 = p_Val2_24_fu_777_p3;

assign or_ln340_10_fu_544_p2 = (xor_ln340_2_fu_538_p2 | tmp_40_fu_512_p3);

assign or_ln340_11_fu_599_p2 = (xor_ln340_3_fu_593_p2 | tmp_42_fu_567_p3);

assign or_ln340_12_fu_879_p2 = (xor_ln340_9_fu_874_p2 | p_Result_24_reg_1044);

assign or_ln340_9_fu_489_p2 = (xor_ln340_1_fu_483_p2 | tmp_38_fu_457_p3);

assign or_ln340_fu_434_p2 = (xor_ln340_fu_428_p2 | tmp_36_fu_402_p3);

assign p_Result_22_fu_798_p3 = p_Val2_23_fu_792_p2[32'd17];

assign p_Result_s_fu_769_p3 = p_Val2_20_fu_763_p2[32'd17];

assign p_Val2_18_fu_757_p1 = exp_res_0_V_reg_999;

assign p_Val2_19_fu_760_p1 = exp_res_1_V_reg_1010;

assign p_Val2_20_fu_763_p2 = (p_Val2_18_fu_757_p1 + p_Val2_19_fu_760_p1);

assign p_Val2_21_fu_785_p1 = exp_res_2_V_reg_1021;

assign p_Val2_22_fu_788_p1 = exp_table8_q0;

assign p_Val2_23_fu_792_p2 = (p_Val2_21_fu_785_p1 + p_Val2_22_fu_788_p1);

assign p_Val2_24_fu_777_p3 = ((p_Result_s_fu_769_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_20_fu_763_p2);

assign p_Val2_25_fu_806_p3 = ((p_Result_22_fu_798_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_23_fu_792_p2);

assign p_Val2_27_fu_836_p2 = ($signed(p_Val2_25_fu_806_p3) + $signed(p_Val2_24_fu_777_p3));

assign res_V_data_0_V_din = tmp_data_0_V_reg_1072;

assign res_V_data_1_V_din = tmp_data_1_V_reg_1077;

assign res_V_data_2_V_din = tmp_data_2_V_reg_1082;

assign res_V_data_3_V_din = tmp_data_3_V_reg_1087;

assign ret_V_fu_822_p2 = ($signed(lhs_V_fu_814_p1) + $signed(rhs_V_fu_818_p1));

assign rhs_V_fu_818_p1 = p_Val2_25_fu_806_p3;

assign select_ln340_19_fu_649_p3 = ((xor_ln340_19_fu_477_p2[0:0] === 1'b1) ? 10'd511 : tmp_17_fu_639_p4);

assign select_ln340_21_fu_683_p3 = ((xor_ln340_20_fu_532_p2[0:0] === 1'b1) ? 10'd511 : tmp_18_fu_673_p4);

assign select_ln340_23_fu_717_p3 = ((xor_ln340_21_fu_587_p2[0:0] === 1'b1) ? 10'd511 : tmp_19_fu_707_p4);

assign select_ln340_27_fu_884_p3 = ((xor_ln340_22_fu_870_p2[0:0] === 1'b1) ? 10'd511 : tmp_20_reg_1051);

assign select_ln340_fu_615_p3 = ((xor_ln340_18_fu_422_p2[0:0] === 1'b1) ? 10'd511 : tmp_fu_605_p4);

assign select_ln388_10_fu_691_p3 = ((and_ln786_9_fu_526_p2[0:0] === 1'b1) ? 10'd512 : tmp_18_fu_673_p4);

assign select_ln388_11_fu_725_p3 = ((and_ln786_10_fu_581_p2[0:0] === 1'b1) ? 10'd512 : tmp_19_fu_707_p4);

assign select_ln388_12_fu_891_p3 = ((underflow_fu_865_p2[0:0] === 1'b1) ? 10'd512 : tmp_20_reg_1051);

assign select_ln388_9_fu_657_p3 = ((and_ln786_8_fu_471_p2[0:0] === 1'b1) ? 10'd512 : tmp_17_fu_639_p4);

assign select_ln388_fu_623_p3 = ((and_ln786_fu_416_p2[0:0] === 1'b1) ? 10'd512 : tmp_fu_605_p4);

assign select_ln65_7_fu_362_p3 = ((icmp_ln1496_7_reg_969[0:0] === 1'b1) ? tmp_data_3_V_1_reg_958 : tmp_data_2_V_1_reg_952);

assign select_ln65_fu_357_p3 = ((icmp_ln1496_reg_964[0:0] === 1'b1) ? tmp_data_1_V_1_reg_946 : tmp_data_0_V_1_reg_940);

assign sext_ln241_fu_911_p1 = $signed(inv_exp_sum_V_reg_1062);

assign sext_ln703_10_fu_440_p1 = tmp_data_1_V_1_reg_946;

assign sext_ln703_11_fu_495_p1 = tmp_data_2_V_1_reg_952;

assign sext_ln703_12_fu_550_p1 = tmp_data_3_V_1_reg_958;

assign sext_ln703_9_fu_384_p1 = $signed(x_max_V_fu_373_p3);

assign sext_ln703_fu_381_p1 = tmp_data_0_V_1_reg_940;

assign sub_ln1193_10_fu_553_p2 = ($signed(sext_ln703_12_fu_550_p1) - $signed(sext_ln703_9_fu_384_p1));

assign sub_ln1193_8_fu_443_p2 = ($signed(sext_ln703_10_fu_440_p1) - $signed(sext_ln703_9_fu_384_p1));

assign sub_ln1193_9_fu_498_p2 = ($signed(sext_ln703_11_fu_495_p1) - $signed(sext_ln703_9_fu_384_p1));

assign sub_ln1193_fu_388_p2 = ($signed(sext_ln703_fu_381_p1) - $signed(sext_ln703_9_fu_384_p1));

assign tmp_17_fu_639_p4 = {{sub_ln1193_8_fu_443_p2[15:6]}};

assign tmp_18_fu_673_p4 = {{sub_ln1193_9_fu_498_p2[15:6]}};

assign tmp_19_fu_707_p4 = {{sub_ln1193_10_fu_553_p2[15:6]}};

assign tmp_35_fu_394_p3 = sub_ln1193_fu_388_p2[32'd16];

assign tmp_36_fu_402_p3 = sub_ln1193_fu_388_p2[32'd15];

assign tmp_37_fu_449_p3 = sub_ln1193_8_fu_443_p2[32'd16];

assign tmp_38_fu_457_p3 = sub_ln1193_8_fu_443_p2[32'd15];

assign tmp_39_fu_504_p3 = sub_ln1193_9_fu_498_p2[32'd16];

assign tmp_40_fu_512_p3 = sub_ln1193_9_fu_498_p2[32'd15];

assign tmp_41_fu_559_p3 = sub_ln1193_10_fu_553_p2[32'd16];

assign tmp_42_fu_567_p3 = sub_ln1193_10_fu_553_p2[32'd15];

assign tmp_fu_605_p4 = {{sub_ln1193_fu_388_p2[15:6]}};

assign underflow_fu_865_p2 = (xor_ln786_9_fu_860_p2 & p_Result_23_reg_1037);

assign x_max_V_fu_373_p3 = ((icmp_ln1496_8_fu_367_p2[0:0] === 1'b1) ? select_ln65_7_fu_362_p3 : select_ln65_fu_357_p3);

assign xor_ln340_18_fu_422_p2 = (tmp_36_fu_402_p3 ^ tmp_35_fu_394_p3);

assign xor_ln340_19_fu_477_p2 = (tmp_38_fu_457_p3 ^ tmp_37_fu_449_p3);

assign xor_ln340_1_fu_483_p2 = (tmp_37_fu_449_p3 ^ 1'd1);

assign xor_ln340_20_fu_532_p2 = (tmp_40_fu_512_p3 ^ tmp_39_fu_504_p3);

assign xor_ln340_21_fu_587_p2 = (tmp_42_fu_567_p3 ^ tmp_41_fu_559_p3);

assign xor_ln340_22_fu_870_p2 = (p_Result_24_reg_1044 ^ p_Result_23_reg_1037);

assign xor_ln340_2_fu_538_p2 = (tmp_39_fu_504_p3 ^ 1'd1);

assign xor_ln340_3_fu_593_p2 = (tmp_41_fu_559_p3 ^ 1'd1);

assign xor_ln340_9_fu_874_p2 = (p_Result_23_reg_1037 ^ 1'd1);

assign xor_ln340_fu_428_p2 = (tmp_35_fu_394_p3 ^ 1'd1);

assign xor_ln786_1_fu_465_p2 = (tmp_38_fu_457_p3 ^ 1'd1);

assign xor_ln786_2_fu_520_p2 = (tmp_40_fu_512_p3 ^ 1'd1);

assign xor_ln786_3_fu_575_p2 = (tmp_42_fu_567_p3 ^ 1'd1);

assign xor_ln786_9_fu_860_p2 = (p_Result_24_reg_1044 ^ 1'd1);

assign xor_ln786_fu_410_p2 = (tmp_36_fu_402_p3 ^ 1'd1);

assign y_V_10_fu_699_p3 = ((or_ln340_10_fu_544_p2[0:0] === 1'b1) ? select_ln340_21_fu_683_p3 : select_ln388_10_fu_691_p3);

assign y_V_11_fu_733_p3 = ((or_ln340_11_fu_599_p2[0:0] === 1'b1) ? select_ln340_23_fu_717_p3 : select_ln388_11_fu_725_p3);

assign y_V_12_fu_898_p3 = ((or_ln340_12_fu_879_p2[0:0] === 1'b1) ? select_ln340_27_fu_884_p3 : select_ln388_12_fu_891_p3);

assign y_V_9_fu_665_p3 = ((or_ln340_9_fu_489_p2[0:0] === 1'b1) ? select_ln340_19_fu_649_p3 : select_ln388_9_fu_657_p3);

assign y_V_fu_631_p3 = ((or_ln340_fu_434_p2[0:0] === 1'b1) ? select_ln340_fu_615_p3 : select_ln388_fu_623_p3);

assign zext_ln1118_10_fu_927_p1 = exp_res_3_V_reg_1032_pp0_iter2_reg;

assign zext_ln1118_8_fu_919_p1 = exp_res_1_V_reg_1010_pp0_iter2_reg;

assign zext_ln1118_9_fu_923_p1 = exp_res_2_V_reg_1021_pp0_iter2_reg;

assign zext_ln1118_fu_915_p1 = exp_res_0_V_reg_999_pp0_iter2_reg;

assign zext_ln225_1_fu_745_p1 = y_V_9_reg_979;

assign zext_ln225_2_fu_749_p1 = y_V_10_reg_984;

assign zext_ln225_3_fu_753_p1 = y_V_11_reg_989;

assign zext_ln225_fu_741_p1 = y_V_reg_974;

assign zext_ln235_fu_906_p1 = y_V_12_fu_898_p3;

endmodule //softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s
