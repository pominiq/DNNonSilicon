-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    res_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_V_data_4_V_TREADY : IN STD_LOGIC;
    res_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_V_data_5_V_TREADY : IN STD_LOGIC;
    res_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_V_data_6_V_TREADY : IN STD_LOGIC;
    res_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_V_data_7_V_TREADY : IN STD_LOGIC;
    res_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_V_data_8_V_TREADY : IN STD_LOGIC;
    res_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_V_data_9_V_TREADY : IN STD_LOGIC;
    data_V_data_0_V_blk_n : OUT STD_LOGIC;
    data_V_data_1_V_blk_n : OUT STD_LOGIC;
    data_V_data_2_V_blk_n : OUT STD_LOGIC;
    data_V_data_3_V_blk_n : OUT STD_LOGIC;
    data_V_data_4_V_blk_n : OUT STD_LOGIC;
    data_V_data_5_V_blk_n : OUT STD_LOGIC;
    data_V_data_6_V_blk_n : OUT STD_LOGIC;
    data_V_data_7_V_blk_n : OUT STD_LOGIC;
    data_V_data_8_V_blk_n : OUT STD_LOGIC;
    data_V_data_9_V_blk_n : OUT STD_LOGIC;
    res_V_data_0_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_1_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_2_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_3_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_4_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_5_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_6_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_7_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_8_V_TDATA_blk_n : OUT STD_LOGIC;
    res_V_data_9_V_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal exp_table1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce0 : STD_LOGIC;
    signal exp_table1_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce1 : STD_LOGIC;
    signal exp_table1_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table1_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table1_ce2 : STD_LOGIC;
    signal exp_table1_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table2_ce0 : STD_LOGIC;
    signal invert_table2_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal io_acc_block_signal_op28 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_array_0_V_reg_2027 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_V_reg_2033 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_2039 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_2045 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_2051 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_2057 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_2063 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_2069 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_V_reg_2075 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_V_reg_2082 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_2089 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_9_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_9_reg_2094 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_11_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_11_reg_2099 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_12_reg_2104 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_14_fu_692_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_14_reg_2109 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln1496_15_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_15_reg_2115 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_fu_1301_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_reg_2120 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal y_V_13_fu_1335_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_13_reg_2125 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_14_fu_1369_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_14_reg_2130 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_15_fu_1403_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_15_reg_2135 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_16_fu_1437_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_16_reg_2140 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_17_fu_1471_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_17_reg_2145 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_18_fu_1505_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_18_reg_2150 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_19_fu_1539_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_19_reg_2155 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_20_fu_1573_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_20_reg_2160 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_21_fu_1607_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_21_reg_2165 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_2_reg_2185 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_2_reg_2185_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_0_V_2_reg_2185_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_2_reg_2191 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_2_reg_2191_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_2_reg_2191_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_2_reg_2197 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_2_reg_2197_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_2_reg_2197_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_2_reg_2218 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_2_reg_2218_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_2_reg_2218_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_2_reg_2224 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_2_reg_2224_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_2_reg_2224_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_2_reg_2230 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_2_reg_2230_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_2_reg_2230_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_2_reg_2251 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_2_reg_2251_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_2_reg_2251_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_2_reg_2257 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_2_reg_2257_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_2_reg_2257_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2263 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2263_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_1_reg_2263_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2276 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2276_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_1_reg_2276_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_39_reg_2283 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_45_fu_1776_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_45_reg_2289 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_46_fu_1808_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_46_reg_2295 : STD_LOGIC_VECTOR (16 downto 0);
    signal inv_exp_sum_V_reg_2306 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_1921_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln241_reg_2311 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_2318 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_2323 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_2328 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_2333 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_2338 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_2343 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_2348 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_2353 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_8_V_reg_2358 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp238 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call233 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1_ignore_call233 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2_ignore_call233 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3_ignore_call233 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp239 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call234 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1_ignore_call234 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2_ignore_call234 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3_ignore_call234 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp241 : BOOLEAN;
    signal exp_res_0_V_fu_252 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exp_res_1_V_fu_256 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_fu_260 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_fu_264 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_fu_268 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_fu_272 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_fu_276 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_fu_280 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_V_fu_284 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_9_V_fu_288 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln225_fu_1615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln225_1_fu_1619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln235_fu_1916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_456_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_11_fu_1931_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_14_fu_1943_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_17_fu_1955_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_19_fu_1963_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_456_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_457_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_fu_1927_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_13_fu_1939_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_16_fu_1951_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_457_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_458_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_12_fu_1935_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_15_fu_1947_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_18_fu_1959_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_458_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_457_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_456_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_458_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln1496_fu_614_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_614_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_9_fu_620_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_9_fu_620_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_11_fu_626_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_11_fu_626_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_12_fu_632_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_12_fu_632_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_9_fu_643_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_10_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_11_fu_662_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_12_fu_667_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_13_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_10_fu_654_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_13_fu_678_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_14_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_15_fu_704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_16_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_714_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_721_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_13_fu_724_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_728_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_fu_742_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_14_fu_780_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_11_fu_783_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_50_fu_797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_15_fu_835_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_12_fu_838_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_fu_852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_16_fu_890_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_13_fu_893_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_fu_907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_17_fu_945_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_14_fu_948_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_56_fu_962_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_18_fu_1000_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_15_fu_1003_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_58_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_19_fu_1055_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_16_fu_1058_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_60_fu_1072_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_20_fu_1110_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_17_fu_1113_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_62_fu_1127_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_21_fu_1165_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_18_fu_1168_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_64_fu_1182_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1174_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_22_fu_1220_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_19_fu_1223_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_66_fu_1237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_1229_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_9_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_23_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1275_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1285_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1293_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_24_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1309_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_11_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_13_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_30_fu_1319_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_13_fu_1327_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_25_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1343_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_12_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_14_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_32_fu_1353_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_14_fu_1361_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_26_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1377_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_13_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_15_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_34_fu_1387_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_15_fu_1395_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_27_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1411_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_14_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_16_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_36_fu_1421_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_16_fu_1429_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_28_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1445_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_15_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_17_fu_1049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_38_fu_1455_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_17_fu_1463_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_29_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1479_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_16_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_18_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_40_fu_1489_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_18_fu_1497_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_30_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1513_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_17_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_19_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_42_fu_1523_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_19_fu_1531_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_31_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1547_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_18_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_20_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_44_fu_1557_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_20_fu_1565_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_32_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1581_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_19_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_21_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_46_fu_1591_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_21_fu_1599_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_fu_1699_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_fu_1696_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_fu_1699_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_1703_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_41_fu_1717_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_41_fu_1717_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_42_fu_1722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1709_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_10_fu_1730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_34_fu_1748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_33_fu_1742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_22_fu_1754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_48_fu_1760_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln388_22_fu_1768_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_43_fu_1787_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_42_fu_1784_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_44_fu_1790_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_43_fu_1800_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln746_fu_1796_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_1_fu_1819_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_1_fu_1822_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_1_fu_1825_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln746_fu_1816_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_48_fu_1839_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_45_fu_1844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_44_fu_1831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_11_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_36_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_35_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1882_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_1_fu_1858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_23_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_50_fu_1892_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_23_fu_1900_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_22_fu_1908_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_0_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_1_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_2_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_3_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_4_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_5_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_6_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_7_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_8_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_9_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_V_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_exp_tabHfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table1_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config10_s_exp_tabHfu
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table1_address0,
        ce0 => exp_table1_ce0,
        q0 => exp_table1_q0,
        address1 => exp_table1_address1,
        ce1 => exp_table1_ce1,
        q1 => exp_table1_q1,
        address2 => exp_table1_address2,
        ce2 => exp_table1_ce2,
        q2 => exp_table1_q2);

    invert_table2_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table2_address0,
        ce0 => invert_table2_ce0,
        q0 => invert_table2_q0);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_0_V => exp_res_0_V_fu_252,
        x_1_V => exp_res_1_V_fu_256,
        x_2_V => exp_res_2_V_fu_260,
        x_3_V => exp_res_3_V_fu_264,
        x_4_V => exp_res_4_V_fu_268,
        x_5_V => exp_res_5_V_fu_272,
        x_6_V => exp_res_6_V_fu_276,
        x_7_V => exp_res_7_V_fu_280,
        x_8_V => exp_res_8_V_fu_284,
        x_9_V => exp_res_9_V_fu_288,
        x_V_offset => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_array_0_V_reg_2027 <= data_V_data_0_V_dout;
                data_array_1_V_reg_2033 <= data_V_data_1_V_dout;
                data_array_2_V_reg_2039 <= data_V_data_2_V_dout;
                data_array_3_V_reg_2045 <= data_V_data_3_V_dout;
                data_array_4_V_reg_2051 <= data_V_data_4_V_dout;
                data_array_5_V_reg_2057 <= data_V_data_5_V_dout;
                data_array_6_V_reg_2063 <= data_V_data_6_V_dout;
                data_array_7_V_reg_2069 <= data_V_data_7_V_dout;
                data_array_8_V_reg_2075 <= data_V_data_8_V_dout;
                data_array_9_V_reg_2082 <= data_V_data_9_V_dout;
                exp_res_0_V_2_reg_2185_pp0_iter2_reg <= exp_res_0_V_2_reg_2185;
                exp_res_0_V_2_reg_2185_pp0_iter3_reg <= exp_res_0_V_2_reg_2185_pp0_iter2_reg;
                exp_res_1_V_2_reg_2191_pp0_iter2_reg <= exp_res_1_V_2_reg_2191;
                exp_res_1_V_2_reg_2191_pp0_iter3_reg <= exp_res_1_V_2_reg_2191_pp0_iter2_reg;
                exp_res_2_V_2_reg_2197_pp0_iter2_reg <= exp_res_2_V_2_reg_2197;
                exp_res_2_V_2_reg_2197_pp0_iter3_reg <= exp_res_2_V_2_reg_2197_pp0_iter2_reg;
                icmp_ln1496_11_reg_2099 <= icmp_ln1496_11_fu_626_p2;
                icmp_ln1496_12_reg_2104 <= icmp_ln1496_12_fu_632_p2;
                icmp_ln1496_9_reg_2094 <= icmp_ln1496_9_fu_620_p2;
                icmp_ln1496_reg_2089 <= icmp_ln1496_fu_614_p2;
                inv_exp_sum_V_reg_2306 <= invert_table2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_2_reg_2185 <= exp_table1_q0;
                exp_res_1_V_2_reg_2191 <= exp_table1_q1;
                exp_res_2_V_2_reg_2197 <= exp_table1_q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                exp_res_0_V_fu_252 <= exp_res_0_V_2_reg_2185;
                exp_res_1_V_fu_256 <= exp_res_1_V_2_reg_2191;
                exp_res_2_V_fu_260 <= exp_res_2_V_2_reg_2197;
                exp_res_3_V_fu_264 <= exp_res_3_V_2_reg_2218;
                exp_res_4_V_fu_268 <= exp_res_4_V_2_reg_2224;
                exp_res_5_V_fu_272 <= exp_res_5_V_2_reg_2230;
                exp_res_6_V_fu_276 <= exp_res_6_V_2_reg_2251;
                exp_res_7_V_fu_280 <= exp_res_7_V_2_reg_2257;
                exp_res_8_V_fu_284 <= exp_res_8_V_1_reg_2263;
                exp_res_9_V_1_reg_2276 <= exp_table1_q0;
                exp_res_9_V_fu_288 <= exp_table1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_3_V_2_reg_2218 <= exp_table1_q0;
                exp_res_4_V_2_reg_2224 <= exp_table1_q1;
                exp_res_5_V_2_reg_2230 <= exp_table1_q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_3_V_2_reg_2218_pp0_iter2_reg <= exp_res_3_V_2_reg_2218;
                exp_res_3_V_2_reg_2218_pp0_iter3_reg <= exp_res_3_V_2_reg_2218_pp0_iter2_reg;
                exp_res_4_V_2_reg_2224_pp0_iter2_reg <= exp_res_4_V_2_reg_2224;
                exp_res_4_V_2_reg_2224_pp0_iter3_reg <= exp_res_4_V_2_reg_2224_pp0_iter2_reg;
                exp_res_5_V_2_reg_2230_pp0_iter2_reg <= exp_res_5_V_2_reg_2230;
                exp_res_5_V_2_reg_2230_pp0_iter3_reg <= exp_res_5_V_2_reg_2230_pp0_iter2_reg;
                icmp_ln1496_15_reg_2115 <= icmp_ln1496_15_fu_700_p2;
                select_ln65_14_reg_2109 <= select_ln65_14_fu_692_p3;
                sext_ln241_reg_2311 <= sext_ln241_fu_1921_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_6_V_2_reg_2251 <= exp_table1_q0;
                exp_res_7_V_2_reg_2257 <= exp_table1_q1;
                exp_res_8_V_1_reg_2263 <= exp_table1_q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_6_V_2_reg_2251_pp0_iter2_reg <= exp_res_6_V_2_reg_2251;
                exp_res_6_V_2_reg_2251_pp0_iter3_reg <= exp_res_6_V_2_reg_2251_pp0_iter2_reg;
                exp_res_7_V_2_reg_2257_pp0_iter2_reg <= exp_res_7_V_2_reg_2257;
                exp_res_7_V_2_reg_2257_pp0_iter3_reg <= exp_res_7_V_2_reg_2257_pp0_iter2_reg;
                exp_res_8_V_1_reg_2263_pp0_iter2_reg <= exp_res_8_V_1_reg_2263;
                exp_res_8_V_1_reg_2263_pp0_iter3_reg <= exp_res_8_V_1_reg_2263_pp0_iter2_reg;
                p_Val2_45_reg_2289 <= p_Val2_45_fu_1776_p3;
                p_Val2_46_reg_2295 <= p_Val2_46_fu_1808_p3;
                y_V_13_reg_2125 <= y_V_13_fu_1335_p3;
                y_V_14_reg_2130 <= y_V_14_fu_1369_p3;
                y_V_15_reg_2135 <= y_V_15_fu_1403_p3;
                y_V_16_reg_2140 <= y_V_16_fu_1437_p3;
                y_V_17_reg_2145 <= y_V_17_fu_1471_p3;
                y_V_18_reg_2150 <= y_V_18_fu_1505_p3;
                y_V_19_reg_2155 <= y_V_19_fu_1539_p3;
                y_V_20_reg_2160 <= y_V_20_fu_1573_p3;
                y_V_21_reg_2165 <= y_V_21_fu_1607_p3;
                y_V_reg_2120 <= y_V_fu_1301_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_9_V_1_reg_2276_pp0_iter2_reg <= exp_res_9_V_1_reg_2276;
                exp_res_9_V_1_reg_2276_pp0_iter3_reg <= exp_res_9_V_1_reg_2276_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Val2_39_reg_2283 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_data_0_V_reg_2318 <= grp_fu_457_p2(25 downto 10);
                tmp_data_1_V_reg_2323 <= grp_fu_456_p2(25 downto 10);
                tmp_data_2_V_reg_2328 <= grp_fu_458_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_data_3_V_reg_2333 <= grp_fu_457_p2(25 downto 10);
                tmp_data_4_V_reg_2338 <= grp_fu_456_p2(25 downto 10);
                tmp_data_5_V_reg_2343 <= grp_fu_458_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                tmp_data_6_V_reg_2348 <= grp_fu_457_p2(25 downto 10);
                tmp_data_7_V_reg_2353 <= grp_fu_456_p2(25 downto 10);
                tmp_data_8_V_reg_2358 <= grp_fu_458_p2(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln746_fu_1796_p2 <= std_logic_vector(unsigned(exp_res_8_V_1_reg_2263) + unsigned(exp_res_9_V_1_reg_2276));
    and_ln786_11_fu_811_p2 <= (xor_ln786_1_fu_805_p2 and tmp_49_fu_789_p3);
    and_ln786_12_fu_866_p2 <= (xor_ln786_2_fu_860_p2 and tmp_51_fu_844_p3);
    and_ln786_13_fu_921_p2 <= (xor_ln786_3_fu_915_p2 and tmp_53_fu_899_p3);
    and_ln786_14_fu_976_p2 <= (xor_ln786_4_fu_970_p2 and tmp_55_fu_954_p3);
    and_ln786_15_fu_1031_p2 <= (xor_ln786_5_fu_1025_p2 and tmp_57_fu_1009_p3);
    and_ln786_16_fu_1086_p2 <= (xor_ln786_6_fu_1080_p2 and tmp_59_fu_1064_p3);
    and_ln786_17_fu_1141_p2 <= (xor_ln786_7_fu_1135_p2 and tmp_61_fu_1119_p3);
    and_ln786_18_fu_1196_p2 <= (xor_ln786_8_fu_1190_p2 and tmp_63_fu_1174_p3);
    and_ln786_19_fu_1251_p2 <= (xor_ln786_9_fu_1245_p2 and tmp_65_fu_1229_p3);
    and_ln786_fu_756_p2 <= (xor_ln786_fu_750_p2 and tmp_47_fu_734_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, io_acc_block_signal_op28)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY, io_acc_block_signal_op28)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0))) or ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp238_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY, io_acc_block_signal_op28)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp238 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0))) or ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY, io_acc_block_signal_op28)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0))) or ((res_V_data_0_V_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp239 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, io_acc_block_signal_op28)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call233_assign_proc : process(ap_start, io_acc_block_signal_op28)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call233 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op28 = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1_ignore_call234 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2_ignore_call233 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_0_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_1_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_2_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_3_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_4_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_5_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_6_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_7_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_8_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, data_V_data_9_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, zext_ln225_fu_1615_p1, ap_block_pp0_stage3, zext_ln225_3_fu_1627_p1, zext_ln225_6_fu_1639_p1, zext_ln225_9_fu_1651_p1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            exp_table1_address0 <= zext_ln225_9_fu_1651_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table1_address0 <= zext_ln225_6_fu_1639_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_address0 <= zext_ln225_3_fu_1627_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table1_address0 <= zext_ln225_fu_1615_p1(10 - 1 downto 0);
        else 
            exp_table1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage3, zext_ln225_1_fu_1619_p1, zext_ln225_4_fu_1631_p1, zext_ln225_7_fu_1643_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table1_address1 <= zext_ln225_7_fu_1643_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_address1 <= zext_ln225_4_fu_1631_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table1_address1 <= zext_ln225_1_fu_1619_p1(10 - 1 downto 0);
        else 
            exp_table1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_address2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage3, zext_ln225_2_fu_1623_p1, zext_ln225_5_fu_1635_p1, zext_ln225_8_fu_1647_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            exp_table1_address2 <= zext_ln225_8_fu_1647_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            exp_table1_address2 <= zext_ln225_5_fu_1635_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table1_address2 <= zext_ln225_2_fu_1623_p1(10 - 1 downto 0);
        else 
            exp_table1_address2 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce0 <= ap_const_logic_1;
        else 
            exp_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce1 <= ap_const_logic_1;
        else 
            exp_table1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            exp_table1_ce2 <= ap_const_logic_1;
        else 
            exp_table1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_456_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2, zext_ln1118_11_fu_1931_p1, zext_ln1118_14_fu_1943_p1, zext_ln1118_17_fu_1955_p1, zext_ln1118_19_fu_1963_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_456_p0 <= zext_ln1118_19_fu_1963_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_456_p0 <= zext_ln1118_17_fu_1955_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_456_p0 <= zext_ln1118_14_fu_1943_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_456_p0 <= zext_ln1118_11_fu_1931_p1(17 - 1 downto 0);
        else 
            grp_fu_456_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_456_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, sext_ln241_fu_1921_p1, sext_ln241_reg_2311, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_456_p1 <= sext_ln241_reg_2311(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_456_p1 <= sext_ln241_fu_1921_p1(18 - 1 downto 0);
        else 
            grp_fu_456_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_456_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_456_p0) * signed(grp_fu_456_p1))), 26));

    grp_fu_457_p0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2, zext_ln1118_fu_1927_p1, zext_ln1118_13_fu_1939_p1, zext_ln1118_16_fu_1951_p1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_457_p0 <= zext_ln1118_16_fu_1951_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_457_p0 <= zext_ln1118_13_fu_1939_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_457_p0 <= zext_ln1118_fu_1927_p1(17 - 1 downto 0);
            else 
                grp_fu_457_p0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_457_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_457_p1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, sext_ln241_fu_1921_p1, sext_ln241_reg_2311, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_457_p1 <= sext_ln241_reg_2311(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_457_p1 <= sext_ln241_fu_1921_p1(18 - 1 downto 0);
        else 
            grp_fu_457_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_457_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_457_p0) * signed(grp_fu_457_p1))), 26));

    grp_fu_458_p0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2, zext_ln1118_12_fu_1935_p1, zext_ln1118_15_fu_1947_p1, zext_ln1118_18_fu_1959_p1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_458_p0 <= zext_ln1118_18_fu_1959_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_458_p0 <= zext_ln1118_15_fu_1947_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_458_p0 <= zext_ln1118_12_fu_1935_p1(17 - 1 downto 0);
            else 
                grp_fu_458_p0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_458_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_458_p1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, sext_ln241_fu_1921_p1, sext_ln241_reg_2311, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_458_p1 <= sext_ln241_reg_2311(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_458_p1 <= sext_ln241_fu_1921_p1(18 - 1 downto 0);
        else 
            grp_fu_458_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_458_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_458_p0) * signed(grp_fu_458_p1))), 26));

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0_11001_ignoreCallOp238, ap_block_pp0_stage1_11001_ignoreCallOp239, ap_block_pp0_stage2_11001_ignoreCallOp241)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp241) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp239) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp238) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset <= ap_const_lv5_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset <= ap_const_lv5_0;
            else 
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset <= "XXXXX";
            end if;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_x_V_offset <= "XXXXX";
        end if; 
    end process;

    icmp_ln1496_10_fu_648_p2 <= "1" when (signed(select_ln65_fu_638_p3) < signed(select_ln65_9_fu_643_p3)) else "0";
    icmp_ln1496_11_fu_626_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_11_fu_626_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_11_fu_626_p2 <= "1" when (signed(icmp_ln1496_11_fu_626_p0) < signed(icmp_ln1496_11_fu_626_p1)) else "0";
    icmp_ln1496_12_fu_632_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_12_fu_632_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_12_fu_632_p2 <= "1" when (signed(icmp_ln1496_12_fu_632_p0) < signed(icmp_ln1496_12_fu_632_p1)) else "0";
    icmp_ln1496_13_fu_672_p2 <= "1" when (signed(select_ln65_11_fu_662_p3) < signed(select_ln65_12_fu_667_p3)) else "0";
    icmp_ln1496_14_fu_686_p2 <= "1" when (signed(select_ln65_10_fu_654_p3) < signed(select_ln65_13_fu_678_p3)) else "0";
    icmp_ln1496_15_fu_700_p2 <= "1" when (signed(data_array_8_V_reg_2075) < signed(data_array_9_V_reg_2082)) else "0";
    icmp_ln1496_16_fu_709_p2 <= "1" when (signed(select_ln65_14_reg_2109) < signed(select_ln65_15_fu_704_p3)) else "0";
    icmp_ln1496_9_fu_620_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_9_fu_620_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_9_fu_620_p2 <= "1" when (signed(icmp_ln1496_9_fu_620_p0) < signed(icmp_ln1496_9_fu_620_p1)) else "0";
    icmp_ln1496_fu_614_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_614_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_614_p2 <= "1" when (signed(icmp_ln1496_fu_614_p0) < signed(icmp_ln1496_fu_614_p1)) else "0";
    invert_table2_address0 <= zext_ln235_fu_1916_p1(10 - 1 downto 0);

    invert_table2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            invert_table2_ce0 <= ap_const_logic_1;
        else 
            invert_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op28 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
        lhs_V_1_fu_1819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_45_reg_2289),19));

        lhs_V_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_39_reg_2283),19));

    or_ln340_13_fu_829_p2 <= (xor_ln340_1_fu_823_p2 or tmp_50_fu_797_p3);
    or_ln340_14_fu_884_p2 <= (xor_ln340_2_fu_878_p2 or tmp_52_fu_852_p3);
    or_ln340_15_fu_939_p2 <= (xor_ln340_3_fu_933_p2 or tmp_54_fu_907_p3);
    or_ln340_16_fu_994_p2 <= (xor_ln340_4_fu_988_p2 or tmp_56_fu_962_p3);
    or_ln340_17_fu_1049_p2 <= (xor_ln340_5_fu_1043_p2 or tmp_58_fu_1017_p3);
    or_ln340_18_fu_1104_p2 <= (xor_ln340_6_fu_1098_p2 or tmp_60_fu_1072_p3);
    or_ln340_19_fu_1159_p2 <= (xor_ln340_7_fu_1153_p2 or tmp_62_fu_1127_p3);
    or_ln340_20_fu_1214_p2 <= (xor_ln340_8_fu_1208_p2 or tmp_64_fu_1182_p3);
    or_ln340_21_fu_1269_p2 <= (xor_ln340_9_fu_1263_p2 or tmp_66_fu_1237_p3);
    or_ln340_22_fu_1754_p2 <= (xor_ln340_34_fu_1748_p2 or p_Result_42_fu_1722_p3);
    or_ln340_23_fu_1876_p2 <= (xor_ln340_36_fu_1870_p2 or p_Result_45_fu_1844_p3);
    or_ln340_fu_774_p2 <= (xor_ln340_fu_768_p2 or tmp_48_fu_742_p3);
    p_Result_42_fu_1722_p3 <= p_Val2_41_fu_1717_p2(17 downto 17);
    p_Result_43_fu_1800_p3 <= p_Val2_44_fu_1790_p2(17 downto 17);
    p_Result_44_fu_1831_p3 <= ret_V_1_fu_1825_p2(18 downto 18);
    p_Result_45_fu_1844_p3 <= p_Val2_48_fu_1839_p2(17 downto 17);
    p_Result_s_fu_1709_p3 <= ret_V_fu_1703_p2(18 downto 18);
    p_Val2_41_fu_1717_p0 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_return;
    p_Val2_41_fu_1717_p2 <= std_logic_vector(signed(p_Val2_41_fu_1717_p0) + signed(p_Val2_39_reg_2283));
    p_Val2_42_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2263),18));
    p_Val2_43_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2276),18));
    p_Val2_44_fu_1790_p2 <= std_logic_vector(unsigned(p_Val2_43_fu_1787_p1) + unsigned(p_Val2_42_fu_1784_p1));
    p_Val2_45_fu_1776_p3 <= 
        select_ln340_48_fu_1760_p3 when (or_ln340_22_fu_1754_p2(0) = '1') else 
        select_ln388_22_fu_1768_p3;
    p_Val2_46_fu_1808_p3 <= 
        ap_const_lv17_1FFFF when (p_Result_43_fu_1800_p3(0) = '1') else 
        add_ln746_fu_1796_p2;
    p_Val2_48_fu_1839_p2 <= std_logic_vector(unsigned(zext_ln746_fu_1816_p1) + unsigned(p_Val2_45_reg_2289));
    res_V_data_0_V_TDATA <= tmp_data_0_V_reg_2318;

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_0_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_0_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_1_V_TDATA <= tmp_data_1_V_reg_2323;

    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_1_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_1_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_2_V_TDATA <= tmp_data_2_V_reg_2328;

    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_2_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_2_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_3_V_TDATA <= tmp_data_3_V_reg_2333;

    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_3_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_3_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_4_V_TDATA <= tmp_data_4_V_reg_2338;

    res_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_4_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_4_V_TDATA_blk_n <= res_V_data_4_V_TREADY;
        else 
            res_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_4_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_4_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_5_V_TDATA <= tmp_data_5_V_reg_2343;

    res_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_5_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_5_V_TDATA_blk_n <= res_V_data_5_V_TREADY;
        else 
            res_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_5_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_5_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_6_V_TDATA <= tmp_data_6_V_reg_2348;

    res_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_6_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_6_V_TDATA_blk_n <= res_V_data_6_V_TREADY;
        else 
            res_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_6_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_6_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_7_V_TDATA <= tmp_data_7_V_reg_2353;

    res_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_7_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_7_V_TDATA_blk_n <= res_V_data_7_V_TREADY;
        else 
            res_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_7_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_7_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_8_V_TDATA <= tmp_data_8_V_reg_2358;

    res_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_8_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_8_V_TDATA_blk_n <= res_V_data_8_V_TREADY;
        else 
            res_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_8_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_8_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    res_V_data_9_V_TDATA <= grp_fu_456_p2(25 downto 10);

    res_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, res_V_data_9_V_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_V_data_9_V_TDATA_blk_n <= res_V_data_9_V_TREADY;
        else 
            res_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_data_9_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_TVALID <= ap_const_logic_1;
        else 
            res_V_data_9_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_1825_p2 <= std_logic_vector(signed(lhs_V_1_fu_1819_p1) + signed(rhs_V_1_fu_1822_p1));
    ret_V_fu_1703_p2 <= std_logic_vector(signed(lhs_V_fu_1696_p1) + signed(rhs_V_fu_1699_p1));
    rhs_V_1_fu_1822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_46_reg_2295),19));
    rhs_V_fu_1699_p0 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_1_fu_526_ap_return;
        rhs_V_fu_1699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_1699_p0),19));

    select_ln340_30_fu_1319_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_24_fu_817_p2(0) = '1') else 
        tmp_21_fu_1309_p4;
    select_ln340_32_fu_1353_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_25_fu_872_p2(0) = '1') else 
        tmp_22_fu_1343_p4;
    select_ln340_34_fu_1387_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_26_fu_927_p2(0) = '1') else 
        tmp_23_fu_1377_p4;
    select_ln340_36_fu_1421_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_27_fu_982_p2(0) = '1') else 
        tmp_24_fu_1411_p4;
    select_ln340_38_fu_1455_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_28_fu_1037_p2(0) = '1') else 
        tmp_25_fu_1445_p4;
    select_ln340_40_fu_1489_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_29_fu_1092_p2(0) = '1') else 
        tmp_26_fu_1479_p4;
    select_ln340_42_fu_1523_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_30_fu_1147_p2(0) = '1') else 
        tmp_27_fu_1513_p4;
    select_ln340_44_fu_1557_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_31_fu_1202_p2(0) = '1') else 
        tmp_28_fu_1547_p4;
    select_ln340_46_fu_1591_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_32_fu_1257_p2(0) = '1') else 
        tmp_29_fu_1581_p4;
    select_ln340_48_fu_1760_p3 <= 
        ap_const_lv18_1FFFF when (xor_ln340_33_fu_1742_p2(0) = '1') else 
        p_Val2_41_fu_1717_p2;
    select_ln340_50_fu_1892_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_35_fu_1864_p2(0) = '1') else 
        tmp_30_fu_1882_p4;
    select_ln340_fu_1285_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_23_fu_762_p2(0) = '1') else 
        tmp_fu_1275_p4;
    select_ln388_13_fu_1327_p3 <= 
        ap_const_lv10_200 when (and_ln786_11_fu_811_p2(0) = '1') else 
        tmp_21_fu_1309_p4;
    select_ln388_14_fu_1361_p3 <= 
        ap_const_lv10_200 when (and_ln786_12_fu_866_p2(0) = '1') else 
        tmp_22_fu_1343_p4;
    select_ln388_15_fu_1395_p3 <= 
        ap_const_lv10_200 when (and_ln786_13_fu_921_p2(0) = '1') else 
        tmp_23_fu_1377_p4;
    select_ln388_16_fu_1429_p3 <= 
        ap_const_lv10_200 when (and_ln786_14_fu_976_p2(0) = '1') else 
        tmp_24_fu_1411_p4;
    select_ln388_17_fu_1463_p3 <= 
        ap_const_lv10_200 when (and_ln786_15_fu_1031_p2(0) = '1') else 
        tmp_25_fu_1445_p4;
    select_ln388_18_fu_1497_p3 <= 
        ap_const_lv10_200 when (and_ln786_16_fu_1086_p2(0) = '1') else 
        tmp_26_fu_1479_p4;
    select_ln388_19_fu_1531_p3 <= 
        ap_const_lv10_200 when (and_ln786_17_fu_1141_p2(0) = '1') else 
        tmp_27_fu_1513_p4;
    select_ln388_20_fu_1565_p3 <= 
        ap_const_lv10_200 when (and_ln786_18_fu_1196_p2(0) = '1') else 
        tmp_28_fu_1547_p4;
    select_ln388_21_fu_1599_p3 <= 
        ap_const_lv10_200 when (and_ln786_19_fu_1251_p2(0) = '1') else 
        tmp_29_fu_1581_p4;
    select_ln388_22_fu_1768_p3 <= 
        ap_const_lv18_20000 when (underflow_fu_1736_p2(0) = '1') else 
        p_Val2_41_fu_1717_p2;
    select_ln388_23_fu_1900_p3 <= 
        ap_const_lv10_200 when (underflow_1_fu_1858_p2(0) = '1') else 
        tmp_30_fu_1882_p4;
    select_ln388_fu_1293_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_756_p2(0) = '1') else 
        tmp_fu_1275_p4;
    select_ln65_10_fu_654_p3 <= 
        select_ln65_9_fu_643_p3 when (icmp_ln1496_10_fu_648_p2(0) = '1') else 
        select_ln65_fu_638_p3;
    select_ln65_11_fu_662_p3 <= 
        data_array_5_V_reg_2057 when (icmp_ln1496_11_reg_2099(0) = '1') else 
        data_array_4_V_reg_2051;
    select_ln65_12_fu_667_p3 <= 
        data_array_7_V_reg_2069 when (icmp_ln1496_12_reg_2104(0) = '1') else 
        data_array_6_V_reg_2063;
    select_ln65_13_fu_678_p3 <= 
        select_ln65_12_fu_667_p3 when (icmp_ln1496_13_fu_672_p2(0) = '1') else 
        select_ln65_11_fu_662_p3;
    select_ln65_14_fu_692_p3 <= 
        select_ln65_13_fu_678_p3 when (icmp_ln1496_14_fu_686_p2(0) = '1') else 
        select_ln65_10_fu_654_p3;
    select_ln65_15_fu_704_p3 <= 
        data_array_9_V_reg_2082 when (icmp_ln1496_15_reg_2115(0) = '1') else 
        data_array_8_V_reg_2075;
    select_ln65_9_fu_643_p3 <= 
        data_array_3_V_reg_2045 when (icmp_ln1496_9_reg_2094(0) = '1') else 
        data_array_2_V_reg_2039;
    select_ln65_fu_638_p3 <= 
        data_array_1_V_reg_2033 when (icmp_ln1496_reg_2089(0) = '1') else 
        data_array_0_V_reg_2027;
        sext_ln241_fu_1921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_2306),26));

        sext_ln703_13_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_fu_714_p3),17));

        sext_ln703_14_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_2033),17));

        sext_ln703_15_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_2039),17));

        sext_ln703_16_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_2045),17));

        sext_ln703_17_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_2051),17));

        sext_ln703_18_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_2057),17));

        sext_ln703_19_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_2063),17));

        sext_ln703_20_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_2069),17));

        sext_ln703_21_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_V_reg_2075),17));

        sext_ln703_22_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_V_reg_2082),17));

        sext_ln703_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_2027),17));

    sub_ln1193_11_fu_783_p2 <= std_logic_vector(signed(sext_ln703_14_fu_780_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_12_fu_838_p2 <= std_logic_vector(signed(sext_ln703_15_fu_835_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_13_fu_893_p2 <= std_logic_vector(signed(sext_ln703_16_fu_890_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_14_fu_948_p2 <= std_logic_vector(signed(sext_ln703_17_fu_945_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_15_fu_1003_p2 <= std_logic_vector(signed(sext_ln703_18_fu_1000_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_16_fu_1058_p2 <= std_logic_vector(signed(sext_ln703_19_fu_1055_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_17_fu_1113_p2 <= std_logic_vector(signed(sext_ln703_20_fu_1110_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_18_fu_1168_p2 <= std_logic_vector(signed(sext_ln703_21_fu_1165_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_19_fu_1223_p2 <= std_logic_vector(signed(sext_ln703_22_fu_1220_p1) - signed(sext_ln703_13_fu_724_p1));
    sub_ln1193_fu_728_p2 <= std_logic_vector(signed(sext_ln703_fu_721_p1) - signed(sext_ln703_13_fu_724_p1));
    tmp_21_fu_1309_p4 <= sub_ln1193_11_fu_783_p2(15 downto 6);
    tmp_22_fu_1343_p4 <= sub_ln1193_12_fu_838_p2(15 downto 6);
    tmp_23_fu_1377_p4 <= sub_ln1193_13_fu_893_p2(15 downto 6);
    tmp_24_fu_1411_p4 <= sub_ln1193_14_fu_948_p2(15 downto 6);
    tmp_25_fu_1445_p4 <= sub_ln1193_15_fu_1003_p2(15 downto 6);
    tmp_26_fu_1479_p4 <= sub_ln1193_16_fu_1058_p2(15 downto 6);
    tmp_27_fu_1513_p4 <= sub_ln1193_17_fu_1113_p2(15 downto 6);
    tmp_28_fu_1547_p4 <= sub_ln1193_18_fu_1168_p2(15 downto 6);
    tmp_29_fu_1581_p4 <= sub_ln1193_19_fu_1223_p2(15 downto 6);
    tmp_30_fu_1882_p4 <= p_Val2_48_fu_1839_p2(17 downto 8);
    tmp_47_fu_734_p3 <= sub_ln1193_fu_728_p2(16 downto 16);
    tmp_48_fu_742_p3 <= sub_ln1193_fu_728_p2(15 downto 15);
    tmp_49_fu_789_p3 <= sub_ln1193_11_fu_783_p2(16 downto 16);
    tmp_50_fu_797_p3 <= sub_ln1193_11_fu_783_p2(15 downto 15);
    tmp_51_fu_844_p3 <= sub_ln1193_12_fu_838_p2(16 downto 16);
    tmp_52_fu_852_p3 <= sub_ln1193_12_fu_838_p2(15 downto 15);
    tmp_53_fu_899_p3 <= sub_ln1193_13_fu_893_p2(16 downto 16);
    tmp_54_fu_907_p3 <= sub_ln1193_13_fu_893_p2(15 downto 15);
    tmp_55_fu_954_p3 <= sub_ln1193_14_fu_948_p2(16 downto 16);
    tmp_56_fu_962_p3 <= sub_ln1193_14_fu_948_p2(15 downto 15);
    tmp_57_fu_1009_p3 <= sub_ln1193_15_fu_1003_p2(16 downto 16);
    tmp_58_fu_1017_p3 <= sub_ln1193_15_fu_1003_p2(15 downto 15);
    tmp_59_fu_1064_p3 <= sub_ln1193_16_fu_1058_p2(16 downto 16);
    tmp_60_fu_1072_p3 <= sub_ln1193_16_fu_1058_p2(15 downto 15);
    tmp_61_fu_1119_p3 <= sub_ln1193_17_fu_1113_p2(16 downto 16);
    tmp_62_fu_1127_p3 <= sub_ln1193_17_fu_1113_p2(15 downto 15);
    tmp_63_fu_1174_p3 <= sub_ln1193_18_fu_1168_p2(16 downto 16);
    tmp_64_fu_1182_p3 <= sub_ln1193_18_fu_1168_p2(15 downto 15);
    tmp_65_fu_1229_p3 <= sub_ln1193_19_fu_1223_p2(16 downto 16);
    tmp_66_fu_1237_p3 <= sub_ln1193_19_fu_1223_p2(15 downto 15);
    tmp_fu_1275_p4 <= sub_ln1193_fu_728_p2(15 downto 6);
    underflow_1_fu_1858_p2 <= (xor_ln786_11_fu_1852_p2 and p_Result_44_fu_1831_p3);
    underflow_fu_1736_p2 <= (xor_ln786_10_fu_1730_p2 and p_Result_s_fu_1709_p3);
    x_max_V_fu_714_p3 <= 
        select_ln65_15_fu_704_p3 when (icmp_ln1496_16_fu_709_p2(0) = '1') else 
        select_ln65_14_reg_2109;
    xor_ln340_1_fu_823_p2 <= (tmp_49_fu_789_p3 xor ap_const_lv1_1);
    xor_ln340_23_fu_762_p2 <= (tmp_48_fu_742_p3 xor tmp_47_fu_734_p3);
    xor_ln340_24_fu_817_p2 <= (tmp_50_fu_797_p3 xor tmp_49_fu_789_p3);
    xor_ln340_25_fu_872_p2 <= (tmp_52_fu_852_p3 xor tmp_51_fu_844_p3);
    xor_ln340_26_fu_927_p2 <= (tmp_54_fu_907_p3 xor tmp_53_fu_899_p3);
    xor_ln340_27_fu_982_p2 <= (tmp_56_fu_962_p3 xor tmp_55_fu_954_p3);
    xor_ln340_28_fu_1037_p2 <= (tmp_58_fu_1017_p3 xor tmp_57_fu_1009_p3);
    xor_ln340_29_fu_1092_p2 <= (tmp_60_fu_1072_p3 xor tmp_59_fu_1064_p3);
    xor_ln340_2_fu_878_p2 <= (tmp_51_fu_844_p3 xor ap_const_lv1_1);
    xor_ln340_30_fu_1147_p2 <= (tmp_62_fu_1127_p3 xor tmp_61_fu_1119_p3);
    xor_ln340_31_fu_1202_p2 <= (tmp_64_fu_1182_p3 xor tmp_63_fu_1174_p3);
    xor_ln340_32_fu_1257_p2 <= (tmp_66_fu_1237_p3 xor tmp_65_fu_1229_p3);
    xor_ln340_33_fu_1742_p2 <= (p_Result_s_fu_1709_p3 xor p_Result_42_fu_1722_p3);
    xor_ln340_34_fu_1748_p2 <= (p_Result_s_fu_1709_p3 xor ap_const_lv1_1);
    xor_ln340_35_fu_1864_p2 <= (p_Result_45_fu_1844_p3 xor p_Result_44_fu_1831_p3);
    xor_ln340_36_fu_1870_p2 <= (p_Result_44_fu_1831_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_933_p2 <= (tmp_53_fu_899_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_988_p2 <= (tmp_55_fu_954_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1043_p2 <= (tmp_57_fu_1009_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1098_p2 <= (tmp_59_fu_1064_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1153_p2 <= (tmp_61_fu_1119_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1208_p2 <= (tmp_63_fu_1174_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_1263_p2 <= (tmp_65_fu_1229_p3 xor ap_const_lv1_1);
    xor_ln340_fu_768_p2 <= (tmp_47_fu_734_p3 xor ap_const_lv1_1);
    xor_ln786_10_fu_1730_p2 <= (p_Result_42_fu_1722_p3 xor ap_const_lv1_1);
    xor_ln786_11_fu_1852_p2 <= (p_Result_45_fu_1844_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_805_p2 <= (tmp_50_fu_797_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_860_p2 <= (tmp_52_fu_852_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_915_p2 <= (tmp_54_fu_907_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_970_p2 <= (tmp_56_fu_962_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1025_p2 <= (tmp_58_fu_1017_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1080_p2 <= (tmp_60_fu_1072_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1135_p2 <= (tmp_62_fu_1127_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1190_p2 <= (tmp_64_fu_1182_p3 xor ap_const_lv1_1);
    xor_ln786_9_fu_1245_p2 <= (tmp_66_fu_1237_p3 xor ap_const_lv1_1);
    xor_ln786_fu_750_p2 <= (tmp_48_fu_742_p3 xor ap_const_lv1_1);
    y_V_13_fu_1335_p3 <= 
        select_ln340_30_fu_1319_p3 when (or_ln340_13_fu_829_p2(0) = '1') else 
        select_ln388_13_fu_1327_p3;
    y_V_14_fu_1369_p3 <= 
        select_ln340_32_fu_1353_p3 when (or_ln340_14_fu_884_p2(0) = '1') else 
        select_ln388_14_fu_1361_p3;
    y_V_15_fu_1403_p3 <= 
        select_ln340_34_fu_1387_p3 when (or_ln340_15_fu_939_p2(0) = '1') else 
        select_ln388_15_fu_1395_p3;
    y_V_16_fu_1437_p3 <= 
        select_ln340_36_fu_1421_p3 when (or_ln340_16_fu_994_p2(0) = '1') else 
        select_ln388_16_fu_1429_p3;
    y_V_17_fu_1471_p3 <= 
        select_ln340_38_fu_1455_p3 when (or_ln340_17_fu_1049_p2(0) = '1') else 
        select_ln388_17_fu_1463_p3;
    y_V_18_fu_1505_p3 <= 
        select_ln340_40_fu_1489_p3 when (or_ln340_18_fu_1104_p2(0) = '1') else 
        select_ln388_18_fu_1497_p3;
    y_V_19_fu_1539_p3 <= 
        select_ln340_42_fu_1523_p3 when (or_ln340_19_fu_1159_p2(0) = '1') else 
        select_ln388_19_fu_1531_p3;
    y_V_20_fu_1573_p3 <= 
        select_ln340_44_fu_1557_p3 when (or_ln340_20_fu_1214_p2(0) = '1') else 
        select_ln388_20_fu_1565_p3;
    y_V_21_fu_1607_p3 <= 
        select_ln340_46_fu_1591_p3 when (or_ln340_21_fu_1269_p2(0) = '1') else 
        select_ln388_21_fu_1599_p3;
    y_V_22_fu_1908_p3 <= 
        select_ln340_50_fu_1892_p3 when (or_ln340_23_fu_1876_p2(0) = '1') else 
        select_ln388_23_fu_1900_p3;
    y_V_fu_1301_p3 <= 
        select_ln340_fu_1285_p3 when (or_ln340_fu_774_p2(0) = '1') else 
        select_ln388_fu_1293_p3;
    zext_ln1118_11_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_2_reg_2191_pp0_iter3_reg),26));
    zext_ln1118_12_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_2_reg_2197_pp0_iter3_reg),26));
    zext_ln1118_13_fu_1939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_2_reg_2218_pp0_iter3_reg),26));
    zext_ln1118_14_fu_1943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_2_reg_2224_pp0_iter3_reg),26));
    zext_ln1118_15_fu_1947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_2_reg_2230_pp0_iter3_reg),26));
    zext_ln1118_16_fu_1951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_V_2_reg_2251_pp0_iter3_reg),26));
    zext_ln1118_17_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_V_2_reg_2257_pp0_iter3_reg),26));
    zext_ln1118_18_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_V_1_reg_2263_pp0_iter3_reg),26));
    zext_ln1118_19_fu_1963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_V_1_reg_2276_pp0_iter3_reg),26));
    zext_ln1118_fu_1927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_2_reg_2185_pp0_iter3_reg),26));
    zext_ln225_1_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_13_reg_2125),64));
    zext_ln225_2_fu_1623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_14_reg_2130),64));
    zext_ln225_3_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_15_reg_2135),64));
    zext_ln225_4_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_16_reg_2140),64));
    zext_ln225_5_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_17_reg_2145),64));
    zext_ln225_6_fu_1639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_18_reg_2150),64));
    zext_ln225_7_fu_1643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_19_reg_2155),64));
    zext_ln225_8_fu_1647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_20_reg_2160),64));
    zext_ln225_9_fu_1651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_21_reg_2165),64));
    zext_ln225_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_2120),64));
    zext_ln235_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_22_fu_1908_p3),64));
    zext_ln746_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_46_reg_2295),18));
end behav;
