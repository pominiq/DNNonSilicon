-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table4_ce0 : STD_LOGIC;
    signal exp_table4_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table4_ce1 : STD_LOGIC;
    signal exp_table4_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table6_ce0 : STD_LOGIC;
    signal invert_table6_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln196_reg_1693 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln196_reg_1693_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal i_0_reg_480 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal io_acc_block_signal_op293 : STD_LOGIC;
    signal ap_block_state18_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln196_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_1693_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln196_reg_1693_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_590_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1697 : STD_LOGIC_VECTOR (4 downto 0);
    signal data_array_0_V_reg_1702 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op50 : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal data_array_1_V_reg_1708 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_V_reg_1714 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_V_reg_1720 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_V_reg_1726 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_V_reg_1732 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_V_reg_1738 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_V_reg_1744 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_3_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_4_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_V_fu_706_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_V_reg_1770 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal y_V_2_fu_1261_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_2_reg_1785 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_fu_1295_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_3_reg_1790 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_fu_1329_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_4_reg_1795 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_fu_1363_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_5_reg_1800 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_fu_1397_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_6_reg_1805 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_fu_1431_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_7_reg_1810 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_res_0_V_1_reg_1815 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exp_res_0_V_1_reg_1815_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_1821 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_1_reg_1821_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_1837 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_1_reg_1837_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_1843 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_1_reg_1843_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_1859 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_1_reg_1859_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_1864 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_1_reg_1864_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_1_reg_1879_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_1884 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_1_reg_1884_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_reg_1889 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_reg_1895 : STD_LOGIC_VECTOR (17 downto 0);
    signal inv_exp_sum_V_reg_1906 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln241_fu_1600_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln241_reg_1911 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_data_0_V_reg_1917 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_data_1_V_reg_1922 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_1927 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_1932 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_1937 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_reg_1942 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_1947 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_1952 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_done : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_idle : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3_ignore_call163 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp218 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp220 : BOOLEAN;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_done : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_idle : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready : STD_LOGIC;
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3_ignore_call164 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp219 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp221 : BOOLEAN;
    signal ap_phi_mux_i_0_phi_fu_484_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg : STD_LOGIC := '0';
    signal exp_res_0_V_fu_342 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_1_V_fu_338 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_V_fu_334 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_V_fu_330 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_V_fu_326 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_V_fu_322 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_V_fu_318 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_V_fu_314 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln225_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln225_1_fu_1230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln225_7_fu_1485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_1595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_491_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_fu_1605_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_2_fu_1613_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_4_fu_1621_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_6_fu_1629_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_491_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_492_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_1_fu_1609_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_3_fu_1617_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_5_fu_1625_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1118_7_fu_1633_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_492_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_491_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln1496_fu_628_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_fu_628_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_634_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_1_fu_634_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_640_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_3_fu_640_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_646_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_4_fu_646_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_fu_652_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_657_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_2_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_676_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_681_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_5_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_668_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_fu_692_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1496_6_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_fu_714_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_717_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_fu_720_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_2_fu_772_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_1_fu_775_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_781_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_3_fu_827_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_2_fu_830_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_836_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_4_fu_882_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_3_fu_885_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_3_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_5_fu_937_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_4_fu_940_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_954_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_946_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_4_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_6_fu_992_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_5_fu_995_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1001_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_5_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_7_fu_1047_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_6_fu_1050_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_fu_1064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln703_8_fu_1102_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1193_7_fu_1105_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_32_fu_1119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1111_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1157_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1167_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_fu_1175_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_fu_1183_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_10_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1196_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_1_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1206_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_1_fu_1214_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_1_fu_1222_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_11_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1235_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_2_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1245_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_2_fu_1253_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_12_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1269_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_3_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1279_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_3_fu_1287_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_13_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1303_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_4_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_1313_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_4_fu_1321_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_14_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1337_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_5_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1347_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_5_fu_1355_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_15_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1371_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_6_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_12_fu_1381_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_6_fu_1389_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln340_16_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1405_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln786_7_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_14_fu_1415_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_7_fu_1423_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_fu_1502_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_fu_1499_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_1505_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_12_fu_1519_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_12_fu_1523_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_8_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_17_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1561_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal underflow_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_8_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_16_fu_1571_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln388_8_fu_1579_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_V_8_fu_1587_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_0_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_1_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_2_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_3_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_4_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_5_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_6_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_7_V : IN STD_LOGIC_VECTOR (16 downto 0);
        x_V_offset : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (17 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table4_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_8u_softmax_config6_s_exp_table4
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table4_address0,
        ce0 => exp_table4_ce0,
        q0 => exp_table4_q0,
        address1 => exp_table4_address1,
        ce1 => exp_table4_ce1,
        q1 => exp_table4_q1);

    invert_table6_U : component softmax_stable_array_array_ap_fixed_16_6_5_3_0_4u_softmax_config3_s_invert_tadEe
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table6_address0,
        ce0 => invert_table6_ce0,
        q0 => invert_table6_q0);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start,
        ap_done => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_done,
        ap_idle => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_idle,
        ap_ready => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready,
        x_0_V => exp_res_0_V_fu_342,
        x_1_V => exp_res_1_V_fu_338,
        x_2_V => exp_res_2_V_fu_334,
        x_3_V => exp_res_3_V_fu_330,
        x_4_V => exp_res_4_V_fu_326,
        x_5_V => exp_res_5_V_fu_322,
        x_6_V => exp_res_6_V_fu_318,
        x_7_V => exp_res_7_V_fu_314,
        x_V_offset => ap_const_lv5_0,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce);

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550 : component reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start,
        ap_done => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_done,
        ap_idle => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_idle,
        ap_ready => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready,
        x_0_V => exp_res_0_V_fu_342,
        x_1_V => exp_res_1_V_fu_338,
        x_2_V => exp_res_2_V_fu_334,
        x_3_V => exp_res_3_V_fu_330,
        x_4_V => exp_res_4_V_fu_326,
        x_5_V => exp_res_5_V_fu_322,
        x_6_V => exp_res_6_V_fu_318,
        x_7_V => exp_res_7_V_fu_314,
        x_V_offset => ap_const_lv5_4,
        ap_return => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return,
        ap_ce => grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693_pp0_iter1_reg = ap_const_lv1_0))) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693_pp0_iter1_reg = ap_const_lv1_0))) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
                i_0_reg_480 <= i_reg_1697;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_480 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then
                data_array_0_V_reg_1702 <= data_V_data_0_V_dout;
                data_array_1_V_reg_1708 <= data_V_data_1_V_dout;
                data_array_2_V_reg_1714 <= data_V_data_2_V_dout;
                data_array_3_V_reg_1720 <= data_V_data_3_V_dout;
                data_array_4_V_reg_1726 <= data_V_data_4_V_dout;
                data_array_5_V_reg_1732 <= data_V_data_5_V_dout;
                data_array_6_V_reg_1738 <= data_V_data_6_V_dout;
                data_array_7_V_reg_1744 <= data_V_data_7_V_dout;
                icmp_ln1496_1_reg_1755 <= icmp_ln1496_1_fu_634_p2;
                icmp_ln1496_3_reg_1760 <= icmp_ln1496_3_fu_640_p2;
                icmp_ln1496_4_reg_1765 <= icmp_ln1496_4_fu_646_p2;
                icmp_ln1496_reg_1750 <= icmp_ln1496_fu_628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then
                exp_res_0_V_1_reg_1815 <= exp_table4_q0;
                exp_res_1_V_1_reg_1821 <= exp_table4_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_res_0_V_1_reg_1815_pp0_iter2_reg <= exp_res_0_V_1_reg_1815;
                exp_res_1_V_1_reg_1821_pp0_iter2_reg <= exp_res_1_V_1_reg_1821;
                icmp_ln196_reg_1693 <= icmp_ln196_fu_584_p2;
                icmp_ln196_reg_1693_pp0_iter1_reg <= icmp_ln196_reg_1693;
                icmp_ln196_reg_1693_pp0_iter2_reg <= icmp_ln196_reg_1693_pp0_iter1_reg;
                icmp_ln196_reg_1693_pp0_iter3_reg <= icmp_ln196_reg_1693_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1693_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_0_V_fu_342 <= exp_res_0_V_1_reg_1815;
                exp_res_1_V_fu_338 <= exp_res_1_V_1_reg_1821;
                exp_res_2_V_fu_334 <= exp_res_2_V_1_reg_1837;
                exp_res_3_V_fu_330 <= exp_res_3_V_1_reg_1843;
                exp_res_4_V_1_reg_1859 <= exp_table4_q0;
                exp_res_4_V_fu_326 <= exp_table4_q0;
                exp_res_5_V_1_reg_1864 <= exp_table4_q1;
                exp_res_5_V_fu_322 <= exp_table4_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_2_V_1_reg_1837 <= exp_table4_q0;
                exp_res_3_V_1_reg_1843 <= exp_table4_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                exp_res_2_V_1_reg_1837_pp0_iter2_reg <= exp_res_2_V_1_reg_1837;
                exp_res_3_V_1_reg_1843_pp0_iter2_reg <= exp_res_3_V_1_reg_1843;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                exp_res_4_V_1_reg_1859_pp0_iter2_reg <= exp_res_4_V_1_reg_1859;
                exp_res_5_V_1_reg_1864_pp0_iter2_reg <= exp_res_5_V_1_reg_1864;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693_pp0_iter1_reg = ap_const_lv1_0))) then
                exp_res_6_V_1_reg_1879 <= exp_table4_q0;
                exp_res_6_V_fu_318 <= exp_table4_q0;
                exp_res_7_V_1_reg_1884 <= exp_table4_q1;
                exp_res_7_V_fu_314 <= exp_table4_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                exp_res_6_V_1_reg_1879_pp0_iter2_reg <= exp_res_6_V_1_reg_1879;
                exp_res_7_V_1_reg_1884_pp0_iter2_reg <= exp_res_7_V_1_reg_1884;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1697 <= i_fu_590_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693_pp0_iter2_reg = ap_const_lv1_0))) then
                inv_exp_sum_V_reg_1906 <= invert_table6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693_pp0_iter2_reg = ap_const_lv1_0))) then
                p_Val2_1_reg_1895 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_return;
                p_Val2_9_reg_1889 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter2_reg = ap_const_lv1_0))) then
                sext_ln241_reg_1911 <= sext_ln241_fu_1600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1917 <= grp_fu_491_p2(25 downto 10);
                tmp_data_1_V_reg_1922 <= grp_fu_492_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_data_2_V_reg_1927 <= grp_fu_491_p2(25 downto 10);
                tmp_data_3_V_reg_1932 <= grp_fu_492_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_data_4_V_reg_1937 <= grp_fu_491_p2(25 downto 10);
                tmp_data_5_V_reg_1942 <= grp_fu_492_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_data_6_V_reg_1947 <= grp_fu_491_p2(25 downto 10);
                tmp_data_7_V_reg_1952 <= grp_fu_492_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then
                x_max_V_reg_1770 <= x_max_V_fu_706_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then
                y_V_2_reg_1785 <= y_V_2_fu_1261_p3;
                y_V_3_reg_1790 <= y_V_3_fu_1295_p3;
                y_V_4_reg_1795 <= y_V_4_fu_1329_p3;
                y_V_5_reg_1800 <= y_V_5_fu_1363_p3;
                y_V_6_reg_1805 <= y_V_6_fu_1397_p3;
                y_V_7_reg_1810 <= y_V_7_fu_1431_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_fu_584_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_fu_584_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_fu_584_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    and_ln786_1_fu_803_p2 <= (xor_ln786_1_fu_797_p2 and tmp_19_fu_781_p3);
    and_ln786_2_fu_858_p2 <= (xor_ln786_2_fu_852_p2 and tmp_21_fu_836_p3);
    and_ln786_3_fu_913_p2 <= (xor_ln786_3_fu_907_p2 and tmp_23_fu_891_p3);
    and_ln786_4_fu_968_p2 <= (xor_ln786_4_fu_962_p2 and tmp_25_fu_946_p3);
    and_ln786_5_fu_1023_p2 <= (xor_ln786_5_fu_1017_p2 and tmp_27_fu_1001_p3);
    and_ln786_6_fu_1078_p2 <= (xor_ln786_6_fu_1072_p2 and tmp_29_fu_1056_p3);
    and_ln786_7_fu_1133_p2 <= (xor_ln786_7_fu_1127_p2 and tmp_31_fu_1111_p3);
    and_ln786_fu_748_p2 <= (xor_ln786_fu_742_p2 and tmp_17_fu_726_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_pp0_stage0_01001 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp218_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp218 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp219_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp219 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_pp0_stage1_11001 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp220_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp220 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp221_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp221 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_pp0_stage1_subdone <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter4_assign_proc : process(icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_state18_pp0_stage0_iter4 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage0_iter4_ignore_call163_assign_proc : process(icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_state18_pp0_stage0_iter4_ignore_call163 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage0_iter4_ignore_call164_assign_proc : process(icmp_ln196_reg_1693_pp0_iter3_reg, io_acc_block_signal_op293)
    begin
                ap_block_state18_pp0_stage0_iter4_ignore_call164 <= ((io_acc_block_signal_op293 = ap_const_logic_0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;


    ap_block_state3_pp0_stage1_iter0_ignore_call163_assign_proc : process(icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_state3_pp0_stage1_iter0_ignore_call163 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;


    ap_block_state3_pp0_stage1_iter0_ignore_call164_assign_proc : process(icmp_ln196_reg_1693, io_acc_block_signal_op50)
    begin
                ap_block_state3_pp0_stage1_iter0_ignore_call164 <= ((io_acc_block_signal_op50 = ap_const_logic_0) and (icmp_ln196_reg_1693 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln196_fu_584_p2)
    begin
        if ((icmp_ln196_fu_584_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_484_p4_assign_proc : process(icmp_ln196_reg_1693, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_0_reg_480, i_reg_1697, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            ap_phi_mux_i_0_phi_fu_484_p4 <= i_reg_1697;
        else 
            ap_phi_mux_i_0_phi_fu_484_p4 <= i_0_reg_480;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln196_reg_1693)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln196_reg_1693, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln196_reg_1693 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    exp_table4_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, zext_ln225_fu_1191_p1, ap_block_pp0_stage3, zext_ln225_2_fu_1439_p1, zext_ln225_4_fu_1447_p1, zext_ln225_6_fu_1481_p1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            exp_table4_address0 <= zext_ln225_6_fu_1481_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            exp_table4_address0 <= zext_ln225_4_fu_1447_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            exp_table4_address0 <= zext_ln225_2_fu_1439_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table4_address0 <= zext_ln225_fu_1191_p1(10 - 1 downto 0);
        else 
            exp_table4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table4_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3, zext_ln225_1_fu_1230_p1, zext_ln225_3_fu_1443_p1, zext_ln225_5_fu_1451_p1, ap_block_pp0_stage2, zext_ln225_7_fu_1485_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            exp_table4_address1 <= zext_ln225_7_fu_1485_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            exp_table4_address1 <= zext_ln225_5_fu_1451_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            exp_table4_address1 <= zext_ln225_3_fu_1443_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            exp_table4_address1 <= zext_ln225_1_fu_1230_p1(10 - 1 downto 0);
        else 
            exp_table4_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            exp_table4_ce0 <= ap_const_logic_1;
        else 
            exp_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    exp_table4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            exp_table4_ce1 <= ap_const_logic_1;
        else 
            exp_table4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_491_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter3, ap_block_pp0_stage3, ap_block_pp0_stage2, zext_ln1118_fu_1605_p1, zext_ln1118_2_fu_1613_p1, zext_ln1118_4_fu_1621_p1, zext_ln1118_6_fu_1629_p1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_491_p0 <= zext_ln1118_6_fu_1629_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_491_p0 <= zext_ln1118_4_fu_1621_p1(17 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_491_p0 <= zext_ln1118_2_fu_1613_p1(17 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_491_p0 <= zext_ln1118_fu_1605_p1(17 - 1 downto 0);
            else 
                grp_fu_491_p0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_491_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_491_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln241_fu_1600_p1, sext_ln241_reg_1911, ap_enable_reg_pp0_iter3, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_491_p1 <= sext_ln241_reg_1911(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_491_p1 <= sext_ln241_fu_1600_p1(18 - 1 downto 0);
        else 
            grp_fu_491_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_491_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_491_p0) * signed(grp_fu_491_p1))), 26));

    grp_fu_492_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter3, ap_block_pp0_stage3, ap_block_pp0_stage2, zext_ln1118_1_fu_1609_p1, zext_ln1118_3_fu_1617_p1, zext_ln1118_5_fu_1625_p1, zext_ln1118_7_fu_1633_p1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_492_p0 <= zext_ln1118_7_fu_1633_p1(17 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_492_p0 <= zext_ln1118_5_fu_1625_p1(17 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_492_p0 <= zext_ln1118_3_fu_1617_p1(17 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_492_p0 <= zext_ln1118_1_fu_1609_p1(17 - 1 downto 0);
            else 
                grp_fu_492_p0 <= "XXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_492_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_492_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln241_fu_1600_p1, sext_ln241_reg_1911, ap_enable_reg_pp0_iter3, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            grp_fu_492_p1 <= sext_ln241_reg_1911(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_492_p1 <= sext_ln241_fu_1600_p1(18 - 1 downto 0);
        else 
            grp_fu_492_p1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_492_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &grp_fu_492_p0) * signed(grp_fu_492_p1))), 26));

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp218, ap_block_pp0_stage1_11001_ignoreCallOp220)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp218) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp220) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_536_ap_start_reg;

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp219, ap_block_pp0_stage1_11001_ignoreCallOp221)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp219) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp221) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce <= ap_const_logic_1;
        else 
            grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_2_fu_550_ap_start_reg;
    i_fu_590_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_484_p4) + unsigned(ap_const_lv5_1));
    icmp_ln1496_1_fu_634_p0 <= data_V_data_2_V_dout;
    icmp_ln1496_1_fu_634_p1 <= data_V_data_3_V_dout;
    icmp_ln1496_1_fu_634_p2 <= "1" when (signed(icmp_ln1496_1_fu_634_p0) < signed(icmp_ln1496_1_fu_634_p1)) else "0";
    icmp_ln1496_2_fu_662_p2 <= "1" when (signed(select_ln65_fu_652_p3) < signed(select_ln65_1_fu_657_p3)) else "0";
    icmp_ln1496_3_fu_640_p0 <= data_V_data_4_V_dout;
    icmp_ln1496_3_fu_640_p1 <= data_V_data_5_V_dout;
    icmp_ln1496_3_fu_640_p2 <= "1" when (signed(icmp_ln1496_3_fu_640_p0) < signed(icmp_ln1496_3_fu_640_p1)) else "0";
    icmp_ln1496_4_fu_646_p0 <= data_V_data_6_V_dout;
    icmp_ln1496_4_fu_646_p1 <= data_V_data_7_V_dout;
    icmp_ln1496_4_fu_646_p2 <= "1" when (signed(icmp_ln1496_4_fu_646_p0) < signed(icmp_ln1496_4_fu_646_p1)) else "0";
    icmp_ln1496_5_fu_686_p2 <= "1" when (signed(select_ln65_3_fu_676_p3) < signed(select_ln65_4_fu_681_p3)) else "0";
    icmp_ln1496_6_fu_700_p2 <= "1" when (signed(select_ln65_2_fu_668_p3) < signed(select_ln65_5_fu_692_p3)) else "0";
    icmp_ln1496_fu_628_p0 <= data_V_data_0_V_dout;
    icmp_ln1496_fu_628_p1 <= data_V_data_1_V_dout;
    icmp_ln1496_fu_628_p2 <= "1" when (signed(icmp_ln1496_fu_628_p0) < signed(icmp_ln1496_fu_628_p1)) else "0";
    icmp_ln196_fu_584_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_484_p4 = ap_const_lv5_10) else "0";
    invert_table6_address0 <= zext_ln235_fu_1595_p1(10 - 1 downto 0);

    invert_table6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            invert_table6_ce0 <= ap_const_logic_1;
        else 
            invert_table6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op293 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op50 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
        lhs_V_fu_1499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1889),19));

    or_ln340_1_fu_821_p2 <= (xor_ln340_1_fu_815_p2 or tmp_20_fu_789_p3);
    or_ln340_2_fu_876_p2 <= (xor_ln340_2_fu_870_p2 or tmp_22_fu_844_p3);
    or_ln340_3_fu_931_p2 <= (xor_ln340_3_fu_925_p2 or tmp_24_fu_899_p3);
    or_ln340_4_fu_986_p2 <= (xor_ln340_4_fu_980_p2 or tmp_26_fu_954_p3);
    or_ln340_5_fu_1041_p2 <= (xor_ln340_5_fu_1035_p2 or tmp_28_fu_1009_p3);
    or_ln340_6_fu_1096_p2 <= (xor_ln340_6_fu_1090_p2 or tmp_30_fu_1064_p3);
    or_ln340_7_fu_1151_p2 <= (xor_ln340_7_fu_1145_p2 or tmp_32_fu_1119_p3);
    or_ln340_8_fu_1555_p2 <= (xor_ln340_8_fu_1549_p2 or p_Result_12_fu_1523_p3);
    or_ln340_fu_766_p2 <= (xor_ln340_fu_760_p2 or tmp_18_fu_734_p3);
    p_Result_12_fu_1523_p3 <= p_Val2_12_fu_1519_p2(17 downto 17);
    p_Result_s_fu_1511_p3 <= ret_V_fu_1505_p2(18 downto 18);
    p_Val2_12_fu_1519_p2 <= std_logic_vector(signed(p_Val2_9_reg_1889) + signed(p_Val2_1_reg_1895));

    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1917;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1922;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1927;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1932;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_1937;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_1942;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_1947;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, icmp_ln196_reg_1693_pp0_iter3_reg)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_1952;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln196_reg_1693_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln196_reg_1693_pp0_iter3_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_1505_p2 <= std_logic_vector(signed(rhs_V_fu_1502_p1) + signed(lhs_V_fu_1499_p1));
        rhs_V_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1895),19));

    select_ln340_10_fu_1347_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_14_fu_1029_p2(0) = '1') else 
        tmp_13_fu_1337_p4;
    select_ln340_12_fu_1381_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_15_fu_1084_p2(0) = '1') else 
        tmp_14_fu_1371_p4;
    select_ln340_14_fu_1415_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_16_fu_1139_p2(0) = '1') else 
        tmp_15_fu_1405_p4;
    select_ln340_16_fu_1571_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_17_fu_1543_p2(0) = '1') else 
        tmp_16_fu_1561_p4;
    select_ln340_2_fu_1206_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_10_fu_809_p2(0) = '1') else 
        tmp_s_fu_1196_p4;
    select_ln340_4_fu_1245_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_11_fu_864_p2(0) = '1') else 
        tmp_10_fu_1235_p4;
    select_ln340_6_fu_1279_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_12_fu_919_p2(0) = '1') else 
        tmp_11_fu_1269_p4;
    select_ln340_8_fu_1313_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_13_fu_974_p2(0) = '1') else 
        tmp_12_fu_1303_p4;
    select_ln340_fu_1167_p3 <= 
        ap_const_lv10_1FF when (xor_ln340_9_fu_754_p2(0) = '1') else 
        tmp_fu_1157_p4;
    select_ln388_1_fu_1214_p3 <= 
        ap_const_lv10_200 when (and_ln786_1_fu_803_p2(0) = '1') else 
        tmp_s_fu_1196_p4;
    select_ln388_2_fu_1253_p3 <= 
        ap_const_lv10_200 when (and_ln786_2_fu_858_p2(0) = '1') else 
        tmp_10_fu_1235_p4;
    select_ln388_3_fu_1287_p3 <= 
        ap_const_lv10_200 when (and_ln786_3_fu_913_p2(0) = '1') else 
        tmp_11_fu_1269_p4;
    select_ln388_4_fu_1321_p3 <= 
        ap_const_lv10_200 when (and_ln786_4_fu_968_p2(0) = '1') else 
        tmp_12_fu_1303_p4;
    select_ln388_5_fu_1355_p3 <= 
        ap_const_lv10_200 when (and_ln786_5_fu_1023_p2(0) = '1') else 
        tmp_13_fu_1337_p4;
    select_ln388_6_fu_1389_p3 <= 
        ap_const_lv10_200 when (and_ln786_6_fu_1078_p2(0) = '1') else 
        tmp_14_fu_1371_p4;
    select_ln388_7_fu_1423_p3 <= 
        ap_const_lv10_200 when (and_ln786_7_fu_1133_p2(0) = '1') else 
        tmp_15_fu_1405_p4;
    select_ln388_8_fu_1579_p3 <= 
        ap_const_lv10_200 when (underflow_fu_1537_p2(0) = '1') else 
        tmp_16_fu_1561_p4;
    select_ln388_fu_1175_p3 <= 
        ap_const_lv10_200 when (and_ln786_fu_748_p2(0) = '1') else 
        tmp_fu_1157_p4;
    select_ln65_1_fu_657_p3 <= 
        data_array_3_V_reg_1720 when (icmp_ln1496_1_reg_1755(0) = '1') else 
        data_array_2_V_reg_1714;
    select_ln65_2_fu_668_p3 <= 
        select_ln65_1_fu_657_p3 when (icmp_ln1496_2_fu_662_p2(0) = '1') else 
        select_ln65_fu_652_p3;
    select_ln65_3_fu_676_p3 <= 
        data_array_5_V_reg_1732 when (icmp_ln1496_3_reg_1760(0) = '1') else 
        data_array_4_V_reg_1726;
    select_ln65_4_fu_681_p3 <= 
        data_array_7_V_reg_1744 when (icmp_ln1496_4_reg_1765(0) = '1') else 
        data_array_6_V_reg_1738;
    select_ln65_5_fu_692_p3 <= 
        select_ln65_4_fu_681_p3 when (icmp_ln1496_5_fu_686_p2(0) = '1') else 
        select_ln65_3_fu_676_p3;
    select_ln65_fu_652_p3 <= 
        data_array_1_V_reg_1708 when (icmp_ln1496_reg_1750(0) = '1') else 
        data_array_0_V_reg_1702;
        sext_ln241_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_V_reg_1906),26));

        sext_ln703_1_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_V_reg_1770),17));

        sext_ln703_2_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_V_reg_1708),17));

        sext_ln703_3_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_V_reg_1714),17));

        sext_ln703_4_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_V_reg_1720),17));

        sext_ln703_5_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_V_reg_1726),17));

        sext_ln703_6_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_V_reg_1732),17));

        sext_ln703_7_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_V_reg_1738),17));

        sext_ln703_8_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_V_reg_1744),17));

        sext_ln703_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_0_V_reg_1702),17));

    sub_ln1193_1_fu_775_p2 <= std_logic_vector(signed(sext_ln703_2_fu_772_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_2_fu_830_p2 <= std_logic_vector(signed(sext_ln703_3_fu_827_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_3_fu_885_p2 <= std_logic_vector(signed(sext_ln703_4_fu_882_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_4_fu_940_p2 <= std_logic_vector(signed(sext_ln703_5_fu_937_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_5_fu_995_p2 <= std_logic_vector(signed(sext_ln703_6_fu_992_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_6_fu_1050_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1047_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_7_fu_1105_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1102_p1) - signed(sext_ln703_1_fu_717_p1));
    sub_ln1193_fu_720_p2 <= std_logic_vector(signed(sext_ln703_fu_714_p1) - signed(sext_ln703_1_fu_717_p1));
    tmp_10_fu_1235_p4 <= sub_ln1193_2_fu_830_p2(15 downto 6);
    tmp_11_fu_1269_p4 <= sub_ln1193_3_fu_885_p2(15 downto 6);
    tmp_12_fu_1303_p4 <= sub_ln1193_4_fu_940_p2(15 downto 6);
    tmp_13_fu_1337_p4 <= sub_ln1193_5_fu_995_p2(15 downto 6);
    tmp_14_fu_1371_p4 <= sub_ln1193_6_fu_1050_p2(15 downto 6);
    tmp_15_fu_1405_p4 <= sub_ln1193_7_fu_1105_p2(15 downto 6);
    tmp_16_fu_1561_p4 <= p_Val2_12_fu_1519_p2(17 downto 8);
    tmp_17_fu_726_p3 <= sub_ln1193_fu_720_p2(16 downto 16);
    tmp_18_fu_734_p3 <= sub_ln1193_fu_720_p2(15 downto 15);
    tmp_19_fu_781_p3 <= sub_ln1193_1_fu_775_p2(16 downto 16);
    tmp_20_fu_789_p3 <= sub_ln1193_1_fu_775_p2(15 downto 15);
    tmp_21_fu_836_p3 <= sub_ln1193_2_fu_830_p2(16 downto 16);
    tmp_22_fu_844_p3 <= sub_ln1193_2_fu_830_p2(15 downto 15);
    tmp_23_fu_891_p3 <= sub_ln1193_3_fu_885_p2(16 downto 16);
    tmp_24_fu_899_p3 <= sub_ln1193_3_fu_885_p2(15 downto 15);
    tmp_25_fu_946_p3 <= sub_ln1193_4_fu_940_p2(16 downto 16);
    tmp_26_fu_954_p3 <= sub_ln1193_4_fu_940_p2(15 downto 15);
    tmp_27_fu_1001_p3 <= sub_ln1193_5_fu_995_p2(16 downto 16);
    tmp_28_fu_1009_p3 <= sub_ln1193_5_fu_995_p2(15 downto 15);
    tmp_29_fu_1056_p3 <= sub_ln1193_6_fu_1050_p2(16 downto 16);
    tmp_30_fu_1064_p3 <= sub_ln1193_6_fu_1050_p2(15 downto 15);
    tmp_31_fu_1111_p3 <= sub_ln1193_7_fu_1105_p2(16 downto 16);
    tmp_32_fu_1119_p3 <= sub_ln1193_7_fu_1105_p2(15 downto 15);
    tmp_fu_1157_p4 <= sub_ln1193_fu_720_p2(15 downto 6);
    tmp_s_fu_1196_p4 <= sub_ln1193_1_fu_775_p2(15 downto 6);
    underflow_fu_1537_p2 <= (xor_ln786_8_fu_1531_p2 and p_Result_s_fu_1511_p3);
    x_max_V_fu_706_p3 <= 
        select_ln65_5_fu_692_p3 when (icmp_ln1496_6_fu_700_p2(0) = '1') else 
        select_ln65_2_fu_668_p3;
    xor_ln340_10_fu_809_p2 <= (tmp_20_fu_789_p3 xor tmp_19_fu_781_p3);
    xor_ln340_11_fu_864_p2 <= (tmp_22_fu_844_p3 xor tmp_21_fu_836_p3);
    xor_ln340_12_fu_919_p2 <= (tmp_24_fu_899_p3 xor tmp_23_fu_891_p3);
    xor_ln340_13_fu_974_p2 <= (tmp_26_fu_954_p3 xor tmp_25_fu_946_p3);
    xor_ln340_14_fu_1029_p2 <= (tmp_28_fu_1009_p3 xor tmp_27_fu_1001_p3);
    xor_ln340_15_fu_1084_p2 <= (tmp_30_fu_1064_p3 xor tmp_29_fu_1056_p3);
    xor_ln340_16_fu_1139_p2 <= (tmp_32_fu_1119_p3 xor tmp_31_fu_1111_p3);
    xor_ln340_17_fu_1543_p2 <= (p_Result_s_fu_1511_p3 xor p_Result_12_fu_1523_p3);
    xor_ln340_1_fu_815_p2 <= (tmp_19_fu_781_p3 xor ap_const_lv1_1);
    xor_ln340_2_fu_870_p2 <= (tmp_21_fu_836_p3 xor ap_const_lv1_1);
    xor_ln340_3_fu_925_p2 <= (tmp_23_fu_891_p3 xor ap_const_lv1_1);
    xor_ln340_4_fu_980_p2 <= (tmp_25_fu_946_p3 xor ap_const_lv1_1);
    xor_ln340_5_fu_1035_p2 <= (tmp_27_fu_1001_p3 xor ap_const_lv1_1);
    xor_ln340_6_fu_1090_p2 <= (tmp_29_fu_1056_p3 xor ap_const_lv1_1);
    xor_ln340_7_fu_1145_p2 <= (tmp_31_fu_1111_p3 xor ap_const_lv1_1);
    xor_ln340_8_fu_1549_p2 <= (p_Result_s_fu_1511_p3 xor ap_const_lv1_1);
    xor_ln340_9_fu_754_p2 <= (tmp_18_fu_734_p3 xor tmp_17_fu_726_p3);
    xor_ln340_fu_760_p2 <= (tmp_17_fu_726_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_797_p2 <= (tmp_20_fu_789_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_852_p2 <= (tmp_22_fu_844_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_907_p2 <= (tmp_24_fu_899_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_962_p2 <= (tmp_26_fu_954_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1017_p2 <= (tmp_28_fu_1009_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_1072_p2 <= (tmp_30_fu_1064_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_1127_p2 <= (tmp_32_fu_1119_p3 xor ap_const_lv1_1);
    xor_ln786_8_fu_1531_p2 <= (p_Result_12_fu_1523_p3 xor ap_const_lv1_1);
    xor_ln786_fu_742_p2 <= (tmp_18_fu_734_p3 xor ap_const_lv1_1);
    y_V_1_fu_1222_p3 <= 
        select_ln340_2_fu_1206_p3 when (or_ln340_1_fu_821_p2(0) = '1') else 
        select_ln388_1_fu_1214_p3;
    y_V_2_fu_1261_p3 <= 
        select_ln340_4_fu_1245_p3 when (or_ln340_2_fu_876_p2(0) = '1') else 
        select_ln388_2_fu_1253_p3;
    y_V_3_fu_1295_p3 <= 
        select_ln340_6_fu_1279_p3 when (or_ln340_3_fu_931_p2(0) = '1') else 
        select_ln388_3_fu_1287_p3;
    y_V_4_fu_1329_p3 <= 
        select_ln340_8_fu_1313_p3 when (or_ln340_4_fu_986_p2(0) = '1') else 
        select_ln388_4_fu_1321_p3;
    y_V_5_fu_1363_p3 <= 
        select_ln340_10_fu_1347_p3 when (or_ln340_5_fu_1041_p2(0) = '1') else 
        select_ln388_5_fu_1355_p3;
    y_V_6_fu_1397_p3 <= 
        select_ln340_12_fu_1381_p3 when (or_ln340_6_fu_1096_p2(0) = '1') else 
        select_ln388_6_fu_1389_p3;
    y_V_7_fu_1431_p3 <= 
        select_ln340_14_fu_1415_p3 when (or_ln340_7_fu_1151_p2(0) = '1') else 
        select_ln388_7_fu_1423_p3;
    y_V_8_fu_1587_p3 <= 
        select_ln340_16_fu_1571_p3 when (or_ln340_8_fu_1555_p2(0) = '1') else 
        select_ln388_8_fu_1579_p3;
    y_V_fu_1183_p3 <= 
        select_ln340_fu_1167_p3 when (or_ln340_fu_766_p2(0) = '1') else 
        select_ln388_fu_1175_p3;
    zext_ln1118_1_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_V_1_reg_1821_pp0_iter2_reg),26));
    zext_ln1118_2_fu_1613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_V_1_reg_1837_pp0_iter2_reg),26));
    zext_ln1118_3_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_V_1_reg_1843_pp0_iter2_reg),26));
    zext_ln1118_4_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_V_1_reg_1859_pp0_iter2_reg),26));
    zext_ln1118_5_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_V_1_reg_1864_pp0_iter2_reg),26));
    zext_ln1118_6_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_V_1_reg_1879_pp0_iter2_reg),26));
    zext_ln1118_7_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_V_1_reg_1884_pp0_iter2_reg),26));
    zext_ln1118_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_0_V_1_reg_1815_pp0_iter2_reg),26));
    zext_ln225_1_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_1_fu_1222_p3),64));
    zext_ln225_2_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_2_reg_1785),64));
    zext_ln225_3_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_3_reg_1790),64));
    zext_ln225_4_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_4_reg_1795),64));
    zext_ln225_5_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_5_reg_1800),64));
    zext_ln225_6_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_6_reg_1805),64));
    zext_ln225_7_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_7_reg_1810),64));
    zext_ln225_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_fu_1183_p3),64));
    zext_ln235_fu_1595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_8_fu_1587_p3),64));
end behav;
