-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv16_FFF1 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110001";
    constant ap_const_lv16_1C9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000111001001";
    constant ap_const_lv16_FEF0 : STD_LOGIC_VECTOR (15 downto 0) := "1111111011110000";
    constant ap_const_lv16_FF25 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100100101";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_E7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011100111";
    constant ap_const_lv16_154 : STD_LOGIC_VECTOR (15 downto 0) := "0000000101010100";
    constant ap_const_lv16_1B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110110000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111001111";
    constant ap_const_lv32_1D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111010000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";
    constant ap_const_lv32_1F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111110000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_20F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000001111";
    constant ap_const_lv32_210 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000010000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_22F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000101111";
    constant ap_const_lv32_230 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000110000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_24F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001111";
    constant ap_const_lv32_250 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001010000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_26F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101111";
    constant ap_const_lv32_270 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001110000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_28F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010001111";
    constant ap_const_lv32_290 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010010000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010101111";
    constant ap_const_lv32_2B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010110000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011001111";
    constant ap_const_lv32_2D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011010000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011101111";
    constant ap_const_lv32_2F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011110000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_30F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100001111";
    constant ap_const_lv32_310 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100010000";
    constant ap_const_lv32_31F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100011111";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_32F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100101111";
    constant ap_const_lv32_330 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100110000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_34F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101001111";
    constant ap_const_lv32_350 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010000";
    constant ap_const_lv32_35F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101011111";
    constant ap_const_lv32_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100000";
    constant ap_const_lv32_36F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101101111";
    constant ap_const_lv32_370 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101110000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_38F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110001111";
    constant ap_const_lv32_390 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110010000";
    constant ap_const_lv32_39F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110011111";
    constant ap_const_lv32_3A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100000";
    constant ap_const_lv32_3AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110101111";
    constant ap_const_lv32_3B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110110000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111001111";
    constant ap_const_lv32_3D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111010000";
    constant ap_const_lv32_3DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111011111";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111101111";
    constant ap_const_lv32_3F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111110000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_40F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000001111";
    constant ap_const_lv32_410 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000010000";
    constant ap_const_lv32_41F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000011111";
    constant ap_const_lv32_420 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000100000";
    constant ap_const_lv32_42F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000101111";
    constant ap_const_lv32_430 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000110000";
    constant ap_const_lv32_43F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000111111";
    constant ap_const_lv32_440 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001000000";
    constant ap_const_lv32_44F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001001111";
    constant ap_const_lv32_450 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001010000";
    constant ap_const_lv32_45F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001011111";
    constant ap_const_lv32_460 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001100000";
    constant ap_const_lv32_46F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001101111";
    constant ap_const_lv32_470 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001110000";
    constant ap_const_lv32_47A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001111010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_35 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w5_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w5_V_ce0 : STD_LOGIC;
    signal w5_V_q0 : STD_LOGIC_VECTOR (1146 downto 0);
    signal kernel_data_V_1_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal line_buffer_Array_V_1_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_0_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_1_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_2_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal line_buffer_Array_V_1_1_3_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_1_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal and_ln289_2_reg_6900 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal w_index132_reg_866 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state11_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_data_0_V_7130_reg_1814 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_7128_reg_1825 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_7126_reg_1836 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_7124_reg_1847 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_5122_reg_1858 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_5_V_5120_reg_1869 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_5118_reg_1880 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_5116_reg_1891 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_reg_6678 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op43 : STD_LOGIC;
    signal tmp_data_1_V_reg_6684 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_6690 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_6696 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln79_fu_2024_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln79_reg_6702 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln241_fu_2030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_ic_fu_2036_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic_reg_6711 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln246_fu_2042_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln246_reg_6716 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_data_V_1_8_load_reg_6740 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_9_load_reg_6745 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_10_load_reg_6750 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_11_load_reg_6755 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_20_load_reg_6760 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_21_load_reg_6765 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_22_load_reg_6770 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_23_load_reg_6775 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_32_load_reg_6780 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_33_load_reg_6785 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_34_load_reg_6790 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_35_load_reg_6795 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_iw_fu_2182_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln213_fu_2476_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln213_1_fu_2542_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln213_2_fu_2602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln213_2_fu_2608_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sX_2_load_reg_6868 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_reg_6873 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_6878 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln289_1_fu_2674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_reg_6883 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_6888 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_6894 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln289_2_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_2742_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_index_reg_6904 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal or_ln_fu_2753_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_reg_6914 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln43_fu_2761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6918 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6918_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6918_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_6918_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln56_fu_2783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln56_reg_6942 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_98_reg_6967 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_99_reg_6992 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_reg_7017 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_101_reg_7042 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_102_reg_7067 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_103_reg_7092 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_104_reg_7117 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_reg_7142 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_106_reg_7167 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_107_reg_7192 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_reg_7217 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_109_reg_7242 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_reg_7267 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_111_reg_7292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_112_reg_7317 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_113_reg_7342 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_114_reg_7367 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_115_reg_7392 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_116_reg_7417 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_117_reg_7442 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_118_reg_7467 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_119_reg_7492 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_120_reg_7517 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_121_reg_7542 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_122_reg_7567 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_123_reg_7592 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_124_reg_7617 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_125_reg_7642 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_126_reg_7667 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_127_reg_7692 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_128_reg_7717 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_129_reg_7742 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_130_reg_7767 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_131_reg_7792 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_132_reg_7817 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_133_reg_7842 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_134_reg_7867 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_135_reg_7892 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_136_reg_7917 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_137_reg_7942 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_138_reg_7967 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_139_reg_7992 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_140_reg_8017 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_141_reg_8042 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_142_reg_8067 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_143_reg_8092 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_144_reg_8117 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_reg_8142 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_146_reg_8167 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_147_reg_8192 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_148_reg_8217 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_149_reg_8242 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_150_reg_8267 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_151_reg_8292 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_152_reg_8317 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_153_reg_8342 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_154_reg_8367 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_155_reg_8392 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_156_reg_8417 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_157_reg_8442 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_158_reg_8467 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_159_reg_8492 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_160_reg_8517 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_161_reg_8542 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_162_reg_8567 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_163_reg_8592 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_164_reg_8617 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_165_reg_8642 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_166_reg_8667 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_167_reg_8692 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_168_reg_8717 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln2_reg_8722 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_reg_8727 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_79_reg_8732 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_80_reg_8737 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_81_reg_8742 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_82_reg_8747 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_83_reg_8752 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_84_reg_8757 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_85_reg_8762 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_86_reg_8767 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_87_reg_8772 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_88_reg_8777 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_89_reg_8782 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_90_reg_8787 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_91_reg_8792 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_92_reg_8797 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_93_reg_8802 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_94_reg_8807 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_95_reg_8812 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_96_reg_8817 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_97_reg_8822 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_98_reg_8827 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_99_reg_8832 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_100_reg_8837 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_101_reg_8842 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_102_reg_8847 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_103_reg_8852 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_104_reg_8857 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_105_reg_8862 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_106_reg_8867 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_107_reg_8872 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_108_reg_8877 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_109_reg_8882 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_110_reg_8887 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_111_reg_8892 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_112_reg_8897 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_113_reg_8902 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_114_reg_8907 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_115_reg_8912 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_116_reg_8917 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_117_reg_8922 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_118_reg_8927 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_119_reg_8932 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_120_reg_8937 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_121_reg_8942 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_122_reg_8947 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_123_reg_8952 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_124_reg_8957 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_125_reg_8962 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_126_reg_8967 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_127_reg_8972 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_128_reg_8977 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_129_reg_8982 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_130_reg_8987 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_131_reg_8992 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_132_reg_8997 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_133_reg_9002 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_134_reg_9007 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_135_reg_9012 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_136_reg_9017 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_137_reg_9022 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_138_reg_9027 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_139_reg_9032 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_140_reg_9037 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_141_reg_9042 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_142_reg_9047 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_143_reg_9052 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_144_reg_9057 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_145_reg_9062 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_146_reg_9067 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_147_reg_9072 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_148_reg_9077 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_81_fu_5697_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_81_reg_9082 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_85_fu_5716_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_85_reg_9087 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_90_fu_5730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_90_reg_9092 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_94_fu_5749_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_94_reg_9097 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_99_fu_5763_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_99_reg_9102 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_103_fu_5782_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_103_reg_9107 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_108_fu_5796_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_108_reg_9112 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_112_fu_5815_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_112_reg_9117 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_117_fu_5829_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_117_reg_9122 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_121_fu_5848_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_121_reg_9127 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_126_fu_5862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_126_reg_9132 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_130_fu_5881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_130_reg_9137 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_fu_5895_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_reg_9142 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_139_fu_5914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_139_reg_9147 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_fu_5928_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_reg_9152 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_148_fu_5947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_148_reg_9157 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_fu_5957_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_reg_9162 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal acc_1_V_fu_5967_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_V_reg_9168 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_fu_5977_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_V_reg_9174 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_fu_5987_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_V_reg_9180 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_fu_5997_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_V_reg_9186 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_fu_6007_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_V_reg_9192 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_fu_6017_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_V_reg_9198 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_fu_6027_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_V_reg_9204 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal indvar_flatten133_reg_773 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op1476 : STD_LOGIC;
    signal ap_block_state16 : BOOLEAN;
    signal icmp_ln79_fu_6120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic4_0_i_i_i_reg_785 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal shift_buffer_1_0_V_reg_796 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_0_V_reg_809 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_iw_0_i_i_i_i_reg_822 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln194_fu_2176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_0_reg_833 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln213_fu_2470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_ic2_0_i_i_i_i_1_reg_844 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln213_1_fu_2536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_ic2_0_i_i_i_i_2_reg_855 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_w_index132_phi_fu_870_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_reg_pp1_iter0_phi_ln56_reg_878 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_reg_878 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_reg_878 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_1_reg_891 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_1_reg_891 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_2_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_2_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_3_reg_917 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_3_reg_917 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_4_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_4_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_5_reg_943 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_5_reg_943 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_6_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_6_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_7_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_7_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_8_reg_982 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_8_reg_982 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_9_reg_995 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_9_reg_995 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1073 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1073 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1086 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1086 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1125 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1125 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1151 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1151 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1164 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1164 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1177 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1177 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1190 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1190 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1203 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1203 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1229 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1229 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1242 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1242 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1268 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1268 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1294 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1294 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1307 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1307 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1333 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1333 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1346 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1346 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1359 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1359 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1372 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1372 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1385 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1385 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1398 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1398 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1411 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1411 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1424 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1424 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1437 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1437 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1463 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1463 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1476 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1476 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1528 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1528 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1541 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1541 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1554 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1554 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1593 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1593 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1606 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1606 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1619 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1619 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1632 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1632 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1645 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1645 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1658 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1658 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1671 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1671 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1697 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1697 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1710 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1710 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1749 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1749 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1762 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1762 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1775 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1775 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln323_fu_6100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_1905_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_6033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_6079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_2748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_92_fu_2498_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_94_fu_2564_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_fu_2618_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln203_2_fu_2628_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln203_fu_2206_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_1_fu_2225_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_1_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_2_fu_2256_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_2_fu_2269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_3_fu_2287_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln203_3_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln203_4_fu_2318_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_5_fu_2337_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_6_fu_2356_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_7_fu_2375_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_8_fu_2394_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_9_fu_2413_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_10_fu_2432_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln203_11_fu_2451_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln328_fu_6054_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_6084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_6038_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_buffer_1_3_V_fu_688 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_1_fu_692 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_2_fu_696 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_1_3_V_3_fu_700 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_fu_704 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_1_fu_708 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_2_fu_712 : STD_LOGIC_VECTOR (15 downto 0);
    signal shift_buffer_0_3_V_3_fu_716 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_2046_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal DataIn_V_assign_fu_2046_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln201_fu_2188_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_2192_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_fu_2232_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_1_fu_2263_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln203_3_fu_2294_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_92_fu_2498_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_fu_2564_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_fu_2618_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_2684_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_72_fu_2704_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_2_fu_2694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_2726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_2720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln43_fu_2738_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1118_fu_6126_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_99_fu_6133_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_100_fu_6140_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_101_fu_6147_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_102_fu_6154_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_103_fu_6161_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_104_fu_6168_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_105_fu_6175_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_106_fu_6182_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_107_fu_6189_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_108_fu_6196_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_109_fu_6203_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_110_fu_6210_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_111_fu_6217_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_112_fu_6224_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_113_fu_6231_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_114_fu_6238_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_115_fu_6245_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_116_fu_6252_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_117_fu_6259_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_118_fu_6266_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_119_fu_6273_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_120_fu_6280_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_121_fu_6287_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_122_fu_6294_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_123_fu_6301_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_124_fu_6308_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_125_fu_6315_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_126_fu_6322_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_127_fu_6329_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_128_fu_6336_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_129_fu_6343_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_130_fu_6350_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_131_fu_6357_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_132_fu_6364_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_133_fu_6371_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_134_fu_6378_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_135_fu_6385_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_136_fu_6392_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_137_fu_6399_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_138_fu_6406_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_139_fu_6413_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_140_fu_6420_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_141_fu_6427_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_142_fu_6434_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_143_fu_6441_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_144_fu_6448_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_145_fu_6455_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_146_fu_6462_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_147_fu_6469_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_148_fu_6476_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_149_fu_6483_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_150_fu_6490_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_151_fu_6497_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_152_fu_6504_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_153_fu_6511_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_154_fu_6518_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_155_fu_6525_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_156_fu_6532_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_157_fu_6539_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_158_fu_6546_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_159_fu_6553_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_160_fu_6560_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_161_fu_6567_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_162_fu_6574_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_163_fu_6581_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_164_fu_6588_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_165_fu_6595_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_166_fu_6602_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_167_fu_6609_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_168_fu_6616_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_169_fu_6623_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_fu_5689_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_80_fu_5693_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_83_fu_5707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_82_fu_5703_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_84_fu_5711_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_88_fu_5722_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_89_fu_5726_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_92_fu_5740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_91_fu_5736_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_93_fu_5744_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_97_fu_5755_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_98_fu_5759_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_101_fu_5773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_100_fu_5769_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_102_fu_5777_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_106_fu_5788_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_107_fu_5792_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_110_fu_5806_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_109_fu_5802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_111_fu_5810_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_115_fu_5821_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_116_fu_5825_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_119_fu_5839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_118_fu_5835_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_120_fu_5843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_124_fu_5854_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_125_fu_5858_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_128_fu_5872_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_127_fu_5868_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_129_fu_5876_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_133_fu_5887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_134_fu_5891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_137_fu_5905_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_136_fu_5901_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_138_fu_5909_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_143_fu_5924_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_142_fu_5920_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_146_fu_5938_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_147_fu_5942_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_145_fu_5934_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_86_fu_5953_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_95_fu_5963_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_104_fu_5973_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_113_fu_5983_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_122_fu_5993_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_131_fu_6003_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_140_fu_6013_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_149_fu_6023_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_fu_6049_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_6095_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_603 : BOOLEAN;
    signal ap_condition_685 : BOOLEAN;
    signal ap_condition_1543 : BOOLEAN;
    signal ap_condition_2240 : BOOLEAN;

    component myproject_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_11s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1146 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    w5_V_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_w5_V
    generic map (
        DataWidth => 1147,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w5_V_address0,
        ce0 => w5_V_ce0,
        q0 => w5_V_q0);

    line_buffer_Array_V_1_0_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_0_ce0,
        we0 => line_buffer_Array_V_1_0_0_we0,
        d0 => DataIn_V_assign_fu_2046_p6,
        q0 => line_buffer_Array_V_1_0_0_q0);

    line_buffer_Array_V_1_0_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_1_ce0,
        we0 => line_buffer_Array_V_1_0_1_we0,
        d0 => DataIn_V_assign_fu_2046_p6,
        q0 => line_buffer_Array_V_1_0_1_q0);

    line_buffer_Array_V_1_0_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_2_ce0,
        we0 => line_buffer_Array_V_1_0_2_we0,
        d0 => DataIn_V_assign_fu_2046_p6,
        q0 => line_buffer_Array_V_1_0_2_q0);

    line_buffer_Array_V_1_0_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_0_3_ce0,
        we0 => line_buffer_Array_V_1_0_3_we0,
        d0 => DataIn_V_assign_fu_2046_p6,
        q0 => line_buffer_Array_V_1_0_3_q0);

    line_buffer_Array_V_1_1_0_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_0_ce0,
        we0 => line_buffer_Array_V_1_1_0_we0,
        d0 => shift_buffer_1_0_V_reg_796,
        q0 => line_buffer_Array_V_1_1_0_q0);

    line_buffer_Array_V_1_1_1_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_1_ce0,
        we0 => line_buffer_Array_V_1_1_1_we0,
        d0 => shift_buffer_1_0_V_reg_796,
        q0 => line_buffer_Array_V_1_1_1_q0);

    line_buffer_Array_V_1_1_2_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_2_ce0,
        we0 => line_buffer_Array_V_1_1_2_we0,
        d0 => shift_buffer_1_0_V_reg_796,
        q0 => line_buffer_Array_V_1_1_2_q0);

    line_buffer_Array_V_1_1_3_U : component conv_2d_cl_array_ap_fixed_4u_array_ap_fixed_16_6_5_3_0_8u_config5_s_line_buffqcK
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv3_5,
        ce0 => line_buffer_Array_V_1_1_3_ce0,
        we0 => line_buffer_Array_V_1_1_3_we0,
        d0 => shift_buffer_1_0_V_reg_796,
        q0 => line_buffer_Array_V_1_1_3_q0);

    myproject_mux_42_16_1_1_U80 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_6678,
        din1 => tmp_data_1_V_reg_6684,
        din2 => tmp_data_2_V_reg_6690,
        din3 => tmp_data_3_V_reg_6696,
        din4 => DataIn_V_assign_fu_2046_p5,
        dout => DataIn_V_assign_fu_2046_p6);

    myproject_mux_42_16_1_1_U81 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_0_3_V_3_fu_716,
        din1 => shift_buffer_0_3_V_2_fu_712,
        din2 => shift_buffer_0_3_V_1_fu_708,
        din3 => shift_buffer_0_3_V_fu_704,
        din4 => tmp_92_fu_2498_p5,
        dout => tmp_92_fu_2498_p6);

    myproject_mux_42_16_1_1_U82 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => shift_buffer_1_3_V_3_fu_700,
        din1 => shift_buffer_1_3_V_2_fu_696,
        din2 => shift_buffer_1_3_V_1_fu_692,
        din3 => shift_buffer_1_3_V_fu_688,
        din4 => tmp_94_fu_2564_p5,
        dout => tmp_94_fu_2564_p6);

    myproject_mux_42_16_1_1_U83 : component myproject_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_data_0_V_reg_6678,
        din1 => tmp_data_1_V_reg_6684,
        din2 => tmp_data_2_V_reg_6690,
        din3 => tmp_data_3_V_reg_6696,
        din4 => tmp_95_fu_2618_p5,
        dout => tmp_95_fu_2618_p6);

    myproject_mul_mul_16s_16s_26_1_1_U84 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => trunc_ln56_reg_6942,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_reg_878,
        dout => mul_ln1118_fu_6126_p2);

    myproject_mul_mul_16s_16s_26_1_1_U85 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891,
        din1 => tmp_98_reg_6967,
        dout => mul_ln1118_99_fu_6133_p2);

    myproject_mul_mul_16s_16s_26_1_1_U86 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904,
        din1 => tmp_99_reg_6992,
        dout => mul_ln1118_100_fu_6140_p2);

    myproject_mul_mul_16s_16s_26_1_1_U87 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917,
        din1 => tmp_100_reg_7017,
        dout => mul_ln1118_101_fu_6147_p2);

    myproject_mul_mul_16s_16s_26_1_1_U88 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930,
        din1 => tmp_101_reg_7042,
        dout => mul_ln1118_102_fu_6154_p2);

    myproject_mul_mul_16s_16s_26_1_1_U89 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943,
        din1 => tmp_102_reg_7067,
        dout => mul_ln1118_103_fu_6161_p2);

    myproject_mul_mul_16s_16s_26_1_1_U90 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956,
        din1 => tmp_103_reg_7092,
        dout => mul_ln1118_104_fu_6168_p2);

    myproject_mul_mul_16s_16s_26_1_1_U91 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_104_reg_7117,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969,
        dout => mul_ln1118_105_fu_6175_p2);

    myproject_mul_mul_16s_16s_26_1_1_U92 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982,
        din1 => tmp_105_reg_7142,
        dout => mul_ln1118_106_fu_6182_p2);

    myproject_mul_mul_16s_16s_26_1_1_U93 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995,
        din1 => tmp_106_reg_7167,
        dout => mul_ln1118_107_fu_6189_p2);

    myproject_mul_mul_16s_16s_26_1_1_U94 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008,
        din1 => tmp_107_reg_7192,
        dout => mul_ln1118_108_fu_6196_p2);

    myproject_mul_mul_16s_16s_26_1_1_U95 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021,
        din1 => tmp_108_reg_7217,
        dout => mul_ln1118_109_fu_6203_p2);

    myproject_mul_mul_16s_16s_26_1_1_U96 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034,
        din1 => tmp_109_reg_7242,
        dout => mul_ln1118_110_fu_6210_p2);

    myproject_mul_mul_16s_16s_26_1_1_U97 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047,
        din1 => tmp_110_reg_7267,
        dout => mul_ln1118_111_fu_6217_p2);

    myproject_mul_mul_16s_16s_26_1_1_U98 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060,
        din1 => tmp_111_reg_7292,
        dout => mul_ln1118_112_fu_6224_p2);

    myproject_mul_mul_16s_16s_26_1_1_U99 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073,
        din1 => tmp_112_reg_7317,
        dout => mul_ln1118_113_fu_6231_p2);

    myproject_mul_mul_16s_16s_26_1_1_U100 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_113_reg_7342,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086,
        dout => mul_ln1118_114_fu_6238_p2);

    myproject_mul_mul_16s_16s_26_1_1_U101 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099,
        din1 => tmp_114_reg_7367,
        dout => mul_ln1118_115_fu_6245_p2);

    myproject_mul_mul_16s_16s_26_1_1_U102 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112,
        din1 => tmp_115_reg_7392,
        dout => mul_ln1118_116_fu_6252_p2);

    myproject_mul_mul_16s_16s_26_1_1_U103 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125,
        din1 => tmp_116_reg_7417,
        dout => mul_ln1118_117_fu_6259_p2);

    myproject_mul_mul_16s_16s_26_1_1_U104 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138,
        din1 => tmp_117_reg_7442,
        dout => mul_ln1118_118_fu_6266_p2);

    myproject_mul_mul_16s_16s_26_1_1_U105 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151,
        din1 => tmp_118_reg_7467,
        dout => mul_ln1118_119_fu_6273_p2);

    myproject_mul_mul_16s_16s_26_1_1_U106 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164,
        din1 => tmp_119_reg_7492,
        dout => mul_ln1118_120_fu_6280_p2);

    myproject_mul_mul_16s_16s_26_1_1_U107 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177,
        din1 => tmp_120_reg_7517,
        dout => mul_ln1118_121_fu_6287_p2);

    myproject_mul_mul_16s_16s_26_1_1_U108 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190,
        din1 => tmp_121_reg_7542,
        dout => mul_ln1118_122_fu_6294_p2);

    myproject_mul_mul_16s_16s_26_1_1_U109 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_122_reg_7567,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203,
        dout => mul_ln1118_123_fu_6301_p2);

    myproject_mul_mul_16s_16s_26_1_1_U110 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216,
        din1 => tmp_123_reg_7592,
        dout => mul_ln1118_124_fu_6308_p2);

    myproject_mul_mul_16s_16s_26_1_1_U111 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229,
        din1 => tmp_124_reg_7617,
        dout => mul_ln1118_125_fu_6315_p2);

    myproject_mul_mul_16s_16s_26_1_1_U112 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242,
        din1 => tmp_125_reg_7642,
        dout => mul_ln1118_126_fu_6322_p2);

    myproject_mul_mul_16s_16s_26_1_1_U113 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255,
        din1 => tmp_126_reg_7667,
        dout => mul_ln1118_127_fu_6329_p2);

    myproject_mul_mul_16s_16s_26_1_1_U114 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268,
        din1 => tmp_127_reg_7692,
        dout => mul_ln1118_128_fu_6336_p2);

    myproject_mul_mul_16s_16s_26_1_1_U115 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281,
        din1 => tmp_128_reg_7717,
        dout => mul_ln1118_129_fu_6343_p2);

    myproject_mul_mul_16s_16s_26_1_1_U116 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294,
        din1 => tmp_129_reg_7742,
        dout => mul_ln1118_130_fu_6350_p2);

    myproject_mul_mul_16s_16s_26_1_1_U117 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307,
        din1 => tmp_130_reg_7767,
        dout => mul_ln1118_131_fu_6357_p2);

    myproject_mul_mul_16s_16s_26_1_1_U118 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_131_reg_7792,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320,
        dout => mul_ln1118_132_fu_6364_p2);

    myproject_mul_mul_16s_16s_26_1_1_U119 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333,
        din1 => tmp_132_reg_7817,
        dout => mul_ln1118_133_fu_6371_p2);

    myproject_mul_mul_16s_16s_26_1_1_U120 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346,
        din1 => tmp_133_reg_7842,
        dout => mul_ln1118_134_fu_6378_p2);

    myproject_mul_mul_16s_16s_26_1_1_U121 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359,
        din1 => tmp_134_reg_7867,
        dout => mul_ln1118_135_fu_6385_p2);

    myproject_mul_mul_16s_16s_26_1_1_U122 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372,
        din1 => tmp_135_reg_7892,
        dout => mul_ln1118_136_fu_6392_p2);

    myproject_mul_mul_16s_16s_26_1_1_U123 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385,
        din1 => tmp_136_reg_7917,
        dout => mul_ln1118_137_fu_6399_p2);

    myproject_mul_mul_16s_16s_26_1_1_U124 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398,
        din1 => tmp_137_reg_7942,
        dout => mul_ln1118_138_fu_6406_p2);

    myproject_mul_mul_16s_16s_26_1_1_U125 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411,
        din1 => tmp_138_reg_7967,
        dout => mul_ln1118_139_fu_6413_p2);

    myproject_mul_mul_16s_16s_26_1_1_U126 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424,
        din1 => tmp_139_reg_7992,
        dout => mul_ln1118_140_fu_6420_p2);

    myproject_mul_mul_16s_16s_26_1_1_U127 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_140_reg_8017,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437,
        dout => mul_ln1118_141_fu_6427_p2);

    myproject_mul_mul_16s_16s_26_1_1_U128 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450,
        din1 => tmp_141_reg_8042,
        dout => mul_ln1118_142_fu_6434_p2);

    myproject_mul_mul_16s_16s_26_1_1_U129 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463,
        din1 => tmp_142_reg_8067,
        dout => mul_ln1118_143_fu_6441_p2);

    myproject_mul_mul_16s_16s_26_1_1_U130 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476,
        din1 => tmp_143_reg_8092,
        dout => mul_ln1118_144_fu_6448_p2);

    myproject_mul_mul_16s_16s_26_1_1_U131 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489,
        din1 => tmp_144_reg_8117,
        dout => mul_ln1118_145_fu_6455_p2);

    myproject_mul_mul_16s_16s_26_1_1_U132 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502,
        din1 => tmp_145_reg_8142,
        dout => mul_ln1118_146_fu_6462_p2);

    myproject_mul_mul_16s_16s_26_1_1_U133 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515,
        din1 => tmp_146_reg_8167,
        dout => mul_ln1118_147_fu_6469_p2);

    myproject_mul_mul_16s_16s_26_1_1_U134 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528,
        din1 => tmp_147_reg_8192,
        dout => mul_ln1118_148_fu_6476_p2);

    myproject_mul_mul_16s_16s_26_1_1_U135 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541,
        din1 => tmp_148_reg_8217,
        dout => mul_ln1118_149_fu_6483_p2);

    myproject_mul_mul_16s_16s_26_1_1_U136 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_149_reg_8242,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554,
        dout => mul_ln1118_150_fu_6490_p2);

    myproject_mul_mul_16s_16s_26_1_1_U137 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567,
        din1 => tmp_150_reg_8267,
        dout => mul_ln1118_151_fu_6497_p2);

    myproject_mul_mul_16s_16s_26_1_1_U138 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580,
        din1 => tmp_151_reg_8292,
        dout => mul_ln1118_152_fu_6504_p2);

    myproject_mul_mul_16s_16s_26_1_1_U139 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593,
        din1 => tmp_152_reg_8317,
        dout => mul_ln1118_153_fu_6511_p2);

    myproject_mul_mul_16s_16s_26_1_1_U140 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606,
        din1 => tmp_153_reg_8342,
        dout => mul_ln1118_154_fu_6518_p2);

    myproject_mul_mul_16s_16s_26_1_1_U141 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619,
        din1 => tmp_154_reg_8367,
        dout => mul_ln1118_155_fu_6525_p2);

    myproject_mul_mul_16s_16s_26_1_1_U142 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632,
        din1 => tmp_155_reg_8392,
        dout => mul_ln1118_156_fu_6532_p2);

    myproject_mul_mul_16s_16s_26_1_1_U143 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645,
        din1 => tmp_156_reg_8417,
        dout => mul_ln1118_157_fu_6539_p2);

    myproject_mul_mul_16s_16s_26_1_1_U144 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658,
        din1 => tmp_157_reg_8442,
        dout => mul_ln1118_158_fu_6546_p2);

    myproject_mul_mul_16s_16s_26_1_1_U145 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_158_reg_8467,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671,
        dout => mul_ln1118_159_fu_6553_p2);

    myproject_mul_mul_16s_16s_26_1_1_U146 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684,
        din1 => tmp_159_reg_8492,
        dout => mul_ln1118_160_fu_6560_p2);

    myproject_mul_mul_16s_16s_26_1_1_U147 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697,
        din1 => tmp_160_reg_8517,
        dout => mul_ln1118_161_fu_6567_p2);

    myproject_mul_mul_16s_16s_26_1_1_U148 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710,
        din1 => tmp_161_reg_8542,
        dout => mul_ln1118_162_fu_6574_p2);

    myproject_mul_mul_16s_16s_26_1_1_U149 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723,
        din1 => tmp_162_reg_8567,
        dout => mul_ln1118_163_fu_6581_p2);

    myproject_mul_mul_16s_16s_26_1_1_U150 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736,
        din1 => tmp_163_reg_8592,
        dout => mul_ln1118_164_fu_6588_p2);

    myproject_mul_mul_16s_16s_26_1_1_U151 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749,
        din1 => tmp_164_reg_8617,
        dout => mul_ln1118_165_fu_6595_p2);

    myproject_mul_mul_16s_16s_26_1_1_U152 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762,
        din1 => tmp_165_reg_8642,
        dout => mul_ln1118_166_fu_6602_p2);

    myproject_mul_mul_16s_16s_26_1_1_U153 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775,
        din1 => tmp_166_reg_8667,
        dout => mul_ln1118_167_fu_6609_p2);

    myproject_mul_mul_16s_16s_26_1_1_U154 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmp_167_reg_8692,
        din1 => ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788,
        dout => mul_ln1118_168_fu_6616_p2);

    myproject_mul_mul_16s_11s_26_1_1_U155 : component myproject_mul_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801,
        din1 => tmp_168_reg_8717,
        dout => mul_ln1118_169_fu_6623_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln43_fu_2761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_10_reg_1008 <= ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1008;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_11_reg_1021 <= ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1021;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_12_reg_1034 <= ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1034;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_13_reg_1047 <= ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1047;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_14_reg_1060 <= ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1060;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_15_reg_1073 <= ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1073;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_16_reg_1086 <= ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1086;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_17_reg_1099 <= ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1099;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_18_reg_1112 <= ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1112;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_19_reg_1125 <= ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1125;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_1_reg_891 <= ap_phi_reg_pp1_iter1_phi_ln56_1_reg_891;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_20_reg_1138 <= ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1138;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_21_reg_1151 <= ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1151;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_22_reg_1164 <= ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1164;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_23_reg_1177 <= ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1177;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_24_reg_1190 <= ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1190;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_25_reg_1203 <= ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1203;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_26_reg_1216 <= ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1216;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_27_reg_1229 <= ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1229;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_28_reg_1242 <= ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1242;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_29_reg_1255 <= ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1255;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_2_reg_904 <= ap_phi_reg_pp1_iter1_phi_ln56_2_reg_904;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_30_reg_1268 <= ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1268;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_31_reg_1281 <= ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1281;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_32_reg_1294 <= ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1294;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_33_reg_1307 <= ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1307;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_34_reg_1320 <= ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1320;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_35_reg_1333 <= ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1333;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_36_reg_1346 <= ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1346;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_37_reg_1359 <= ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1359;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_38_reg_1372 <= ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1372;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_39_reg_1385 <= ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1385;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_3_reg_917 <= ap_phi_reg_pp1_iter1_phi_ln56_3_reg_917;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_40_reg_1398 <= ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1398;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_41_reg_1411 <= ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1411;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_42_reg_1424 <= ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1424;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_43_reg_1437 <= ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1437;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_44_reg_1450 <= ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1450;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_45_reg_1463 <= ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1463;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_46_reg_1476 <= ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1476;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_47_reg_1489 <= ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1489;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_48_reg_1502 <= ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1502;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_49_reg_1515 <= ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1515;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_4_reg_930 <= ap_phi_reg_pp1_iter1_phi_ln56_4_reg_930;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_50_reg_1528 <= ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1528;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_51_reg_1541 <= ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1541;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_52_reg_1554 <= ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1554;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_53_reg_1567 <= ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1567;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_54_reg_1580 <= ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1580;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_55_reg_1593 <= ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1593;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_56_reg_1606 <= ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1606;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_57_reg_1619 <= ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1619;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_58_reg_1632 <= ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1632;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_59_reg_1645 <= ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1645;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_5_reg_943 <= ap_phi_reg_pp1_iter1_phi_ln56_5_reg_943;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_60_reg_1658 <= ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1658;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_61_reg_1671 <= ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1671;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_62_reg_1684 <= ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1684;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_63_reg_1697 <= ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1697;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 <= kernel_data_V_1_7;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 <= kernel_data_V_1_6;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 <= kernel_data_V_1_5;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 <= kernel_data_V_1_4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_64_reg_1710 <= ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1710;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 <= kernel_data_V_1_11;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 <= kernel_data_V_1_10;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 <= kernel_data_V_1_9;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 <= kernel_data_V_1_8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_65_reg_1723 <= ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1723;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 <= kernel_data_V_1_15;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 <= kernel_data_V_1_14;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 <= kernel_data_V_1_13;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 <= kernel_data_V_1_12;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_66_reg_1736 <= ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1736;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 <= kernel_data_V_1_19;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 <= kernel_data_V_1_18;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 <= kernel_data_V_1_17;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 <= kernel_data_V_1_16;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_67_reg_1749 <= ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1749;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 <= kernel_data_V_1_23;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 <= kernel_data_V_1_22;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 <= kernel_data_V_1_21;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 <= kernel_data_V_1_20;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_68_reg_1762 <= ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1762;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_69_reg_1775 <= ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1775;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 <= kernel_data_V_1_27;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 <= kernel_data_V_1_26;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 <= kernel_data_V_1_25;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 <= kernel_data_V_1_24;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_6_reg_956 <= ap_phi_reg_pp1_iter1_phi_ln56_6_reg_956;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_70_reg_1788 <= ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1788;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_71_reg_1801 <= ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1801;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 <= kernel_data_V_1_31;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 <= kernel_data_V_1_30;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 <= kernel_data_V_1_29;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 <= kernel_data_V_1_28;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_7_reg_969 <= ap_phi_reg_pp1_iter1_phi_ln56_7_reg_969;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((ap_const_boolean_1 = ap_condition_685)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 <= kernel_data_V_1_35;
                elsif ((or_ln_reg_6914 = ap_const_lv6_22)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 <= kernel_data_V_1_34;
                elsif ((or_ln_reg_6914 = ap_const_lv6_21)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 <= kernel_data_V_1_33;
                elsif ((or_ln_reg_6914 = ap_const_lv6_20)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 <= kernel_data_V_1_32;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_8_reg_982 <= ap_phi_reg_pp1_iter1_phi_ln56_8_reg_982;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_9_reg_995 <= ap_phi_reg_pp1_iter1_phi_ln56_9_reg_995;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_phi_ln56_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if ((w_index132_reg_866 = ap_const_lv2_3)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_878 <= kernel_data_V_1_3;
                elsif ((w_index132_reg_866 = ap_const_lv2_2)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_878 <= kernel_data_V_1_2;
                elsif ((w_index132_reg_866 = ap_const_lv2_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_878 <= kernel_data_V_1_1;
                elsif ((w_index132_reg_866 = ap_const_lv2_0)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_878 <= kernel_data_V_1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_phi_ln56_reg_878 <= ap_phi_reg_pp1_iter1_phi_ln56_reg_878;
                end if;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_0_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_0_reg_833 <= add_ln213_fu_2476_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_ic2_0_i_i_i_i_0_reg_833 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_1_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_1_reg_844 <= add_ln213_1_fu_2542_p2;
            elsif (((icmp_ln213_fu_2470_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_ic2_0_i_i_i_i_1_reg_844 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic2_0_i_i_i_i_2_reg_855_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_2602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_ic2_0_i_i_i_i_2_reg_855 <= add_ln213_2_fu_2608_p2;
            elsif (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_ic2_0_i_i_i_i_2_reg_855 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_ic4_0_i_i_i_reg_785_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_ic4_0_i_i_i_reg_785 <= i_ic_reg_6711;
            elsif (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_ic4_0_i_i_i_reg_785 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_iw_0_i_i_i_i_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2030_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_iw_0_i_i_i_i_reg_822 <= ap_const_lv2_0;
            elsif (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_iw_0_i_i_i_i_reg_822 <= i_iw_fu_2182_p2;
            end if; 
        end if;
    end process;

    indvar_flatten133_reg_773_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                indvar_flatten133_reg_773 <= add_ln79_reg_6702;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten133_reg_773 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1543)) then
                if ((icmp_ln313_fu_6033_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_6033_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln326_fu_6038_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2240)) then
                if ((icmp_ln317_fu_6079_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_6079_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln321_fu_6084_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1543)) then
                if ((icmp_ln313_fu_6033_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_6033_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln328_fu_6054_p3;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_0_0_V_reg_809_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((trunc_ln246_reg_6716 = ap_const_lv2_0)) then 
                    shift_buffer_0_0_V_reg_809 <= line_buffer_Array_V_1_1_0_q0;
                elsif ((trunc_ln246_reg_6716 = ap_const_lv2_1)) then 
                    shift_buffer_0_0_V_reg_809 <= line_buffer_Array_V_1_1_1_q0;
                elsif ((trunc_ln246_reg_6716 = ap_const_lv2_2)) then 
                    shift_buffer_0_0_V_reg_809 <= line_buffer_Array_V_1_1_2_q0;
                elsif ((trunc_ln246_reg_6716 = ap_const_lv2_3)) then 
                    shift_buffer_0_0_V_reg_809 <= line_buffer_Array_V_1_1_3_q0;
                end if;
            end if; 
        end if;
    end process;

    shift_buffer_1_0_V_reg_796_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((trunc_ln246_fu_2042_p1 = ap_const_lv2_0)) then 
                    shift_buffer_1_0_V_reg_796 <= line_buffer_Array_V_1_0_0_q0;
                elsif ((trunc_ln246_fu_2042_p1 = ap_const_lv2_1)) then 
                    shift_buffer_1_0_V_reg_796 <= line_buffer_Array_V_1_0_1_q0;
                elsif ((trunc_ln246_fu_2042_p1 = ap_const_lv2_2)) then 
                    shift_buffer_1_0_V_reg_796 <= line_buffer_Array_V_1_0_2_q0;
                elsif ((trunc_ln246_fu_2042_p1 = ap_const_lv2_3)) then 
                    shift_buffer_1_0_V_reg_796 <= line_buffer_Array_V_1_0_3_q0;
                end if;
            end if; 
        end if;
    end process;

    tmp_data_0_V_7130_reg_1814_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_0_V_7130_reg_1814 <= acc_0_V_fu_5957_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_0_V_7130_reg_1814 <= ap_const_lv16_FFF1;
            end if; 
        end if;
    end process;

    tmp_data_1_V_7128_reg_1825_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_1_V_7128_reg_1825 <= acc_1_V_fu_5967_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_1_V_7128_reg_1825 <= ap_const_lv16_1C9;
            end if; 
        end if;
    end process;

    tmp_data_2_V_7126_reg_1836_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_2_V_7126_reg_1836 <= acc_2_V_fu_5977_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_2_V_7126_reg_1836 <= ap_const_lv16_FEF0;
            end if; 
        end if;
    end process;

    tmp_data_3_V_7124_reg_1847_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_3_V_7124_reg_1847 <= acc_3_V_fu_5987_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_3_V_7124_reg_1847 <= ap_const_lv16_FF25;
            end if; 
        end if;
    end process;

    tmp_data_4_V_5122_reg_1858_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_4_V_5122_reg_1858 <= acc_4_V_fu_5997_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_4_V_5122_reg_1858 <= ap_const_lv16_5;
            end if; 
        end if;
    end process;

    tmp_data_5_V_5120_reg_1869_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_5_V_5120_reg_1869 <= acc_5_V_fu_6007_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_5_V_5120_reg_1869 <= ap_const_lv16_E7;
            end if; 
        end if;
    end process;

    tmp_data_6_V_5118_reg_1880_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_6_V_5118_reg_1880 <= acc_6_V_fu_6017_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_6_V_5118_reg_1880 <= ap_const_lv16_154;
            end if; 
        end if;
    end process;

    tmp_data_7_V_5116_reg_1891_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                tmp_data_7_V_5116_reg_1891 <= acc_7_V_fu_6027_p2;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                tmp_data_7_V_5116_reg_1891 <= ap_const_lv16_1B;
            end if; 
        end if;
    end process;

    w_index132_reg_866_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_reg_6918 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                w_index132_reg_866 <= w_index_reg_6904;
            elsif (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                w_index132_reg_866 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then
                acc_0_V_reg_9162 <= acc_0_V_fu_5957_p2;
                acc_1_V_reg_9168 <= acc_1_V_fu_5967_p2;
                acc_2_V_reg_9174 <= acc_2_V_fu_5977_p2;
                acc_3_V_reg_9180 <= acc_3_V_fu_5987_p2;
                acc_4_V_reg_9186 <= acc_4_V_fu_5997_p2;
                acc_5_V_reg_9192 <= acc_5_V_fu_6007_p2;
                acc_6_V_reg_9198 <= acc_6_V_fu_6017_p2;
                acc_7_V_reg_9204 <= acc_7_V_fu_6027_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                add_ln703_103_reg_9107 <= add_ln703_103_fu_5782_p2;
                add_ln703_108_reg_9112 <= add_ln703_108_fu_5796_p2;
                add_ln703_112_reg_9117 <= add_ln703_112_fu_5815_p2;
                add_ln703_117_reg_9122 <= add_ln703_117_fu_5829_p2;
                add_ln703_121_reg_9127 <= add_ln703_121_fu_5848_p2;
                add_ln703_126_reg_9132 <= add_ln703_126_fu_5862_p2;
                add_ln703_130_reg_9137 <= add_ln703_130_fu_5881_p2;
                add_ln703_135_reg_9142 <= add_ln703_135_fu_5895_p2;
                add_ln703_139_reg_9147 <= add_ln703_139_fu_5914_p2;
                add_ln703_144_reg_9152 <= add_ln703_144_fu_5928_p2;
                add_ln703_148_reg_9157 <= add_ln703_148_fu_5947_p2;
                add_ln703_81_reg_9082 <= add_ln703_81_fu_5697_p2;
                add_ln703_85_reg_9087 <= add_ln703_85_fu_5716_p2;
                add_ln703_90_reg_9092 <= add_ln703_90_fu_5730_p2;
                add_ln703_94_reg_9097 <= add_ln703_94_fu_5749_p2;
                add_ln703_99_reg_9102 <= add_ln703_99_fu_5763_p2;
                icmp_ln43_reg_6918_pp1_iter2_reg <= icmp_ln43_reg_6918_pp1_iter1_reg;
                icmp_ln43_reg_6918_pp1_iter3_reg <= icmp_ln43_reg_6918_pp1_iter2_reg;
                trunc_ln2_reg_8722 <= mul_ln1118_fu_6126_p2(25 downto 10);
                trunc_ln708_100_reg_8837 <= mul_ln1118_121_fu_6287_p2(25 downto 10);
                trunc_ln708_101_reg_8842 <= mul_ln1118_122_fu_6294_p2(25 downto 10);
                trunc_ln708_102_reg_8847 <= mul_ln1118_123_fu_6301_p2(25 downto 10);
                trunc_ln708_103_reg_8852 <= mul_ln1118_124_fu_6308_p2(25 downto 10);
                trunc_ln708_104_reg_8857 <= mul_ln1118_125_fu_6315_p2(25 downto 10);
                trunc_ln708_105_reg_8862 <= mul_ln1118_126_fu_6322_p2(25 downto 10);
                trunc_ln708_106_reg_8867 <= mul_ln1118_127_fu_6329_p2(25 downto 10);
                trunc_ln708_107_reg_8872 <= mul_ln1118_128_fu_6336_p2(25 downto 10);
                trunc_ln708_108_reg_8877 <= mul_ln1118_129_fu_6343_p2(25 downto 10);
                trunc_ln708_109_reg_8882 <= mul_ln1118_130_fu_6350_p2(25 downto 10);
                trunc_ln708_110_reg_8887 <= mul_ln1118_131_fu_6357_p2(25 downto 10);
                trunc_ln708_111_reg_8892 <= mul_ln1118_132_fu_6364_p2(25 downto 10);
                trunc_ln708_112_reg_8897 <= mul_ln1118_133_fu_6371_p2(25 downto 10);
                trunc_ln708_113_reg_8902 <= mul_ln1118_134_fu_6378_p2(25 downto 10);
                trunc_ln708_114_reg_8907 <= mul_ln1118_135_fu_6385_p2(25 downto 10);
                trunc_ln708_115_reg_8912 <= mul_ln1118_136_fu_6392_p2(25 downto 10);
                trunc_ln708_116_reg_8917 <= mul_ln1118_137_fu_6399_p2(25 downto 10);
                trunc_ln708_117_reg_8922 <= mul_ln1118_138_fu_6406_p2(25 downto 10);
                trunc_ln708_118_reg_8927 <= mul_ln1118_139_fu_6413_p2(25 downto 10);
                trunc_ln708_119_reg_8932 <= mul_ln1118_140_fu_6420_p2(25 downto 10);
                trunc_ln708_120_reg_8937 <= mul_ln1118_141_fu_6427_p2(25 downto 10);
                trunc_ln708_121_reg_8942 <= mul_ln1118_142_fu_6434_p2(25 downto 10);
                trunc_ln708_122_reg_8947 <= mul_ln1118_143_fu_6441_p2(25 downto 10);
                trunc_ln708_123_reg_8952 <= mul_ln1118_144_fu_6448_p2(25 downto 10);
                trunc_ln708_124_reg_8957 <= mul_ln1118_145_fu_6455_p2(25 downto 10);
                trunc_ln708_125_reg_8962 <= mul_ln1118_146_fu_6462_p2(25 downto 10);
                trunc_ln708_126_reg_8967 <= mul_ln1118_147_fu_6469_p2(25 downto 10);
                trunc_ln708_127_reg_8972 <= mul_ln1118_148_fu_6476_p2(25 downto 10);
                trunc_ln708_128_reg_8977 <= mul_ln1118_149_fu_6483_p2(25 downto 10);
                trunc_ln708_129_reg_8982 <= mul_ln1118_150_fu_6490_p2(25 downto 10);
                trunc_ln708_130_reg_8987 <= mul_ln1118_151_fu_6497_p2(25 downto 10);
                trunc_ln708_131_reg_8992 <= mul_ln1118_152_fu_6504_p2(25 downto 10);
                trunc_ln708_132_reg_8997 <= mul_ln1118_153_fu_6511_p2(25 downto 10);
                trunc_ln708_133_reg_9002 <= mul_ln1118_154_fu_6518_p2(25 downto 10);
                trunc_ln708_134_reg_9007 <= mul_ln1118_155_fu_6525_p2(25 downto 10);
                trunc_ln708_135_reg_9012 <= mul_ln1118_156_fu_6532_p2(25 downto 10);
                trunc_ln708_136_reg_9017 <= mul_ln1118_157_fu_6539_p2(25 downto 10);
                trunc_ln708_137_reg_9022 <= mul_ln1118_158_fu_6546_p2(25 downto 10);
                trunc_ln708_138_reg_9027 <= mul_ln1118_159_fu_6553_p2(25 downto 10);
                trunc_ln708_139_reg_9032 <= mul_ln1118_160_fu_6560_p2(25 downto 10);
                trunc_ln708_140_reg_9037 <= mul_ln1118_161_fu_6567_p2(25 downto 10);
                trunc_ln708_141_reg_9042 <= mul_ln1118_162_fu_6574_p2(25 downto 10);
                trunc_ln708_142_reg_9047 <= mul_ln1118_163_fu_6581_p2(25 downto 10);
                trunc_ln708_143_reg_9052 <= mul_ln1118_164_fu_6588_p2(25 downto 10);
                trunc_ln708_144_reg_9057 <= mul_ln1118_165_fu_6595_p2(25 downto 10);
                trunc_ln708_145_reg_9062 <= mul_ln1118_166_fu_6602_p2(25 downto 10);
                trunc_ln708_146_reg_9067 <= mul_ln1118_167_fu_6609_p2(25 downto 10);
                trunc_ln708_147_reg_9072 <= mul_ln1118_168_fu_6616_p2(25 downto 10);
                trunc_ln708_148_reg_9077 <= mul_ln1118_169_fu_6623_p2(25 downto 10);
                trunc_ln708_79_reg_8732 <= mul_ln1118_100_fu_6140_p2(25 downto 10);
                trunc_ln708_80_reg_8737 <= mul_ln1118_101_fu_6147_p2(25 downto 10);
                trunc_ln708_81_reg_8742 <= mul_ln1118_102_fu_6154_p2(25 downto 10);
                trunc_ln708_82_reg_8747 <= mul_ln1118_103_fu_6161_p2(25 downto 10);
                trunc_ln708_83_reg_8752 <= mul_ln1118_104_fu_6168_p2(25 downto 10);
                trunc_ln708_84_reg_8757 <= mul_ln1118_105_fu_6175_p2(25 downto 10);
                trunc_ln708_85_reg_8762 <= mul_ln1118_106_fu_6182_p2(25 downto 10);
                trunc_ln708_86_reg_8767 <= mul_ln1118_107_fu_6189_p2(25 downto 10);
                trunc_ln708_87_reg_8772 <= mul_ln1118_108_fu_6196_p2(25 downto 10);
                trunc_ln708_88_reg_8777 <= mul_ln1118_109_fu_6203_p2(25 downto 10);
                trunc_ln708_89_reg_8782 <= mul_ln1118_110_fu_6210_p2(25 downto 10);
                trunc_ln708_90_reg_8787 <= mul_ln1118_111_fu_6217_p2(25 downto 10);
                trunc_ln708_91_reg_8792 <= mul_ln1118_112_fu_6224_p2(25 downto 10);
                trunc_ln708_92_reg_8797 <= mul_ln1118_113_fu_6231_p2(25 downto 10);
                trunc_ln708_93_reg_8802 <= mul_ln1118_114_fu_6238_p2(25 downto 10);
                trunc_ln708_94_reg_8807 <= mul_ln1118_115_fu_6245_p2(25 downto 10);
                trunc_ln708_95_reg_8812 <= mul_ln1118_116_fu_6252_p2(25 downto 10);
                trunc_ln708_96_reg_8817 <= mul_ln1118_117_fu_6259_p2(25 downto 10);
                trunc_ln708_97_reg_8822 <= mul_ln1118_118_fu_6266_p2(25 downto 10);
                trunc_ln708_98_reg_8827 <= mul_ln1118_119_fu_6273_p2(25 downto 10);
                trunc_ln708_99_reg_8832 <= mul_ln1118_120_fu_6280_p2(25 downto 10);
                trunc_ln708_s_reg_8727 <= mul_ln1118_99_fu_6133_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln79_reg_6702 <= add_ln79_fu_2024_p2;
                tmp_data_0_V_reg_6678 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_6684 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_6690 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_6696 <= data_V_data_3_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                and_ln289_2_reg_6900 <= and_ln289_2_fu_2732_p2;
                icmp_ln289_1_reg_6883 <= icmp_ln289_1_fu_2674_p2;
                icmp_ln289_reg_6873 <= icmp_ln289_fu_2664_p2;
                pX_2_load_reg_6894 <= pX_2;
                pY_2_load_reg_6888 <= pY_2;
                sX_2_load_reg_6868 <= sX_2;
                sY_2_load_reg_6878 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter1_phi_ln56_10_reg_1008 <= ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1008;
                ap_phi_reg_pp1_iter1_phi_ln56_11_reg_1021 <= ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1021;
                ap_phi_reg_pp1_iter1_phi_ln56_12_reg_1034 <= ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1034;
                ap_phi_reg_pp1_iter1_phi_ln56_13_reg_1047 <= ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1047;
                ap_phi_reg_pp1_iter1_phi_ln56_14_reg_1060 <= ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1060;
                ap_phi_reg_pp1_iter1_phi_ln56_15_reg_1073 <= ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1073;
                ap_phi_reg_pp1_iter1_phi_ln56_16_reg_1086 <= ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1086;
                ap_phi_reg_pp1_iter1_phi_ln56_17_reg_1099 <= ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1099;
                ap_phi_reg_pp1_iter1_phi_ln56_18_reg_1112 <= ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1112;
                ap_phi_reg_pp1_iter1_phi_ln56_19_reg_1125 <= ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1125;
                ap_phi_reg_pp1_iter1_phi_ln56_1_reg_891 <= ap_phi_reg_pp1_iter0_phi_ln56_1_reg_891;
                ap_phi_reg_pp1_iter1_phi_ln56_20_reg_1138 <= ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1138;
                ap_phi_reg_pp1_iter1_phi_ln56_21_reg_1151 <= ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1151;
                ap_phi_reg_pp1_iter1_phi_ln56_22_reg_1164 <= ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1164;
                ap_phi_reg_pp1_iter1_phi_ln56_23_reg_1177 <= ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1177;
                ap_phi_reg_pp1_iter1_phi_ln56_24_reg_1190 <= ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1190;
                ap_phi_reg_pp1_iter1_phi_ln56_25_reg_1203 <= ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1203;
                ap_phi_reg_pp1_iter1_phi_ln56_26_reg_1216 <= ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1216;
                ap_phi_reg_pp1_iter1_phi_ln56_27_reg_1229 <= ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1229;
                ap_phi_reg_pp1_iter1_phi_ln56_28_reg_1242 <= ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1242;
                ap_phi_reg_pp1_iter1_phi_ln56_29_reg_1255 <= ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1255;
                ap_phi_reg_pp1_iter1_phi_ln56_2_reg_904 <= ap_phi_reg_pp1_iter0_phi_ln56_2_reg_904;
                ap_phi_reg_pp1_iter1_phi_ln56_30_reg_1268 <= ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1268;
                ap_phi_reg_pp1_iter1_phi_ln56_31_reg_1281 <= ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1281;
                ap_phi_reg_pp1_iter1_phi_ln56_32_reg_1294 <= ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1294;
                ap_phi_reg_pp1_iter1_phi_ln56_33_reg_1307 <= ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1307;
                ap_phi_reg_pp1_iter1_phi_ln56_34_reg_1320 <= ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1320;
                ap_phi_reg_pp1_iter1_phi_ln56_35_reg_1333 <= ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1333;
                ap_phi_reg_pp1_iter1_phi_ln56_36_reg_1346 <= ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1346;
                ap_phi_reg_pp1_iter1_phi_ln56_37_reg_1359 <= ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1359;
                ap_phi_reg_pp1_iter1_phi_ln56_38_reg_1372 <= ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1372;
                ap_phi_reg_pp1_iter1_phi_ln56_39_reg_1385 <= ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1385;
                ap_phi_reg_pp1_iter1_phi_ln56_3_reg_917 <= ap_phi_reg_pp1_iter0_phi_ln56_3_reg_917;
                ap_phi_reg_pp1_iter1_phi_ln56_40_reg_1398 <= ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1398;
                ap_phi_reg_pp1_iter1_phi_ln56_41_reg_1411 <= ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1411;
                ap_phi_reg_pp1_iter1_phi_ln56_42_reg_1424 <= ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1424;
                ap_phi_reg_pp1_iter1_phi_ln56_43_reg_1437 <= ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1437;
                ap_phi_reg_pp1_iter1_phi_ln56_44_reg_1450 <= ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1450;
                ap_phi_reg_pp1_iter1_phi_ln56_45_reg_1463 <= ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1463;
                ap_phi_reg_pp1_iter1_phi_ln56_46_reg_1476 <= ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1476;
                ap_phi_reg_pp1_iter1_phi_ln56_47_reg_1489 <= ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1489;
                ap_phi_reg_pp1_iter1_phi_ln56_48_reg_1502 <= ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1502;
                ap_phi_reg_pp1_iter1_phi_ln56_49_reg_1515 <= ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1515;
                ap_phi_reg_pp1_iter1_phi_ln56_4_reg_930 <= ap_phi_reg_pp1_iter0_phi_ln56_4_reg_930;
                ap_phi_reg_pp1_iter1_phi_ln56_50_reg_1528 <= ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1528;
                ap_phi_reg_pp1_iter1_phi_ln56_51_reg_1541 <= ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1541;
                ap_phi_reg_pp1_iter1_phi_ln56_52_reg_1554 <= ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1554;
                ap_phi_reg_pp1_iter1_phi_ln56_53_reg_1567 <= ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1567;
                ap_phi_reg_pp1_iter1_phi_ln56_54_reg_1580 <= ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1580;
                ap_phi_reg_pp1_iter1_phi_ln56_55_reg_1593 <= ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1593;
                ap_phi_reg_pp1_iter1_phi_ln56_56_reg_1606 <= ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1606;
                ap_phi_reg_pp1_iter1_phi_ln56_57_reg_1619 <= ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1619;
                ap_phi_reg_pp1_iter1_phi_ln56_58_reg_1632 <= ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1632;
                ap_phi_reg_pp1_iter1_phi_ln56_59_reg_1645 <= ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1645;
                ap_phi_reg_pp1_iter1_phi_ln56_5_reg_943 <= ap_phi_reg_pp1_iter0_phi_ln56_5_reg_943;
                ap_phi_reg_pp1_iter1_phi_ln56_60_reg_1658 <= ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1658;
                ap_phi_reg_pp1_iter1_phi_ln56_61_reg_1671 <= ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1671;
                ap_phi_reg_pp1_iter1_phi_ln56_62_reg_1684 <= ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1684;
                ap_phi_reg_pp1_iter1_phi_ln56_63_reg_1697 <= ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1697;
                ap_phi_reg_pp1_iter1_phi_ln56_64_reg_1710 <= ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1710;
                ap_phi_reg_pp1_iter1_phi_ln56_65_reg_1723 <= ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1723;
                ap_phi_reg_pp1_iter1_phi_ln56_66_reg_1736 <= ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1736;
                ap_phi_reg_pp1_iter1_phi_ln56_67_reg_1749 <= ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1749;
                ap_phi_reg_pp1_iter1_phi_ln56_68_reg_1762 <= ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1762;
                ap_phi_reg_pp1_iter1_phi_ln56_69_reg_1775 <= ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1775;
                ap_phi_reg_pp1_iter1_phi_ln56_6_reg_956 <= ap_phi_reg_pp1_iter0_phi_ln56_6_reg_956;
                ap_phi_reg_pp1_iter1_phi_ln56_70_reg_1788 <= ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1788;
                ap_phi_reg_pp1_iter1_phi_ln56_71_reg_1801 <= ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1801;
                ap_phi_reg_pp1_iter1_phi_ln56_7_reg_969 <= ap_phi_reg_pp1_iter0_phi_ln56_7_reg_969;
                ap_phi_reg_pp1_iter1_phi_ln56_8_reg_982 <= ap_phi_reg_pp1_iter0_phi_ln56_8_reg_982;
                ap_phi_reg_pp1_iter1_phi_ln56_9_reg_995 <= ap_phi_reg_pp1_iter0_phi_ln56_9_reg_995;
                ap_phi_reg_pp1_iter1_phi_ln56_reg_878 <= ap_phi_reg_pp1_iter0_phi_ln56_reg_878;
                w_index_reg_6904 <= w_index_fu_2742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_ic_reg_6711 <= i_ic_fu_2036_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln43_reg_6918 <= icmp_ln43_fu_2761_p2;
                icmp_ln43_reg_6918_pp1_iter1_reg <= icmp_ln43_reg_6918;
                    or_ln_reg_6914(1 downto 0) <= or_ln_fu_2753_p3(1 downto 0);
                tmp_100_reg_7017 <= w5_V_q0(63 downto 48);
                tmp_101_reg_7042 <= w5_V_q0(79 downto 64);
                tmp_102_reg_7067 <= w5_V_q0(95 downto 80);
                tmp_103_reg_7092 <= w5_V_q0(111 downto 96);
                tmp_104_reg_7117 <= w5_V_q0(127 downto 112);
                tmp_105_reg_7142 <= w5_V_q0(143 downto 128);
                tmp_106_reg_7167 <= w5_V_q0(159 downto 144);
                tmp_107_reg_7192 <= w5_V_q0(175 downto 160);
                tmp_108_reg_7217 <= w5_V_q0(191 downto 176);
                tmp_109_reg_7242 <= w5_V_q0(207 downto 192);
                tmp_110_reg_7267 <= w5_V_q0(223 downto 208);
                tmp_111_reg_7292 <= w5_V_q0(239 downto 224);
                tmp_112_reg_7317 <= w5_V_q0(255 downto 240);
                tmp_113_reg_7342 <= w5_V_q0(271 downto 256);
                tmp_114_reg_7367 <= w5_V_q0(287 downto 272);
                tmp_115_reg_7392 <= w5_V_q0(303 downto 288);
                tmp_116_reg_7417 <= w5_V_q0(319 downto 304);
                tmp_117_reg_7442 <= w5_V_q0(335 downto 320);
                tmp_118_reg_7467 <= w5_V_q0(351 downto 336);
                tmp_119_reg_7492 <= w5_V_q0(367 downto 352);
                tmp_120_reg_7517 <= w5_V_q0(383 downto 368);
                tmp_121_reg_7542 <= w5_V_q0(399 downto 384);
                tmp_122_reg_7567 <= w5_V_q0(415 downto 400);
                tmp_123_reg_7592 <= w5_V_q0(431 downto 416);
                tmp_124_reg_7617 <= w5_V_q0(447 downto 432);
                tmp_125_reg_7642 <= w5_V_q0(463 downto 448);
                tmp_126_reg_7667 <= w5_V_q0(479 downto 464);
                tmp_127_reg_7692 <= w5_V_q0(495 downto 480);
                tmp_128_reg_7717 <= w5_V_q0(511 downto 496);
                tmp_129_reg_7742 <= w5_V_q0(527 downto 512);
                tmp_130_reg_7767 <= w5_V_q0(543 downto 528);
                tmp_131_reg_7792 <= w5_V_q0(559 downto 544);
                tmp_132_reg_7817 <= w5_V_q0(575 downto 560);
                tmp_133_reg_7842 <= w5_V_q0(591 downto 576);
                tmp_134_reg_7867 <= w5_V_q0(607 downto 592);
                tmp_135_reg_7892 <= w5_V_q0(623 downto 608);
                tmp_136_reg_7917 <= w5_V_q0(639 downto 624);
                tmp_137_reg_7942 <= w5_V_q0(655 downto 640);
                tmp_138_reg_7967 <= w5_V_q0(671 downto 656);
                tmp_139_reg_7992 <= w5_V_q0(687 downto 672);
                tmp_140_reg_8017 <= w5_V_q0(703 downto 688);
                tmp_141_reg_8042 <= w5_V_q0(719 downto 704);
                tmp_142_reg_8067 <= w5_V_q0(735 downto 720);
                tmp_143_reg_8092 <= w5_V_q0(751 downto 736);
                tmp_144_reg_8117 <= w5_V_q0(767 downto 752);
                tmp_145_reg_8142 <= w5_V_q0(783 downto 768);
                tmp_146_reg_8167 <= w5_V_q0(799 downto 784);
                tmp_147_reg_8192 <= w5_V_q0(815 downto 800);
                tmp_148_reg_8217 <= w5_V_q0(831 downto 816);
                tmp_149_reg_8242 <= w5_V_q0(847 downto 832);
                tmp_150_reg_8267 <= w5_V_q0(863 downto 848);
                tmp_151_reg_8292 <= w5_V_q0(879 downto 864);
                tmp_152_reg_8317 <= w5_V_q0(895 downto 880);
                tmp_153_reg_8342 <= w5_V_q0(911 downto 896);
                tmp_154_reg_8367 <= w5_V_q0(927 downto 912);
                tmp_155_reg_8392 <= w5_V_q0(943 downto 928);
                tmp_156_reg_8417 <= w5_V_q0(959 downto 944);
                tmp_157_reg_8442 <= w5_V_q0(975 downto 960);
                tmp_158_reg_8467 <= w5_V_q0(991 downto 976);
                tmp_159_reg_8492 <= w5_V_q0(1007 downto 992);
                tmp_160_reg_8517 <= w5_V_q0(1023 downto 1008);
                tmp_161_reg_8542 <= w5_V_q0(1039 downto 1024);
                tmp_162_reg_8567 <= w5_V_q0(1055 downto 1040);
                tmp_163_reg_8592 <= w5_V_q0(1071 downto 1056);
                tmp_164_reg_8617 <= w5_V_q0(1087 downto 1072);
                tmp_165_reg_8642 <= w5_V_q0(1103 downto 1088);
                tmp_166_reg_8667 <= w5_V_q0(1119 downto 1104);
                tmp_167_reg_8692 <= w5_V_q0(1135 downto 1120);
                tmp_168_reg_8717 <= w5_V_q0(1146 downto 1136);
                tmp_98_reg_6967 <= w5_V_q0(31 downto 16);
                tmp_99_reg_6992 <= w5_V_q0(47 downto 32);
                trunc_ln56_reg_6942 <= trunc_ln56_fu_2783_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (icmp_ln203_fu_2200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_0 <= select_ln203_fu_2206_p3;
                kernel_data_V_1_12 <= select_ln203_4_fu_2318_p3;
                kernel_data_V_1_13 <= select_ln203_5_fu_2337_p3;
                kernel_data_V_1_14 <= select_ln203_6_fu_2356_p3;
                kernel_data_V_1_15 <= select_ln203_7_fu_2375_p3;
                kernel_data_V_1_24 <= select_ln203_8_fu_2394_p3;
                kernel_data_V_1_25 <= select_ln203_9_fu_2413_p3;
                kernel_data_V_1_26 <= select_ln203_10_fu_2432_p3;
                kernel_data_V_1_27 <= select_ln203_11_fu_2451_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (icmp_ln203_1_fu_2238_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_1 <= select_ln203_1_fu_2225_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_2))) then
                kernel_data_V_1_10 <= tmp_92_fu_2498_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2030_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                kernel_data_V_1_10_load_reg_6750 <= kernel_data_V_1_10;
                kernel_data_V_1_11_load_reg_6755 <= kernel_data_V_1_11;
                kernel_data_V_1_20_load_reg_6760 <= kernel_data_V_1_20;
                kernel_data_V_1_21_load_reg_6765 <= kernel_data_V_1_21;
                kernel_data_V_1_22_load_reg_6770 <= kernel_data_V_1_22;
                kernel_data_V_1_23_load_reg_6775 <= kernel_data_V_1_23;
                kernel_data_V_1_32_load_reg_6780 <= kernel_data_V_1_32;
                kernel_data_V_1_33_load_reg_6785 <= kernel_data_V_1_33;
                kernel_data_V_1_34_load_reg_6790 <= kernel_data_V_1_34;
                kernel_data_V_1_35_load_reg_6795 <= kernel_data_V_1_35;
                kernel_data_V_1_8_load_reg_6740 <= kernel_data_V_1_8;
                kernel_data_V_1_9_load_reg_6745 <= kernel_data_V_1_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_0)) and (icmp_ln213_fu_2470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                kernel_data_V_1_11 <= tmp_92_fu_2498_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_fu_2200_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_16 <= select_ln203_4_fu_2318_p3;
                kernel_data_V_1_17 <= select_ln203_5_fu_2337_p3;
                kernel_data_V_1_18 <= select_ln203_6_fu_2356_p3;
                kernel_data_V_1_19 <= select_ln203_7_fu_2375_p3;
                kernel_data_V_1_28 <= select_ln203_8_fu_2394_p3;
                kernel_data_V_1_29 <= select_ln203_9_fu_2413_p3;
                kernel_data_V_1_30 <= select_ln203_10_fu_2432_p3;
                kernel_data_V_1_31 <= select_ln203_11_fu_2451_p3;
                kernel_data_V_1_4 <= select_ln203_fu_2206_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (icmp_ln203_2_fu_2269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_2 <= select_ln203_2_fu_2256_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_0))) then
                kernel_data_V_1_20 <= tmp_94_fu_2564_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_1))) then
                kernel_data_V_1_21 <= tmp_94_fu_2564_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_2))) then
                kernel_data_V_1_22 <= tmp_94_fu_2564_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_2)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_1)) and not((ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 = ap_const_lv3_0)) and (icmp_ln213_1_fu_2536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                kernel_data_V_1_23 <= tmp_94_fu_2564_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (icmp_ln203_3_fu_2300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_3 <= select_ln203_3_fu_2287_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2628_p3 = ap_const_lv6_20) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_32 <= tmp_95_fu_2618_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2628_p3 = ap_const_lv6_21) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_33 <= tmp_95_fu_2618_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln203_2_fu_2628_p3 = ap_const_lv6_22) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_34 <= tmp_95_fu_2618_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((or_ln203_2_fu_2628_p3 = ap_const_lv6_22)) and not((or_ln203_2_fu_2628_p3 = ap_const_lv6_21)) and not((or_ln203_2_fu_2628_p3 = ap_const_lv6_20)) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                kernel_data_V_1_35 <= tmp_95_fu_2618_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_1_fu_2238_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_5 <= select_ln203_1_fu_2225_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_2_fu_2269_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_6 <= select_ln203_2_fu_2256_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln203_3_fu_2300_p2 = ap_const_lv1_0) and (icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                kernel_data_V_1_7 <= select_ln203_3_fu_2287_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_0))) then
                kernel_data_V_1_8 <= tmp_92_fu_2498_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln213_fu_2470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 = ap_const_lv3_1))) then
                kernel_data_V_1_9 <= tmp_92_fu_2498_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln313_fu_6033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_1905_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_1_fu_708 <= shift_buffer_0_0_V_reg_809;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_2_fu_712 <= shift_buffer_0_0_V_reg_809;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_3_fu_716 <= shift_buffer_0_0_V_reg_809;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                shift_buffer_0_3_V_fu_704 <= shift_buffer_0_0_V_reg_809;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_1_fu_692 <= shift_buffer_1_0_V_reg_796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_2_fu_696 <= shift_buffer_1_0_V_reg_796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_3_fu_700 <= shift_buffer_1_0_V_reg_796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln246_reg_6716 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                shift_buffer_1_3_V_fu_688 <= shift_buffer_1_0_V_reg_796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln246_reg_6716 <= trunc_ln246_fu_2042_p1;
            end if;
        end if;
    end process;
    or_ln_reg_6914(5 downto 2) <= "1000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op43, icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln213_2_fu_2602_p2, ap_CS_fsm_state10, and_ln289_2_fu_2732_p2, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter3, io_acc_block_signal_op1476, icmp_ln79_fu_6120_p2, icmp_ln194_fu_2176_p2, icmp_ln213_fu_2470_p2, icmp_ln213_1_fu_2536_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln241_fu_2030_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln194_fu_2176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln213_fu_2470_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln213_1_fu_2536_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_lv1_1 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_lv1_0 = and_ln289_2_fu_2732_p2) and (icmp_ln213_2_fu_2602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    DataIn_V_assign_fu_2046_p5 <= i_ic4_0_i_i_i_reg_785(2 - 1 downto 0);
    acc_0_V_fu_5957_p2 <= std_logic_vector(unsigned(add_ln703_86_fu_5953_p2) + unsigned(tmp_data_0_V_7130_reg_1814));
    acc_1_V_fu_5967_p2 <= std_logic_vector(unsigned(add_ln703_95_fu_5963_p2) + unsigned(tmp_data_1_V_7128_reg_1825));
    acc_2_V_fu_5977_p2 <= std_logic_vector(unsigned(add_ln703_104_fu_5973_p2) + unsigned(tmp_data_2_V_7126_reg_1836));
    acc_3_V_fu_5987_p2 <= std_logic_vector(unsigned(add_ln703_113_fu_5983_p2) + unsigned(tmp_data_3_V_7124_reg_1847));
    acc_4_V_fu_5997_p2 <= std_logic_vector(unsigned(add_ln703_122_fu_5993_p2) + unsigned(tmp_data_4_V_5122_reg_1858));
    acc_5_V_fu_6007_p2 <= std_logic_vector(unsigned(add_ln703_131_fu_6003_p2) + unsigned(tmp_data_5_V_5120_reg_1869));
    acc_6_V_fu_6017_p2 <= std_logic_vector(unsigned(add_ln703_140_fu_6013_p2) + unsigned(tmp_data_6_V_5118_reg_1880));
    acc_7_V_fu_6027_p2 <= std_logic_vector(unsigned(tmp_data_7_V_5116_reg_1891) + unsigned(add_ln703_149_fu_6023_p2));
    add_ln213_1_fu_2542_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_1_reg_844) + unsigned(ap_const_lv3_1));
    add_ln213_2_fu_2608_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_2_reg_855) + unsigned(ap_const_lv3_1));
    add_ln213_fu_2476_p2 <= std_logic_vector(unsigned(i_ic2_0_i_i_i_i_0_reg_833) + unsigned(ap_const_lv3_1));
    add_ln321_fu_6084_p2 <= std_logic_vector(unsigned(pY_2_load_reg_6888) + unsigned(ap_const_lv32_1));
    add_ln323_fu_6095_p2 <= std_logic_vector(unsigned(sY_2_load_reg_6878) + unsigned(ap_const_lv32_1));
    add_ln326_fu_6038_p2 <= std_logic_vector(unsigned(pX_2_load_reg_6894) + unsigned(ap_const_lv32_1));
    add_ln328_fu_6049_p2 <= std_logic_vector(unsigned(sX_2_load_reg_6868) + unsigned(ap_const_lv32_1));
    add_ln703_100_fu_5769_p2 <= std_logic_vector(unsigned(trunc_ln708_100_reg_8837) + unsigned(trunc_ln708_99_reg_8832));
    add_ln703_101_fu_5773_p2 <= std_logic_vector(unsigned(trunc_ln708_103_reg_8852) + unsigned(trunc_ln708_102_reg_8847));
    add_ln703_102_fu_5777_p2 <= std_logic_vector(unsigned(trunc_ln708_101_reg_8842) + unsigned(add_ln703_101_fu_5773_p2));
    add_ln703_103_fu_5782_p2 <= std_logic_vector(unsigned(add_ln703_100_fu_5769_p2) + unsigned(add_ln703_102_fu_5777_p2));
    add_ln703_104_fu_5973_p2 <= std_logic_vector(unsigned(add_ln703_99_reg_9102) + unsigned(add_ln703_103_reg_9107));
    add_ln703_106_fu_5788_p2 <= std_logic_vector(unsigned(trunc_ln708_105_reg_8862) + unsigned(trunc_ln708_104_reg_8857));
    add_ln703_107_fu_5792_p2 <= std_logic_vector(unsigned(trunc_ln708_107_reg_8872) + unsigned(trunc_ln708_106_reg_8867));
    add_ln703_108_fu_5796_p2 <= std_logic_vector(unsigned(add_ln703_106_fu_5788_p2) + unsigned(add_ln703_107_fu_5792_p2));
    add_ln703_109_fu_5802_p2 <= std_logic_vector(unsigned(trunc_ln708_109_reg_8882) + unsigned(trunc_ln708_108_reg_8877));
    add_ln703_110_fu_5806_p2 <= std_logic_vector(unsigned(trunc_ln708_112_reg_8897) + unsigned(trunc_ln708_111_reg_8892));
    add_ln703_111_fu_5810_p2 <= std_logic_vector(unsigned(trunc_ln708_110_reg_8887) + unsigned(add_ln703_110_fu_5806_p2));
    add_ln703_112_fu_5815_p2 <= std_logic_vector(unsigned(add_ln703_109_fu_5802_p2) + unsigned(add_ln703_111_fu_5810_p2));
    add_ln703_113_fu_5983_p2 <= std_logic_vector(unsigned(add_ln703_108_reg_9112) + unsigned(add_ln703_112_reg_9117));
    add_ln703_115_fu_5821_p2 <= std_logic_vector(unsigned(trunc_ln708_114_reg_8907) + unsigned(trunc_ln708_113_reg_8902));
    add_ln703_116_fu_5825_p2 <= std_logic_vector(unsigned(trunc_ln708_116_reg_8917) + unsigned(trunc_ln708_115_reg_8912));
    add_ln703_117_fu_5829_p2 <= std_logic_vector(unsigned(add_ln703_115_fu_5821_p2) + unsigned(add_ln703_116_fu_5825_p2));
    add_ln703_118_fu_5835_p2 <= std_logic_vector(unsigned(trunc_ln708_118_reg_8927) + unsigned(trunc_ln708_117_reg_8922));
    add_ln703_119_fu_5839_p2 <= std_logic_vector(unsigned(trunc_ln708_121_reg_8942) + unsigned(trunc_ln708_120_reg_8937));
    add_ln703_120_fu_5843_p2 <= std_logic_vector(unsigned(trunc_ln708_119_reg_8932) + unsigned(add_ln703_119_fu_5839_p2));
    add_ln703_121_fu_5848_p2 <= std_logic_vector(unsigned(add_ln703_118_fu_5835_p2) + unsigned(add_ln703_120_fu_5843_p2));
    add_ln703_122_fu_5993_p2 <= std_logic_vector(unsigned(add_ln703_117_reg_9122) + unsigned(add_ln703_121_reg_9127));
    add_ln703_124_fu_5854_p2 <= std_logic_vector(unsigned(trunc_ln708_123_reg_8952) + unsigned(trunc_ln708_122_reg_8947));
    add_ln703_125_fu_5858_p2 <= std_logic_vector(unsigned(trunc_ln708_125_reg_8962) + unsigned(trunc_ln708_124_reg_8957));
    add_ln703_126_fu_5862_p2 <= std_logic_vector(unsigned(add_ln703_124_fu_5854_p2) + unsigned(add_ln703_125_fu_5858_p2));
    add_ln703_127_fu_5868_p2 <= std_logic_vector(unsigned(trunc_ln708_127_reg_8972) + unsigned(trunc_ln708_126_reg_8967));
    add_ln703_128_fu_5872_p2 <= std_logic_vector(unsigned(trunc_ln708_130_reg_8987) + unsigned(trunc_ln708_129_reg_8982));
    add_ln703_129_fu_5876_p2 <= std_logic_vector(unsigned(trunc_ln708_128_reg_8977) + unsigned(add_ln703_128_fu_5872_p2));
    add_ln703_130_fu_5881_p2 <= std_logic_vector(unsigned(add_ln703_127_fu_5868_p2) + unsigned(add_ln703_129_fu_5876_p2));
    add_ln703_131_fu_6003_p2 <= std_logic_vector(unsigned(add_ln703_126_reg_9132) + unsigned(add_ln703_130_reg_9137));
    add_ln703_133_fu_5887_p2 <= std_logic_vector(unsigned(trunc_ln708_132_reg_8997) + unsigned(trunc_ln708_131_reg_8992));
    add_ln703_134_fu_5891_p2 <= std_logic_vector(unsigned(trunc_ln708_134_reg_9007) + unsigned(trunc_ln708_133_reg_9002));
    add_ln703_135_fu_5895_p2 <= std_logic_vector(unsigned(add_ln703_133_fu_5887_p2) + unsigned(add_ln703_134_fu_5891_p2));
    add_ln703_136_fu_5901_p2 <= std_logic_vector(unsigned(trunc_ln708_136_reg_9017) + unsigned(trunc_ln708_135_reg_9012));
    add_ln703_137_fu_5905_p2 <= std_logic_vector(unsigned(trunc_ln708_139_reg_9032) + unsigned(trunc_ln708_138_reg_9027));
    add_ln703_138_fu_5909_p2 <= std_logic_vector(unsigned(trunc_ln708_137_reg_9022) + unsigned(add_ln703_137_fu_5905_p2));
    add_ln703_139_fu_5914_p2 <= std_logic_vector(unsigned(add_ln703_136_fu_5901_p2) + unsigned(add_ln703_138_fu_5909_p2));
    add_ln703_140_fu_6013_p2 <= std_logic_vector(unsigned(add_ln703_135_reg_9142) + unsigned(add_ln703_139_reg_9147));
    add_ln703_142_fu_5920_p2 <= std_logic_vector(unsigned(trunc_ln708_140_reg_9037) + unsigned(trunc_ln708_141_reg_9042));
    add_ln703_143_fu_5924_p2 <= std_logic_vector(unsigned(trunc_ln708_142_reg_9047) + unsigned(trunc_ln708_143_reg_9052));
    add_ln703_144_fu_5928_p2 <= std_logic_vector(unsigned(add_ln703_143_fu_5924_p2) + unsigned(add_ln703_142_fu_5920_p2));
    add_ln703_145_fu_5934_p2 <= std_logic_vector(unsigned(trunc_ln708_144_reg_9057) + unsigned(trunc_ln708_145_reg_9062));
    add_ln703_146_fu_5938_p2 <= std_logic_vector(unsigned(trunc_ln708_147_reg_9072) + unsigned(trunc_ln708_148_reg_9077));
    add_ln703_147_fu_5942_p2 <= std_logic_vector(unsigned(add_ln703_146_fu_5938_p2) + unsigned(trunc_ln708_146_reg_9067));
    add_ln703_148_fu_5947_p2 <= std_logic_vector(unsigned(add_ln703_147_fu_5942_p2) + unsigned(add_ln703_145_fu_5934_p2));
    add_ln703_149_fu_6023_p2 <= std_logic_vector(unsigned(add_ln703_148_reg_9157) + unsigned(add_ln703_144_reg_9152));
    add_ln703_80_fu_5693_p2 <= std_logic_vector(unsigned(trunc_ln708_80_reg_8737) + unsigned(trunc_ln708_79_reg_8732));
    add_ln703_81_fu_5697_p2 <= std_logic_vector(unsigned(add_ln703_fu_5689_p2) + unsigned(add_ln703_80_fu_5693_p2));
    add_ln703_82_fu_5703_p2 <= std_logic_vector(unsigned(trunc_ln708_82_reg_8747) + unsigned(trunc_ln708_81_reg_8742));
    add_ln703_83_fu_5707_p2 <= std_logic_vector(unsigned(trunc_ln708_85_reg_8762) + unsigned(trunc_ln708_84_reg_8757));
    add_ln703_84_fu_5711_p2 <= std_logic_vector(unsigned(trunc_ln708_83_reg_8752) + unsigned(add_ln703_83_fu_5707_p2));
    add_ln703_85_fu_5716_p2 <= std_logic_vector(unsigned(add_ln703_82_fu_5703_p2) + unsigned(add_ln703_84_fu_5711_p2));
    add_ln703_86_fu_5953_p2 <= std_logic_vector(unsigned(add_ln703_81_reg_9082) + unsigned(add_ln703_85_reg_9087));
    add_ln703_88_fu_5722_p2 <= std_logic_vector(unsigned(trunc_ln708_87_reg_8772) + unsigned(trunc_ln708_86_reg_8767));
    add_ln703_89_fu_5726_p2 <= std_logic_vector(unsigned(trunc_ln708_89_reg_8782) + unsigned(trunc_ln708_88_reg_8777));
    add_ln703_90_fu_5730_p2 <= std_logic_vector(unsigned(add_ln703_88_fu_5722_p2) + unsigned(add_ln703_89_fu_5726_p2));
    add_ln703_91_fu_5736_p2 <= std_logic_vector(unsigned(trunc_ln708_91_reg_8792) + unsigned(trunc_ln708_90_reg_8787));
    add_ln703_92_fu_5740_p2 <= std_logic_vector(unsigned(trunc_ln708_94_reg_8807) + unsigned(trunc_ln708_93_reg_8802));
    add_ln703_93_fu_5744_p2 <= std_logic_vector(unsigned(trunc_ln708_92_reg_8797) + unsigned(add_ln703_92_fu_5740_p2));
    add_ln703_94_fu_5749_p2 <= std_logic_vector(unsigned(add_ln703_91_fu_5736_p2) + unsigned(add_ln703_93_fu_5744_p2));
    add_ln703_95_fu_5963_p2 <= std_logic_vector(unsigned(add_ln703_90_reg_9092) + unsigned(add_ln703_94_reg_9097));
    add_ln703_97_fu_5755_p2 <= std_logic_vector(unsigned(trunc_ln708_96_reg_8817) + unsigned(trunc_ln708_95_reg_8812));
    add_ln703_98_fu_5759_p2 <= std_logic_vector(unsigned(trunc_ln708_98_reg_8827) + unsigned(trunc_ln708_97_reg_8822));
    add_ln703_99_fu_5763_p2 <= std_logic_vector(unsigned(add_ln703_97_fu_5755_p2) + unsigned(add_ln703_98_fu_5759_p2));
    add_ln703_fu_5689_p2 <= std_logic_vector(unsigned(trunc_ln708_s_reg_8727) + unsigned(trunc_ln2_reg_8722));
    add_ln79_fu_2024_p2 <= std_logic_vector(unsigned(indvar_flatten133_reg_773) + unsigned(ap_const_lv6_1));
    and_ln289_1_fu_2726_p2 <= (icmp_ln289_3_fu_2714_p2 and icmp_ln289_2_fu_2694_p2);
    and_ln289_2_fu_2732_p2 <= (and_ln289_fu_2720_p2 and and_ln289_1_fu_2726_p2);
    and_ln289_fu_2720_p2 <= (icmp_ln289_fu_2664_p2 and icmp_ln289_1_fu_2674_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state11_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_assign_proc : process(and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
                ap_block_state16 <= ((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900));
    end process;


    ap_condition_1543_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
                ap_condition_1543 <= (not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_logic_1 = ap_CS_fsm_state16));
    end process;


    ap_condition_2240_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476, icmp_ln313_fu_6033_p2)
    begin
                ap_condition_2240 <= (not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln313_fu_6033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16));
    end process;


    ap_condition_603_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_603 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_685_assign_proc : process(or_ln_reg_6914)
    begin
                ap_condition_685 <= (not((or_ln_reg_6914 = ap_const_lv6_20)) and not((or_ln_reg_6914 = ap_const_lv6_21)) and not((or_ln_reg_6914 = ap_const_lv6_22)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476, icmp_ln79_fu_6120_p2)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_ic2_0_i_i_i_i_0_phi_fu_837_p4 <= i_ic2_0_i_i_i_i_0_reg_833;
    ap_phi_mux_i_ic2_0_i_i_i_i_1_phi_fu_848_p4 <= i_ic2_0_i_i_i_i_1_reg_844;

    ap_phi_mux_storemerge_i_i_phi_fu_1905_p4_assign_proc : process(ap_CS_fsm_state16, select_ln323_fu_6100_p3, icmp_ln313_fu_6033_p2, icmp_ln317_fu_6079_p2)
    begin
        if (((icmp_ln313_fu_6033_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
            if ((icmp_ln317_fu_6079_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_1905_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln317_fu_6079_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_1905_p4 <= select_ln323_fu_6100_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_1905_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_1905_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_w_index132_phi_fu_870_p4_assign_proc : process(w_index132_reg_866, ap_CS_fsm_pp1_stage0, w_index_reg_6904, icmp_ln43_reg_6918, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln43_reg_6918 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_w_index132_phi_fu_870_p4 <= w_index_reg_6904;
        else 
            ap_phi_mux_w_index132_phi_fu_870_p4 <= w_index132_reg_866;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_phi_ln56_10_reg_1008 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_11_reg_1021 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_12_reg_1034 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_13_reg_1047 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_14_reg_1060 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_15_reg_1073 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_16_reg_1086 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_17_reg_1099 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_18_reg_1112 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_19_reg_1125 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_1_reg_891 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_20_reg_1138 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_21_reg_1151 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_22_reg_1164 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_23_reg_1177 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_24_reg_1190 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_25_reg_1203 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_26_reg_1216 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_27_reg_1229 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_28_reg_1242 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_29_reg_1255 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_2_reg_904 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_30_reg_1268 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_31_reg_1281 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_32_reg_1294 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_33_reg_1307 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_34_reg_1320 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_35_reg_1333 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_36_reg_1346 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_37_reg_1359 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_38_reg_1372 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_39_reg_1385 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_3_reg_917 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_40_reg_1398 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_41_reg_1411 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_42_reg_1424 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_43_reg_1437 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_44_reg_1450 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_45_reg_1463 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_46_reg_1476 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_47_reg_1489 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_48_reg_1502 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_49_reg_1515 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_4_reg_930 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_50_reg_1528 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_51_reg_1541 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_52_reg_1554 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_53_reg_1567 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_54_reg_1580 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_55_reg_1593 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_56_reg_1606 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_57_reg_1619 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_58_reg_1632 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_59_reg_1645 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_5_reg_943 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_60_reg_1658 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_61_reg_1671 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_62_reg_1684 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_63_reg_1697 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_64_reg_1710 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_65_reg_1723 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_66_reg_1736 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_67_reg_1749 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_68_reg_1762 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_69_reg_1775 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_6_reg_956 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_70_reg_1788 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_71_reg_1801 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_7_reg_969 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_8_reg_982 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_9_reg_995 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln56_reg_878 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_state2, io_acc_block_signal_op43)
    begin
        if (((io_acc_block_signal_op43 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_ic_fu_2036_p2 <= std_logic_vector(unsigned(i_ic4_0_i_i_i_reg_785) + unsigned(ap_const_lv3_1));
    i_iw_fu_2182_p2 <= std_logic_vector(unsigned(i_iw_0_i_i_i_i_reg_822) + unsigned(ap_const_lv2_1));
    icmp_ln194_fu_2176_p2 <= "1" when (i_iw_0_i_i_i_i_reg_822 = ap_const_lv2_2) else "0";
    icmp_ln203_1_fu_2238_p2 <= "1" when (or_ln203_fu_2232_p2 = ap_const_lv3_1) else "0";
    icmp_ln203_2_fu_2269_p2 <= "1" when (or_ln203_1_fu_2263_p2 = ap_const_lv3_2) else "0";
    icmp_ln203_3_fu_2300_p2 <= "1" when (or_ln203_3_fu_2294_p2 = ap_const_lv3_3) else "0";
    icmp_ln203_fu_2200_p2 <= "1" when (shl_ln_fu_2192_p3 = ap_const_lv3_0) else "0";
    icmp_ln213_1_fu_2536_p2 <= "1" when (i_ic2_0_i_i_i_i_1_reg_844 = ap_const_lv3_4) else "0";
    icmp_ln213_2_fu_2602_p2 <= "1" when (i_ic2_0_i_i_i_i_2_reg_855 = ap_const_lv3_4) else "0";
    icmp_ln213_fu_2470_p2 <= "1" when (i_ic2_0_i_i_i_i_0_reg_833 = ap_const_lv3_4) else "0";
    icmp_ln241_fu_2030_p2 <= "1" when (i_ic4_0_i_i_i_reg_785 = ap_const_lv3_4) else "0";
    icmp_ln289_1_fu_2674_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_2694_p2 <= "1" when (signed(tmp_fu_2684_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_2714_p2 <= "1" when (signed(tmp_72_fu_2704_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_2664_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln313_fu_6033_p2 <= "1" when (pX_2_load_reg_6894 = ap_const_lv32_5) else "0";
    icmp_ln317_fu_6079_p2 <= "1" when (pY_2_load_reg_6888 = ap_const_lv32_5) else "0";
    icmp_ln43_fu_2761_p2 <= "1" when (ap_phi_mux_w_index132_phi_fu_870_p4 = ap_const_lv2_3) else "0";
    icmp_ln79_fu_6120_p2 <= "1" when (indvar_flatten133_reg_773 = ap_const_lv6_23) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476, icmp_ln79_fu_6120_p2)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (icmp_ln79_fu_6120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op1476 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op43 <= (data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    line_buffer_Array_V_1_0_0_ce0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_0) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_0_we0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_0) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_ce0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_1) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_1_we0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_1) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_ce0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_2) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_2_we0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_2) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_ce0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_3) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_3_we0_assign_proc : process(icmp_ln241_fu_2030_p2, ap_CS_fsm_state3, trunc_ln246_fu_2042_p1)
    begin
        if (((trunc_ln246_fu_2042_p1 = ap_const_lv2_3) and (icmp_ln241_fu_2030_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_ce0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_0_we0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_ce0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_1_we0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_ce0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_2_we0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_ce0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_1_3_we0_assign_proc : process(trunc_ln246_reg_6716, ap_CS_fsm_state4)
    begin
        if (((trunc_ln246_reg_6716 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln203_1_fu_2263_p2 <= (shl_ln_fu_2192_p3 or ap_const_lv3_2);
    or_ln203_2_fu_2628_p3 <= (ap_const_lv3_4 & i_ic2_0_i_i_i_i_2_reg_855);
    or_ln203_3_fu_2294_p2 <= (shl_ln_fu_2192_p3 or ap_const_lv3_3);
    or_ln203_fu_2232_p2 <= (shl_ln_fu_2192_p3 or ap_const_lv3_1);
    or_ln_fu_2753_p3 <= (ap_const_lv3_4 & zext_ln43_fu_2738_p1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= acc_0_V_reg_9162;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= acc_1_V_reg_9168;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= acc_2_V_reg_9174;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= acc_3_V_reg_9180;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= acc_4_V_reg_9186;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= acc_5_V_reg_9192;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= acc_6_V_reg_9198;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state16, and_ln289_2_reg_6900)
    begin
        if (((ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= acc_7_V_reg_9204;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state16, and_ln289_2_reg_6900, io_acc_block_signal_op1476)
    begin
        if ((not(((io_acc_block_signal_op1476 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_6900))) and (ap_const_lv1_1 = and_ln289_2_reg_6900) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln203_10_fu_2432_p3 <= 
        kernel_data_V_1_30 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_34_load_reg_6790;
    select_ln203_11_fu_2451_p3 <= 
        kernel_data_V_1_31 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_35_load_reg_6795;
    select_ln203_1_fu_2225_p3 <= 
        kernel_data_V_1_5 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_9_load_reg_6745;
    select_ln203_2_fu_2256_p3 <= 
        kernel_data_V_1_6 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_10_load_reg_6750;
    select_ln203_3_fu_2287_p3 <= 
        kernel_data_V_1_7 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_11_load_reg_6755;
    select_ln203_4_fu_2318_p3 <= 
        kernel_data_V_1_16 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_20_load_reg_6760;
    select_ln203_5_fu_2337_p3 <= 
        kernel_data_V_1_17 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_21_load_reg_6765;
    select_ln203_6_fu_2356_p3 <= 
        kernel_data_V_1_18 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_22_load_reg_6770;
    select_ln203_7_fu_2375_p3 <= 
        kernel_data_V_1_19 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_23_load_reg_6775;
    select_ln203_8_fu_2394_p3 <= 
        kernel_data_V_1_28 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_32_load_reg_6780;
    select_ln203_9_fu_2413_p3 <= 
        kernel_data_V_1_29 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_33_load_reg_6785;
    select_ln203_fu_2206_p3 <= 
        kernel_data_V_1_4 when (icmp_ln203_fu_2200_p2(0) = '1') else 
        kernel_data_V_1_8_load_reg_6740;
    select_ln323_fu_6100_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_1_reg_6883(0) = '1') else 
        add_ln323_fu_6095_p2;
    select_ln328_fu_6054_p3 <= 
        ap_const_lv32_2 when (icmp_ln289_reg_6873(0) = '1') else 
        add_ln328_fu_6049_p2;
    shl_ln_fu_2192_p3 <= (trunc_ln201_fu_2188_p1 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_72_fu_2704_p4 <= pX_2(31 downto 1);
    tmp_92_fu_2498_p5 <= i_ic2_0_i_i_i_i_0_reg_833(2 - 1 downto 0);
    tmp_94_fu_2564_p5 <= i_ic2_0_i_i_i_i_1_reg_844(2 - 1 downto 0);
    tmp_95_fu_2618_p5 <= i_ic2_0_i_i_i_i_2_reg_855(2 - 1 downto 0);
    tmp_fu_2684_p4 <= pY_2(31 downto 1);
    trunc_ln201_fu_2188_p1 <= i_iw_0_i_i_i_i_reg_822(1 - 1 downto 0);
    trunc_ln246_fu_2042_p1 <= i_ic4_0_i_i_i_reg_785(2 - 1 downto 0);
    trunc_ln56_fu_2783_p1 <= w5_V_q0(16 - 1 downto 0);
    w5_V_address0 <= zext_ln56_fu_2748_p1(2 - 1 downto 0);

    w5_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            w5_V_ce0 <= ap_const_logic_1;
        else 
            w5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_2742_p2 <= std_logic_vector(unsigned(ap_phi_mux_w_index132_phi_fu_870_p4) + unsigned(ap_const_lv2_1));
    zext_ln43_fu_2738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index132_phi_fu_870_p4),3));
    zext_ln56_fu_2748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index132_phi_fu_870_p4),64));
end behav;
