// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_TDATA,
        data_V_data_V_TVALID,
        data_V_data_V_TREADY,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state9 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_TDATA;
input   data_V_data_V_TVALID;
output   data_V_data_V_TREADY;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_TREADY;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] kernel_data_V_1272;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_2273;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_8;
reg   [31:0] sX_3;
reg   [31:0] sY_3;
reg   [31:0] pY_3;
reg   [31:0] pX_3;
wire   [1:0] w2_V_address0;
reg    w2_V_ce0;
wire   [187:0] w2_V_q0;
reg   [15:0] kernel_data_V_6;
reg   [15:0] kernel_data_V_3274;
reg   [15:0] kernel_data_V_0;
reg    line_buffer_Array_V_0_0_ce0;
reg    line_buffer_Array_V_0_0_we0;
wire   [15:0] line_buffer_Array_V_0_0_q0;
reg    line_buffer_Array_V_1271_0_ce0;
reg    line_buffer_Array_V_1271_0_we0;
wire   [15:0] line_buffer_Array_V_1271_0_q0;
reg    data_V_data_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state9;
reg   [0:0] and_ln289_4_reg_1458;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg   [1:0] w_index40_reg_286;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
wire    ap_block_state8_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [15:0] tmp_data_0_V_838_reg_430;
reg   [15:0] tmp_data_1_V_836_reg_441;
reg   [15:0] tmp_data_2_V_834_reg_452;
reg   [15:0] tmp_data_3_V_832_reg_463;
reg   [15:0] tmp_data_0_V_reg_1380;
reg   [15:0] DataOut_V_8_reg_1385;
reg   [15:0] DataOut_V_reg_1390;
reg   [15:0] kernel_data_V_2273_load_reg_1395;
reg   [15:0] kernel_data_V_5_load_reg_1400;
reg   [15:0] kernel_data_V_8_load_reg_1405;
wire   [9:0] add_ln79_fu_528_p2;
reg   [9:0] add_ln79_reg_1410;
wire   [1:0] i_iw_fu_540_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] sX_3_load_reg_1426;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln289_fu_626_p2;
reg   [0:0] icmp_ln289_reg_1431;
reg   [31:0] sY_3_load_reg_1436;
wire   [0:0] icmp_ln289_4_fu_636_p2;
reg   [0:0] icmp_ln289_4_reg_1441;
reg   [31:0] pY_3_load_reg_1446;
reg   [31:0] pX_3_load_reg_1452;
wire   [0:0] and_ln289_4_fu_694_p2;
wire   [1:0] w_index_fu_700_p2;
reg   [1:0] w_index_reg_1462;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln43_fu_711_p2;
reg   [0:0] icmp_ln43_reg_1472;
reg   [0:0] icmp_ln43_reg_1472_pp1_iter1_reg;
reg   [0:0] icmp_ln43_reg_1472_pp1_iter2_reg;
reg    ap_enable_reg_pp1_iter1;
wire   [15:0] trunc_ln56_fu_721_p1;
reg  signed [15:0] trunc_ln56_reg_1491;
reg  signed [15:0] tmp_172_reg_1511;
reg  signed [15:0] tmp_173_reg_1531;
reg  signed [15:0] tmp_174_reg_1551;
reg  signed [15:0] tmp_175_reg_1571;
reg  signed [15:0] tmp_176_reg_1591;
reg  signed [15:0] tmp_177_reg_1611;
reg  signed [15:0] tmp_178_reg_1631;
reg  signed [15:0] tmp_179_reg_1651;
reg  signed [15:0] tmp_180_reg_1671;
reg  signed [15:0] tmp_181_reg_1691;
reg  signed [11:0] tmp_182_reg_1711;
reg   [15:0] trunc_ln3_reg_1716;
reg   [15:0] trunc_ln708_s_reg_1721;
reg   [15:0] trunc_ln708_149_reg_1726;
reg   [15:0] trunc_ln708_150_reg_1731;
reg   [15:0] trunc_ln708_151_reg_1736;
reg   [15:0] trunc_ln708_152_reg_1741;
reg   [15:0] trunc_ln708_153_reg_1746;
reg   [15:0] trunc_ln708_154_reg_1751;
reg   [15:0] trunc_ln708_155_reg_1756;
reg   [15:0] trunc_ln708_156_reg_1761;
reg   [15:0] trunc_ln708_157_reg_1766;
reg   [15:0] trunc_ln708_158_reg_1771;
wire   [15:0] acc_0_V_fu_1152_p2;
reg   [15:0] acc_0_V_reg_1776;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] acc_1_V_fu_1167_p2;
reg   [15:0] acc_1_V_reg_1782;
wire   [15:0] acc_2_V_fu_1182_p2;
reg   [15:0] acc_2_V_reg_1788;
wire   [15:0] acc_3_V_fu_1197_p2;
reg   [15:0] acc_3_V_reg_1794;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg   [9:0] indvar_flatten41_reg_263;
reg    ap_block_state1;
wire    io_acc_block_signal_op266;
reg    ap_block_state9;
wire   [0:0] icmp_ln79_fu_1290_p2;
reg   [1:0] i_iw_0_i_i_i_i_reg_275;
wire   [0:0] icmp_ln194_fu_534_p2;
reg   [1:0] ap_phi_mux_w_index40_phi_fu_290_p4;
wire    ap_block_pp1_stage0;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_reg_298;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_reg_298;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_reg_298;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408;
wire   [15:0] ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419;
reg   [15:0] ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419;
reg  signed [15:0] ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419;
wire   [31:0] select_ln323_fu_1270_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_477_p4;
wire   [0:0] icmp_ln313_fu_1203_p2;
wire   [0:0] icmp_ln317_fu_1249_p2;
wire   [63:0] zext_ln56_fu_706_p1;
wire   [15:0] select_ln203_fu_550_p3;
wire   [0:0] trunc_ln201_fu_546_p1;
wire   [15:0] select_ln203_12_fu_569_p3;
wire   [15:0] select_ln203_13_fu_588_p3;
wire   [31:0] select_ln328_fu_1224_p3;
wire   [31:0] add_ln321_fu_1254_p2;
wire   [31:0] add_ln326_fu_1208_p2;
wire   [30:0] tmp_fu_646_p4;
wire   [30:0] tmp_73_fu_666_p4;
wire   [0:0] icmp_ln289_5_fu_656_p2;
wire   [0:0] icmp_ln289_6_fu_676_p2;
wire   [0:0] and_ln289_3_fu_688_p2;
wire   [0:0] and_ln289_fu_682_p2;
wire  signed [25:0] mul_ln1118_fu_1296_p2;
wire  signed [25:0] mul_ln1118_170_fu_1303_p2;
wire  signed [25:0] mul_ln1118_171_fu_1310_p2;
wire  signed [25:0] mul_ln1118_172_fu_1317_p2;
wire  signed [25:0] mul_ln1118_173_fu_1324_p2;
wire  signed [25:0] mul_ln1118_174_fu_1331_p2;
wire  signed [25:0] mul_ln1118_175_fu_1338_p2;
wire  signed [25:0] mul_ln1118_176_fu_1345_p2;
wire  signed [25:0] mul_ln1118_177_fu_1352_p2;
wire  signed [25:0] mul_ln1118_178_fu_1359_p2;
wire  signed [25:0] mul_ln1118_179_fu_1366_p2;
wire  signed [25:0] mul_ln1118_180_fu_1373_p2;
wire   [15:0] add_ln703_fu_1143_p2;
wire   [15:0] add_ln703_151_fu_1147_p2;
wire   [15:0] add_ln703_153_fu_1158_p2;
wire   [15:0] add_ln703_154_fu_1162_p2;
wire   [15:0] add_ln703_156_fu_1173_p2;
wire   [15:0] add_ln703_157_fu_1177_p2;
wire   [15:0] add_ln703_159_fu_1188_p2;
wire   [15:0] add_ln703_160_fu_1192_p2;
wire   [31:0] add_ln328_fu_1219_p2;
wire   [31:0] add_ln323_fu_1265_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_data_V_data_V_U_apdone_blk;
wire   [15:0] data_V_data_V_TDATA_int;
wire    data_V_data_V_TVALID_int;
reg    data_V_data_V_TREADY_int;
wire    regslice_both_data_V_data_V_U_ack_in;
reg    ap_condition_228;
reg    ap_condition_390;
reg    ap_condition_529;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_1272 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_2273 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 sX_3 = 32'd0;
#0 sY_3 = 32'd0;
#0 pY_3 = 32'd0;
#0 pX_3 = 32'd0;
#0 kernel_data_V_6 = 16'd0;
#0 kernel_data_V_3274 = 16'd0;
#0 kernel_data_V_0 = 16'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_w2_V #(
    .DataWidth( 188 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb #(
    .DataWidth( 16 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd27),
    .ce0(line_buffer_Array_V_0_0_ce0),
    .we0(line_buffer_Array_V_0_0_we0),
    .d0(data_V_data_V_TDATA_int),
    .q0(line_buffer_Array_V_0_0_q0)
);

conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s_line_buffbkb #(
    .DataWidth( 16 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_Array_V_1271_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(5'd27),
    .ce0(line_buffer_Array_V_1271_0_ce0),
    .we0(line_buffer_Array_V_1271_0_we0),
    .d0(line_buffer_Array_V_0_0_q0),
    .q0(line_buffer_Array_V_1271_0_q0)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U1(
    .din0(ap_phi_reg_pp1_iter2_phi_ln56_reg_298),
    .din1(trunc_ln56_reg_1491),
    .dout(mul_ln1118_fu_1296_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U2(
    .din0(tmp_172_reg_1511),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309),
    .dout(mul_ln1118_170_fu_1303_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U3(
    .din0(tmp_173_reg_1531),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320),
    .dout(mul_ln1118_171_fu_1310_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U4(
    .din0(tmp_174_reg_1551),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331),
    .dout(mul_ln1118_172_fu_1317_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U5(
    .din0(tmp_175_reg_1571),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342),
    .dout(mul_ln1118_173_fu_1324_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U6(
    .din0(tmp_176_reg_1591),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353),
    .dout(mul_ln1118_174_fu_1331_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U7(
    .din0(tmp_177_reg_1611),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364),
    .dout(mul_ln1118_175_fu_1338_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U8(
    .din0(tmp_178_reg_1631),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375),
    .dout(mul_ln1118_176_fu_1345_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U9(
    .din0(tmp_179_reg_1651),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386),
    .dout(mul_ln1118_177_fu_1352_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U10(
    .din0(tmp_180_reg_1671),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397),
    .dout(mul_ln1118_178_fu_1359_p2)
);

myproject_mul_mul_16s_16s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_16s_26_1_1_U11(
    .din0(tmp_181_reg_1691),
    .din1(ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408),
    .dout(mul_ln1118_179_fu_1366_p2)
);

myproject_mul_mul_16s_12s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_16s_12s_26_1_1_U12(
    .din0(ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419),
    .din1(tmp_182_reg_1711),
    .dout(mul_ln1118_180_fu_1373_p2)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_V_data_V_TDATA),
    .vld_in(data_V_data_V_TVALID),
    .ack_in(regslice_both_data_V_data_V_U_ack_in),
    .data_out(data_V_data_V_TDATA_int),
    .vld_out(data_V_data_V_TVALID_int),
    .ack_out(data_V_data_V_TREADY_int),
    .apdone_blk(regslice_both_data_V_data_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_1290_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln43_fu_711_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_5;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_4;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= kernel_data_V_3274;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_72_reg_309 <= ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_8;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_7;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= kernel_data_V_6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_73_reg_320 <= ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_2273;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_1272;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= kernel_data_V_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_74_reg_331 <= ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_5;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_4;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= kernel_data_V_3274;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_75_reg_342 <= ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_8;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_7;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= kernel_data_V_6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_76_reg_353 <= ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_2273;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_1272;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= kernel_data_V_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_77_reg_364 <= ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_5;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_4;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= kernel_data_V_3274;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_78_reg_375 <= ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_8;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_7;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= kernel_data_V_6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_79_reg_386 <= ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_2273;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_1272;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= kernel_data_V_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_80_reg_397 <= ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_5;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_4;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= kernel_data_V_3274;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_81_reg_408 <= ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_8;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_7;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= kernel_data_V_6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_82_reg_419 <= ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if ((~(w_index40_reg_286 == 2'd0) & ~(w_index40_reg_286 == 2'd1))) begin
            ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_2273;
        end else if ((w_index40_reg_286 == 2'd1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_1272;
        end else if ((w_index40_reg_286 == 2'd0)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= kernel_data_V_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_phi_ln56_reg_298 <= ap_phi_reg_pp1_iter1_phi_ln56_reg_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln194_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_iw_0_i_i_i_i_reg_275 <= i_iw_fu_540_p2;
    end else if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_iw_0_i_i_i_i_reg_275 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (icmp_ln79_fu_1290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        indvar_flatten41_reg_263 <= add_ln79_reg_1410;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten41_reg_263 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_390)) begin
        if ((icmp_ln313_fu_1203_p2 == 1'd1)) begin
            pX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_1203_p2 == 1'd0)) begin
            pX_3 <= add_ln326_fu_1208_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_529)) begin
        if ((icmp_ln317_fu_1249_p2 == 1'd1)) begin
            pY_3 <= 32'd0;
        end else if ((icmp_ln317_fu_1249_p2 == 1'd0)) begin
            pY_3 <= add_ln321_fu_1254_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_390)) begin
        if ((icmp_ln313_fu_1203_p2 == 1'd1)) begin
            sX_3 <= 32'd0;
        end else if ((icmp_ln313_fu_1203_p2 == 1'd0)) begin
            sX_3 <= select_ln328_fu_1224_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1472_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_0_V_838_reg_430 <= acc_0_V_fu_1152_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
        tmp_data_0_V_838_reg_430 <= 16'd2041;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1472_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_1_V_836_reg_441 <= acc_1_V_fu_1167_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
        tmp_data_1_V_836_reg_441 <= 16'd64467;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1472_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_2_V_834_reg_452 <= acc_2_V_fu_1182_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
        tmp_data_2_V_834_reg_452 <= 16'd64643;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1472_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_data_3_V_832_reg_463 <= acc_3_V_fu_1197_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
        tmp_data_3_V_832_reg_463 <= 16'd298;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_reg_1472 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w_index40_reg_286 <= w_index_reg_1462;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
        w_index40_reg_286 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        DataOut_V_8_reg_1385 <= line_buffer_Array_V_0_0_q0;
        DataOut_V_reg_1390 <= line_buffer_Array_V_1271_0_q0;
        add_ln79_reg_1410 <= add_ln79_fu_528_p2;
        kernel_data_V_2273_load_reg_1395 <= kernel_data_V_2273;
        kernel_data_V_5_load_reg_1400 <= kernel_data_V_5;
        kernel_data_V_8_load_reg_1405 <= kernel_data_V_8;
        tmp_data_0_V_reg_1380 <= data_V_data_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_0_V_reg_1776 <= acc_0_V_fu_1152_p2;
        acc_1_V_reg_1782 <= acc_1_V_fu_1167_p2;
        acc_2_V_reg_1788 <= acc_2_V_fu_1182_p2;
        acc_3_V_reg_1794 <= acc_3_V_fu_1197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln289_4_reg_1458 <= and_ln289_4_fu_694_p2;
        icmp_ln289_4_reg_1441 <= icmp_ln289_4_fu_636_p2;
        icmp_ln289_reg_1431 <= icmp_ln289_fu_626_p2;
        kernel_data_V_2273 <= DataOut_V_reg_1390;
        kernel_data_V_5 <= DataOut_V_8_reg_1385;
        kernel_data_V_8 <= tmp_data_0_V_reg_1380;
        pX_3_load_reg_1452 <= pX_3;
        pY_3_load_reg_1446 <= pY_3;
        sX_3_load_reg_1426 <= sX_3;
        sY_3_load_reg_1436 <= sY_3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter1_phi_ln56_72_reg_309 <= ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309;
        ap_phi_reg_pp1_iter1_phi_ln56_73_reg_320 <= ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320;
        ap_phi_reg_pp1_iter1_phi_ln56_74_reg_331 <= ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331;
        ap_phi_reg_pp1_iter1_phi_ln56_75_reg_342 <= ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342;
        ap_phi_reg_pp1_iter1_phi_ln56_76_reg_353 <= ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353;
        ap_phi_reg_pp1_iter1_phi_ln56_77_reg_364 <= ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364;
        ap_phi_reg_pp1_iter1_phi_ln56_78_reg_375 <= ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375;
        ap_phi_reg_pp1_iter1_phi_ln56_79_reg_386 <= ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386;
        ap_phi_reg_pp1_iter1_phi_ln56_80_reg_397 <= ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397;
        ap_phi_reg_pp1_iter1_phi_ln56_81_reg_408 <= ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408;
        ap_phi_reg_pp1_iter1_phi_ln56_82_reg_419 <= ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419;
        ap_phi_reg_pp1_iter1_phi_ln56_reg_298 <= ap_phi_reg_pp1_iter0_phi_ln56_reg_298;
        w_index_reg_1462 <= w_index_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln43_reg_1472 <= icmp_ln43_fu_711_p2;
        icmp_ln43_reg_1472_pp1_iter1_reg <= icmp_ln43_reg_1472;
        tmp_172_reg_1511 <= {{w2_V_q0[31:16]}};
        tmp_173_reg_1531 <= {{w2_V_q0[47:32]}};
        tmp_174_reg_1551 <= {{w2_V_q0[63:48]}};
        tmp_175_reg_1571 <= {{w2_V_q0[79:64]}};
        tmp_176_reg_1591 <= {{w2_V_q0[95:80]}};
        tmp_177_reg_1611 <= {{w2_V_q0[111:96]}};
        tmp_178_reg_1631 <= {{w2_V_q0[127:112]}};
        tmp_179_reg_1651 <= {{w2_V_q0[143:128]}};
        tmp_180_reg_1671 <= {{w2_V_q0[159:144]}};
        tmp_181_reg_1691 <= {{w2_V_q0[175:160]}};
        tmp_182_reg_1711 <= {{w2_V_q0[187:176]}};
        trunc_ln56_reg_1491 <= trunc_ln56_fu_721_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln43_reg_1472_pp1_iter2_reg <= icmp_ln43_reg_1472_pp1_iter1_reg;
        trunc_ln3_reg_1716 <= {{mul_ln1118_fu_1296_p2[25:10]}};
        trunc_ln708_149_reg_1726 <= {{mul_ln1118_171_fu_1310_p2[25:10]}};
        trunc_ln708_150_reg_1731 <= {{mul_ln1118_172_fu_1317_p2[25:10]}};
        trunc_ln708_151_reg_1736 <= {{mul_ln1118_173_fu_1324_p2[25:10]}};
        trunc_ln708_152_reg_1741 <= {{mul_ln1118_174_fu_1331_p2[25:10]}};
        trunc_ln708_153_reg_1746 <= {{mul_ln1118_175_fu_1338_p2[25:10]}};
        trunc_ln708_154_reg_1751 <= {{mul_ln1118_176_fu_1345_p2[25:10]}};
        trunc_ln708_155_reg_1756 <= {{mul_ln1118_177_fu_1352_p2[25:10]}};
        trunc_ln708_156_reg_1761 <= {{mul_ln1118_178_fu_1359_p2[25:10]}};
        trunc_ln708_157_reg_1766 <= {{mul_ln1118_179_fu_1366_p2[25:10]}};
        trunc_ln708_158_reg_1771 <= {{mul_ln1118_180_fu_1373_p2[25:10]}};
        trunc_ln708_s_reg_1721 <= {{mul_ln1118_170_fu_1303_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln201_fu_546_p1 == 1'd0) & (icmp_ln194_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kernel_data_V_0 <= select_ln203_fu_550_p3;
        kernel_data_V_3274 <= select_ln203_12_fu_569_p3;
        kernel_data_V_6 <= select_ln203_13_fu_588_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln194_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (trunc_ln201_fu_546_p1 == 1'd1))) begin
        kernel_data_V_1272 <= select_ln203_fu_550_p3;
        kernel_data_V_4 <= select_ln203_12_fu_569_p3;
        kernel_data_V_7 <= select_ln203_13_fu_588_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_1203_p2 == 1'd1))) begin
        sY_3 <= ap_phi_mux_storemerge_i_i_phi_fu_477_p4;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_1290_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_1203_p2 == 1'd1))) begin
        if ((icmp_ln317_fu_1249_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_477_p4 = 32'd0;
        end else if ((icmp_ln317_fu_1249_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_477_p4 = select_ln323_fu_1270_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_477_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_477_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln43_reg_1472 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_w_index40_phi_fu_290_p4 = w_index_reg_1462;
    end else begin
        ap_phi_mux_w_index40_phi_fu_290_p4 = w_index40_reg_286;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_TDATA_blk_n = data_V_data_V_TVALID_int;
    end else begin
        data_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_V_data_V_U_ack_in == 1'b1) & (data_V_data_V_TVALID == 1'b1))) begin
        data_V_data_V_TREADY = 1'b1;
    end else begin
        data_V_data_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_TREADY_int = 1'b1;
    end else begin
        data_V_data_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_1290_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_1271_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_1271_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        line_buffer_Array_V_1271_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_1271_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln289_4_reg_1458))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_TVALID_int == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln194_fu_534_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln289_4_fu_694_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln79_fu_1290_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (icmp_ln79_fu_1290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_1152_p2 = (tmp_data_0_V_838_reg_430 + add_ln703_151_fu_1147_p2);

assign acc_1_V_fu_1167_p2 = (tmp_data_1_V_836_reg_441 + add_ln703_154_fu_1162_p2);

assign acc_2_V_fu_1182_p2 = (tmp_data_2_V_834_reg_452 + add_ln703_157_fu_1177_p2);

assign acc_3_V_fu_1197_p2 = (tmp_data_3_V_832_reg_463 + add_ln703_160_fu_1192_p2);

assign add_ln321_fu_1254_p2 = (pY_3_load_reg_1446 + 32'd1);

assign add_ln323_fu_1265_p2 = (sY_3_load_reg_1436 + 32'd1);

assign add_ln326_fu_1208_p2 = (pX_3_load_reg_1452 + 32'd1);

assign add_ln328_fu_1219_p2 = (sX_3_load_reg_1426 + 32'd1);

assign add_ln703_151_fu_1147_p2 = (add_ln703_fu_1143_p2 + trunc_ln3_reg_1716);

assign add_ln703_153_fu_1158_p2 = (trunc_ln708_151_reg_1736 + trunc_ln708_152_reg_1741);

assign add_ln703_154_fu_1162_p2 = (add_ln703_153_fu_1158_p2 + trunc_ln708_150_reg_1731);

assign add_ln703_156_fu_1173_p2 = (trunc_ln708_154_reg_1751 + trunc_ln708_155_reg_1756);

assign add_ln703_157_fu_1177_p2 = (add_ln703_156_fu_1173_p2 + trunc_ln708_153_reg_1746);

assign add_ln703_159_fu_1188_p2 = (trunc_ln708_157_reg_1766 + trunc_ln708_158_reg_1771);

assign add_ln703_160_fu_1192_p2 = (add_ln703_159_fu_1188_p2 + trunc_ln708_156_reg_1761);

assign add_ln703_fu_1143_p2 = (trunc_ln708_s_reg_1721 + trunc_ln708_149_reg_1726);

assign add_ln79_fu_528_p2 = (indvar_flatten41_reg_263 + 10'd1);

assign and_ln289_3_fu_688_p2 = (icmp_ln289_6_fu_676_p2 & icmp_ln289_5_fu_656_p2);

assign and_ln289_4_fu_694_p2 = (and_ln289_fu_682_p2 & and_ln289_3_fu_688_p2);

assign and_ln289_fu_682_p2 = (icmp_ln289_fu_626_p2 & icmp_ln289_4_fu_636_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = ((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458));
end

always @ (*) begin
    ap_condition_228 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001));
end

always @ (*) begin
    ap_condition_390 = (~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9));
end

always @ (*) begin
    ap_condition_529 = (~((io_acc_block_signal_op266 == 1'b0) & (1'd1 == and_ln289_4_reg_1458)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln313_fu_1203_p2 == 1'd1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_phi_ln56_72_reg_309 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_73_reg_320 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_74_reg_331 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_75_reg_342 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_76_reg_353 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_77_reg_364 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_78_reg_375 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_79_reg_386 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_80_reg_397 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_81_reg_408 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_82_reg_419 = 'bx;

assign ap_phi_reg_pp1_iter0_phi_ln56_reg_298 = 'bx;

assign ap_ready = internal_ap_ready;

assign i_iw_fu_540_p2 = (i_iw_0_i_i_i_i_reg_275 + 2'd1);

assign icmp_ln194_fu_534_p2 = ((i_iw_0_i_i_i_i_reg_275 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_4_fu_636_p2 = ((sY_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln289_5_fu_656_p2 = (($signed(tmp_fu_646_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_6_fu_676_p2 = (($signed(tmp_73_fu_666_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_626_p2 = ((sX_3 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_1203_p2 = ((pX_3_load_reg_1452 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_1249_p2 = ((pY_3_load_reg_1446 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_711_p2 = ((ap_phi_mux_w_index40_phi_fu_290_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_1290_p2 = ((indvar_flatten41_reg_263 == 10'd783) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op266 = (res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign res_V_data_0_V_din = acc_0_V_reg_1776;

assign res_V_data_1_V_din = acc_1_V_reg_1782;

assign res_V_data_2_V_din = acc_2_V_reg_1788;

assign res_V_data_3_V_din = acc_3_V_reg_1794;

assign select_ln203_12_fu_569_p3 = ((trunc_ln201_fu_546_p1[0:0] === 1'b1) ? kernel_data_V_5_load_reg_1400 : kernel_data_V_4);

assign select_ln203_13_fu_588_p3 = ((trunc_ln201_fu_546_p1[0:0] === 1'b1) ? kernel_data_V_8_load_reg_1405 : kernel_data_V_7);

assign select_ln203_fu_550_p3 = ((trunc_ln201_fu_546_p1[0:0] === 1'b1) ? kernel_data_V_2273_load_reg_1395 : kernel_data_V_1272);

assign select_ln323_fu_1270_p3 = ((icmp_ln289_4_reg_1441[0:0] === 1'b1) ? 32'd2 : add_ln323_fu_1265_p2);

assign select_ln328_fu_1224_p3 = ((icmp_ln289_reg_1431[0:0] === 1'b1) ? 32'd2 : add_ln328_fu_1219_p2);

assign start_out = real_start;

assign tmp_73_fu_666_p4 = {{pX_3[31:1]}};

assign tmp_fu_646_p4 = {{pY_3[31:1]}};

assign trunc_ln201_fu_546_p1 = i_iw_0_i_i_i_i_reg_275[0:0];

assign trunc_ln56_fu_721_p1 = w2_V_q0[15:0];

assign w2_V_address0 = zext_ln56_fu_706_p1;

assign w_index_fu_700_p2 = (ap_phi_mux_w_index40_phi_fu_290_p4 + 2'd1);

assign zext_ln56_fu_706_p1 = ap_phi_mux_w_index40_phi_fu_290_p4;

endmodule //conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_4u_config2_s
