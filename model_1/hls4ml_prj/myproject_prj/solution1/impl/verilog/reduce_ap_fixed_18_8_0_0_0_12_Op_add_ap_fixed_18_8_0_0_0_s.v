// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reduce_ap_fixed_18_8_0_0_0_12_Op_add_ap_fixed_18_8_0_0_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_0_V,
        x_1_V,
        x_2_V,
        x_3_V,
        x_4_V,
        x_5_V,
        x_6_V,
        x_7_V,
        x_8_V,
        x_9_V,
        x_10_V,
        x_11_V,
        ap_return,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [16:0] x_0_V;
input  [16:0] x_1_V;
input  [16:0] x_2_V;
input  [16:0] x_3_V;
input  [16:0] x_4_V;
input  [16:0] x_5_V;
input  [16:0] x_6_V;
input  [16:0] x_7_V;
input  [16:0] x_8_V;
input  [16:0] x_9_V;
input  [16:0] x_10_V;
input  [16:0] x_11_V;
output  [17:0] ap_return;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [17:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_return;
reg  signed [17:0] p_Val2_s_reg_429;
reg   [16:0] ap_port_reg_x_0_V;
reg   [16:0] ap_port_reg_x_1_V;
reg   [16:0] ap_port_reg_x_2_V;
reg   [16:0] ap_port_reg_x_3_V;
reg   [16:0] ap_port_reg_x_4_V;
reg   [16:0] ap_port_reg_x_5_V;
reg   [16:0] ap_port_reg_x_6_V;
reg   [16:0] ap_port_reg_x_7_V;
reg   [16:0] ap_port_reg_x_8_V;
reg   [16:0] ap_port_reg_x_9_V;
reg   [16:0] ap_port_reg_x_10_V;
reg   [16:0] ap_port_reg_x_11_V;
wire    grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_ready;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_0_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_1_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_2_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_3_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_4_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_5_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_6_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_7_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_8_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_9_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_10_V;
reg   [16:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_11_V;
reg   [4:0] grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_V_offset;
wire    ap_CS_fsm_state2;
wire  signed [17:0] rhs_V_fu_104_p0;
wire  signed [18:0] lhs_V_fu_101_p1;
wire  signed [18:0] rhs_V_fu_104_p1;
wire   [18:0] ret_V_fu_108_p2;
wire  signed [17:0] p_Val2_27_fu_122_p0;
wire   [17:0] p_Val2_27_fu_122_p2;
wire   [0:0] p_Result_18_fu_127_p3;
wire   [0:0] p_Result_s_fu_114_p3;
wire   [0:0] xor_ln786_fu_135_p2;
wire   [0:0] xor_ln340_fu_153_p2;
wire   [0:0] xor_ln340_29_fu_147_p2;
wire   [0:0] underflow_fu_141_p2;
wire   [0:0] or_ln340_fu_159_p2;
wire   [17:0] select_ln340_fu_165_p3;
wire   [17:0] select_ln388_fu_173_p3;
wire   [17:0] p_Val2_29_fu_193_p1;
wire   [17:0] p_Val2_28_fu_189_p1;
wire   [17:0] p_Val2_30_fu_197_p2;
wire   [0:0] p_Result_19_fu_203_p3;
wire   [17:0] p_Val2_32_fu_223_p1;
wire   [17:0] p_Val2_31_fu_219_p1;
wire   [17:0] p_Val2_33_fu_227_p2;
wire   [0:0] p_Result_20_fu_233_p3;
wire  signed [17:0] p_Val2_34_fu_211_p3;
wire  signed [17:0] p_Val2_35_fu_241_p3;
wire  signed [18:0] lhs_V_3_fu_249_p1;
wire  signed [18:0] rhs_V_3_fu_253_p1;
wire   [18:0] ret_V_3_fu_257_p2;
wire   [17:0] p_Val2_37_fu_271_p2;
wire   [0:0] p_Result_22_fu_277_p3;
wire   [0:0] p_Result_21_fu_263_p3;
wire   [0:0] xor_ln786_12_fu_285_p2;
wire   [0:0] xor_ln340_12_fu_303_p2;
wire   [0:0] xor_ln340_30_fu_297_p2;
wire   [0:0] underflow_3_fu_291_p2;
wire   [0:0] or_ln340_14_fu_309_p2;
wire   [17:0] select_ln340_12_fu_315_p3;
wire   [17:0] select_ln388_12_fu_323_p3;
wire  signed [17:0] p_Val2_38_fu_181_p3;
wire  signed [17:0] p_Val2_39_fu_331_p3;
wire  signed [18:0] lhs_V_4_fu_339_p1;
wire  signed [18:0] rhs_V_4_fu_343_p1;
wire   [18:0] ret_V_4_fu_347_p2;
wire   [17:0] p_Val2_41_fu_361_p2;
wire   [0:0] p_Result_24_fu_367_p3;
wire   [0:0] p_Result_23_fu_353_p3;
wire   [0:0] xor_ln786_13_fu_375_p2;
wire   [0:0] xor_ln340_13_fu_393_p2;
wire   [0:0] xor_ln340_31_fu_387_p2;
wire   [0:0] underflow_4_fu_381_p2;
wire   [0:0] or_ln340_15_fu_399_p2;
wire   [17:0] select_ln340_13_fu_405_p3;
wire   [17:0] select_ln388_13_fu_413_p3;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70(
    .ap_ready(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_ready),
    .x_0_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_0_V),
    .x_1_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_1_V),
    .x_2_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_2_V),
    .x_3_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_3_V),
    .x_4_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_4_V),
    .x_5_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_5_V),
    .x_6_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_6_V),
    .x_7_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_7_V),
    .x_8_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_8_V),
    .x_9_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_9_V),
    .x_10_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_10_V),
    .x_11_V(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_11_V),
    .x_V_offset(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_V_offset),
    .ap_return(grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_port_reg_x_0_V <= x_0_V;
        ap_port_reg_x_10_V <= x_10_V;
        ap_port_reg_x_11_V <= x_11_V;
        ap_port_reg_x_1_V <= x_1_V;
        ap_port_reg_x_2_V <= x_2_V;
        ap_port_reg_x_3_V <= x_3_V;
        ap_port_reg_x_4_V <= x_4_V;
        ap_port_reg_x_5_V <= x_5_V;
        ap_port_reg_x_6_V <= x_6_V;
        ap_port_reg_x_7_V <= x_7_V;
        ap_port_reg_x_8_V <= x_8_V;
        ap_port_reg_x_9_V <= x_9_V;
        p_Val2_s_reg_429 <= grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_return;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_0_V = ap_port_reg_x_0_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_0_V = x_0_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_0_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_10_V = ap_port_reg_x_10_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_10_V = x_10_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_10_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_11_V = ap_port_reg_x_11_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_11_V = x_11_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_11_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_1_V = ap_port_reg_x_1_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_1_V = x_1_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_1_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_2_V = ap_port_reg_x_2_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_2_V = x_2_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_2_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_3_V = ap_port_reg_x_3_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_3_V = x_3_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_3_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_4_V = ap_port_reg_x_4_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_4_V = x_4_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_4_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_5_V = ap_port_reg_x_5_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_5_V = x_5_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_5_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_6_V = ap_port_reg_x_6_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_6_V = x_6_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_6_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_7_V = ap_port_reg_x_7_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_7_V = x_7_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_7_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_8_V = ap_port_reg_x_8_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_8_V = x_8_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_8_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_9_V = ap_port_reg_x_9_V;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_9_V = x_9_V;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_9_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_V_offset = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_V_offset = 5'd0;
    end else begin
        grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_x_V_offset = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_return = ((or_ln340_15_fu_399_p2[0:0] === 1'b1) ? select_ln340_13_fu_405_p3 : select_ln388_13_fu_413_p3);

assign lhs_V_3_fu_249_p1 = p_Val2_34_fu_211_p3;

assign lhs_V_4_fu_339_p1 = p_Val2_38_fu_181_p3;

assign lhs_V_fu_101_p1 = p_Val2_s_reg_429;

assign or_ln340_14_fu_309_p2 = (xor_ln340_12_fu_303_p2 | p_Result_22_fu_277_p3);

assign or_ln340_15_fu_399_p2 = (xor_ln340_13_fu_393_p2 | p_Result_24_fu_367_p3);

assign or_ln340_fu_159_p2 = (xor_ln340_fu_153_p2 | p_Result_18_fu_127_p3);

assign p_Result_18_fu_127_p3 = p_Val2_27_fu_122_p2[32'd17];

assign p_Result_19_fu_203_p3 = p_Val2_30_fu_197_p2[32'd17];

assign p_Result_20_fu_233_p3 = p_Val2_33_fu_227_p2[32'd17];

assign p_Result_21_fu_263_p3 = ret_V_3_fu_257_p2[32'd18];

assign p_Result_22_fu_277_p3 = p_Val2_37_fu_271_p2[32'd17];

assign p_Result_23_fu_353_p3 = ret_V_4_fu_347_p2[32'd18];

assign p_Result_24_fu_367_p3 = p_Val2_41_fu_361_p2[32'd17];

assign p_Result_s_fu_114_p3 = ret_V_fu_108_p2[32'd18];

assign p_Val2_27_fu_122_p0 = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_return;

assign p_Val2_27_fu_122_p2 = ($signed(p_Val2_27_fu_122_p0) + $signed(p_Val2_s_reg_429));

assign p_Val2_28_fu_189_p1 = ap_port_reg_x_8_V;

assign p_Val2_29_fu_193_p1 = ap_port_reg_x_9_V;

assign p_Val2_30_fu_197_p2 = (p_Val2_29_fu_193_p1 + p_Val2_28_fu_189_p1);

assign p_Val2_31_fu_219_p1 = ap_port_reg_x_10_V;

assign p_Val2_32_fu_223_p1 = ap_port_reg_x_11_V;

assign p_Val2_33_fu_227_p2 = (p_Val2_32_fu_223_p1 + p_Val2_31_fu_219_p1);

assign p_Val2_34_fu_211_p3 = ((p_Result_19_fu_203_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_30_fu_197_p2);

assign p_Val2_35_fu_241_p3 = ((p_Result_20_fu_233_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_33_fu_227_p2);

assign p_Val2_37_fu_271_p2 = ($signed(p_Val2_35_fu_241_p3) + $signed(p_Val2_34_fu_211_p3));

assign p_Val2_38_fu_181_p3 = ((or_ln340_fu_159_p2[0:0] === 1'b1) ? select_ln340_fu_165_p3 : select_ln388_fu_173_p3);

assign p_Val2_39_fu_331_p3 = ((or_ln340_14_fu_309_p2[0:0] === 1'b1) ? select_ln340_12_fu_315_p3 : select_ln388_12_fu_323_p3);

assign p_Val2_41_fu_361_p2 = ($signed(p_Val2_39_fu_331_p3) + $signed(p_Val2_38_fu_181_p3));

assign ret_V_3_fu_257_p2 = ($signed(lhs_V_3_fu_249_p1) + $signed(rhs_V_3_fu_253_p1));

assign ret_V_4_fu_347_p2 = ($signed(lhs_V_4_fu_339_p1) + $signed(rhs_V_4_fu_343_p1));

assign ret_V_fu_108_p2 = ($signed(lhs_V_fu_101_p1) + $signed(rhs_V_fu_104_p1));

assign rhs_V_3_fu_253_p1 = p_Val2_35_fu_241_p3;

assign rhs_V_4_fu_343_p1 = p_Val2_39_fu_331_p3;

assign rhs_V_fu_104_p0 = grp_reduce_ap_fixed_18_8_0_0_0_4_Op_add_ap_fixed_18_8_0_0_0_s_fu_70_ap_return;

assign rhs_V_fu_104_p1 = rhs_V_fu_104_p0;

assign select_ln340_12_fu_315_p3 = ((xor_ln340_30_fu_297_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_37_fu_271_p2);

assign select_ln340_13_fu_405_p3 = ((xor_ln340_31_fu_387_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_41_fu_361_p2);

assign select_ln340_fu_165_p3 = ((xor_ln340_29_fu_147_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_27_fu_122_p2);

assign select_ln388_12_fu_323_p3 = ((underflow_3_fu_291_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_37_fu_271_p2);

assign select_ln388_13_fu_413_p3 = ((underflow_4_fu_381_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_41_fu_361_p2);

assign select_ln388_fu_173_p3 = ((underflow_fu_141_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_27_fu_122_p2);

assign underflow_3_fu_291_p2 = (xor_ln786_12_fu_285_p2 & p_Result_21_fu_263_p3);

assign underflow_4_fu_381_p2 = (xor_ln786_13_fu_375_p2 & p_Result_23_fu_353_p3);

assign underflow_fu_141_p2 = (xor_ln786_fu_135_p2 & p_Result_s_fu_114_p3);

assign xor_ln340_12_fu_303_p2 = (p_Result_21_fu_263_p3 ^ 1'd1);

assign xor_ln340_13_fu_393_p2 = (p_Result_23_fu_353_p3 ^ 1'd1);

assign xor_ln340_29_fu_147_p2 = (p_Result_s_fu_114_p3 ^ p_Result_18_fu_127_p3);

assign xor_ln340_30_fu_297_p2 = (p_Result_22_fu_277_p3 ^ p_Result_21_fu_263_p3);

assign xor_ln340_31_fu_387_p2 = (p_Result_24_fu_367_p3 ^ p_Result_23_fu_353_p3);

assign xor_ln340_fu_153_p2 = (p_Result_s_fu_114_p3 ^ 1'd1);

assign xor_ln786_12_fu_285_p2 = (p_Result_22_fu_277_p3 ^ 1'd1);

assign xor_ln786_13_fu_375_p2 = (p_Result_24_fu_367_p3 ^ 1'd1);

assign xor_ln786_fu_135_p2 = (p_Result_18_fu_127_p3 ^ 1'd1);

endmodule //reduce_ap_fixed_18_8_0_0_0_12_Op_add_ap_fixed_18_8_0_0_0_s
